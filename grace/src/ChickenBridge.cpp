/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2008-03-07 11:36
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-02-24 on zippy.local (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: grace
*/

#include "chicken.h"


/*************************************************************************
 * Copyright (C) 2007 Todd Ingalls, Rick Taube.                          *
 * This program is free software; you can redistribute it and/or modify  *
 * it under the terms of the Lisp Lesser Gnu Public License. The text of *
 * this agreement is available at http://www.cliki.net/LLGPL             *
 *************************************************************************/

#include "Grace.h"
#include "Scheme.h"
#include "Syntax.h"
#include "Midi.h"
#include <juce.h>

//
// Console Window code
//

void print_message(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, false);
}

void print_error(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, false);
}

//
// Scheduler code
//

void scheduler_sprout( C_word proc, double time, int id)
{
  ((GraceApp *)
   GraceApp::getInstance())->schemeProcess->addNode(0, time, proc, id);
}

bool scheduler_is_paused () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isPaused();
}

void scheduler_pause() {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(true);
}

void scheduler_cont () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(false);
}

void scheduler_stop (int id) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(id);
}

void scheduler_hush () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(-1);
  ((GraceApp *)GraceApp::getInstance())->midiOutPort->clear();
}

bool scheduler_is_time_milliseconds () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isTimeMilliseconds();
}
 
void scheduler_set_time_milliseconds (bool b) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setTimeMilliseconds(b);
}

//void print_current_directory() {
//  String s=File::getCurrentWorkingDirectory().getFullPathName().quoted() + T("\n");
//  ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
//}

char *get_current_directory() {
  return (char *)File::getCurrentWorkingDirectory().getFullPathName().toUTF8();
}

void set_current_directory (char *path) {
  File dir=File(String(path));
  if ( dir.isDirectory() ) {
    dir.setAsCurrentWorkingDirectory();
    //print_working_directory();
  }
  else {
    String s=T(">>> Error: ") + dir.getFullPathName().quoted() + T(" is not a directory.\n");
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  }			 
}

void load_sal_file(char *path) {
  SalSyntax::getInstance()->loadFile( String(path) );  
}



#include "Toolbox.h"



void mp_note(double time, double dur, float key, float vel, float chan) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendNote(time, dur, key, vel, chan); 
}

void mp_data(int type, double time, float chan, float data1, float data2) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendData(type, time, chan, data1, data2) ;
}

void mp_message(MidiMessage *m) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendMessage(m) ;
}

/// MidiMessage accessors

MidiMessage *mm_make(int type, double time, int chan, 
		     int data1, int data2 ) {
  MidiMessage *m;
  chan++; // juce channels are 1 based
  switch (type) {
  case MidiNode::MM_OFF :
    m=new MidiMessage(MidiMessage::noteOff(chan, data1));
    break;
  case MidiNode::MM_ON :
    m=new MidiMessage(MidiMessage::noteOn(chan, data1, (juce::uint8)data2));
    break;
  case MidiNode::MM_TOUCH :
    m=new MidiMessage(MidiMessage::aftertouchChange(chan, data1, data2));
    break;
  case MidiNode::MM_CTRL :
    m=new MidiMessage(MidiMessage::controllerEvent(chan, data1, data2));
    break;
  case MidiNode::MM_PROG :
    m=new MidiMessage(MidiMessage::programChange(chan, data1));
    break;
  case MidiNode::MM_PRESS :
    m=new MidiMessage(MidiMessage::channelPressureChange(chan, data1));
    break;
  case MidiNode::MM_BEND :
    m=new MidiMessage(MidiMessage::pitchWheel(chan, data1));
    break;
  default:
    return NULL;
  }
  return m;
}

MidiMessage *mm_copy(MidiMessage *m) {
  return new MidiMessage(*m);
}

void mm_free(MidiMessage *m) {
  delete m;
}

bool mm_is_type(MidiMessage *m, int typ) {
  switch (typ) {
  case MidiNode::MM_OFF :
    return m->isNoteOff();
    break;
  case MidiNode::MM_ON :
    return m->isNoteOn();
    break;
  case MidiNode::MM_TOUCH :
    return m->isAftertouch();
    break;
  case MidiNode::MM_CTRL :
    return m->isController();
    break;
  case MidiNode::MM_PROG :
    return m->isProgramChange();
    break;
  case MidiNode::MM_PRESS :
    return m->isChannelPressure();
    break;
  case MidiNode::MM_BEND :
    return m->isPitchWheel();
    break;
  default:
    return false;
  }
}

double mm_time(MidiMessage *m) {
  return m->getTimeStamp();
}

void mm_set_time(MidiMessage *m, double t) {
  m->setTimeStamp(t);
  return ;		
}

int mm_chan(MidiMessage *m) {
  // juce channels are 1 based
  return m->getChannel()-1;
}

void mm_set_chan(MidiMessage *m, int chan) {
  // juce channels are 1 based
  m->setChannel(chan+1);
}

int mm_data(MidiMessage *m, int n ) {
  juce::uint8 *data=m->getRawData();
  return (int)data[n];
}

void mm_set_data(MidiMessage *m, int n, int v ) {
  juce::uint8 *data=m->getRawData();
  data[n]=(v & 0x7f);
}

//INput Hook Code
void set_input_hook( C_word proc )
{
 // FIX
 ((GraceApp *)GraceApp::getInstance())->schemeProcess->setInputHook( proc);
}



#include "Csound.h"

void cs_send_score_event (int type, int len, C_word lyst) {
  MYFLT buf[len];
  int i=0;
  for ( ; C_SCHEME_END_OF_LIST != lyst; lyst = C_u_i_cdr( lyst ) ) {
    if (i==len) break;
    C_word w = C_u_i_car( lyst );
    if ( C_immediatep(w) ) {
      if ( C_truep(C_fixnump(w)) ) {
	// printf("FIX: buf[%d]=%d\n", i, C_unfix(w) );
	buf[i++] = (MYFLT)C_unfix(w);
      }
      else
        buf[i++] = 0.0;
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_flonump( w ) )) {
      // printf("FLO: buf[%d]=%f\n", i, (float)C_flonum_magnitude( w ));
      buf[i++] = (MYFLT)C_flonum_magnitude( w );
    }
    else {
      buf[i++] = 0.0;
    }
  }
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->sendScoreEvent( ((type==2) ? 'f' : 'i'), len, buf);  
}

void cs_clear_score () {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->clearScore();
}



static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[660];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,23),40,102,95,51,50,48,55,32,115,116,114,49,50,32,46,32,97,114,103,115,49,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,12),40,102,95,51,49,57,54,32,107,49,54,41,0,0,0,0};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,12),40,102,95,51,50,48,53,32,107,49,55,41,0,0,0,0};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,13),40,100,111,51,49,32,116,97,105,108,51,51,41,0,0,0,0,0};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,11),40,97,51,49,52,51,32,120,51,57,41,0,0,0};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,31),40,100,111,50,53,32,97,114,103,115,50,55,32,107,101,121,50,56,32,97,114,103,50,57,32,112,111,115,51,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,7),40,97,51,49,56,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,31),40,101,120,112,97,110,100,45,115,101,110,100,32,109,101,115,103,54,32,100,97,116,97,55,32,101,114,114,102,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,11),40,102,105,102,116,104,32,108,53,50,41,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,11),40,115,105,120,116,104,32,108,53,51,41,0,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,13),40,115,101,118,101,110,116,104,32,108,53,52,41,0,0,0,0,0};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,12),40,101,105,103,104,116,104,32,108,53,53,41,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,11),40,110,105,110,116,104,32,108,53,54,41,0,0,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,11),40,116,101,110,116,104,32,108,53,55,41,0,0,0};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,10),40,108,97,115,116,32,108,53,57,41,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,13),40,98,117,116,108,97,115,116,32,108,54,48,41,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,16),40,108,105,115,116,42,32,46,32,97,114,103,115,54,49,41};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,8),40,102,95,51,52,49,49,41};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,14),40,102,95,51,52,50,54,32,97,54,54,55,48,41,0,0,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,46,32,100,105,114,54,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,48),40,116,98,58,114,101,115,99,97,108,101,32,97,55,55,56,48,32,97,55,54,56,49,32,97,55,53,56,50,32,97,55,52,56,51,32,97,55,51,56,52,32,97,55,50,56,53,41};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,50),40,116,98,58,100,105,115,99,114,101,116,101,32,97,57,50,57,53,32,97,57,49,57,54,32,97,57,48,57,55,32,97,56,57,57,56,32,97,56,56,57,57,32,97,56,55,49,48,48,41,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,29),40,116,98,58,100,101,99,105,109,97,108,115,32,97,49,48,54,49,48,57,32,97,49,48,53,49,49,48,41,0,0,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,105,32,97,49,53,53,49,53,56,41,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,102,32,97,49,53,57,49,54,50,41,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,29),40,116,98,58,114,97,110,103,97,117,115,115,32,97,49,56,55,49,57,48,32,97,49,56,54,49,57,49,41,0,0,0,0,0};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,19),40,116,98,58,114,97,110,101,120,112,32,97,49,57,51,49,57,54,41,0,0,0};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,28),40,116,98,58,114,97,110,98,101,116,97,32,97,49,57,57,50,48,50,32,97,49,57,56,50,48,51,41,0,0,0,0};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,103,97,109,109,97,32,97,50,48,53,50,48,56,41,0,0,0,0,0};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,23),40,116,98,58,114,97,110,112,111,105,115,115,111,110,32,97,50,49,51,50,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,45),40,114,101,115,99,97,108,101,32,120,50,50,51,32,120,49,50,50,52,32,120,50,50,50,53,32,121,49,50,50,54,32,121,50,50,50,55,32,46,32,98,50,50,56,41,0,0,0,0,0};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,43),40,100,105,115,99,114,101,116,101,32,120,50,50,57,32,120,49,50,51,48,32,120,50,50,51,49,32,105,49,50,51,50,32,46,32,97,114,103,115,50,51,51,41,0,0,0};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,10),40,105,110,116,32,102,50,51,52,41,0,0};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,26),40,113,117,97,110,116,105,122,101,32,110,117,109,50,51,53,32,115,116,101,112,115,50,51,54,41,0,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,29),40,100,101,99,105,109,97,108,115,32,110,117,109,50,51,55,32,46,32,100,105,103,105,116,115,50,51,56,41,0,0,0,0,0};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,26),40,98,111,100,121,50,52,51,32,116,101,109,112,111,50,52,57,32,98,101,97,116,50,53,48,41,0,0};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,26),40,100,101,102,45,98,101,97,116,50,52,54,32,37,116,101,109,112,111,50,52,49,50,53,50,41,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,14),40,100,101,102,45,116,101,109,112,111,50,52,53,41,0,0,0,0,0,0};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,36),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,50,51,57,32,46,32,97,114,103,115,50,52,48,41,0,0,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,24),40,99,101,110,116,115,45,62,115,99,97,108,101,114,32,99,101,110,116,115,50,53,57,41};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,22),40,115,99,97,108,101,114,45,62,99,101,110,116,115,32,110,117,109,50,54,48,41,0,0,0,0,0,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,20),40,107,101,121,110,117,109,45,62,104,101,114,116,122,32,107,50,54,49,41,0,0,0,0};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,17),40,107,101,121,110,117,109,45,62,112,99,32,107,50,54,50,41,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,21),40,104,101,114,116,122,45,62,107,101,121,110,117,109,32,104,122,50,54,51,41,0,0,0,0,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,15),40,100,111,50,55,50,32,116,97,105,108,50,55,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,34),40,105,110,116,101,114,112,108,32,120,50,54,52,32,99,111,111,114,100,115,50,54,53,32,46,32,98,97,115,101,50,54,54,41,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,23),40,105,110,116,101,114,112,32,120,50,56,50,32,46,32,97,114,103,115,50,56,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,27),40,100,111,50,56,56,32,105,50,57,48,32,107,50,57,49,32,108,50,57,50,32,116,50,57,51,41,0,0,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,34),40,115,116,101,112,115,32,108,101,110,50,56,52,32,107,101,121,110,117,109,50,56,53,32,46,32,97,114,103,115,50,56,54,41,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,18),40,114,97,110,45,115,101,116,33,32,115,101,101,100,50,57,56,41,0,0};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,15),40,114,97,110,32,46,32,97,114,103,115,50,57,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,19),40,98,101,116,119,101,101,110,32,97,51,48,48,32,98,51,48,49,41,0,0,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,21),40,111,100,100,115,32,110,51,48,50,32,46,32,97,114,103,115,51,48,51,41,0,0,0,0,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,15),40,112,105,99,107,108,32,97,114,103,115,51,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,16),40,112,105,99,107,32,46,32,97,114,103,115,51,48,53,41};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,8),40,114,97,110,108,111,119,41};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,9),40,114,97,110,104,105,103,104,41,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,11),40,114,97,110,109,105,100,100,108,101,41,0,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,19),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,51,48,54,41,0,0,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,18),40,114,97,110,101,120,112,32,46,32,97,114,103,115,51,48,55,41,0,0};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,51,48,56,41,0,0,0,0};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,11),40,114,97,110,99,97,117,99,104,121,41,0,0,0};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,22),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,51,48,57,41,0,0,0,0,0,0};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,51,49,48,41,0,0,0,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,10),40,114,97,110,98,114,111,119,110,41,0,0};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,9),40,114,97,110,112,105,110,107,41,0};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,51,56,52,32,115,116,114,105,110,103,51,56,53,32,112,111,115,105,116,105,111,110,51,56,54,41,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,17),40,116,111,107,101,110,45,116,121,112,101,32,120,51,57,49,41,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,115,116,114,105,110,103,32,120,51,57,55,41,0,0,0};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,21),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,52,48,51,41,0,0,0,0,0};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,18),40,108,105,115,116,45,62,116,111,107,101,110,32,108,52,49,50,41,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,21),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,52,49,52,41,0,0,0,0,0};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,22),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,52,49,54,41,0,0,0,0,0,0};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,58),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,52,49,55,32,116,121,112,101,52,49,56,32,112,97,116,116,101,114,110,52,49,57,32,112,97,114,115,101,114,52,50,48,32,101,109,105,116,101,114,52,50,49,41,0,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,16),40,114,117,108,101,45,110,97,109,101,32,120,52,50,54,41};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,24),40,103,101,116,45,114,117,108,101,32,116,121,112,52,55,48,32,100,101,102,52,55,49,41};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,52,55,52,41,0,0,0,0,0,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,19),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,52,55,54,41,0,0,0};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,52,55,55,41,0,0,0,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,115,117,98,32,120,52,55,56,32,105,52,55,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,28),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,52,56,51,41,0,0,0,0};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,40),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,52,56,53,32,112,111,115,105,116,105,111,110,52,56,54,41};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,101,114,114,111,114,45,115,116,114,105,110,103,32,120,52,57,49,41,0};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,101,114,114,111,114,45,112,111,115,105,116,105,111,110,32,120,52,57,55,41,0,0,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,47),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,53,48,53,32,112,97,114,115,101,100,53,48,54,32,112,111,115,105,116,105,111,110,53,48,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,18),40,112,97,114,115,101,45,117,110,105,116,63,32,120,53,48,56,41,0,0};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,22),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,53,49,50,41,0,0,0,0,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,24),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,53,49,56,41};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,26),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,53,50,52,41,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,117,110,105,116,63,32,120,53,51,52,41,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,31),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,53,51,53,32,116,121,112,53,51,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,31),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,53,51,56,32,105,110,102,111,53,51,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,39),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,53,52,49,32,100,97,116,97,53,52,50,32,105,110,102,111,53,52,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,40),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,53,52,52,32,100,97,116,97,53,52,53,32,105,110,102,111,53,52,54,41};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,27),40,101,109,105,116,32,120,53,52,57,32,105,110,102,111,53,53,48,32,101,114,114,102,53,53,49,41,0,0,0};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,34),40,101,109,105,116,45,108,105,115,116,32,108,105,115,53,53,50,32,105,110,102,111,53,53,51,32,101,114,114,102,53,53,52,41,0,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,24),40,102,95,53,50,52,54,32,97,114,103,115,53,54,55,32,101,114,114,102,53,54,56,41};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,28),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,53,54,54,41,0,0,0,0};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,15),40,100,111,53,55,54,32,116,97,105,108,53,55,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,32),40,102,95,53,50,53,52,32,117,110,105,116,53,55,48,32,105,110,102,111,53,55,49,32,101,114,114,102,53,55,50,41};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,53,54,57,41,0,0,0,0,0};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,7),40,97,53,52,53,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,22),40,97,53,52,54,50,32,97,54,48,56,32,98,54,48,57,32,99,54,49,48,41,0,0,0,0,0,0};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,7),40,97,53,53,53,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,22),40,97,53,53,55,50,32,97,54,50,52,32,98,54,50,53,32,99,54,50,54,41,0,0,0,0,0,0};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,12),40,100,111,54,49,57,32,105,54,50,49,41,0,0,0,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,7),40,97,53,54,50,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,22),40,97,53,54,51,57,32,97,54,52,54,32,98,54,52,55,32,99,54,52,56,41,0,0,0,0,0,0};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,12),40,100,111,54,52,49,32,105,54,52,51,41,0,0,0,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,7),40,97,53,55,49,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,22),40,97,53,55,50,48,32,97,54,54,53,32,98,54,54,54,32,99,54,54,55,41,0,0,0,0,0,0};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,7),40,100,111,54,54,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,7),40,97,53,55,53,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,22),40,97,53,55,53,57,32,97,54,56,51,32,98,54,56,52,32,99,54,56,53,41,0,0,0,0,0,0};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,64),40,112,97,114,115,101,114,32,112,97,116,53,57,53,32,116,111,107,101,110,115,53,57,54,32,102,111,114,99,101,45,97,110,100,53,57,55,32,108,101,118,101,108,53,57,56,32,116,114,97,99,101,53,57,57,32,101,114,114,102,54,48,48,41};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,20),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,56,54,48,41,0,0,0,0};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,17),40,83,97,108,79,112,84,121,112,101,63,32,105,56,54,52,41,0};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,19),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,56,55,51,41,0,0,0};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,27),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,56,55,52,32,116,121,112,50,56,55,53,41,0,0,0};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,15),40,100,111,57,50,52,32,116,111,107,115,57,50,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,34),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,57,50,48,32,116,121,112,57,50,49,41,0,0};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,13),40,105,115,45,111,112,63,32,120,57,53,49,41,0,0,0,0,0};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,25),40,100,111,57,54,48,32,119,50,57,54,50,32,111,107,57,54,51,32,108,105,57,54,52,41,0};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,7),40,100,111,57,53,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,17),40,105,110,102,45,62,112,114,101,32,105,110,102,57,53,51,41,0};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,49,49,49,57,32,101,114,114,102,49,49,50,48,41,0,0,0,0,0,0};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,14),40,100,111,49,51,50,56,32,102,49,51,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,14),40,100,111,49,51,50,49,32,102,49,51,50,51,41,0,0,0,0,0,0};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,7),40,97,53,51,50,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,40),40,97,53,51,51,48,32,115,117,99,99,101,115,115,53,57,48,32,114,101,115,117,108,116,115,53,57,49,32,114,101,109,97,105,110,115,53,57,50,41};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,15),40,97,53,51,49,55,32,101,114,114,102,53,56,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,47),40,115,97,108,32,115,116,114,105,110,103,49,51,48,54,32,114,117,108,101,49,51,48,55,32,116,111,107,101,110,115,49,51,48,56,32,116,114,97,99,101,63,49,51,48,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,17),40,100,111,49,51,52,55,32,116,97,105,108,49,51,52,57,41,0};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,19),40,112,114,105,110,116,101,114,32,116,104,105,110,103,49,51,52,54,41,0,0,0};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,17),40,100,111,49,51,53,53,32,116,97,105,108,49,51,53,55,41,0};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,49,51,52,52,41,0,0,0,0,0,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,49,51,54,50,41,0,0,0,0};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,49,51,54,52,41,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,49,51,54,56,41,0,0,0,0,0};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,23),40,115,97,108,58,111,117,116,112,117,116,32,46,32,97,114,103,115,49,51,54,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,32),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,49,52,57,57,32,120,49,53,48,48,41};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,49,53,48,49,41,0,0,0,0,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,23),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,49,53,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,49,53,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,49,53,49,48,41,0,0,0,0,0,0};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,49,53,49,51,41,0,0,0,0};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,31),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,49,53,49,52,32,120,49,53,49,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,49,53,49,54,41,0,0,0,0,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,49,53,49,57,41,0,0,0,0};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,49,53,50,50,41,0,0,0,0,0,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,14),40,100,111,49,53,50,55,32,97,49,53,50,57,41,0,0,0,0,0,0};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,27),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,49,53,50,53,41,0,0,0};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,14),40,100,111,49,53,51,57,32,108,49,53,52,49,41,0,0,0,0,0,0};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,40),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,49,53,51,55,32,97,99,99,101,115,115,111,114,49,53,51,56,41};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,39),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,49,53,51,52,32,99,108,97,117,115,101,115,49,53,51,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,24),40,108,111,111,112,45,111,112,63,32,120,49,53,52,53,32,111,112,115,49,53,52,54,41};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,49,53,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,49,53,52,56,32,118,97,108,49,53,52,57,41,0,0,0,0,0,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,17),40,100,111,49,53,55,49,32,116,97,105,108,49,53,55,51,41,0};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,17),40,100,111,49,53,54,54,32,116,97,105,108,49,53,54,56,41,0};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,20),40,100,111,49,53,53,54,32,104,49,53,53,56,32,108,49,53,53,57,41,0,0,0,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,39),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,49,53,53,48,32,102,111,114,109,115,49,53,53,49,32,97,114,103,115,49,53,53,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,41),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,49,53,56,53,32,99,108,97,117,115,101,115,49,53,56,54,32,111,112,115,49,53,56,55,41,0};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,17),40,100,111,49,54,48,53,32,110,101,120,116,49,54,48,55,41,0};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,51),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,49,53,57,49,32,99,108,97,117,115,101,115,49,53,57,50,32,111,112,115,49,53,57,51,41,0,0,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,7),40,97,56,57,51,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,29),40,97,56,57,53,53,32,99,108,97,117,115,101,49,54,56,54,32,105,103,110,111,114,101,49,54,56,55,41,0,0,0,0,0};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,49,54,56,51,32,99,108,97,117,115,101,115,49,54,56,52,32,111,112,115,49,54,56,53,41,0,0,0,0};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,17),40,100,111,49,55,48,52,32,110,101,120,116,49,55,48,54,41,0};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,56),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,49,54,56,57,32,99,108,97,117,115,101,115,49,54,57,48,32,111,112,115,49,54,57,49,41};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,17),40,100,111,49,55,55,49,32,110,101,120,116,49,55,55,51,41,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,55),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,49,55,54,49,32,99,108,97,117,115,101,115,49,55,54,50,32,111,112,115,49,55,54,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,26),40,100,111,49,56,48,57,32,110,101,101,100,49,56,49,49,32,110,101,120,116,49,56,49,50,41,0,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,42),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,49,55,57,57,32,99,108,97,117,115,101,115,49,56,48,48,32,111,112,115,49,56,48,49,41,0,0};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,8),40,100,111,49,56,53,51,41};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,49,56,52,52,32,99,108,97,117,115,101,115,49,56,52,53,32,111,112,115,49,56,52,54,41};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,49,56,54,51,32,99,108,97,117,115,101,115,49,56,54,52,32,111,112,115,49,56,54,53,41,0,0,0,0,0};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,49,56,55,55,32,99,108,97,117,115,101,115,49,56,55,56,32,111,112,115,49,56,55,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,49,57,52,52,32,116,121,112,101,49,57,52,53,32,97,99,99,49,57,52,54,32,104,101,97,100,49,57,52,55,41,0,0};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,49,57,52,56,41};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,49,57,52,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,14),40,100,111,49,56,57,54,32,97,49,56,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,14),40,100,111,49,57,48,52,32,99,49,57,48,54,41,0,0,0,0,0,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,49,57,50,51,32,99,108,97,117,115,101,115,49,57,50,52,32,111,112,115,49,57,50,53,41,0,0};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,50,48,50,52,41,0,0,0,0,0,0};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,50,48,50,53,32,99,108,97,117,115,101,115,50,48,50,54,32,111,112,115,50,48,50,55,41,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,50,48,52,54,32,99,108,97,117,115,101,115,50,48,52,55,32,111,112,115,50,48,52,56,41,0,0,0,0,0};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,50,48,54,50,32,99,108,97,117,115,101,115,50,48,54,51,32,111,112,115,50,48,54,52,41,0,0,0,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,8),40,97,49,48,56,50,56,41};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,20),40,97,49,48,56,52,49,32,97,50,48,56,57,32,98,50,48,57,48,41,0,0,0,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,38),40,100,111,50,48,56,50,32,111,112,50,48,56,52,32,99,108,97,117,115,101,50,48,56,53,32,114,101,109,97,105,110,115,50,48,56,54,41,0,0,0,0,0,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,50,48,55,54,32,99,108,97,117,115,101,115,50,48,55,55,32,111,112,115,50,48,55,56,41,0,0};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,8),40,97,49,48,57,57,50,41};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,20),40,97,49,49,48,48,54,32,97,50,49,49,56,32,98,50,49,49,57,41,0,0,0,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,8),40,97,49,49,48,55,48,41};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,20),40,97,49,49,48,55,54,32,97,50,49,49,53,32,98,50,49,49,54,41,0,0,0,0};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,50,49,48,50,32,99,108,97,117,115,101,115,50,49,48,51,32,111,112,115,50,49,48,52,41,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,50,49,52,53,32,116,121,112,101,50,49,52,54,41,0,0};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,8),40,97,49,49,50,49,56,41};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,20),40,97,49,49,50,50,55,32,97,50,49,53,56,32,98,50,49,53,57,41,0,0,0,0};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,47),40,100,111,50,49,52,57,32,111,112,50,49,53,49,32,99,108,97,117,115,101,50,49,53,50,32,114,101,109,97,105,110,115,50,49,53,51,32,98,111,100,121,50,49,53,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,46),40,112,97,114,115,101,45,105,116,101,114,97,116,105,111,110,32,99,97,108,108,101,114,50,49,55,49,32,102,111,114,109,115,50,49,55,50,32,111,112,115,50,49,55,51,41,0,0,0,0,0,0};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,59),40,102,95,49,49,54,52,57,32,97,50,50,53,52,50,50,53,55,32,97,50,50,53,51,50,50,53,56,32,97,50,50,53,50,50,50,53,57,32,97,50,50,53,49,50,50,54,48,32,97,50,50,53,48,50,50,54,49,41,0,0,0};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,59),40,102,95,49,49,54,56,48,32,97,50,50,54,55,50,50,55,48,32,97,50,50,54,54,50,50,55,49,32,97,50,50,54,53,50,50,55,50,32,97,50,50,54,52,50,50,55,51,32,97,50,50,54,51,50,50,55,52,41,0,0,0};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,59),40,102,95,49,49,55,49,49,32,97,50,50,56,48,50,50,56,51,32,97,50,50,55,57,50,50,56,52,32,97,50,50,55,56,50,50,56,53,32,97,50,50,55,55,50,50,56,54,32,97,50,50,55,54,50,50,56,55,41,0,0,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,59),40,102,95,49,49,55,52,50,32,97,50,50,57,51,50,50,57,54,32,97,50,50,57,50,50,50,57,55,32,97,50,50,57,49,50,50,57,56,32,97,50,50,57,48,50,50,57,57,32,97,50,50,56,57,50,51,48,48,41,0,0,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,8),40,97,49,49,55,54,55,41};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,8),40,97,49,49,55,55,48,41};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,8),40,97,49,49,55,55,51,41};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,8),40,97,49,49,55,55,54,41};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,8),40,97,49,49,55,55,57,41};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,8),40,97,49,49,55,56,50,41};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,30),40,109,109,58,109,97,107,101,32,116,121,112,101,50,50,52,50,32,46,32,103,50,50,52,49,50,50,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,19),40,102,95,49,49,55,57,52,32,97,50,51,48,51,50,51,48,55,41,0,0,0};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,15),40,109,109,58,102,114,101,101,32,109,50,51,48,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,19),40,102,95,49,49,56,48,57,32,97,50,51,49,49,50,51,49,53,41,0,0,0};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,111,112,121,32,109,50,51,49,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,29),40,102,95,49,49,56,50,52,32,97,50,51,50,49,50,51,50,53,32,97,50,51,50,48,50,51,50,54,41,0,0,0,0,0};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,22),40,109,109,58,116,121,112,101,63,32,109,50,51,49,56,32,116,50,51,49,57,41,0,0,0,0,0,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,19),40,102,95,49,49,56,52,51,32,97,50,51,50,57,50,51,51,51,41,0,0,0};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,15),40,109,109,58,116,105,109,101,32,109,50,51,50,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,29),40,102,95,49,49,56,53,56,32,97,50,51,51,57,50,51,52,51,32,97,50,51,51,56,50,51,52,52,41,0,0,0,0,0};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,26),40,109,109,58,116,105,109,101,45,115,101,116,33,32,109,50,51,51,54,32,116,50,51,51,55,41,0,0};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,19),40,102,95,49,49,56,55,55,32,97,50,51,52,56,50,51,53,50,41,0,0,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,104,97,110,32,109,50,51,52,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,29),40,102,95,49,49,56,57,50,32,97,50,51,53,55,50,51,54,49,32,97,50,51,53,54,50,51,54,50,41,0,0,0,0,0};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,26),40,109,109,58,99,104,97,110,45,115,101,116,33,32,109,50,51,53,52,32,99,50,51,53,53,41,0,0};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,29),40,102,95,49,49,57,49,49,32,97,50,51,54,55,50,51,55,49,32,97,50,51,54,54,50,51,55,50,41,0,0,0,0,0};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,14),40,109,109,58,107,101,121,32,109,50,51,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,39),40,102,95,49,49,57,51,48,32,97,50,51,55,56,50,51,56,50,32,97,50,51,55,55,50,51,56,51,32,97,50,51,55,54,50,51,56,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,25),40,109,109,58,107,101,121,45,115,101,116,33,32,109,50,51,55,52,32,107,50,51,55,53,41,0};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,29),40,102,95,49,49,57,53,51,32,97,50,51,56,57,50,51,57,51,32,97,50,51,56,56,50,51,57,52,41,0,0,0,0,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,101,108,32,109,50,51,56,55,41,0,0,0,0,0,0};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,39),40,102,95,49,49,57,55,50,32,97,50,52,48,48,50,52,48,52,32,97,50,51,57,57,50,52,48,53,32,97,50,51,57,56,50,52,48,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,101,108,45,115,101,116,33,32,109,50,51,57,54,32,118,50,51,57,55,41,0};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,29),40,102,95,49,50,48,48,52,32,97,50,52,49,51,50,52,49,55,32,97,50,52,49,50,50,52,49,56,41,0,0,0,0,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,29),40,102,95,49,50,48,50,48,32,97,50,52,50,49,50,52,50,53,32,97,50,52,50,48,50,52,50,54,41,0,0,0,0,0};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,97,108,32,109,50,52,48,57,41,0,0,0,0,0,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,39),40,102,95,49,50,48,53,49,32,97,50,52,51,52,50,52,51,56,32,97,50,52,51,51,50,52,51,57,32,97,50,52,51,50,50,52,52,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,39),40,102,95,49,50,48,55,49,32,97,50,52,52,52,50,52,52,56,32,97,50,52,52,51,50,52,52,57,32,97,50,52,52,50,50,52,53,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,97,108,45,115,101,116,33,32,109,50,52,50,56,32,118,50,52,50,57,41,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,29),40,102,95,49,50,48,57,55,32,97,50,52,53,53,50,52,53,57,32,97,50,52,53,52,50,52,54,48,41,0,0,0,0,0};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,14),40,109,109,58,110,117,109,32,109,50,52,53,51,41,0,0,0,0,0,0};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,39),40,102,95,49,50,49,49,54,32,97,50,52,54,54,50,52,55,48,32,97,50,52,54,53,50,52,55,49,32,97,50,52,54,52,50,52,55,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,25),40,109,109,58,110,117,109,45,115,101,116,33,32,109,50,52,54,50,32,118,50,52,54,51,41,0};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,59),40,102,95,49,50,49,51,57,32,97,50,52,56,52,50,52,56,55,32,97,50,52,56,51,50,52,56,56,32,97,50,52,56,50,50,52,56,57,32,97,50,52,56,49,50,52,57,48,32,97,50,52,56,48,50,52,57,49,41,0,0,0};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,51),40,109,112,58,110,111,116,101,32,116,105,109,101,50,52,55,53,32,100,117,114,50,52,55,54,32,107,101,121,50,52,55,55,32,97,109,112,50,52,55,56,32,99,104,97,110,50,52,55,57,41,0,0,0};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,59),40,102,95,49,50,49,54,55,32,97,50,53,48,49,50,53,48,52,32,97,50,53,48,48,50,53,48,53,32,97,50,52,57,57,50,53,48,54,32,97,50,52,57,56,50,53,48,55,32,97,50,52,57,55,50,53,48,56,41,0,0,0};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,51),40,109,112,58,109,105,100,105,32,116,105,109,101,50,52,57,50,32,100,117,114,50,52,57,51,32,107,101,121,50,52,57,52,32,97,109,112,50,52,57,53,32,99,104,97,110,50,52,57,54,41,0,0,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,59),40,102,95,49,50,49,57,53,32,97,50,53,49,54,50,53,49,57,32,97,50,53,49,53,50,53,50,48,32,97,50,53,49,52,50,53,50,49,32,97,50,53,49,51,50,53,50,50,32,97,50,53,49,50,50,53,50,51,41,0,0,0};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,34),40,109,112,58,111,102,102,32,116,105,109,101,50,53,48,57,32,107,101,121,50,53,49,48,32,99,104,97,110,50,53,49,49,41,0,0};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,59),40,102,95,49,50,50,50,51,32,97,50,53,51,50,50,53,51,53,32,97,50,53,51,49,50,53,51,54,32,97,50,53,51,48,50,53,51,55,32,97,50,53,50,57,50,53,51,56,32,97,50,53,50,56,50,53,51,57,41,0,0,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,110,32,116,105,109,101,50,53,50,52,32,107,101,121,50,53,50,53,32,118,101,108,50,53,50,54,32,99,104,97,110,50,53,50,55,41,0};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,59),40,102,95,49,50,50,53,49,32,97,50,53,52,56,50,53,53,49,32,97,50,53,52,55,50,53,53,50,32,97,50,53,52,54,50,53,53,51,32,97,50,53,52,53,50,53,53,52,32,97,50,53,52,52,50,53,53,53,41,0,0,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,44),40,109,112,58,116,111,117,99,104,32,116,105,109,101,50,53,52,48,32,107,101,121,50,53,52,49,32,118,97,108,50,53,52,50,32,99,104,97,110,50,53,52,51,41,0,0,0,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,59),40,102,95,49,50,50,55,57,32,97,50,53,54,52,50,53,54,55,32,97,50,53,54,51,50,53,54,56,32,97,50,53,54,50,50,53,54,57,32,97,50,53,54,49,50,53,55,48,32,97,50,53,54,48,50,53,55,49,41,0,0,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,43),40,109,112,58,99,116,114,108,32,116,105,109,101,50,53,53,54,32,110,117,109,50,53,53,55,32,118,97,108,50,53,53,56,32,99,104,97,110,50,53,53,57,41,0,0,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,59),40,102,95,49,50,51,48,55,32,97,50,53,55,57,50,53,56,50,32,97,50,53,55,56,50,53,56,51,32,97,50,53,55,55,50,53,56,52,32,97,50,53,55,54,50,53,56,53,32,97,50,53,55,53,50,53,56,54,41,0,0,0};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,35),40,109,112,58,112,114,111,103,32,116,105,109,101,50,53,55,50,32,118,97,108,50,53,55,51,32,99,104,97,110,50,53,55,52,41,0,0,0};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,59),40,102,95,49,50,51,51,53,32,97,50,53,57,52,50,53,57,55,32,97,50,53,57,51,50,53,57,56,32,97,50,53,57,50,50,53,57,57,32,97,50,53,57,49,50,54,48,48,32,97,50,53,57,48,50,54,48,49,41,0,0,0};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,36),40,109,112,58,112,114,101,115,115,32,116,105,109,101,50,53,56,55,32,118,97,108,50,53,56,56,32,99,104,97,110,50,53,56,57,41,0,0,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,59),40,102,95,49,50,51,54,51,32,97,50,54,48,57,50,54,49,50,32,97,50,54,48,56,50,54,49,51,32,97,50,54,48,55,50,54,49,52,32,97,50,54,48,54,50,54,49,53,32,97,50,54,48,53,50,54,49,54,41,0,0,0};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,35),40,109,112,58,98,101,110,100,32,116,105,109,101,50,54,48,50,32,118,97,108,50,54,48,51,32,99,104,97,110,50,54,48,52,41,0,0,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,19),40,102,95,49,50,51,57,49,32,97,50,54,49,56,50,54,50,50,41,0,0,0};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,15),40,109,112,58,109,109,32,112,116,114,50,54,49,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,17),40,97,49,50,52,49,56,32,37,101,114,114,50,54,51,49,41,0};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,8),40,97,49,50,52,51,56,41};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,18),40,97,49,50,52,49,50,32,37,99,111,110,116,50,54,51,48,41,0,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,17),40,97,49,50,52,48,54,32,37,109,115,103,50,54,50,57,41,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,19),40,102,95,49,50,52,52,52,32,97,50,54,50,53,50,54,50,56,41,0,0,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,104,111,111,107,32,37,104,111,111,107,50,54,50,52,41,0,0,0,0,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,39),40,102,95,49,50,53,48,49,32,97,50,54,56,49,50,54,56,52,32,97,50,54,56,48,50,54,56,53,32,97,50,54,55,57,50,54,56,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,50,54,55,56,41,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,39),40,102,95,49,50,53,53,56,32,97,50,54,57,50,50,54,57,53,32,97,50,54,57,49,50,54,57,54,32,97,50,54,57,48,50,54,57,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,50,54,56,57,41,0};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,9),40,102,95,49,50,53,57,57,41,0};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,10),40,99,115,58,99,108,101,97,114,41,0,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,25),40,112,114,105,110,116,45,109,101,115,115,97,103,101,32,97,50,55,48,55,50,55,49,49,41,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,23),40,112,114,105,110,116,45,101,114,114,111,114,32,97,50,55,49,51,50,55,49,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,27),40,99,117,114,114,101,110,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,41,0,0,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,22),40,99,117,114,114,101,110,116,45,116,105,109,101,45,115,101,99,111,110,100,115,41,0,0,0,0,0,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,43),40,115,99,104,101,100,117,108,101,114,45,115,101,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,32,97,50,55,50,57,50,55,51,50,41,0,0,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,48),40,115,99,104,101,100,117,108,101,114,45,115,112,114,111,117,116,32,97,50,55,51,55,50,55,52,48,32,97,50,55,51,54,50,55,52,49,32,97,50,55,51,53,50,55,52,50,41};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,26),40,115,99,104,101,100,117,108,101,114,45,115,116,111,112,32,97,50,55,53,55,50,55,54,48,41,0,0};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,19),40,102,95,49,50,55,51,52,32,97,50,55,54,56,50,55,55,50,41,0,0,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,24),40,108,111,97,100,45,115,97,108,45,102,105,108,101,32,102,105,108,101,50,55,54,55,41};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,14),40,100,111,50,55,57,50,32,112,50,55,57,52,41,0,0,0,0,0,0};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,27),40,98,111,100,121,50,55,55,56,32,115,116,97,114,116,50,55,56,52,32,105,100,50,55,56,53,41,0,0,0};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,27),40,100,101,102,45,105,100,50,55,56,49,32,37,115,116,97,114,116,50,55,55,54,50,56,48,48,41,0,0,0};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,15),40,100,101,102,45,115,116,97,114,116,50,55,56,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,50,55,55,52,32,46,32,97,114,103,115,50,55,55,53,41,0,0,0,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,23),40,116,105,109,101,45,102,111,114,109,97,116,32,46,32,97,114,103,50,56,48,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,6),40,99,111,110,116,41,0,0,0,0,0,0};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,50,48,32,116,97,105,108,50,56,50,50,41,0};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,50,56,49,57,41,0,0,0};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,53,50,32,100,101,99,108,50,56,53,52,41,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,51,54,32,116,97,105,108,50,56,51,56,41,0};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,46),40,97,49,51,53,51,49,32,98,105,110,100,105,110,103,115,50,56,50,55,32,116,101,114,109,105,110,97,116,101,50,56,50,56,32,46,32,98,111,100,121,50,56,50,57,41,0,0,0,0,0,0};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,17),40,97,49,51,53,51,55,32,97,114,103,115,50,49,56,52,41,0};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,16),40,97,49,51,54,55,57,32,115,121,109,49,52,57,55,41};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,16),40,97,49,51,54,56,50,32,115,121,109,49,52,57,53,41};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,24),40,97,49,51,55,49,49,32,118,97,108,49,52,57,51,32,115,121,109,49,52,57,52,41};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,17),40,97,49,51,55,50,53,32,97,114,103,115,49,52,57,50,41,0};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,26),40,97,49,51,55,51,57,32,97,114,103,115,49,51,48,49,32,101,114,114,102,49,51,48,50,41,0,0};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,35),40,97,49,51,55,53,51,32,117,110,105,116,49,51,48,51,32,105,110,102,111,49,51,48,52,32,101,114,114,102,49,51,48,53,41,0,0,0};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,26),40,97,49,51,56,53,57,32,97,114,103,115,49,50,53,48,32,101,114,114,102,49,50,53,49,41,0,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,17),40,100,111,49,50,54,50,32,114,101,115,116,49,50,54,52,41,0};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,26),40,100,111,49,50,56,56,32,97,114,103,115,49,50,57,48,32,116,97,105,108,49,50,57,49,41,0,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,35),40,97,49,51,56,57,56,32,117,110,105,116,49,50,53,53,32,105,110,102,111,49,50,53,54,32,101,114,114,102,49,50,53,55,41,0,0,0};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,26),40,97,49,52,51,49,54,32,97,114,103,115,49,50,52,51,32,101,114,114,102,49,50,52,52,41,0,0};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,26),40,97,49,52,52,54,49,32,97,114,103,115,49,50,50,57,32,101,114,114,102,49,50,51,48,41,0,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,17),40,100,111,49,50,48,54,32,116,97,105,108,49,50,48,56,41,0};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,17),40,100,111,49,50,48,49,32,116,97,105,108,49,50,48,51,41,0};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,20),40,100,111,49,49,57,48,32,99,108,97,117,115,101,115,49,49,57,50,41,0,0,0,0};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,17),40,100,111,49,49,56,55,32,116,97,105,108,49,49,56,57,41,0};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,35),40,97,49,52,53,48,55,32,117,110,105,116,49,50,51,57,32,105,110,102,111,49,50,52,48,32,101,114,114,102,49,50,52,49,41,0,0,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,26),40,97,49,52,57,54,49,32,97,114,103,115,49,49,48,51,32,101,114,114,102,49,49,48,52,41,0,0};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,35),40,97,49,53,48,50,57,32,117,110,105,116,49,49,49,53,32,105,110,102,111,49,49,49,54,32,101,114,114,102,49,49,49,55,41,0,0,0};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,26),40,97,49,53,49,53,56,32,97,114,103,115,49,48,57,49,32,101,114,114,102,49,48,57,50,41,0,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,35),40,97,49,53,49,56,52,32,117,110,105,116,49,48,57,54,32,105,110,102,111,49,48,57,55,32,101,114,114,102,49,48,57,56,41,0,0,0};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,26),40,97,49,53,50,55,50,32,97,114,103,115,49,48,54,57,32,101,114,114,102,49,48,55,48,41,0,0};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,17),40,100,111,49,48,55,55,32,105,116,101,114,49,48,55,57,41,0};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,35),40,97,49,53,51,49,53,32,117,110,105,116,49,48,55,49,32,105,110,102,111,49,48,55,50,32,101,114,114,102,49,48,55,51,41,0,0,0};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,26),40,97,49,53,53,53,50,32,97,114,103,115,49,48,54,54,32,101,114,114,102,49,48,54,55,41,0,0};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,26),40,97,49,53,54,51,56,32,97,114,103,115,49,48,53,56,32,101,114,114,102,49,48,53,57,41,0,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,14),40,97,49,53,54,57,48,32,101,49,48,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,35),40,97,49,53,54,56,49,32,117,110,105,116,49,48,54,48,32,105,110,102,111,49,48,54,49,32,101,114,114,102,49,48,54,50,41,0,0,0};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,26),40,97,49,53,55,52,48,32,97,114,103,115,49,48,53,49,32,101,114,114,102,49,48,53,50,41,0,0};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,14),40,97,49,53,55,56,49,32,101,49,48,53,54,41,0,0,0,0,0,0};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,35),40,97,49,53,55,55,53,32,117,110,105,116,49,48,53,51,32,105,110,102,111,49,48,53,52,32,101,114,114,102,49,48,53,53,41,0,0,0};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,35),40,97,49,53,56,51,53,32,117,110,105,116,49,48,52,52,32,105,110,102,111,49,48,52,53,32,101,114,114,102,49,48,52,54,41,0,0,0};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,35),40,97,49,53,56,57,54,32,117,110,105,116,49,48,51,56,32,105,110,102,111,49,48,51,57,32,101,114,114,102,49,48,52,48,41,0,0,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,26),40,97,49,53,57,53,48,32,97,114,103,115,49,48,51,50,32,101,114,114,102,49,48,51,51,41,0,0};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,35),40,97,49,53,57,56,48,32,117,110,105,116,49,48,51,52,32,105,110,102,111,49,48,51,53,32,101,114,114,102,49,48,51,54,41,0,0,0};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,26),40,97,49,54,49,57,57,32,97,114,103,115,49,48,50,53,32,101,114,114,102,49,48,50,54,41,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,26),40,97,49,54,50,50,53,32,97,114,103,115,49,48,49,50,32,101,114,114,102,49,48,49,51,41,0,0};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,27),40,97,49,54,51,48,54,32,115,116,114,49,48,50,50,32,46,32,97,114,103,115,49,48,50,51,41,0,0,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,35),40,97,49,54,50,56,54,32,117,110,105,116,49,48,49,55,32,105,110,102,111,49,48,49,56,32,101,114,114,102,49,48,49,57,41,0,0,0};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,26),40,97,49,54,52,50,52,32,97,114,103,115,49,48,48,53,32,101,114,114,102,49,48,48,54,41,0,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,35),40,97,49,54,52,52,54,32,117,110,105,116,49,48,48,55,32,105,110,102,111,49,48,48,56,32,101,114,114,102,49,48,48,57,41,0,0,0};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,24),40,97,49,54,52,57,57,32,97,114,103,115,57,57,49,32,101,114,114,102,57,57,50,41};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,16),40,100,111,57,57,56,32,97,114,103,115,49,48,48,48,41};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,32),40,97,49,54,53,50,49,32,117,110,105,116,57,57,51,32,105,110,102,111,57,57,52,32,101,114,114,102,57,57,53,41};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,24),40,97,49,54,54,53,51,32,97,114,103,115,57,56,52,32,101,114,114,102,57,56,53,41};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,32),40,97,49,54,54,55,57,32,117,110,105,116,57,56,54,32,105,110,102,111,57,56,55,32,101,114,114,102,57,56,56,41};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,24),40,97,49,54,55,56,57,32,97,114,103,115,57,56,48,32,101,114,114,102,57,56,49,41};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,24),40,97,49,54,57,52,53,32,97,114,103,115,57,52,51,32,101,114,114,102,57,52,52,41};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,32),40,97,49,54,57,54,51,32,117,110,105,116,57,52,53,32,105,110,102,111,57,52,54,32,101,114,114,102,57,52,55,41};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,24),40,97,49,55,48,49,54,32,97,114,103,115,57,51,55,32,101,114,114,102,57,51,56,41};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,24),40,97,49,55,49,54,56,32,97,114,103,115,57,51,52,32,101,114,114,102,57,51,53,41};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,24),40,97,49,55,51,48,55,32,97,114,103,115,57,51,49,32,101,114,114,102,57,51,50,41};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,24),40,97,49,55,52,50,55,32,97,114,103,115,57,49,48,32,101,114,114,102,57,49,49,41};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,32),40,97,49,55,52,53,56,32,117,110,105,116,57,49,51,32,105,110,102,111,57,49,52,32,101,114,114,102,57,49,53,41};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,24),40,97,49,55,53,53,48,32,97,114,103,115,57,48,52,32,101,114,114,102,57,48,53,41};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,32),40,97,49,55,53,54,56,32,117,110,105,116,57,48,54,32,105,110,102,111,57,48,55,32,101,114,114,102,57,48,56,41};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,32),40,97,49,55,54,52,50,32,117,110,105,116,56,57,51,32,105,110,102,111,56,57,52,32,101,114,114,102,56,57,53,41};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,24),40,97,49,55,55,51,56,32,97,114,103,115,56,56,49,32,101,114,114,102,56,56,50,41};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,32),40,97,49,55,55,52,56,32,117,110,105,116,56,56,51,32,105,110,102,111,56,56,52,32,101,114,114,102,56,56,53,41};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,18),40,97,49,55,57,50,52,32,117,53,51,49,32,112,53,51,50,41,0,0};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,18),40,97,49,55,57,53,48,32,101,53,48,51,32,112,53,48,52,41,0,0};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,11),40,112,112,97,116,32,112,52,54,54,41,0,0,0};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,32),40,97,49,55,57,54,52,32,116,121,112,52,54,50,32,112,97,116,52,54,51,32,46,32,97,114,103,115,52,54,52,41};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,18),40,97,49,56,48,54,55,32,114,52,53,57,32,112,52,54,48,41,0,0};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,18),40,97,49,56,48,55,55,32,116,52,49,48,32,112,52,49,49,41,0,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,24),40,97,49,56,48,57,49,32,109,101,115,115,53,48,32,46,32,100,97,116,97,53,49,41};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,20),40,97,49,56,48,57,55,32,102,117,110,99,48,32,105,110,102,111,49,41,0,0,0,0};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from k12737 */
static C_word C_fcall stub2769(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub2769(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
load_sal_file(t0);
return C_r;}

/* from k12722 in hush in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
C_noret_decl(stub2763)
static void C_ccall stub2763(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub2763(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_hush();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k12716 */
C_noret_decl(stub2758)
static void C_ccall stub2758(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub2758(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_stop(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k12700 in cont in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
C_noret_decl(stub2753)
static void C_ccall stub2753(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub2753(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_cont();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k12691 in pause in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
C_noret_decl(stub2749)
static void C_ccall stub2749(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub2749(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_pause();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k12682 in paused? in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
C_noret_decl(stub2745)
static void C_ccall stub2745(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub2745(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_paused());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k12676 */
C_noret_decl(stub2738)
static void C_ccall stub2738(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_noret;
static void C_ccall stub2738(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_sprout(t0,t1,t2);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k12656 in scheduler-set-time-milliseconds in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
C_noret_decl(stub2730)
static void C_ccall stub2730(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub2730(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_set_time_milliseconds(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k12647 in time-format in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
C_noret_decl(stub2725)
static void C_ccall stub2725(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub2725(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_time_milliseconds());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from current-time-seconds in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub2722(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub2722(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( (Time::getMillisecondCounterHiRes() / 1000.0) );
C_ret:
#undef return

return C_r;}

/* from current-time-milliseconds in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub2719(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub2719(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( Time::getMillisecondCounterHiRes());
C_ret:
#undef return

return C_r;}

/* from k12628 in print-error in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static C_word C_fcall stub2714(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub2714(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_error(t0);
return C_r;}

/* from k12614 in print-message in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static C_word C_fcall stub2708(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub2708(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_message(t0);
return C_r;}

/* from f_12599 in cs:clear in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static C_word C_fcall stub2700(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub2700(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cs_clear_score();
return C_r;}

/* from k12565 */
static C_word C_fcall stub2693(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub2693(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from k12508 */
static C_word C_fcall stub2682(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub2682(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from f_12444 in mp:inhook in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static C_word C_fcall stub2626(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub2626(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from k12394 */
static C_word C_fcall stub2619(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub2619(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mp_message(t0);
return C_r;}

/* from k12382 */
static C_word C_fcall stub2610(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2610(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k12354 */
static C_word C_fcall stub2595(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2595(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k12326 */
static C_word C_fcall stub2580(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2580(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k12298 */
static C_word C_fcall stub2565(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2565(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k12270 */
static C_word C_fcall stub2549(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2549(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k12242 */
static C_word C_fcall stub2533(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2533(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k12214 */
static C_word C_fcall stub2517(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2517(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k12186 */
static C_word C_fcall stub2502(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2502(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k12158 */
static C_word C_fcall stub2485(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2485(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k12127 */
static C_word C_fcall stub2467(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub2467(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k12104 */
static C_word C_fcall stub2456(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub2456(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k12082 */
static C_word C_fcall stub2445(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub2445(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k12062 */
static C_word C_fcall stub2435(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub2435(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k12027 */
static C_word C_fcall stub2422(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub2422(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k12011 */
static C_word C_fcall stub2414(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub2414(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k11983 */
static C_word C_fcall stub2401(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub2401(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k11960 */
static C_word C_fcall stub2390(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub2390(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k11941 */
static C_word C_fcall stub2379(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub2379(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k11918 */
static C_word C_fcall stub2368(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub2368(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k11899 */
static C_word C_fcall stub2358(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub2358(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
mm_set_chan(t0,t1);
return C_r;}

/* from k11880 */
static C_word C_fcall stub2349(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub2349(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_fix((C_word)mm_chan(t0));
return C_r;}

/* from k11865 */
static C_word C_fcall stub2340(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub2340(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
double t1=(double )C_c_double(C_a1);
mm_set_time(t0,t1);
return C_r;}

/* from k11846 */
static C_word C_fcall stub2330(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub2330(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_flonum(&C_a,mm_time(t0));
return C_r;}

/* from k11831 */
static C_word C_fcall stub2322(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub2322(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k11812 */
static C_word C_fcall stub2312(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub2312(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_mpointer_or_false(&C_a,(void*)mm_copy(t0));
return C_r;}

/* from k11797 */
static C_word C_fcall stub2304(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub2304(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mm_free(t0);
return C_r;}

/* from k11761 */
static C_word C_fcall stub2294(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2294(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k11730 */
static C_word C_fcall stub2281(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2281(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k11699 */
static C_word C_fcall stub2268(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2268(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k11668 */
static C_word C_fcall stub2255(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2255(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from tb:ranbrown */
static C_word C_fcall stub220(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub220(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranbrown());
return C_r;}

/* from tb:ranpink */
static C_word C_fcall stub217(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub217(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranpink());
return C_r;}

/* from k3669 */
static C_word C_fcall stub214(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub214(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::ranpoisson(t0));
return C_r;}

/* from tb:rancauchy */
static C_word C_fcall stub210(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub210(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::rancauchy());
return C_r;}

/* from k3659 */
static C_word C_fcall stub206(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub206(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::rangamma(t0));
return C_r;}

/* from k3652 */
static C_word C_fcall stub200(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub200(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ranbeta(t0,t1));
return C_r;}

/* from k3641 */
static C_word C_fcall stub194(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub194(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ranexp(t0));
return C_r;}

/* from k3634 */
static C_word C_fcall stub188(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub188(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::rangauss(t0,t1));
return C_r;}

/* from tb:ranmiddle */
static C_word C_fcall stub183(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub183(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranmiddle());
return C_r;}

/* from tb:ranhigh */
static C_word C_fcall stub180(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub180(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranhigh());
return C_r;}

/* from tb:ranlow */
static C_word C_fcall stub177(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub177(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranlow());
return C_r;}

/* from k3614 */
static C_word C_fcall stub172(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub172(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ran(t0,t1));
return C_r;}

/* from k3603 */
static C_word C_fcall stub166(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub166(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)Toolbox::ran(t0,t1));
return C_r;}

/* from k3592 */
static C_word C_fcall stub160(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub160(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ran(t0));
return C_r;}

/* from k3585 */
static C_word C_fcall stub156(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub156(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)Toolbox::ran(t0));
return C_r;}

/* from tb:ran-set! */
static C_word C_fcall stub152(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub152(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
Toolbox::ranstate_set(t0);
return C_r;}

/* from k3575 */
static C_word C_fcall stub147(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub147(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::hertz_to_keynum(t0));
return C_r;}

/* from k3568 */
static C_word C_fcall stub143(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub143(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::keynum_to_pc(t0));
return C_r;}

/* from k3561 */
static C_word C_fcall stub138(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub138(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::keynum_to_hertz(t0));
return C_r;}

/* from k3554 */
static C_word C_fcall stub134(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub134(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::scaler_to_cents(t0));
return C_r;}

/* from k3547 */
static C_word C_fcall stub129(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub129(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,Toolbox::cents_to_scaler(t0));
return C_r;}

/* from k3540 */
static C_word C_fcall stub122(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub122(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
C_r=C_flonum(&C_a,Toolbox::rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k3525 */
static C_word C_fcall stub114(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub114(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::quantize(t0,t1));
return C_r;}

/* from k3514 */
static C_word C_fcall stub107(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub107(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_flonum(&C_a,Toolbox::decimals(t0,t1));
return C_r;}

/* from k3503 */
static C_word C_fcall stub102(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub102(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::float_to_fixnum(t0));
return C_r;}

/* from k3496 */
static C_word C_fcall stub93(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub93(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_fix((C_word)Toolbox::discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k3469 */
static C_word C_fcall stub78(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub78(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_flonum(&C_a,Toolbox::rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k3429 */
static C_word C_fcall stub67(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub67(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
set_current_directory(t0);
return C_r;}

/* from f_3411 in cwd in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static C_word C_fcall stub62(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub62(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)get_current_directory());
return C_r;}

C_noret_decl(C_grace_toplevel)
C_externexport void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_2909)
static void C_ccall f_2909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_2912)
static void C_ccall f_2912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_2915)
static void C_ccall f_2915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_2918)
static void C_ccall f_2918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_2922)
static void C_ccall f_2922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18098)
static void C_ccall f_18098(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18145)
static void C_ccall f_18145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18135)
static void C_ccall f_18135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18102)
static void C_ccall f_18102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_2925)
static void C_ccall f_2925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18092)
static void C_ccall f_18092(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18092)
static void C_ccall f_18092r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_3218)
static void C_ccall f_3218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18078)
static void C_ccall f_18078(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18086)
static void C_ccall f_18086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18090)
static void C_ccall f_18090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4492)
static void C_ccall f_4492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4543)
static void C_ccall f_4543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18068)
static void C_ccall f_18068(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18076)
static void C_ccall f_18076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4648)
static void C_ccall f_4648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17965)
static void C_ccall f_17965(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_17965)
static void C_ccall f_17965r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_18028)
static void C_ccall f_18028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18032)
static void C_ccall f_18032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18046)
static void C_fcall f_18046(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17968)
static void C_fcall f_17968(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17988)
static void C_ccall f_17988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17992)
static void C_ccall f_17992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4651)
static void C_ccall f_4651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17951)
static void C_ccall f_17951(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17959)
static void C_ccall f_17959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17963)
static void C_ccall f_17963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4844)
static void C_ccall f_4844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17925)
static void C_ccall f_17925(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17929)
static void C_ccall f_17929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17935)
static void C_ccall f_17935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17946)
static void C_ccall f_17946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17942)
static void C_ccall f_17942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4913)
static void C_ccall f_4913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17903)
static void C_ccall f_17903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6158)
static void C_ccall f_6158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17883)
static void C_ccall f_17883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6161)
static void C_ccall f_6161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17843)
static void C_ccall f_17843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6164)
static void C_ccall f_6164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17749)
static void C_ccall f_17749(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17753)
static void C_ccall f_17753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17756)
static void C_ccall f_17756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17774)
static void C_ccall f_17774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17777)
static void C_ccall f_17777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17808)
static void C_ccall f_17808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17780)
static void C_fcall f_17780(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17786)
static void C_ccall f_17786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17739)
static void C_ccall f_17739(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17733)
static void C_ccall f_17733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6167)
static void C_ccall f_6167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17641)
static void C_ccall f_17641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17643)
static void C_ccall f_17643(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17647)
static void C_ccall f_17647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17650)
static void C_ccall f_17650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17653)
static void C_ccall f_17653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17693)
static void C_ccall f_17693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17685)
static void C_ccall f_17685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17656)
static void C_ccall f_17656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17659)
static void C_ccall f_17659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17662)
static void C_ccall f_17662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17633)
static void C_ccall f_17633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6170)
static void C_ccall f_6170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17605)
static void C_ccall f_17605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6173)
static void C_ccall f_6173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17569)
static void C_ccall f_17569(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17581)
static void C_ccall f_17581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17577)
static void C_ccall f_17577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17551)
static void C_ccall f_17551(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17545)
static void C_ccall f_17545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6176)
static void C_ccall f_6176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17459)
static void C_ccall f_17459(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17463)
static void C_ccall f_17463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17466)
static void C_ccall f_17466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17469)
static void C_ccall f_17469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17482)
static void C_ccall f_17482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17428)
static void C_ccall f_17428(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17432)
static void C_ccall f_17432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17447)
static void C_ccall f_17447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17422)
static void C_ccall f_17422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6179)
static void C_ccall f_6179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17308)
static void C_ccall f_17308(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17324)
static void C_ccall f_17324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17335)
static void C_ccall f_17335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17302)
static void C_ccall f_17302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6235)
static void C_ccall f_6235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17169)
static void C_ccall f_17169(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17192)
static void C_ccall f_17192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17189)
static void C_ccall f_17189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17163)
static void C_ccall f_17163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6238)
static void C_ccall f_6238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17017)
static void C_ccall f_17017(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17035)
static void C_ccall f_17035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17044)
static void C_ccall f_17044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17011)
static void C_ccall f_17011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6241)
static void C_ccall f_6241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16964)
static void C_ccall f_16964(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16968)
static void C_ccall f_16968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16971)
static void C_ccall f_16971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16987)
static void C_ccall f_16987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16946)
static void C_ccall f_16946(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16940)
static void C_ccall f_16940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6244)
static void C_ccall f_6244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16864)
static void C_ccall f_16864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6383)
static void C_ccall f_6383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16790)
static void C_ccall f_16790(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16797)
static void C_ccall f_16797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16784)
static void C_ccall f_16784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6386)
static void C_ccall f_6386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16680)
static void C_ccall f_16680(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16688)
static void C_ccall f_16688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16654)
static void C_ccall f_16654(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16671)
static void C_ccall f_16671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16662)
static void C_fcall f_16662(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16648)
static void C_ccall f_16648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6389)
static void C_ccall f_6389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16604)
static void C_ccall f_16604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6392)
static void C_ccall f_6392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16522)
static void C_ccall f_16522(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16533)
static void C_ccall f_16533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16535)
static void C_fcall f_16535(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16564)
static void C_ccall f_16564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16500)
static void C_ccall f_16500(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16516)
static void C_ccall f_16516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16494)
static void C_ccall f_16494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6395)
static void C_ccall f_6395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16447)
static void C_ccall f_16447(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16451)
static void C_ccall f_16451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16458)
static void C_ccall f_16458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16425)
static void C_ccall f_16425(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16441)
static void C_ccall f_16441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16419)
static void C_ccall f_16419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6398)
static void C_ccall f_6398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16287)
static void C_ccall f_16287(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16327)
static void C_ccall f_16327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16291)
static void C_ccall f_16291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16307)
static void C_ccall f_16307(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16307)
static void C_ccall f_16307r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16319)
static void C_ccall f_16319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16323)
static void C_ccall f_16323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16315)
static void C_ccall f_16315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16226)
static void C_ccall f_16226(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16273)
static void C_ccall f_16273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16233)
static void C_fcall f_16233(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16244)
static void C_ccall f_16244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16220)
static void C_ccall f_16220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6401)
static void C_ccall f_6401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16200)
static void C_ccall f_16200(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16194)
static void C_ccall f_16194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6404)
static void C_ccall f_6404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16174)
static void C_ccall f_16174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16178)
static void C_ccall f_16178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16166)
static void C_ccall f_16166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6407)
static void C_ccall f_6407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16146)
static void C_ccall f_16146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16150)
static void C_ccall f_16150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16138)
static void C_ccall f_16138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6410)
static void C_ccall f_6410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16118)
static void C_ccall f_16118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16122)
static void C_ccall f_16122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16110)
static void C_ccall f_16110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6413)
static void C_ccall f_6413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16090)
static void C_ccall f_16090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16094)
static void C_ccall f_16094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16082)
static void C_ccall f_16082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6416)
static void C_ccall f_6416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15981)
static void C_ccall f_15981(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15951)
static void C_ccall f_15951(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15975)
static void C_ccall f_15975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15945)
static void C_ccall f_15945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6419)
static void C_ccall f_6419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15895)
static void C_ccall f_15895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15897)
static void C_ccall f_15897(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15901)
static void C_ccall f_15901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15929)
static void C_ccall f_15929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15921)
static void C_ccall f_15921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15917)
static void C_ccall f_15917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15904)
static void C_ccall f_15904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15887)
static void C_ccall f_15887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6422)
static void C_ccall f_6422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15834)
static void C_ccall f_15834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15836)
static void C_ccall f_15836(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15840)
static void C_ccall f_15840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15871)
static void C_ccall f_15871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15863)
static void C_ccall f_15863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15859)
static void C_ccall f_15859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15843)
static void C_ccall f_15843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15846)
static void C_ccall f_15846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15826)
static void C_ccall f_15826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6425)
static void C_ccall f_6425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15776)
static void C_ccall f_15776(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15790)
static void C_ccall f_15790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15782)
static void C_ccall f_15782(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15741)
static void C_ccall f_15741(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15774)
static void C_ccall f_15774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15735)
static void C_ccall f_15735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6428)
static void C_ccall f_6428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15682)
static void C_ccall f_15682(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15686)
static void C_ccall f_15686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15699)
static void C_ccall f_15699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15691)
static void C_ccall f_15691(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15639)
static void C_ccall f_15639(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15672)
static void C_ccall f_15672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15633)
static void C_ccall f_15633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6431)
static void C_ccall f_6431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15553)
static void C_ccall f_15553(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15547)
static void C_ccall f_15547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6434)
static void C_ccall f_6434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15316)
static void C_ccall f_15316(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15320)
static void C_ccall f_15320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15328)
static void C_fcall f_15328(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15351)
static void C_ccall f_15351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15354)
static void C_ccall f_15354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15357)
static void C_ccall f_15357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15360)
static void C_ccall f_15360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15420)
static void C_ccall f_15420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15427)
static void C_ccall f_15427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15437)
static void C_ccall f_15437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15447)
static void C_ccall f_15447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15461)
static void C_ccall f_15461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15471)
static void C_ccall f_15471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15481)
static void C_ccall f_15481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15491)
static void C_ccall f_15491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15363)
static void C_fcall f_15363(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15387)
static void C_fcall f_15387(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15366)
static void C_fcall f_15366(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15273)
static void C_ccall f_15273(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15306)
static void C_ccall f_15306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15267)
static void C_ccall f_15267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6437)
static void C_ccall f_6437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15185)
static void C_ccall f_15185(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15189)
static void C_ccall f_15189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15195)
static void C_ccall f_15195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15215)
static void C_ccall f_15215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15159)
static void C_ccall f_15159(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15169)
static void C_fcall f_15169(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15153)
static void C_ccall f_15153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6440)
static void C_ccall f_6440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15030)
static void C_ccall f_15030(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15034)
static void C_ccall f_15034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14962)
static void C_ccall f_14962(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14981)
static void C_ccall f_14981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15016)
static void C_ccall f_15016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14987)
static void C_fcall f_14987(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14991)
static void C_ccall f_14991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15005)
static void C_ccall f_15005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14994)
static void C_fcall f_14994(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14975)
static void C_fcall f_14975(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14956)
static void C_ccall f_14956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6443)
static void C_ccall f_6443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14684)
static void C_ccall f_14684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6966)
static void C_ccall f_6966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14636)
static void C_ccall f_14636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14628)
static void C_ccall f_14628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6969)
static void C_ccall f_6969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14508)
static void C_ccall f_14508(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6975)
static void C_ccall f_6975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7450)
static void C_ccall f_7450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7484)
static void C_ccall f_7484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7476)
static void C_ccall f_7476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7472)
static void C_ccall f_7472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7457)
static void C_ccall f_7457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7461)
static void C_ccall f_7461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7454)
static void C_ccall f_7454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6993)
static void C_fcall f_6993(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7443)
static void C_ccall f_7443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7439)
static void C_ccall f_7439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7000)
static void C_fcall f_7000(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7314)
static void C_fcall f_7314(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7335)
static void C_ccall f_7335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7337)
static void C_fcall f_7337(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7351)
static void C_ccall f_7351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7404)
static void C_ccall f_7404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7354)
static void C_fcall f_7354(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7389)
static void C_ccall f_7389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7357)
static void C_fcall f_7357(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7370)
static void C_ccall f_7370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7382)
static void C_ccall f_7382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7374)
static void C_ccall f_7374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7360)
static void C_fcall f_7360(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7324)
static void C_ccall f_7324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7003)
static void C_ccall f_7003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7278)
static void C_fcall f_7278(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7304)
static void C_ccall f_7304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7289)
static void C_ccall f_7289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7006)
static void C_ccall f_7006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7010)
static void C_ccall f_7010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7222)
static void C_fcall f_7222(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7232)
static void C_ccall f_7232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7235)
static void C_ccall f_7235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7256)
static void C_ccall f_7256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7238)
static void C_fcall f_7238(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7242)
static void C_ccall f_7242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7013)
static void C_ccall f_7013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7016)
static void C_fcall f_7016(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7185)
static void C_ccall f_7185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7193)
static void C_ccall f_7193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7189)
static void C_ccall f_7189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7019)
static void C_fcall f_7019(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7047)
static void C_ccall f_7047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7050)
static void C_ccall f_7050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7053)
static void C_ccall f_7053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7056)
static void C_ccall f_7056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7059)
static void C_ccall f_7059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7118)
static void C_ccall f_7118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14462)
static void C_ccall f_14462(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14478)
static void C_ccall f_14478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14481)
static void C_ccall f_14481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14484)
static void C_fcall f_14484(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14487)
static void C_fcall f_14487(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14498)
static void C_ccall f_14498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14456)
static void C_ccall f_14456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7491)
static void C_ccall f_7491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14317)
static void C_ccall f_14317(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14356)
static void C_ccall f_14356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14330)
static void C_fcall f_14330(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14311)
static void C_ccall f_14311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7494)
static void C_ccall f_7494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13899)
static void C_ccall f_13899(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13903)
static void C_ccall f_13903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13915)
static void C_ccall f_13915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13973)
static void C_ccall f_13973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13976)
static void C_ccall f_13976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13979)
static void C_ccall f_13979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14191)
static void C_ccall f_14191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14129)
static void C_ccall f_14129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14163)
static void C_ccall f_14163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14138)
static void C_fcall f_14138(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14149)
static void C_ccall f_14149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14145)
static void C_ccall f_14145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13988)
static void C_fcall f_13988(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14066)
static void C_ccall f_14066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14107)
static void C_ccall f_14107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14111)
static void C_ccall f_14111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14115)
static void C_ccall f_14115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14070)
static void C_ccall f_14070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14074)
static void C_ccall f_14074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14101)
static void C_ccall f_14101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14077)
static void C_fcall f_14077(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13991)
static void C_fcall f_13991(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14063)
static void C_ccall f_14063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14005)
static void C_ccall f_14005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14007)
static void C_fcall f_14007(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14055)
static void C_ccall f_14055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14026)
static void C_ccall f_14026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14043)
static void C_ccall f_14043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14029)
static void C_fcall f_14029(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14022)
static void C_ccall f_14022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13994)
static void C_ccall f_13994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13924)
static void C_fcall f_13924(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13934)
static void C_ccall f_13934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13940)
static void C_ccall f_13940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13912)
static void C_ccall f_13912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13860)
static void C_ccall f_13860(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13877)
static void C_ccall f_13877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13893)
static void C_ccall f_13893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13871)
static void C_fcall f_13871(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13854)
static void C_ccall f_13854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7497)
static void C_ccall f_7497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13778)
static void C_ccall f_13778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7500)
static void C_ccall f_7500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13754)
static void C_ccall f_13754(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13766)
static void C_ccall f_13766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13762)
static void C_ccall f_13762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13740)
static void C_ccall f_13740(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13748)
static void C_ccall f_13748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13734)
static void C_ccall f_13734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7503)
static void C_ccall f_7503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13726)
static void C_ccall f_13726(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11293)
static void C_ccall f_11293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11296)
static void C_ccall f_11296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11462)
static void C_ccall f_11462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11458)
static void C_ccall f_11458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11448)
static void C_fcall f_11448(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11303)
static void C_ccall f_11303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11307)
static void C_ccall f_11307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11310)
static void C_fcall f_11310(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11321)
static void C_ccall f_11321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11329)
static void C_ccall f_11329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11401)
static void C_ccall f_11401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11409)
static void C_ccall f_11409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11405)
static void C_ccall f_11405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11397)
static void C_ccall f_11397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11393)
static void C_ccall f_11393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11365)
static void C_ccall f_11365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11361)
static void C_ccall f_11361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11325)
static void C_ccall f_11325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7940)
static void C_ccall f_7940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13712)
static void C_ccall f_13712(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7943)
static void C_ccall f_7943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13683)
static void C_ccall f_13683(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13687)
static void C_ccall f_13687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7946)
static void C_ccall f_7946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13680)
static void C_ccall f_13680(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7949)
static void C_ccall f_7949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13538)
static void C_ccall f_13538(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11475)
static void C_ccall f_11475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11607)
static void C_ccall f_11607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11478)
static void C_ccall f_11478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11489)
static void C_ccall f_11489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11497)
static void C_ccall f_11497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11521)
static void C_ccall f_11521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11524)
static void C_fcall f_11524(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11532)
static void C_ccall f_11532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11540)
static void C_ccall f_11540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11560)
static void C_ccall f_11560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11556)
static void C_ccall f_11556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11536)
static void C_ccall f_11536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11528)
static void C_ccall f_11528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11517)
static void C_ccall f_11517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11493)
static void C_ccall f_11493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11469)
static void C_ccall f_11469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12448)
static void C_ccall f_12448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12451)
static void C_ccall f_12451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12454)
static void C_ccall f_12454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12457)
static void C_ccall f_12457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12460)
static void C_ccall f_12460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12463)
static void C_ccall f_12463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12466)
static void C_ccall f_12466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12469)
static void C_ccall f_12469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12472)
static void C_ccall f_12472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12475)
static void C_ccall f_12475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12478)
static void C_ccall f_12478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12603)
static void C_ccall f_12603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12606)
static void C_ccall f_12606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12609)
static void C_ccall f_12609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13532)
static void C_ccall f_13532(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_13532)
static void C_ccall f_13532r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_13086)
static void C_ccall f_13086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13089)
static void C_ccall f_13089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13367)
static void C_fcall f_13367(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13475)
static void C_ccall f_13475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13387)
static void C_fcall f_13387(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13396)
static void C_fcall f_13396(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13400)
static void C_ccall f_13400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13404)
static void C_ccall f_13404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13412)
static void C_fcall f_13412(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13408)
static void C_ccall f_13408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13377)
static void C_ccall f_13377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13092)
static void C_ccall f_13092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13095)
static void C_ccall f_13095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13098)
static void C_ccall f_13098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13101)
static void C_ccall f_13101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13104)
static void C_ccall f_13104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13361)
static void C_ccall f_13361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13260)
static void C_fcall f_13260(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13267)
static void C_ccall f_13267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13269)
static void C_fcall f_13269(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13341)
static void C_ccall f_13341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13293)
static void C_fcall f_13293(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13296)
static void C_ccall f_13296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13317)
static void C_ccall f_13317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13283)
static void C_ccall f_13283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13107)
static void C_ccall f_13107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13249)
static void C_ccall f_13249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13237)
static void C_ccall f_13237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13233)
static void C_ccall f_13233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13114)
static void C_fcall f_13114(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13071)
static void C_ccall f_13071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13530)
static void C_ccall f_13530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13061)
static void C_ccall f_13061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12724)
static void C_ccall f_12724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13065)
static void C_ccall f_13065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13003)
static void C_ccall f_13003(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_13003)
static void C_ccall f_13003r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_13021)
static void C_fcall f_13021(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13031)
static void C_ccall f_13031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13007)
static void C_ccall f_13007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12994)
static void C_ccall f_12994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12702)
static void C_ccall f_12702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12998)
static void C_ccall f_12998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12988)
static void C_ccall f_12988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12684)
static void C_ccall f_12684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12979)
static void C_ccall f_12979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12693)
static void C_ccall f_12693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12983)
static void C_ccall f_12983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12916)
static void C_ccall f_12916(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_12916)
static void C_ccall f_12916r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_12941)
static void C_fcall f_12941(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12649)
static void C_ccall f_12649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12929)
static void C_ccall f_12929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12748)
static void C_ccall f_12748(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_12748)
static void C_ccall f_12748r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_12867)
static void C_fcall f_12867(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12862)
static void C_fcall f_12862(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12750)
static void C_fcall f_12750(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12857)
static void C_ccall f_12857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12861)
static void C_ccall f_12861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12853)
static void C_ccall f_12853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12821)
static void C_fcall f_12821(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12846)
static void C_ccall f_12846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12850)
static void C_ccall f_12850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12831)
static void C_ccall f_12831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12810)
static void C_ccall f_12810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12780)
static void C_fcall f_12780(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12752)
static void C_fcall f_12752(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12729)
static void C_ccall f_12729(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12734)
static void C_ccall f_12734(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12739)
static void C_ccall f_12739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12707)
static void C_fcall f_12707(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12711)
static void C_ccall f_12711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12663)
static void C_fcall f_12663(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12667)
static void C_ccall f_12667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12654)
static void C_fcall f_12654(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12658)
static void C_ccall f_12658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12642)
static void C_ccall f_12642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12639)
static void C_ccall f_12639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12625)
static void C_ccall f_12625(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12630)
static void C_ccall f_12630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12611)
static void C_ccall f_12611(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12616)
static void C_ccall f_12616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12594)
static void C_ccall f_12594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12599)
static void C_ccall f_12599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12537)
static void C_ccall f_12537(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_12537)
static void C_ccall f_12537r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_12570)
static void C_fcall f_12570(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12550)
static void C_fcall f_12550(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12558)
static void C_ccall f_12558(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12541)
static void C_ccall f_12541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12480)
static void C_ccall f_12480(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_12480)
static void C_ccall f_12480r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_12513)
static void C_fcall f_12513(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12493)
static void C_fcall f_12493(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12501)
static void C_ccall f_12501(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12484)
static void C_ccall f_12484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12401)
static void C_ccall f_12401(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12444)
static void C_ccall f_12444(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12407)
static void C_ccall f_12407(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12413)
static void C_ccall f_12413(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12439)
static void C_ccall f_12439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12443)
static void C_ccall f_12443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12419)
static void C_ccall f_12419(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12437)
static void C_ccall f_12437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12434)
static void C_ccall f_12434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12430)
static void C_ccall f_12430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12423)
static void C_ccall f_12423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12386)
static void C_ccall f_12386(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12391)
static void C_ccall f_12391(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12358)
static void C_ccall f_12358(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12363)
static void C_ccall f_12363(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12330)
static void C_ccall f_12330(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12335)
static void C_ccall f_12335(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12302)
static void C_ccall f_12302(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12307)
static void C_ccall f_12307(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12274)
static void C_ccall f_12274(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_12279)
static void C_ccall f_12279(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12246)
static void C_ccall f_12246(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_12251)
static void C_ccall f_12251(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12218)
static void C_ccall f_12218(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_12223)
static void C_ccall f_12223(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12190)
static void C_ccall f_12190(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12195)
static void C_ccall f_12195(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12162)
static void C_ccall f_12162(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12167)
static void C_ccall f_12167(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12134)
static void C_ccall f_12134(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12139)
static void C_ccall f_12139(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12111)
static void C_ccall f_12111(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12116)
static void C_ccall f_12116(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12115)
static void C_ccall f_12115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12092)
static void C_ccall f_12092(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12097)
static void C_ccall f_12097(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12037)
static void C_ccall f_12037(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12044)
static void C_ccall f_12044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12047)
static void C_ccall f_12047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12071)
static void C_ccall f_12071(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12051)
static void C_ccall f_12051(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12041)
static void C_ccall f_12041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11990)
static void C_ccall f_11990(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11997)
static void C_ccall f_11997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12000)
static void C_ccall f_12000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12020)
static void C_ccall f_12020(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12004)
static void C_ccall f_12004(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11967)
static void C_ccall f_11967(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11972)
static void C_ccall f_11972(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11971)
static void C_ccall f_11971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11948)
static void C_ccall f_11948(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11953)
static void C_ccall f_11953(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11925)
static void C_ccall f_11925(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11930)
static void C_ccall f_11930(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11929)
static void C_ccall f_11929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11906)
static void C_ccall f_11906(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11911)
static void C_ccall f_11911(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11887)
static void C_ccall f_11887(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11892)
static void C_ccall f_11892(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11891)
static void C_ccall f_11891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11872)
static void C_ccall f_11872(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11877)
static void C_ccall f_11877(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11853)
static void C_ccall f_11853(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11858)
static void C_ccall f_11858(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11857)
static void C_ccall f_11857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11838)
static void C_ccall f_11838(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11843)
static void C_ccall f_11843(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11819)
static void C_ccall f_11819(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11824)
static void C_ccall f_11824(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11804)
static void C_ccall f_11804(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11809)
static void C_ccall f_11809(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11786)
static void C_ccall f_11786(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11794)
static void C_ccall f_11794(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11790)
static void C_ccall f_11790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11620)
static void C_ccall f_11620(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11620)
static void C_ccall f_11620r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11783)
static void C_ccall f_11783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11624)
static void C_ccall f_11624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11780)
static void C_ccall f_11780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11627)
static void C_ccall f_11627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11777)
static void C_ccall f_11777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11630)
static void C_ccall f_11630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11774)
static void C_ccall f_11774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11633)
static void C_ccall f_11633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11771)
static void C_ccall f_11771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11636)
static void C_ccall f_11636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11768)
static void C_ccall f_11768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11639)
static void C_ccall f_11639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11645)
static void C_ccall f_11645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11738)
static void C_ccall f_11738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11742)
static void C_ccall f_11742(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_11711)
static void C_ccall f_11711(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_11680)
static void C_ccall f_11680(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_11649)
static void C_ccall f_11649(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_11275)
static void C_fcall f_11275(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11115)
static void C_fcall f_11115(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11150)
static void C_fcall f_11150(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_11160)
static void C_fcall f_11160(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11164)
static void C_ccall f_11164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11167)
static void C_ccall f_11167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11228)
static void C_ccall f_11228(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11219)
static void C_ccall f_11219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11170)
static void C_ccall f_11170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11189)
static void C_ccall f_11189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11196)
static void C_ccall f_11196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11173)
static void C_ccall f_11173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11179)
static void C_ccall f_11179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11148)
static void C_ccall f_11148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11123)
static void C_fcall f_11123(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11122)
static void C_ccall f_11122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11283)
static void C_fcall f_11283(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10861)
static void C_ccall f_10861(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10883)
static void C_ccall f_10883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10898)
static void C_ccall f_10898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10901)
static void C_fcall f_10901(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11077)
static void C_ccall f_11077(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11071)
static void C_ccall f_11071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10904)
static void C_ccall f_10904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11053)
static void C_ccall f_11053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10907)
static void C_fcall f_10907(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10910)
static void C_ccall f_10910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11046)
static void C_ccall f_11046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11034)
static void C_ccall f_11034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10930)
static void C_fcall f_10930(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10937)
static void C_ccall f_10937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11007)
static void C_ccall f_11007(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10993)
static void C_ccall f_10993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11001)
static void C_ccall f_11001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10940)
static void C_ccall f_10940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10979)
static void C_ccall f_10979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10943)
static void C_fcall f_10943(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10972)
static void C_ccall f_10972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10949)
static void C_ccall f_10949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10952)
static void C_ccall f_10952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10956)
static void C_ccall f_10956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10917)
static void C_fcall f_10917(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10920)
static void C_ccall f_10920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10730)
static void C_fcall f_10730(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10739)
static void C_fcall f_10739(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10687)
static void C_ccall f_10687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10693)
static void C_fcall f_10693(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10756)
static void C_ccall f_10756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10842)
static void C_ccall f_10842(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10829)
static void C_ccall f_10829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10837)
static void C_ccall f_10837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10759)
static void C_ccall f_10759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10763)
static void C_ccall f_10763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10806)
static void C_ccall f_10806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10768)
static void C_ccall f_10768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10734)
static void C_ccall f_10734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10629)
static void C_ccall f_10629(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10636)
static void C_ccall f_10636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10667)
static void C_ccall f_10667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10663)
static void C_ccall f_10663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10655)
static void C_ccall f_10655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10538)
static void C_ccall f_10538(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10545)
static void C_ccall f_10545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10613)
static void C_ccall f_10613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10556)
static void C_fcall f_10556(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10583)
static void C_ccall f_10583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10567)
static void C_ccall f_10567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10472)
static void C_ccall f_10472(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10483)
static void C_ccall f_10483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10486)
static void C_fcall f_10486(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10493)
static void C_ccall f_10493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10466)
static void C_ccall f_10466(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9920)
static void C_ccall f_9920(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9951)
static void C_ccall f_9951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10415)
static void C_ccall f_10415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10421)
static void C_ccall f_10421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9962)
static void C_ccall f_9962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9847)
static void C_fcall f_9847(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9872)
static void C_ccall f_9872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9807)
static void C_fcall f_9807(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9820)
static void C_fcall f_9820(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9861)
static void C_ccall f_9861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9966)
static void C_ccall f_9966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10403)
static void C_ccall f_10403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10399)
static void C_fcall f_10399(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10395)
static void C_ccall f_10395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9969)
static void C_ccall f_9969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10189)
static void C_fcall f_10189(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10298)
static void C_ccall f_10298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10363)
static void C_ccall f_10363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10305)
static void C_fcall f_10305(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10309)
static void C_ccall f_10309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10313)
static void C_ccall f_10313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10355)
static void C_ccall f_10355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10351)
static void C_ccall f_10351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10329)
static void C_ccall f_10329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10192)
static void C_fcall f_10192(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10195)
static void C_fcall f_10195(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10094)
static void C_ccall f_10094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10177)
static void C_ccall f_10177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10144)
static void C_ccall f_10144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10170)
static void C_ccall f_10170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10152)
static void C_ccall f_10152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10100)
static void C_fcall f_10100(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10140)
static void C_ccall f_10140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10082)
static void C_ccall f_10082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10053)
static void C_ccall f_10053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10075)
static void C_ccall f_10075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10061)
static void C_ccall f_10061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10015)
static void C_fcall f_10015(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9972)
static void C_fcall f_9972(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9983)
static void C_ccall f_9983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9987)
static void C_ccall f_9987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9991)
static void C_ccall f_9991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9995)
static void C_ccall f_9995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9979)
static void C_ccall f_9979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9939)
static void C_fcall f_9939(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9934)
static void C_fcall f_9934(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9929)
static void C_fcall f_9929(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9761)
static void C_ccall f_9761(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9772)
static void C_ccall f_9772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9787)
static void C_ccall f_9787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9723)
static void C_ccall f_9723(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9734)
static void C_ccall f_9734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9749)
static void C_ccall f_9749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9656)
static void C_ccall f_9656(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9676)
static void C_fcall f_9676(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9686)
static void C_ccall f_9686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9699)
static void C_ccall f_9699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9667)
static void C_ccall f_9667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9674)
static void C_ccall f_9674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9463)
static void C_ccall f_9463(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9523)
static void C_fcall f_9523(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9533)
static void C_ccall f_9533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9647)
static void C_ccall f_9647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9612)
static void C_ccall f_9612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9604)
static void C_ccall f_9604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9575)
static void C_ccall f_9575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9553)
static void C_ccall f_9553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9556)
static void C_ccall f_9556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9544)
static void C_ccall f_9544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9470)
static void C_ccall f_9470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9521)
static void C_ccall f_9521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9513)
static void C_ccall f_9513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9473)
static void C_ccall f_9473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9484)
static void C_ccall f_9484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9488)
static void C_ccall f_9488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9480)
static void C_ccall f_9480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9321)
static void C_ccall f_9321(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9369)
static void C_fcall f_9369(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9379)
static void C_ccall f_9379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9390)
static void C_ccall f_9390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9427)
static void C_ccall f_9427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9402)
static void C_ccall f_9402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9393)
static void C_ccall f_9393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9331)
static void C_ccall f_9331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9367)
static void C_ccall f_9367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9338)
static void C_ccall f_9338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8970)
static void C_ccall f_8970(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8977)
static void C_ccall f_8977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9211)
static void C_fcall f_9211(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9221)
static void C_ccall f_9221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9232)
static void C_ccall f_9232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9244)
static void C_fcall f_9244(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9247)
static void C_ccall f_9247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9235)
static void C_ccall f_9235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8983)
static void C_ccall f_8983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9209)
static void C_ccall f_9209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9205)
static void C_ccall f_9205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9151)
static void C_fcall f_9151(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9116)
static void C_fcall f_9116(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9132)
static void C_fcall f_9132(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9087)
static void C_fcall f_9087(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9011)
static void C_ccall f_9011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9014)
static void C_ccall f_9014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9078)
static void C_ccall f_9078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9074)
static void C_ccall f_9074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8994)
static void C_fcall f_8994(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9005)
static void C_ccall f_9005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9001)
static void C_ccall f_9001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8923)
static void C_ccall f_8923(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8956)
static void C_ccall f_8956(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8938)
static void C_ccall f_8938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8950)
static void C_ccall f_8950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8541)
static void C_ccall f_8541(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8750)
static void C_fcall f_8750(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8760)
static void C_ccall f_8760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8771)
static void C_ccall f_8771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8891)
static void C_ccall f_8891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8870)
static void C_ccall f_8870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8849)
static void C_ccall f_8849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8828)
static void C_ccall f_8828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8807)
static void C_ccall f_8807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8786)
static void C_ccall f_8786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8774)
static void C_ccall f_8774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8551)
static void C_ccall f_8551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8554)
static void C_fcall f_8554(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8717)
static void C_fcall f_8717(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8557)
static void C_fcall f_8557(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8708)
static void C_ccall f_8708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8688)
static void C_ccall f_8688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8560)
static void C_fcall f_8560(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8653)
static void C_ccall f_8653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8670)
static void C_ccall f_8670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8563)
static void C_fcall f_8563(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8602)
static void C_ccall f_8602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8636)
static void C_ccall f_8636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8620)
static void C_ccall f_8620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8605)
static void C_fcall f_8605(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8570)
static void C_fcall f_8570(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8581)
static void C_ccall f_8581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8585)
static void C_ccall f_8585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8577)
static void C_ccall f_8577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8459)
static void C_ccall f_8459(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8463)
static void C_ccall f_8463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8481)
static void C_ccall f_8481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8299)
static void C_fcall f_8299(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8307)
static void C_fcall f_8307(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8317)
static void C_ccall f_8317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8355)
static void C_ccall f_8355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8358)
static void C_ccall f_8358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8361)
static void C_ccall f_8361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8436)
static void C_fcall f_8436(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8446)
static void C_ccall f_8446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8364)
static void C_ccall f_8364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8367)
static void C_ccall f_8367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8370)
static void C_ccall f_8370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8390)
static void C_fcall f_8390(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8400)
static void C_ccall f_8400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8403)
static void C_ccall f_8403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8406)
static void C_ccall f_8406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8373)
static void C_ccall f_8373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8376)
static void C_ccall f_8376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8293)
static void C_fcall f_8293(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8287)
static void C_fcall f_8287(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8281)
static void C_fcall f_8281(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8210)
static void C_fcall f_8210(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8251)
static void C_ccall f_8251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8255)
static void C_ccall f_8255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8259)
static void C_ccall f_8259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8263)
static void C_ccall f_8263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8267)
static void C_ccall f_8267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8271)
static void C_ccall f_8271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8275)
static void C_ccall f_8275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8279)
static void C_ccall f_8279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8212)
static void C_fcall f_8212(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8218)
static void C_fcall f_8218(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8240)
static void C_ccall f_8240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8229)
static void C_ccall f_8229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8059)
static void C_fcall f_8059(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8074)
static void C_fcall f_8074(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8087)
static void C_ccall f_8087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8047)
static void C_ccall f_8047(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8035)
static void C_ccall f_8035(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8023)
static void C_ccall f_8023(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8017)
static void C_fcall f_8017(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8011)
static void C_ccall f_8011(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7999)
static void C_ccall f_7999(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7987)
static void C_ccall f_7987(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7975)
static void C_ccall f_7975(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7963)
static void C_ccall f_7963(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7957)
static void C_fcall f_7957(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7921)
static void C_ccall f_7921(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7915)
static void C_ccall f_7915(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7868)
static void C_ccall f_7868(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7872)
static void C_ccall f_7872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7888)
static void C_ccall f_7888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7897)
static void C_ccall f_7897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7875)
static void C_ccall f_7875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7859)
static void C_ccall f_7859(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7863)
static void C_ccall f_7863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7680)
static void C_ccall f_7680(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7680)
static void C_ccall f_7680r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7833)
static void C_fcall f_7833(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7846)
static void C_ccall f_7846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7828)
static void C_ccall f_7828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7683)
static void C_fcall f_7683(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7825)
static void C_ccall f_7825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7809)
static void C_ccall f_7809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7802)
static void C_ccall f_7802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7798)
static void C_ccall f_7798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7711)
static void C_ccall f_7711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7719)
static void C_fcall f_7719(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7729)
static void C_ccall f_7729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7732)
static void C_ccall f_7732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7714)
static void C_ccall f_7714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7509)
static void C_ccall f_7509(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7515)
static void C_ccall f_7515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7518)
static void C_fcall f_7518(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5318)
static void C_ccall f_5318(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5331)
static void C_ccall f_5331(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5338)
static void C_fcall f_5338(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5345)
static void C_ccall f_5345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5324)
static void C_ccall f_5324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7522)
static void C_ccall f_7522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7556)
static void C_ccall f_7556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7649)
static void C_fcall f_7649(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7659)
static void C_fcall f_7659(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7562)
static void C_ccall f_7562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7619)
static void C_fcall f_7619(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7629)
static void C_fcall f_7629(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7570)
static void C_ccall f_7570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7584)
static void C_ccall f_7584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7588)
static void C_ccall f_7588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7592)
static void C_ccall f_7592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7596)
static void C_ccall f_7596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7603)
static void C_ccall f_7603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7580)
static void C_ccall f_7580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7573)
static void C_ccall f_7573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7525)
static void C_ccall f_7525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6445)
static void C_ccall f_6445(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6458)
static void C_ccall f_6458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6508)
static void C_ccall f_6508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6605)
static void C_ccall f_6605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6673)
static void C_ccall f_6673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6930)
static void C_ccall f_6930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6680)
static void C_fcall f_6680(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6918)
static void C_ccall f_6918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6869)
static void C_ccall f_6869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6875)
static void C_ccall f_6875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6899)
static void C_ccall f_6899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6895)
static void C_ccall f_6895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6883)
static void C_ccall f_6883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6683)
static void C_fcall f_6683(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6845)
static void C_ccall f_6845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6849)
static void C_ccall f_6849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6686)
static void C_fcall f_6686(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6822)
static void C_ccall f_6822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6826)
static void C_ccall f_6826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6689)
static void C_fcall f_6689(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6799)
static void C_ccall f_6799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6803)
static void C_ccall f_6803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6692)
static void C_fcall f_6692(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6724)
static void C_ccall f_6724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6742)
static void C_ccall f_6742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6760)
static void C_ccall f_6760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6778)
static void C_ccall f_6778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6695)
static void C_fcall f_6695(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6699)
static void C_ccall f_6699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6609)
static void C_ccall f_6609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6613)
static void C_ccall f_6613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6617)
static void C_ccall f_6617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6512)
static void C_ccall f_6512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6516)
static void C_ccall f_6516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6520)
static void C_ccall f_6520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6539)
static void C_ccall f_6539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6543)
static void C_ccall f_6543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6523)
static void C_fcall f_6523(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6527)
static void C_ccall f_6527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6462)
static void C_ccall f_6462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6466)
static void C_ccall f_6466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6470)
static void C_ccall f_6470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6452)
static void C_fcall f_6452(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6267)
static void C_fcall f_6267(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6279)
static void C_fcall f_6279(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6298)
static void C_ccall f_6298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6316)
static void C_fcall f_6316(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6348)
static void C_ccall f_6348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6351)
static void C_fcall f_6351(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6344)
static void C_ccall f_6344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6330)
static void C_ccall f_6330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6301)
static void C_ccall f_6301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6246)
static void C_fcall f_6246(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6253)
static void C_ccall f_6253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6256)
static void C_ccall f_6256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6262)
static void C_ccall f_6262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6181)
static void C_fcall f_6181(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6190)
static void C_fcall f_6190(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6213)
static void C_ccall f_6213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6203)
static void C_fcall f_6203(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6137)
static void C_fcall f_6137(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6125)
static void C_fcall f_6125(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6023)
static void C_fcall f_6023(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5975)
static void C_fcall f_5975(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5356)
static void C_fcall f_5356(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_5360)
static void C_ccall f_5360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5363)
static void C_ccall f_5363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5789)
static void C_ccall f_5789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5785)
static void C_ccall f_5785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5781)
static void C_ccall f_5781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5366)
static void C_fcall f_5366(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5489)
static void C_ccall f_5489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4722)
static void C_ccall f_4722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5495)
static void C_fcall f_5495(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4738)
static void C_ccall f_4738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5583)
static void C_fcall f_5583(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5653)
static void C_ccall f_5653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4754)
static void C_ccall f_4754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5656)
static void C_fcall f_5656(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4786)
static void C_ccall f_4786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5734)
static void C_fcall f_5734(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5760)
static void C_ccall f_5760(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5754)
static void C_ccall f_5754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5743)
static void C_ccall f_5743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5685)
static void C_fcall f_5685(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5695)
static void C_ccall f_5695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5721)
static void C_ccall f_5721(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5715)
static void C_ccall f_5715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5698)
static void C_ccall f_5698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5708)
static void C_ccall f_5708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5701)
static void C_fcall f_5701(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5662)
static void C_ccall f_5662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5671)
static void C_ccall f_5671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5665)
static void C_fcall f_5665(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5589)
static void C_ccall f_5589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5607)
static void C_fcall f_5607(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5640)
static void C_ccall f_5640(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5626)
static void C_ccall f_5626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5634)
static void C_ccall f_5634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5617)
static void C_ccall f_5617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5592)
static void C_ccall f_5592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5504)
static void C_ccall f_5504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5526)
static void C_fcall f_5526(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5573)
static void C_ccall f_5573(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5559)
static void C_ccall f_5559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5567)
static void C_ccall f_5567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5539)
static void C_ccall f_5539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5542)
static void C_fcall f_5542(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5507)
static void C_ccall f_5507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5524)
static void C_ccall f_5524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5510)
static void C_fcall f_5510(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5381)
static void C_ccall f_5381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5439)
static void C_ccall f_5439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5442)
static void C_ccall f_5442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5463)
static void C_ccall f_5463(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5474)
static void C_ccall f_5474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5453)
static void C_ccall f_5453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5387)
static void C_ccall f_5387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5397)
static void C_ccall f_5397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5433)
static void C_ccall f_5433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5403)
static void C_ccall f_5403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5418)
static void C_ccall f_5418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5422)
static void C_ccall f_5422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5426)
static void C_ccall f_5426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5410)
static void C_ccall f_5410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5252)
static void C_fcall f_5252(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5254)
static void C_ccall f_5254(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5302)
static void C_ccall f_5302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5258)
static void C_ccall f_5258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5261)
static void C_fcall f_5261(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5266)
static void C_fcall f_5266(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5287)
static void C_ccall f_5287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5244)
static void C_fcall f_5244(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5246)
static void C_ccall f_5246(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_5036)
static void C_fcall f_5036(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_5053)
static void C_ccall f_5053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5057)
static void C_ccall f_5057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5003)
static void C_fcall f_5003(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_5010)
static void C_ccall f_5010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4954)
static void C_ccall f_4954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4961)
static void C_ccall f_4961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5019)
static void C_ccall f_5019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5242)
static void C_ccall f_5242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5219)
static void C_ccall f_5219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5235)
static void C_ccall f_5235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5081)
static void C_ccall f_5081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5084)
static void C_ccall f_5084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5108)
static void C_ccall f_5108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5165)
static void C_ccall f_5165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5171)
static void C_ccall f_5171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5180)
static void C_ccall f_5180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5189)
static void C_ccall f_5189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5198)
static void C_ccall f_5198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5207)
static void C_ccall f_5207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5159)
static void C_ccall f_5159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5114)
static void C_ccall f_5114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5120)
static void C_ccall f_5120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5126)
static void C_ccall f_5126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5132)
static void C_ccall f_5132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5138)
static void C_ccall f_5138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5144)
static void C_ccall f_5144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4985)
static void C_fcall f_4985(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_4992)
static void C_ccall f_4992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4975)
static void C_fcall f_4975(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_4963)
static void C_fcall f_4963(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_4931)
static void C_fcall f_4931(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_4938)
static void C_ccall f_4938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4945)
static void C_ccall f_4945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4915)
static void C_fcall f_4915(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4922)
static void C_ccall f_4922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4929)
static void C_ccall f_4929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4903)
static void C_fcall f_4903(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4885)
static void C_fcall f_4885(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4867)
static void C_fcall f_4867(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4852)
static void C_fcall f_4852(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4846)
static void C_fcall f_4846(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_4834)
static void C_fcall f_4834(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4816)
static void C_fcall f_4816(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4795)
static void C_fcall f_4795(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_4763)
static void C_fcall f_4763(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4770)
static void C_ccall f_4770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4705)
static void C_fcall f_4705(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_4713)
static void C_ccall f_4713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4695)
static void C_fcall f_4695(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4703)
static void C_ccall f_4703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4689)
static void C_fcall f_4689(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4677)
static void C_fcall f_4677(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4653)
static void C_fcall f_4653(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_4566)
static void C_fcall f_4566(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4545)
static void C_fcall f_4545(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_4535)
static void C_fcall f_4535(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4523)
static void C_fcall f_4523(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4494)
static void C_ccall f_4494(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_4482)
static void C_fcall f_4482(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4464)
static void C_fcall f_4464(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4446)
static void C_fcall f_4446(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4425)
static void C_ccall f_4425(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_4419)
static void C_ccall f_4419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4413)
static void C_ccall f_4413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4394)
static void C_ccall f_4394(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_4394)
static void C_ccall f_4394r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_4375)
static void C_ccall f_4375(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_4375)
static void C_ccall f_4375r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_4369)
static void C_ccall f_4369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4329)
static void C_ccall f_4329(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_4329)
static void C_ccall f_4329r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_4310)
static void C_ccall f_4310(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_4310)
static void C_ccall f_4310r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_4266)
static void C_ccall f_4266(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_4266)
static void C_ccall f_4266r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_4260)
static void C_ccall f_4260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4254)
static void C_ccall f_4254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4248)
static void C_ccall f_4248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4242)
static void C_ccall f_4242(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_4242)
static void C_ccall f_4242r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_4219)
static void C_ccall f_4219(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_4236)
static void C_ccall f_4236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4161)
static void C_ccall f_4161(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_4161)
static void C_ccall f_4161r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_4213)
static void C_ccall f_4213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4197)
static void C_ccall f_4197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4178)
static void C_ccall f_4178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4155)
static void C_ccall f_4155(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_4067)
static void C_ccall f_4067(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_4067)
static void C_ccall f_4067r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_4113)
static void C_fcall f_4113(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4061)
static void C_ccall f_4061(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_4002)
static void C_ccall f_4002(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_4002)
static void C_ccall f_4002r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_4015)
static void C_fcall f_4015(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_4051)
static void C_ccall f_4051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3996)
static void C_ccall f_3996(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_3996)
static void C_ccall f_3996r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_3901)
static void C_ccall f_3901(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_3901)
static void C_ccall f_3901r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_3905)
static void C_ccall f_3905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3908)
static void C_ccall f_3908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3920)
static void C_fcall f_3920(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3942)
static void C_ccall f_3942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3895)
static void C_ccall f_3895(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3889)
static void C_ccall f_3889(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3883)
static void C_ccall f_3883(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3877)
static void C_ccall f_3877(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3871)
static void C_ccall f_3871(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3811)
static void C_ccall f_3811(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_3811)
static void C_ccall f_3811r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_3823)
static void C_fcall f_3823(C_word t0,C_word t1) C_noret;
C_noret_decl(f_3818)
static void C_fcall f_3818(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3813)
static void C_fcall f_3813(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_3792)
static void C_ccall f_3792(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_3792)
static void C_ccall f_3792r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_3786)
static void C_ccall f_3786(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_3780)
static void C_ccall f_3780(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3698)
static void C_ccall f_3698(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_3698)
static void C_ccall f_3698r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_3712)
static void C_ccall f_3712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3679)
static void C_ccall f_3679(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_3679)
static void C_ccall f_3679r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_3666)
static void C_fcall f_3666(C_word t0,C_word t1) C_noret;
C_noret_decl(f_3656)
static void C_fcall f_3656(C_word t0,C_word t1) C_noret;
C_noret_decl(f_3645)
static void C_fcall f_3645(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3638)
static void C_fcall f_3638(C_word t0,C_word t1) C_noret;
C_noret_decl(f_3627)
static void C_fcall f_3627(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3589)
static void C_fcall f_3589(C_word t0,C_word t1) C_noret;
C_noret_decl(f_3582)
static void C_fcall f_3582(C_word t0,C_word t1) C_noret;
C_noret_decl(f_3507)
static void C_fcall f_3507(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3473)
static void C_fcall f_3473(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_3446)
static void C_fcall f_3446(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_3417)
static void C_ccall f_3417(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_3417)
static void C_ccall f_3417r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_3426)
static void C_ccall f_3426(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3431)
static void C_ccall f_3431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3406)
static void C_ccall f_3406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3411)
static void C_ccall f_3411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3366)
static void C_ccall f_3366(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_3366)
static void C_ccall f_3366r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_3396)
static void C_ccall f_3396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3318)
static void C_ccall f_3318(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3352)
static void C_ccall f_3352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3298)
static void C_ccall f_3298(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3278)
static void C_ccall f_3278(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3264)
static void C_ccall f_3264(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3254)
static void C_ccall f_3254(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3244)
static void C_ccall f_3244(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3234)
static void C_ccall f_3234(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3224)
static void C_ccall f_3224(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_2927)
static void C_ccall f_2927(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_2937)
static void C_ccall f_2937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3188)
static void C_ccall f_3188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_2940)
static void C_ccall f_2940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_2943)
static void C_ccall f_2943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_2958)
static void C_fcall f_2958(C_word t0,C_word t1) C_noret;
C_noret_decl(f_2968)
static void C_ccall f_2968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_2970)
static void C_fcall f_2970(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_3029)
static void C_ccall f_3029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3039)
static void C_ccall f_3039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3156)
static void C_ccall f_3156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3144)
static void C_ccall f_3144(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3142)
static void C_ccall f_3142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3129)
static void C_ccall f_3129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3083)
static void C_ccall f_3083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3110)
static void C_ccall f_3110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3089)
static void C_ccall f_3089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3023)
static void C_fcall f_3023(C_word t0,C_word t1) C_noret;
C_noret_decl(f_2982)
static void C_fcall f_2982(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_2995)
static void C_fcall f_2995(C_word t0,C_word t1) C_noret;
C_noret_decl(f_3205)
static void C_ccall f_3205(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3196)
static void C_ccall f_3196(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3204)
static void C_ccall f_3204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3207)
static void C_ccall f_3207(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_3207)
static void C_ccall f_3207r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_3215)
static void C_ccall f_3215(C_word c,C_word t0,C_word t1) C_noret;

C_noret_decl(trf_18046)
static void C_fcall trf_18046(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18046(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18046(t0,t1);}

C_noret_decl(trf_17968)
static void C_fcall trf_17968(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17968(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17968(t0,t1,t2);}

C_noret_decl(trf_17780)
static void C_fcall trf_17780(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17780(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17780(t0,t1);}

C_noret_decl(trf_16662)
static void C_fcall trf_16662(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16662(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16662(t0,t1);}

C_noret_decl(trf_16535)
static void C_fcall trf_16535(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16535(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16535(t0,t1,t2);}

C_noret_decl(trf_16233)
static void C_fcall trf_16233(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16233(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16233(t0,t1);}

C_noret_decl(trf_15328)
static void C_fcall trf_15328(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15328(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15328(t0,t1,t2);}

C_noret_decl(trf_15363)
static void C_fcall trf_15363(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15363(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15363(t0,t1);}

C_noret_decl(trf_15387)
static void C_fcall trf_15387(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15387(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15387(t0,t1);}

C_noret_decl(trf_15366)
static void C_fcall trf_15366(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15366(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15366(t0,t1);}

C_noret_decl(trf_15169)
static void C_fcall trf_15169(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15169(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15169(t0,t1);}

C_noret_decl(trf_14987)
static void C_fcall trf_14987(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14987(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14987(t0,t1);}

C_noret_decl(trf_14994)
static void C_fcall trf_14994(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14994(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14994(t0,t1);}

C_noret_decl(trf_14975)
static void C_fcall trf_14975(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14975(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14975(t0,t1);}

C_noret_decl(trf_6993)
static void C_fcall trf_6993(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6993(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6993(t0,t1);}

C_noret_decl(trf_7000)
static void C_fcall trf_7000(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7000(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7000(t0,t1);}

C_noret_decl(trf_7314)
static void C_fcall trf_7314(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7314(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7314(t0,t1,t2);}

C_noret_decl(trf_7337)
static void C_fcall trf_7337(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7337(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7337(t0,t1,t2);}

C_noret_decl(trf_7354)
static void C_fcall trf_7354(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7354(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7354(t0,t1);}

C_noret_decl(trf_7357)
static void C_fcall trf_7357(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7357(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7357(t0,t1);}

C_noret_decl(trf_7360)
static void C_fcall trf_7360(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7360(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7360(t0,t1);}

C_noret_decl(trf_7278)
static void C_fcall trf_7278(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7278(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7278(t0,t1,t2);}

C_noret_decl(trf_7222)
static void C_fcall trf_7222(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7222(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7222(t0,t1,t2);}

C_noret_decl(trf_7238)
static void C_fcall trf_7238(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7238(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7238(t0,t1);}

C_noret_decl(trf_7016)
static void C_fcall trf_7016(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7016(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7016(t0,t1);}

C_noret_decl(trf_7019)
static void C_fcall trf_7019(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7019(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7019(t0,t1);}

C_noret_decl(trf_14484)
static void C_fcall trf_14484(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14484(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14484(t0,t1);}

C_noret_decl(trf_14487)
static void C_fcall trf_14487(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14487(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14487(t0,t1);}

C_noret_decl(trf_14330)
static void C_fcall trf_14330(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14330(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14330(t0,t1);}

C_noret_decl(trf_14138)
static void C_fcall trf_14138(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14138(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14138(t0,t1);}

C_noret_decl(trf_13988)
static void C_fcall trf_13988(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13988(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13988(t0,t1);}

C_noret_decl(trf_14077)
static void C_fcall trf_14077(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14077(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14077(t0,t1);}

C_noret_decl(trf_13991)
static void C_fcall trf_13991(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13991(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13991(t0,t1);}

C_noret_decl(trf_14007)
static void C_fcall trf_14007(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14007(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14007(t0,t1,t2,t3);}

C_noret_decl(trf_14029)
static void C_fcall trf_14029(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14029(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14029(t0,t1);}

C_noret_decl(trf_13924)
static void C_fcall trf_13924(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13924(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13924(t0,t1,t2);}

C_noret_decl(trf_13871)
static void C_fcall trf_13871(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13871(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13871(t0,t1);}

C_noret_decl(trf_11448)
static void C_fcall trf_11448(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11448(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11448(t0,t1);}

C_noret_decl(trf_11310)
static void C_fcall trf_11310(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11310(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11310(t0,t1);}

C_noret_decl(trf_11524)
static void C_fcall trf_11524(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11524(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11524(t0,t1);}

C_noret_decl(trf_13367)
static void C_fcall trf_13367(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13367(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13367(t0,t1,t2);}

C_noret_decl(trf_13387)
static void C_fcall trf_13387(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13387(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13387(t0,t1);}

C_noret_decl(trf_13396)
static void C_fcall trf_13396(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13396(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13396(t0,t1);}

C_noret_decl(trf_13412)
static void C_fcall trf_13412(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13412(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13412(t0,t1);}

C_noret_decl(trf_13260)
static void C_fcall trf_13260(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13260(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13260(t0,t1);}

C_noret_decl(trf_13269)
static void C_fcall trf_13269(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13269(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13269(t0,t1,t2);}

C_noret_decl(trf_13293)
static void C_fcall trf_13293(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13293(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13293(t0,t1);}

C_noret_decl(trf_13114)
static void C_fcall trf_13114(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13114(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13114(t0,t1);}

C_noret_decl(trf_13021)
static void C_fcall trf_13021(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13021(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13021(t0,t1,t2);}

C_noret_decl(trf_12941)
static void C_fcall trf_12941(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12941(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12941(t0,t1);}

C_noret_decl(trf_12867)
static void C_fcall trf_12867(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12867(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12867(t0,t1);}

C_noret_decl(trf_12862)
static void C_fcall trf_12862(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12862(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12862(t0,t1,t2);}

C_noret_decl(trf_12750)
static void C_fcall trf_12750(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12750(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_12750(t0,t1,t2,t3);}

C_noret_decl(trf_12821)
static void C_fcall trf_12821(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12821(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12821(t0,t1,t2);}

C_noret_decl(trf_12780)
static void C_fcall trf_12780(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12780(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12780(t0,t1);}

C_noret_decl(trf_12752)
static void C_fcall trf_12752(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12752(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12752(t0,t1);}

C_noret_decl(trf_12707)
static void C_fcall trf_12707(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12707(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12707(t0,t1);}

C_noret_decl(trf_12663)
static void C_fcall trf_12663(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12663(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_12663(t0,t1,t2,t3);}

C_noret_decl(trf_12654)
static void C_fcall trf_12654(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12654(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12654(t0,t1);}

C_noret_decl(trf_12570)
static void C_fcall trf_12570(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12570(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12570(t0,t1);}

C_noret_decl(trf_12550)
static void C_fcall trf_12550(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12550(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12550(t0,t1);}

C_noret_decl(trf_12513)
static void C_fcall trf_12513(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12513(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12513(t0,t1);}

C_noret_decl(trf_12493)
static void C_fcall trf_12493(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12493(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12493(t0,t1);}

C_noret_decl(trf_11275)
static void C_fcall trf_11275(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11275(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_11275(t0,t1,t2,t3);}

C_noret_decl(trf_11115)
static void C_fcall trf_11115(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11115(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11115(t0,t1);}

C_noret_decl(trf_11150)
static void C_fcall trf_11150(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11150(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_11150(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_11160)
static void C_fcall trf_11160(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11160(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11160(t0,t1);}

C_noret_decl(trf_11123)
static void C_fcall trf_11123(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11123(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11123(t0,t1,t2);}

C_noret_decl(trf_11283)
static void C_fcall trf_11283(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11283(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11283(t0,t1);}

C_noret_decl(trf_10901)
static void C_fcall trf_10901(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10901(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10901(t0,t1);}

C_noret_decl(trf_10907)
static void C_fcall trf_10907(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10907(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10907(t0,t1);}

C_noret_decl(trf_10930)
static void C_fcall trf_10930(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10930(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10930(t0,t1);}

C_noret_decl(trf_10943)
static void C_fcall trf_10943(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10943(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10943(t0,t1);}

C_noret_decl(trf_10917)
static void C_fcall trf_10917(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10917(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10917(t0,t1);}

C_noret_decl(trf_10730)
static void C_fcall trf_10730(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10730(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10730(t0,t1,t2,t3);}

C_noret_decl(trf_10739)
static void C_fcall trf_10739(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10739(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_10739(t0,t1,t2,t3,t4);}

C_noret_decl(trf_10693)
static void C_fcall trf_10693(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10693(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10693(t0,t1);}

C_noret_decl(trf_10556)
static void C_fcall trf_10556(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10556(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10556(t0,t1);}

C_noret_decl(trf_10486)
static void C_fcall trf_10486(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10486(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10486(t0,t1);}

C_noret_decl(trf_9847)
static void C_fcall trf_9847(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9847(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9847(t0,t1,t2);}

C_noret_decl(trf_9807)
static void C_fcall trf_9807(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9807(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9807(t0,t1,t2);}

C_noret_decl(trf_9820)
static void C_fcall trf_9820(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9820(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9820(t0,t1);}

C_noret_decl(trf_10399)
static void C_fcall trf_10399(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10399(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10399(t0,t1);}

C_noret_decl(trf_10189)
static void C_fcall trf_10189(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10189(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10189(t0,t1);}

C_noret_decl(trf_10305)
static void C_fcall trf_10305(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10305(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10305(t0,t1);}

C_noret_decl(trf_10192)
static void C_fcall trf_10192(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10192(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10192(t0,t1);}

C_noret_decl(trf_10195)
static void C_fcall trf_10195(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10195(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10195(t0,t1);}

C_noret_decl(trf_10100)
static void C_fcall trf_10100(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10100(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10100(t0,t1);}

C_noret_decl(trf_10015)
static void C_fcall trf_10015(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10015(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10015(t0,t1);}

C_noret_decl(trf_9972)
static void C_fcall trf_9972(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9972(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9972(t0,t1);}

C_noret_decl(trf_9939)
static void C_fcall trf_9939(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9939(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9939(t0,t1);}

C_noret_decl(trf_9934)
static void C_fcall trf_9934(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9934(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9934(t0,t1);}

C_noret_decl(trf_9929)
static void C_fcall trf_9929(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9929(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_9929(t0,t1,t2,t3,t4);}

C_noret_decl(trf_9676)
static void C_fcall trf_9676(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9676(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9676(t0,t1);}

C_noret_decl(trf_9523)
static void C_fcall trf_9523(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9523(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9523(t0,t1,t2,t3);}

C_noret_decl(trf_9369)
static void C_fcall trf_9369(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9369(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9369(t0,t1,t2);}

C_noret_decl(trf_9211)
static void C_fcall trf_9211(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9211(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9211(t0,t1,t2);}

C_noret_decl(trf_9244)
static void C_fcall trf_9244(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9244(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9244(t0,t1);}

C_noret_decl(trf_9151)
static void C_fcall trf_9151(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9151(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9151(t0,t1);}

C_noret_decl(trf_9116)
static void C_fcall trf_9116(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9116(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9116(t0,t1);}

C_noret_decl(trf_9132)
static void C_fcall trf_9132(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9132(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9132(t0,t1);}

C_noret_decl(trf_9087)
static void C_fcall trf_9087(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9087(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9087(t0,t1);}

C_noret_decl(trf_8994)
static void C_fcall trf_8994(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8994(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8994(t0,t1);}

C_noret_decl(trf_8750)
static void C_fcall trf_8750(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8750(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8750(t0,t1,t2);}

C_noret_decl(trf_8554)
static void C_fcall trf_8554(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8554(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8554(t0,t1);}

C_noret_decl(trf_8717)
static void C_fcall trf_8717(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8717(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8717(t0,t1);}

C_noret_decl(trf_8557)
static void C_fcall trf_8557(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8557(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8557(t0,t1);}

C_noret_decl(trf_8560)
static void C_fcall trf_8560(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8560(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8560(t0,t1);}

C_noret_decl(trf_8563)
static void C_fcall trf_8563(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8563(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8563(t0,t1);}

C_noret_decl(trf_8605)
static void C_fcall trf_8605(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8605(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8605(t0,t1);}

C_noret_decl(trf_8570)
static void C_fcall trf_8570(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8570(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8570(t0,t1);}

C_noret_decl(trf_8299)
static void C_fcall trf_8299(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8299(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8299(t0,t1,t2,t3);}

C_noret_decl(trf_8307)
static void C_fcall trf_8307(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8307(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8307(t0,t1,t2,t3);}

C_noret_decl(trf_8436)
static void C_fcall trf_8436(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8436(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8436(t0,t1,t2);}

C_noret_decl(trf_8390)
static void C_fcall trf_8390(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8390(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8390(t0,t1,t2);}

C_noret_decl(trf_8293)
static void C_fcall trf_8293(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8293(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8293(t0,t1,t2);}

C_noret_decl(trf_8287)
static void C_fcall trf_8287(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8287(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8287(t0,t1);}

C_noret_decl(trf_8281)
static void C_fcall trf_8281(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8281(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8281(t0,t1,t2);}

C_noret_decl(trf_8210)
static void C_fcall trf_8210(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8210(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8210(t0,t1,t2);}

C_noret_decl(trf_8212)
static void C_fcall trf_8212(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8212(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8212(t0,t1,t2);}

C_noret_decl(trf_8218)
static void C_fcall trf_8218(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8218(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8218(t0,t1,t2);}

C_noret_decl(trf_8059)
static void C_fcall trf_8059(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8059(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8059(t0,t1);}

C_noret_decl(trf_8074)
static void C_fcall trf_8074(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8074(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8074(t0,t1,t2);}

C_noret_decl(trf_8017)
static void C_fcall trf_8017(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8017(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8017(t0,t1,t2);}

C_noret_decl(trf_7957)
static void C_fcall trf_7957(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7957(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7957(t0,t1,t2);}

C_noret_decl(trf_7833)
static void C_fcall trf_7833(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7833(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7833(t0,t1,t2);}

C_noret_decl(trf_7683)
static void C_fcall trf_7683(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7683(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7683(t0,t1,t2);}

C_noret_decl(trf_7719)
static void C_fcall trf_7719(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7719(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7719(t0,t1,t2);}

C_noret_decl(trf_7518)
static void C_fcall trf_7518(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7518(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7518(t0,t1);}

C_noret_decl(trf_5338)
static void C_fcall trf_5338(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5338(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5338(t0,t1);}

C_noret_decl(trf_7649)
static void C_fcall trf_7649(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7649(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7649(t0,t1,t2);}

C_noret_decl(trf_7659)
static void C_fcall trf_7659(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7659(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7659(t0,t1);}

C_noret_decl(trf_7619)
static void C_fcall trf_7619(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7619(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7619(t0,t1,t2);}

C_noret_decl(trf_7629)
static void C_fcall trf_7629(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7629(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7629(t0,t1);}

C_noret_decl(trf_6680)
static void C_fcall trf_6680(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6680(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6680(t0,t1);}

C_noret_decl(trf_6683)
static void C_fcall trf_6683(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6683(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6683(t0,t1);}

C_noret_decl(trf_6686)
static void C_fcall trf_6686(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6686(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6686(t0,t1);}

C_noret_decl(trf_6689)
static void C_fcall trf_6689(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6689(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6689(t0,t1);}

C_noret_decl(trf_6692)
static void C_fcall trf_6692(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6692(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6692(t0,t1);}

C_noret_decl(trf_6695)
static void C_fcall trf_6695(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6695(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6695(t0,t1);}

C_noret_decl(trf_6523)
static void C_fcall trf_6523(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6523(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6523(t0,t1);}

C_noret_decl(trf_6452)
static void C_fcall trf_6452(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6452(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6452(t0,t1);}

C_noret_decl(trf_6267)
static void C_fcall trf_6267(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6267(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6267(t0,t1);}

C_noret_decl(trf_6279)
static void C_fcall trf_6279(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6279(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6279(t0,t1);}

C_noret_decl(trf_6316)
static void C_fcall trf_6316(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6316(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_6316(t0,t1,t2,t3,t4);}

C_noret_decl(trf_6351)
static void C_fcall trf_6351(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6351(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6351(t0,t1);}

C_noret_decl(trf_6246)
static void C_fcall trf_6246(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6246(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6246(t0,t1);}

C_noret_decl(trf_6181)
static void C_fcall trf_6181(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6181(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6181(t0,t1,t2);}

C_noret_decl(trf_6190)
static void C_fcall trf_6190(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6190(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6190(t0,t1,t2);}

C_noret_decl(trf_6203)
static void C_fcall trf_6203(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6203(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6203(t0,t1);}

C_noret_decl(trf_6137)
static void C_fcall trf_6137(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6137(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6137(t0,t1,t2);}

C_noret_decl(trf_6125)
static void C_fcall trf_6125(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6125(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6125(t0,t1);}

C_noret_decl(trf_6023)
static void C_fcall trf_6023(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6023(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6023(t0,t1);}

C_noret_decl(trf_5975)
static void C_fcall trf_5975(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5975(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5975(t0,t1);}

C_noret_decl(trf_5356)
static void C_fcall trf_5356(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5356(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_5356(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_5366)
static void C_fcall trf_5366(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5366(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5366(t0,t1);}

C_noret_decl(trf_5495)
static void C_fcall trf_5495(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5495(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5495(t0,t1);}

C_noret_decl(trf_5583)
static void C_fcall trf_5583(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5583(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5583(t0,t1);}

C_noret_decl(trf_5656)
static void C_fcall trf_5656(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5656(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5656(t0,t1);}

C_noret_decl(trf_5734)
static void C_fcall trf_5734(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5734(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5734(t0,t1);}

C_noret_decl(trf_5685)
static void C_fcall trf_5685(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5685(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5685(t0,t1);}

C_noret_decl(trf_5701)
static void C_fcall trf_5701(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5701(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5701(t0,t1);}

C_noret_decl(trf_5665)
static void C_fcall trf_5665(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5665(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5665(t0,t1);}

C_noret_decl(trf_5607)
static void C_fcall trf_5607(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5607(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_5607(t0,t1,t2);}

C_noret_decl(trf_5526)
static void C_fcall trf_5526(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5526(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_5526(t0,t1,t2);}

C_noret_decl(trf_5542)
static void C_fcall trf_5542(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5542(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5542(t0,t1);}

C_noret_decl(trf_5510)
static void C_fcall trf_5510(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5510(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5510(t0,t1);}

C_noret_decl(trf_5252)
static void C_fcall trf_5252(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5252(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5252(t0,t1);}

C_noret_decl(trf_5261)
static void C_fcall trf_5261(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5261(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5261(t0,t1);}

C_noret_decl(trf_5266)
static void C_fcall trf_5266(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5266(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_5266(t0,t1,t2);}

C_noret_decl(trf_5244)
static void C_fcall trf_5244(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5244(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5244(t0,t1);}

C_noret_decl(trf_5036)
static void C_fcall trf_5036(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5036(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_5036(t0,t1,t2,t3);}

C_noret_decl(trf_5003)
static void C_fcall trf_5003(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5003(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_5003(t0,t1,t2,t3);}

C_noret_decl(trf_4985)
static void C_fcall trf_4985(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4985(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_4985(t0,t1,t2,t3);}

C_noret_decl(trf_4975)
static void C_fcall trf_4975(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4975(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_4975(t0,t1,t2,t3);}

C_noret_decl(trf_4963)
static void C_fcall trf_4963(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4963(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_4963(t0,t1,t2);}

C_noret_decl(trf_4931)
static void C_fcall trf_4931(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4931(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_4931(t0,t1,t2);}

C_noret_decl(trf_4915)
static void C_fcall trf_4915(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4915(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4915(t0,t1);}

C_noret_decl(trf_4903)
static void C_fcall trf_4903(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4903(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4903(t0,t1);}

C_noret_decl(trf_4885)
static void C_fcall trf_4885(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4885(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4885(t0,t1);}

C_noret_decl(trf_4867)
static void C_fcall trf_4867(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4867(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4867(t0,t1);}

C_noret_decl(trf_4852)
static void C_fcall trf_4852(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4852(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4852(t0,t1);}

C_noret_decl(trf_4846)
static void C_fcall trf_4846(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4846(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_4846(t0,t1,t2,t3);}

C_noret_decl(trf_4834)
static void C_fcall trf_4834(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4834(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4834(t0,t1);}

C_noret_decl(trf_4816)
static void C_fcall trf_4816(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4816(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4816(t0,t1);}

C_noret_decl(trf_4795)
static void C_fcall trf_4795(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4795(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_4795(t0,t1,t2);}

C_noret_decl(trf_4763)
static void C_fcall trf_4763(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4763(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4763(t0,t1);}

C_noret_decl(trf_4705)
static void C_fcall trf_4705(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4705(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_4705(t0,t1,t2);}

C_noret_decl(trf_4695)
static void C_fcall trf_4695(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4695(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4695(t0,t1);}

C_noret_decl(trf_4689)
static void C_fcall trf_4689(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4689(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4689(t0,t1);}

C_noret_decl(trf_4677)
static void C_fcall trf_4677(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4677(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4677(t0,t1);}

C_noret_decl(trf_4653)
static void C_fcall trf_4653(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4653(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_4653(t0,t1,t2);}

C_noret_decl(trf_4566)
static void C_fcall trf_4566(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4566(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4566(t0,t1);}

C_noret_decl(trf_4545)
static void C_fcall trf_4545(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4545(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_4545(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_4535)
static void C_fcall trf_4535(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4535(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4535(t0,t1);}

C_noret_decl(trf_4523)
static void C_fcall trf_4523(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4523(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4523(t0,t1);}

C_noret_decl(trf_4482)
static void C_fcall trf_4482(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4482(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4482(t0,t1);}

C_noret_decl(trf_4464)
static void C_fcall trf_4464(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4464(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4464(t0,t1);}

C_noret_decl(trf_4446)
static void C_fcall trf_4446(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4446(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4446(t0,t1);}

C_noret_decl(trf_4113)
static void C_fcall trf_4113(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4113(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4113(t0,t1);}

C_noret_decl(trf_4015)
static void C_fcall trf_4015(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4015(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_4015(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_3920)
static void C_fcall trf_3920(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3920(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_3920(t0,t1,t2);}

C_noret_decl(trf_3823)
static void C_fcall trf_3823(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3823(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_3823(t0,t1);}

C_noret_decl(trf_3818)
static void C_fcall trf_3818(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3818(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_3818(t0,t1,t2);}

C_noret_decl(trf_3813)
static void C_fcall trf_3813(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3813(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_3813(t0,t1,t2,t3);}

C_noret_decl(trf_3666)
static void C_fcall trf_3666(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3666(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_3666(t0,t1);}

C_noret_decl(trf_3656)
static void C_fcall trf_3656(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3656(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_3656(t0,t1);}

C_noret_decl(trf_3645)
static void C_fcall trf_3645(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3645(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_3645(t0,t1,t2);}

C_noret_decl(trf_3638)
static void C_fcall trf_3638(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3638(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_3638(t0,t1);}

C_noret_decl(trf_3627)
static void C_fcall trf_3627(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3627(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_3627(t0,t1,t2);}

C_noret_decl(trf_3589)
static void C_fcall trf_3589(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3589(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_3589(t0,t1);}

C_noret_decl(trf_3582)
static void C_fcall trf_3582(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3582(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_3582(t0,t1);}

C_noret_decl(trf_3507)
static void C_fcall trf_3507(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3507(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_3507(t0,t1,t2);}

C_noret_decl(trf_3473)
static void C_fcall trf_3473(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3473(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_3473(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_3446)
static void C_fcall trf_3446(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3446(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_3446(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_2958)
static void C_fcall trf_2958(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_2958(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_2958(t0,t1);}

C_noret_decl(trf_2970)
static void C_fcall trf_2970(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_2970(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_2970(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_3023)
static void C_fcall trf_3023(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3023(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_3023(t0,t1);}

C_noret_decl(trf_2982)
static void C_fcall trf_2982(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_2982(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_2982(t0,t1,t2);}

C_noret_decl(trf_2995)
static void C_fcall trf_2995(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_2995(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_2995(t0,t1);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr7rv)
static void C_fcall tr7rv(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7rv(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n+1);
t7=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr4rv)
static void C_fcall tr4rv(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4rv(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n+1);
t4=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_grace_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("grace_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(4156)){
C_save(t1);
C_rereclaim2(4156*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,660);
lf[1]=C_decode_literal(C_heaptop,"\376B\000\000\033too many optional arguments");
lf[2]=C_h_intern(&lf[2],10,"*messages*");
lf[3]=C_h_intern(&lf[3],11,"expand-send");
lf[4]=C_h_intern(&lf[4],5,"error");
lf[5]=C_h_intern(&lf[5],7,"sprintf");
lf[6]=C_decode_literal(C_heaptop,"\376B\000\000\003~A:");
lf[7]=C_h_intern(&lf[7],15,"keyword->string");
lf[8]=C_decode_literal(C_heaptop,"\376B\000\000\031~S duplicate keyword \047~S\047");
lf[9]=C_decode_literal(C_heaptop,"\376B\000\000!~S missing value for keyword \047~A\047");
lf[10]=C_decode_literal(C_heaptop,"\376B\000\000/~S invalid keyword \047~A\047~%Available keywords: ~A");
lf[11]=C_h_intern(&lf[11],7,"\003sysmap");
lf[12]=C_decode_literal(C_heaptop,"\376B\000\000 ~S expected keyword but got \047~S\047");
lf[13]=C_h_intern(&lf[13],8,"keyword\077");
lf[14]=C_decode_literal(C_heaptop,"\376B\000\000#~S expected ~A arguments but got ~A");
lf[15]=C_h_intern(&lf[15],6,"append");
lf[16]=C_h_intern(&lf[16],5,"&rest");
lf[17]=C_decode_literal(C_heaptop,"\376B\000\000\030~S is an invalid message");
lf[18]=C_h_intern(&lf[18],14,"hash-table-ref");
lf[19]=C_h_intern(&lf[19],14,"symbol->string");
lf[20]=C_h_intern(&lf[20],5,"first");
lf[21]=C_h_intern(&lf[21],3,"car");
lf[22]=C_h_intern(&lf[22],6,"second");
lf[23]=C_h_intern(&lf[23],4,"cadr");
lf[24]=C_h_intern(&lf[24],5,"third");
lf[25]=C_h_intern(&lf[25],5,"caddr");
lf[26]=C_h_intern(&lf[26],6,"fourth");
lf[27]=C_h_intern(&lf[27],6,"cadddr");
lf[28]=C_h_intern(&lf[28],5,"fifth");
lf[29]=C_h_intern(&lf[29],5,"sixth");
lf[30]=C_h_intern(&lf[30],7,"seventh");
lf[31]=C_h_intern(&lf[31],6,"eighth");
lf[32]=C_h_intern(&lf[32],5,"ninth");
lf[33]=C_h_intern(&lf[33],5,"tenth");
lf[34]=C_h_intern(&lf[34],4,"last");
lf[35]=C_h_intern(&lf[35],7,"butlast");
lf[36]=C_h_intern(&lf[36],5,"list*");
lf[37]=C_decode_literal(C_heaptop,"\376B\000\000&>>> Error: too few arguments to list*.");
lf[38]=C_h_intern(&lf[38],3,"cwd");
lf[39]=C_h_intern(&lf[39],17,"\003syspeek-c-string");
lf[40]=C_h_intern(&lf[40],5,"chdir");
lf[41]=C_decode_literal(C_heaptop,"\376B\000\000\002~/");
lf[42]=C_h_intern(&lf[42],17,"\003sysmake-c-string");
lf[53]=C_h_intern(&lf[53],7,"rescale");
lf[54]=C_h_intern(&lf[54],8,"discrete");
lf[55]=C_h_intern(&lf[55],3,"int");
lf[56]=C_h_intern(&lf[56],8,"quantize");
lf[57]=C_h_intern(&lf[57],8,"decimals");
lf[58]=C_h_intern(&lf[58],15,"rhythm->seconds");
lf[59]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[60]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[61]=C_h_intern(&lf[61],9,"\003syserror");
lf[62]=C_h_intern(&lf[62],13,"cents->scaler");
lf[63]=C_h_intern(&lf[63],13,"scaler->cents");
lf[64]=C_h_intern(&lf[64],13,"keynum->hertz");
lf[65]=C_h_intern(&lf[65],10,"keynum->pc");
lf[66]=C_h_intern(&lf[66],13,"hertz->keynum");
lf[67]=C_h_intern(&lf[67],7,"interpl");
lf[68]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[69]=C_h_intern(&lf[69],3,"err");
lf[70]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[71]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[72]=C_h_intern(&lf[72],6,"interp");
lf[73]=C_h_intern(&lf[73],5,"steps");
lf[74]=C_h_intern(&lf[74],6,"modulo");
lf[75]=C_h_intern(&lf[75],8,"ran-set!");
lf[76]=C_h_intern(&lf[76],3,"ran");
lf[77]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[78]=C_h_intern(&lf[78],7,"between");
lf[79]=C_h_intern(&lf[79],4,"odds");
lf[80]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[81]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[82]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[83]=C_h_intern(&lf[83],5,"pickl");
lf[84]=C_decode_literal(C_heaptop,"\376B\000\000\035cannot pick from empty list: ");
lf[85]=C_h_intern(&lf[85],4,"pick");
lf[86]=C_h_intern(&lf[86],6,"ranlow");
lf[87]=C_h_intern(&lf[87],7,"ranhigh");
lf[88]=C_h_intern(&lf[88],9,"ranmiddle");
lf[89]=C_h_intern(&lf[89],7,"ranbeta");
lf[90]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[91]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[92]=C_h_intern(&lf[92],6,"ranexp");
lf[93]=C_h_intern(&lf[93],8,"rangauss");
lf[94]=C_h_intern(&lf[94],9,"rancauchy");
lf[95]=C_h_intern(&lf[95],10,"ranpoisson");
lf[96]=C_h_intern(&lf[96],3,"arg");
lf[97]=C_h_intern(&lf[97],8,"rangamma");
lf[98]=C_h_intern(&lf[98],8,"ranbrown");
lf[99]=C_h_intern(&lf[99],7,"ranpink");
lf[101]=C_h_intern(&lf[101],5,"token");
lf[106]=C_h_intern(&lf[106],1,"t");
lf[111]=C_h_intern(&lf[111],4,"rule");
lf[114]=C_h_intern(&lf[114],22,"hash-table-ref/default");
lf[120]=C_h_intern(&lf[120],1,"*");
lf[122]=C_h_intern(&lf[122],11,"parse-error");
lf[126]=C_h_intern(&lf[126],10,"parse-unit");
lf[138]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[140]=C_h_intern(&lf[140],14,"string->symbol");
lf[141]=C_h_intern(&lf[141],4,"expt");
lf[142]=C_h_intern(&lf[142],5,"equal");
lf[143]=C_h_intern(&lf[143],3,"and");
lf[144]=C_h_intern(&lf[144],2,"or");
lf[145]=C_h_intern(&lf[145],3,"not");
lf[146]=C_h_intern(&lf[146],15,"string->keyword");
lf[147]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[148]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[151]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[157]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[158]=C_h_intern(&lf[158],7,"reverse");
lf[159]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[160]=C_h_intern(&lf[160],1,"@");
lf[161]=C_h_intern(&lf[161],1,"+");
lf[162]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[163]=C_h_intern(&lf[163],3,"max");
lf[164]=C_h_intern(&lf[164],6,"printf");
lf[165]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[170]=C_h_intern(&lf[170],4,"set!");
lf[171]=C_h_intern(&lf[171],2,">=");
lf[172]=C_h_intern(&lf[172],6,"gensym");
lf[173]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[174]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[175]=C_h_intern(&lf[175],5,"begin");
lf[176]=C_h_intern(&lf[176],2,"if");
lf[177]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[178]=C_h_intern(&lf[178],3,"cdr");
lf[179]=C_h_intern(&lf[179],5,"null\077");
lf[180]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[181]=C_h_intern(&lf[181],1,">");
lf[182]=C_h_intern(&lf[182],2,"<=");
lf[183]=C_h_intern(&lf[183],1,"-");
lf[184]=C_h_intern(&lf[184],1,"<");
lf[185]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[186]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[187]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[191]=C_h_intern(&lf[191],3,"sal");
lf[192]=C_h_intern(&lf[192],11,"print-error");
lf[193]=C_h_intern(&lf[193],13,"string-append");
lf[194]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[195]=C_h_intern(&lf[195],11,"make-string");
lf[196]=C_h_intern(&lf[196],9,"substring");
lf[197]=C_h_intern(&lf[197],2,"pp");
lf[198]=C_h_intern(&lf[198],4,"eval");
lf[199]=C_h_intern(&lf[199],7,"\000syntax");
lf[200]=C_h_intern(&lf[200],7,"\000scheme");
lf[201]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[202]=C_h_intern(&lf[202],7,"call/cc");
lf[203]=C_h_intern(&lf[203],9,"sal:print");
lf[204]=C_h_intern(&lf[204],13,"print-message");
lf[205]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[206]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[207]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[208]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[209]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[210]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[211]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[212]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[213]=C_h_intern(&lf[213],9,"sal:chdir");
lf[214]=C_h_intern(&lf[214],8,"sal:load");
lf[215]=C_h_intern(&lf[215],13,"load-sal-file");
lf[216]=C_h_intern(&lf[216],4,"load");
lf[217]=C_h_intern(&lf[217],15,"\003syssubstring=\077");
lf[218]=C_decode_literal(C_heaptop,"\376B\000\000\004.sal");
lf[219]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[220]=C_decode_literal(C_heaptop,"\376B\000\000\020\042does not exist\012");
lf[221]=C_h_intern(&lf[221],12,"file-exists\077");
lf[222]=C_h_intern(&lf[222],8,"sal:open");
lf[223]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[224]=C_h_intern(&lf[224],10,"sal:output");
lf[225]=C_decode_literal(C_heaptop,"\376B\000\000+>>> Error: output command not implemented.\012");
lf[237]=C_h_intern(&lf[237],8,"operator");
lf[238]=C_h_intern(&lf[238],8,"bindings");
lf[239]=C_h_intern(&lf[239],10,"collectors");
lf[240]=C_h_intern(&lf[240],9,"initially");
lf[241]=C_h_intern(&lf[241],9,"end-tests");
lf[242]=C_h_intern(&lf[242],7,"looping");
lf[243]=C_h_intern(&lf[243],8,"stepping");
lf[244]=C_h_intern(&lf[244],7,"finally");
lf[245]=C_h_intern(&lf[245],9,"returning");
lf[251]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[252]=C_h_intern(&lf[252],7,"newline");
lf[253]=C_h_intern(&lf[253],7,"display");
lf[254]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[255]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[256]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[257]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[258]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[259]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[261]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[262]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[263]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[264]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[265]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[266]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[267]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[269]=C_h_intern(&lf[269],3,"for");
lf[270]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[271]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[272]=C_h_intern(&lf[272],8,"downfrom");
lf[273]=C_h_intern(&lf[273],5,"above");
lf[274]=C_h_intern(&lf[274],5,"below");
lf[275]=C_h_intern(&lf[275],6,"downto");
lf[276]=C_h_intern(&lf[276],4,"from");
lf[277]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[278]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[279]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[280]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[281]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[282]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[283]=C_h_intern(&lf[283],2,"to");
lf[284]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[285]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[286]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[287]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[288]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[289]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[290]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[291]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[292]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[293]=C_h_intern(&lf[293],2,"by");
lf[294]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[295]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[296]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[297]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[299]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[300]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[302]=C_h_intern(&lf[302],6,"across");
lf[303]=C_h_intern(&lf[303],13,"vector-length");
lf[304]=C_h_intern(&lf[304],10,"vector-ref");
lf[305]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[306]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[307]=C_h_intern(&lf[307],4,"over");
lf[308]=C_h_intern(&lf[308],4,"eod\077");
lf[309]=C_h_intern(&lf[309],4,"next");
lf[310]=C_h_intern(&lf[310],2,"in");
lf[311]=C_h_intern(&lf[311],5,"quote");
lf[312]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[313]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[314]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[315]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[316]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[317]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[318]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[319]=C_h_intern(&lf[319],2,"on");
lf[320]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[321]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[323]=C_h_intern(&lf[323],1,"=");
lf[324]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[325]=C_h_intern(&lf[325],4,"then");
lf[326]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[327]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[328]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[329]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[331]=C_h_intern(&lf[331],4,"with");
lf[332]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[333]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[334]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[335]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[336]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[337]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[338]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[339]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[340]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[341]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[342]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[343]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[345]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[346]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[348]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[349]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[351]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[352]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[354]=C_h_intern(&lf[354],3,"sum");
lf[355]=C_h_intern(&lf[355],5,"count");
lf[356]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[357]=C_h_intern(&lf[357],8,"minimize");
lf[358]=C_h_intern(&lf[358],8,"maximize");
lf[359]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[360]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[361]=C_h_intern(&lf[361],4,"list");
lf[362]=C_h_intern(&lf[362],8,"set-cdr!");
lf[363]=C_h_intern(&lf[363],9,"last-pair");
lf[364]=C_h_intern(&lf[364],7,"collect");
lf[365]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[366]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[367]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[368]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[369]=C_h_intern(&lf[369],5,"nconc");
lf[370]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[371]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[372]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[373]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[374]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[375]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[376]=C_h_intern(&lf[376],4,"into");
lf[377]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[378]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[379]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[380]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[381]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[383]=C_h_intern(&lf[383],6,"return");
lf[385]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[386]=C_h_intern(&lf[386],5,"until");
lf[387]=C_h_intern(&lf[387],5,"while");
lf[388]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[389]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[391]=C_h_intern(&lf[391],7,"thereis");
lf[392]=C_h_intern(&lf[392],6,"always");
lf[393]=C_h_intern(&lf[393],5,"never");
lf[394]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[395]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[397]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[398]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[400]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[401]=C_h_intern(&lf[401],4,"else");
lf[402]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[403]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[404]=C_h_intern(&lf[404],4,"task");
lf[405]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[407]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[408]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[409]=C_h_intern(&lf[409],6,"unless");
lf[410]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[411]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[412]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[414]=C_h_intern(&lf[414],2,"do");
lf[415]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[416]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[417]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[418]=C_h_intern(&lf[418],4,"iter");
lf[419]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[420]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[421]=C_h_intern(&lf[421],6,"repeat");
lf[422]=C_h_intern(&lf[422],2,"as");
lf[423]=C_h_intern(&lf[423],4,"when");
lf[425]=C_h_intern(&lf[425],6,"mm:off");
lf[426]=C_h_intern(&lf[426],5,"mm:on");
lf[427]=C_h_intern(&lf[427],8,"mm:touch");
lf[428]=C_h_intern(&lf[428],7,"mm:ctrl");
lf[429]=C_h_intern(&lf[429],7,"mm:prog");
lf[430]=C_h_intern(&lf[430],8,"mm:press");
lf[431]=C_h_intern(&lf[431],7,"mm:bend");
lf[432]=C_h_intern(&lf[432],7,"mm:make");
lf[433]=C_decode_literal(C_heaptop,"\376B\000\000\031Unknown MidiMessage type:");
lf[434]=C_h_intern(&lf[434],15,"\003sysget-keyword");
lf[435]=C_h_intern(&lf[435],4,"\000val");
lf[436]=C_h_intern(&lf[436],4,"\000num");
lf[437]=C_h_intern(&lf[437],4,"\000vel");
lf[438]=C_h_intern(&lf[438],4,"\000key");
lf[439]=C_h_intern(&lf[439],5,"\000chan");
lf[440]=C_h_intern(&lf[440],5,"\000time");
lf[441]=C_h_intern(&lf[441],7,"mm:free");
lf[442]=C_h_intern(&lf[442],7,"mm:copy");
lf[443]=C_h_intern(&lf[443],8,"mm:type\077");
lf[444]=C_h_intern(&lf[444],7,"mm:time");
lf[445]=C_h_intern(&lf[445],12,"mm:time-set!");
lf[446]=C_h_intern(&lf[446],7,"mm:chan");
lf[447]=C_h_intern(&lf[447],12,"mm:chan-set!");
lf[448]=C_h_intern(&lf[448],6,"mm:key");
lf[449]=C_h_intern(&lf[449],11,"mm:key-set!");
lf[450]=C_h_intern(&lf[450],6,"mm:vel");
lf[451]=C_h_intern(&lf[451],11,"mm:vel-set!");
lf[452]=C_h_intern(&lf[452],6,"mm:val");
lf[453]=C_h_intern(&lf[453],11,"mm:val-set!");
lf[454]=C_h_intern(&lf[454],1,"k");
lf[455]=C_h_intern(&lf[455],6,"mm:num");
lf[456]=C_h_intern(&lf[456],11,"mm:num-set!");
lf[457]=C_h_intern(&lf[457],7,"mp:note");
lf[458]=C_h_intern(&lf[458],7,"mp:midi");
lf[459]=C_h_intern(&lf[459],6,"mp:off");
lf[460]=C_h_intern(&lf[460],5,"mp:on");
lf[461]=C_h_intern(&lf[461],8,"mp:touch");
lf[462]=C_h_intern(&lf[462],7,"mp:ctrl");
lf[463]=C_h_intern(&lf[463],7,"mp:prog");
lf[464]=C_h_intern(&lf[464],8,"mp:press");
lf[465]=C_h_intern(&lf[465],7,"mp:bend");
lf[466]=C_h_intern(&lf[466],5,"mp:mm");
lf[467]=C_h_intern(&lf[467],9,"mp:inhook");
lf[468]=C_decode_literal(C_heaptop,"\376B\000\000*>>> Error: ~A~%    Aborting MIDI inhook.~%");
lf[469]=C_h_intern(&lf[469],27,"condition-property-accessor");
lf[470]=C_h_intern(&lf[470],3,"exn");
lf[471]=C_h_intern(&lf[471],7,"message");
lf[472]=C_h_intern(&lf[472],22,"with-exception-handler");
lf[473]=C_h_intern(&lf[473],30,"call-with-current-continuation");
lf[474]=C_h_intern(&lf[474],4,"cs:i");
lf[475]=C_h_intern(&lf[475],4,"cs:f");
lf[476]=C_h_intern(&lf[476],8,"cs:clear");
lf[477]=C_h_intern(&lf[477],25,"current-time-milliseconds");
lf[478]=C_h_intern(&lf[478],20,"current-time-seconds");
lf[480]=C_h_intern(&lf[480],6,"\003sysgc");
lf[483]=C_h_intern(&lf[483],6,"sprout");
lf[484]=C_h_intern(&lf[484],3,"now");
lf[485]=C_h_intern(&lf[485],11,"time-format");
lf[486]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[487]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[488]=C_h_intern(&lf[488],1,"m");
lf[489]=C_decode_literal(C_heaptop,"\376B\000\000\021not a time-format");
lf[490]=C_h_intern(&lf[490],1,"s");
lf[491]=C_h_intern(&lf[491],5,"pause");
lf[492]=C_h_intern(&lf[492],7,"paused\077");
lf[493]=C_h_intern(&lf[493],4,"cont");
lf[494]=C_h_intern(&lf[494],4,"stop");
lf[495]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[496]=C_h_intern(&lf[496],4,"hush");
lf[497]=C_h_intern(&lf[497],14,"return-to-host");
lf[498]=C_h_intern(&lf[498],4,"cond");
lf[499]=C_h_intern(&lf[499],6,"lambda");
lf[500]=C_h_intern(&lf[500],7,"elapsed");
lf[501]=C_h_intern(&lf[501],1,"x");
lf[502]=C_h_intern(&lf[502],4,"wait");
lf[503]=C_h_intern(&lf[503],4,"let*");
lf[504]=C_decode_literal(C_heaptop,"\376B\000\0000>>> Error: ~A~%    Aborting process at time ~S~%");
lf[505]=C_h_intern(&lf[505],10,"\003sysappend");
lf[506]=C_h_intern(&lf[506],6,"safety");
lf[507]=C_h_intern(&lf[507],4,"cdar");
lf[508]=C_decode_literal(C_heaptop,"\376B\000\000\023unknown declaration");
lf[509]=C_h_intern(&lf[509],4,"caar");
lf[510]=C_decode_literal(C_heaptop,"\376B\000\000\037declaration not list (decl val)");
lf[511]=C_h_intern(&lf[511],7,"declare");
lf[512]=C_h_intern(&lf[512],5,"\000null");
lf[513]=C_decode_literal(C_heaptop,"\376B\000\000)binding clause not list (var init [step])");
lf[514]=C_decode_literal(C_heaptop,"\376B\000\000$go stopping clause missing test form");
lf[515]=C_decode_literal(C_heaptop,"\376B\000\000\035go stopping clause not a list");
lf[516]=C_decode_literal(C_heaptop,"\376B\000\000\026go bindings not a list");
lf[517]=C_h_intern(&lf[517],18,"\003sysregister-macro");
lf[518]=C_h_intern(&lf[518],2,"go");
lf[519]=C_h_intern(&lf[519],15,"hash-table-set!");
lf[520]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:clear");
lf[521]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:clear\376\377\016");
lf[522]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[523]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:f\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[524]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[525]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:i\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[526]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[527]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011mp:inhook\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000func\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[528]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[529]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:mm\376\003\000\000\002\376\003\000\000\002\376\001\000\000\003\000mm\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[530]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[531]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:bend\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000 \000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[532]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[533]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:press\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[534]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[535]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:prog\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[536]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[537]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:ctrl\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000num\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[538]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[539]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:touch\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[540]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[541]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:on\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000"
"<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000vel\376\003\000\000\002\376\377\001\000\000\000@\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[542]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[543]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006mp:off\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000"
"\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[544]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[545]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:midi\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[546]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:note");
lf[547]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:note\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[548]=C_h_intern(&lf[548],3,"let");
lf[549]=C_h_intern(&lf[549],5,":loop");
lf[550]=C_h_intern(&lf[550],7,"tagbody");
lf[551]=C_h_intern(&lf[551],5,"block");
lf[552]=C_h_intern(&lf[552],3,"nil");
lf[553]=C_h_intern(&lf[553],20,"\003sysregister-macro-2");
lf[554]=C_h_intern(&lf[554],8,"function");
lf[555]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[556]=C_h_intern(&lf[556],3,"pop");
lf[557]=C_h_intern(&lf[557],4,"cons");
lf[558]=C_h_intern(&lf[558],4,"push");
lf[559]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[560]=C_h_intern(&lf[560],4,"loop");
lf[561]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[562]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[563]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[564]=C_h_intern(&lf[564],6,"define");
lf[565]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[566]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[567]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[568]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[569]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[570]=C_h_intern(&lf[570],7,"\000return");
lf[571]=C_h_intern(&lf[571],9,"\000function");
lf[572]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[573]=C_h_intern(&lf[573],8,"\000process");
lf[574]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[575]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[576]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[577]=C_decode_literal(C_heaptop,"\376B\000\000/>>> Error: ~A~%    process aborted at time ~S~%");
lf[578]=C_decode_literal(C_heaptop,"\376B\000\000\005abort");
lf[579]=C_decode_literal(C_heaptop,"\376B\000\000\005error");
lf[580]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[581]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[582]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[583]=C_h_intern(&lf[583],5,"\000loop");
lf[584]=C_h_intern(&lf[584],4,"\000run");
lf[585]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[586]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[587]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[588]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[589]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[590]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[591]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[592]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[593]=C_h_intern(&lf[593],9,"list-tail");
lf[594]=C_h_intern(&lf[594],8,"set-car!");
lf[595]=C_h_intern(&lf[595],8,"list-ref");
lf[596]=C_h_intern(&lf[596],3,"min");
lf[597]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[598]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[599]=C_h_intern(&lf[599],9,"\000bindings");
lf[600]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[601]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[602]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[603]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[604]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[605]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[606]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[607]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[608]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[609]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[610]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[611]=C_h_intern(&lf[611],10,"sal:system");
lf[612]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[613]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[614]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[615]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[616]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[617]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[618]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[619]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[620]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[621]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[622]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[623]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[624]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[625]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[626]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[627]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[628]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[629]=C_h_intern(&lf[629],7,"unquote");
lf[630]=C_h_intern(&lf[630],16,"unquote-splicing");
lf[631]=C_h_intern(&lf[631],5,"\000list");
lf[632]=C_h_intern(&lf[632],8,"\000unquote");
lf[633]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[634]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[635]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[636]=C_h_intern(&lf[636],10,"quasiquote");
lf[637]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[638]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[639]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[640]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[641]=C_h_intern(&lf[641],7,"fprintf");
lf[642]=C_decode_literal(C_heaptop,"\376B\000\000\007#<u ~A>");
lf[643]=C_decode_literal(C_heaptop,"\376B\000\000\010#<u x~X>");
lf[644]=C_h_intern(&lf[644],27,"\003sysregister-record-printer");
lf[645]=C_decode_literal(C_heaptop,"\376B\000\000\030#<parse-error ~S (@ ~S)>");
lf[646]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[647]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\001+\376\003\000\000\002\376\001\000\000\001*\376\003\000\000\002\376\001\000\000\001@\376\003\000\000\002\376\001\000\000\003and\376\003\000\000\002\376\001\000\000\002or\376\377\016");
lf[648]=C_h_intern(&lf[648],6,"ruleid");
lf[649]=C_h_intern(&lf[649],9,"make-rule");
lf[650]=C_h_intern(&lf[650],7,"*rules*");
lf[651]=C_h_intern(&lf[651],7,"defrule");
lf[652]=C_decode_literal(C_heaptop,"\376B\000\000\007#<r ~A>");
lf[653]=C_h_intern(&lf[653],15,"make-hash-table");
lf[654]=C_h_intern(&lf[654],3,"eq\077");
lf[655]=C_decode_literal(C_heaptop,"\376B\000\000\013#<t x~X ~S>");
lf[656]=C_h_intern(&lf[656],4,"send");
lf[657]=C_decode_literal(C_heaptop,"\376B\000\0003message function not string, symbol or list of both");
lf[658]=C_h_intern(&lf[658],19,"define-send-message");
lf[659]=C_h_intern(&lf[659],6,"equal\077");
C_register_lf2(lf,660,create_ptable());
t2=C_mutate(&lf[0],lf[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_2909,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t3);}

/* k2907 */
static void C_ccall f_2909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_2909,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_2912,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k2910 in k2907 */
static void C_ccall f_2912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_2912,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_2915,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k2913 in k2910 in k2907 */
static void C_ccall f_2915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_2915,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_2918,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_2918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_2918,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_2922,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 162  make-hash-table");
t3=C_retrieve(lf[653]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,*((C_word*)lf[659]+1));}

/* k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_2922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_2922,2,t0,t1);}
t2=C_mutate((C_word*)lf[2]+1,t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_2925,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18098,a[2]=((C_word)li379),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 164  ##sys#register-macro");
t5=C_retrieve(lf[517]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[658],t4);}

/* a18097 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_18098(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[18],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18098,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18102,a[2]=t6,a[3]=t1,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t8=(C_word)C_i_car(((C_word*)t4)[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cadr(((C_word*)t4)[1]);
t11=C_set_block_item(t4,0,t10);
t12=t7;
f_18102(2,t12,t11);}
else{
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t8=C_set_block_item(t6,0,((C_word*)t4)[1]);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18135,a[2]=t7,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 171  string->symbol");
t10=*((C_word*)lf[140]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)t4)[1]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t4)[1]))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18145,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 173  symbol->string");
t9=*((C_word*)lf[19]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t4)[1]);}
else{
C_trace("ChickenBridge.scm: 175  error");
t8=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[657]);}}}}

/* k18143 in a18097 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_18145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18102(2,t3,t2);}

/* k18133 in a18097 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_18135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18102(2,t3,t2);}

/* k18100 in a18097 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_18102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18102,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,lf[311],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,4,lf[519],lf[2],((C_word*)((C_word*)t0)[2])[1],t3));}

/* k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_2925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_2925,2,t0,t1);}
t2=C_mutate((C_word*)lf[3]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_2927,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3218,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18092,a[2]=((C_word)li378),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 260  ##sys#register-macro");
t5=C_retrieve(lf[517]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[656],t4);}

/* a18091 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_18092(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_18092r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18092r(t0,t1,t2,t3);}}

static void C_ccall f_18092r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 261  expand-send");
t4=C_retrieve(lf[3]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3218,2,t0,t1);}
t2=C_mutate((C_word*)lf[20]+1,*((C_word*)lf[21]+1));
t3=C_mutate((C_word*)lf[22]+1,*((C_word*)lf[23]+1));
t4=C_mutate((C_word*)lf[24]+1,*((C_word*)lf[25]+1));
t5=C_mutate((C_word*)lf[26]+1,*((C_word*)lf[27]+1));
t6=C_mutate((C_word*)lf[28]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3224,a[2]=((C_word)li8),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[29]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3234,a[2]=((C_word)li9),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[30]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3244,a[2]=((C_word)li10),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[31]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3254,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[32]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3264,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[33]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3278,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[34]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3298,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[35]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3318,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[36]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3366,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[38]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3406,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[40]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3417,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[43],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3446,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[44],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3473,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[45],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3507,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[46],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3582,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[47],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3589,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[48],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3627,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[49],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3638,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[50],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3645,a[2]=((C_word)li28),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[51],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3656,a[2]=((C_word)li29),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[52],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3666,a[2]=((C_word)li30),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[53]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3679,a[2]=((C_word)li31),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[54]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3698,a[2]=((C_word)li32),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[55]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3780,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[56]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3786,a[2]=((C_word)li34),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[57]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3792,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[58]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3811,a[2]=((C_word)li39),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[62]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3871,a[2]=((C_word)li40),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[63]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3877,a[2]=((C_word)li41),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[64]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3883,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[65]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3889,a[2]=((C_word)li43),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[66]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3895,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[67]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3901,a[2]=((C_word)li46),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[72]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3996,a[2]=((C_word)li47),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate((C_word*)lf[73]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4002,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[75]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4061,a[2]=((C_word)li50),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[76]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4067,a[2]=((C_word)li51),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[78]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4155,a[2]=((C_word)li52),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate((C_word*)lf[79]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4161,a[2]=((C_word)li53),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate((C_word*)lf[83]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4219,a[2]=((C_word)li54),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[85]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4242,a[2]=((C_word)li55),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate((C_word*)lf[86]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4248,a[2]=((C_word)li56),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[87]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4254,a[2]=((C_word)li57),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate((C_word*)lf[88]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4260,a[2]=((C_word)li58),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[89]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4266,a[2]=((C_word)li59),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[92]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4310,a[2]=((C_word)li60),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[93]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4329,a[2]=((C_word)li61),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[94]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4369,a[2]=((C_word)li62),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[95]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4375,a[2]=((C_word)li63),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[97]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4394,a[2]=((C_word)li64),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[98]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4413,a[2]=((C_word)li65),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate((C_word*)lf[99]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4419,a[2]=((C_word)li66),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[100],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4425,a[2]=((C_word)li67),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[102],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4446,a[2]=((C_word)li68),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[103],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4464,a[2]=((C_word)li69),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate(&lf[104],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4482,a[2]=((C_word)li70),tmp=(C_word)a,a+=3,tmp));
t62=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4492,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t63=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18078,a[2]=((C_word)li377),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  ##sys#register-record-printer");
t64=C_retrieve(lf[644]);
((C_proc4)C_retrieve_proc(t64))(4,t64,t62,lf[101],t63);}

/* a18077 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_18078(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18078,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18086,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  token-type");
f_4446(t4,t2);}

/* k18084 in a18077 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_18086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18086,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18090,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  token-string");
f_4464(t2,((C_word*)t0)[2]);}

/* k18088 in k18084 in a18077 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_18090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  fprintf");
t2=C_retrieve(lf[641]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[655],((C_word*)t0)[2],t1);}

/* k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4492,2,t0,t1);}
t2=C_mutate(&lf[105],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4494,a[2]=((C_word)li71),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[107],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4523,a[2]=((C_word)li72),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[108],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4535,a[2]=((C_word)li73),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4543,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-hash-table");
t6=C_retrieve(lf[653]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,*((C_word*)lf[654]+1));}

/* k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4543,2,t0,t1);}
t2=C_mutate(&lf[109],t1);
t3=C_mutate(&lf[110],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4545,a[2]=((C_word)li74),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[112],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4566,a[2]=((C_word)li75),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4648,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18068,a[2]=((C_word)li376),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  ##sys#register-record-printer");
t7=C_retrieve(lf[644]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[111],t6);}

/* a18067 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_18068(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18068,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18076,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  rule-name");
f_4566(t4,t2);}

/* k18074 in a18067 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_18076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  fprintf");
t2=C_retrieve(lf[641]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[652],t1);}

/* k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4648,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4651,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17965,a[2]=((C_word)li375),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  ##sys#register-macro");
t4=C_retrieve(lf[517]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[651],t3);}

/* a17964 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17965(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr4r,(void*)f_17965r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_17965r(t0,t1,t2,t3,t4);}}

static void C_ccall f_17965r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(22);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17968,a[2]=t6,a[3]=((C_word)li374),tmp=(C_word)a,a+=4,tmp));
t8=(C_word)C_a_i_list(&a,2,lf[648],t2);
t9=(C_word)C_a_i_list(&a,1,t8);
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18028,a[2]=t3,a[3]=t6,a[4]=t9,a[5]=t1,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  symbol->string");
t11=*((C_word*)lf[19]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k18026 in a17964 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_18028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18028,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18032,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  ppat");
t3=((C_word*)((C_word*)t0)[3])[1];
f_17968(t3,t2,((C_word*)t0)[2]);}

/* k18030 in k18026 in a17964 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_18032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18032,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)t0)[5]);
t3=(C_truep(t2)?C_SCHEME_FALSE:(C_word)C_i_car(((C_word*)t0)[5]));
t4=(C_word)C_i_nullp(((C_word*)t0)[5]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18046,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_18046(t6,t4);}
else{
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=t5;
f_18046(t7,(C_word)C_i_nullp(t6));}}

/* k18044 in k18030 in k18026 in a17964 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_18046(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18046,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_SCHEME_FALSE:(C_word)C_i_cadr(((C_word*)t0)[7]));
t3=(C_word)C_a_i_list(&a,6,lf[649],((C_word*)t0)[6],lf[648],((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_list(&a,4,lf[519],lf[650],lf[648],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[548],((C_word*)t0)[2],t4));}

/* ppat in a17964 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_17968(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_17968,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[646]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17988,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  ppat");
t7=t3;
t8=t4;
t1=t7;
t2=t8;
goto loop;}
else{
t3=(C_word)C_i_member(t2,lf[647]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_list(&a,2,lf[311],t2):t2));}}}

/* k17986 in ppat in a17964 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17988,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17992,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 264  ppat");
t4=((C_word*)((C_word*)t0)[2])[1];
f_17968(t4,t2,t3);}

/* k17990 in k17986 in ppat in a17964 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17992,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[557],((C_word*)t0)[2],t1));}

/* k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4651,2,t0,t1);}
t2=C_mutate(&lf[113],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4653,a[2]=((C_word)li76),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[115],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4677,a[2]=((C_word)li77),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[116],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4689,a[2]=((C_word)li78),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[117],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4695,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[118],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4705,a[2]=((C_word)li80),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[119],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4763,a[2]=((C_word)li81),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[121],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4795,a[2]=((C_word)li82),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[123],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4816,a[2]=((C_word)li83),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[124],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4834,a[2]=((C_word)li84),tmp=(C_word)a,a+=3,tmp));
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4844,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17951,a[2]=((C_word)li373),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  ##sys#register-record-printer");
t13=C_retrieve(lf[644]);
((C_proc4)C_retrieve_proc(t13))(4,t13,t11,lf[122],t12);}

/* a17950 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17951(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17951,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17959,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-error-string");
f_4816(t4,t2);}

/* k17957 in a17950 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17959,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17963,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-error-position");
f_4834(t2,((C_word*)t0)[2]);}

/* k17961 in k17957 in a17950 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  fprintf");
t2=C_retrieve(lf[641]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[645],((C_word*)t0)[2],t1);}

/* k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4844,2,t0,t1);}
t2=C_mutate(&lf[125],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4846,a[2]=((C_word)li85),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[127],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4852,a[2]=((C_word)li86),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[128],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4867,a[2]=((C_word)li87),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[129],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4885,a[2]=((C_word)li88),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[130],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4903,a[2]=((C_word)li89),tmp=(C_word)a,a+=3,tmp));
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4913,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17925,a[2]=((C_word)li372),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  ##sys#register-record-printer");
t9=C_retrieve(lf[644]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,lf[126],t8);}

/* a17924 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17925(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17925,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17929,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-type");
f_4867(t4,t2);}

/* k17927 in a17924 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17929,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17935,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  SalRuleType?");
f_6125(t2,t1);}

/* k17933 in k17927 in a17924 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17935,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17942,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17946,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  get-rule");
f_4653(t3,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 264  fprintf");
t2=C_retrieve(lf[641]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[643],((C_word*)t0)[2]);}}

/* k17944 in k17933 in k17927 in a17924 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  rule-name");
f_4566(((C_word*)t0)[2],t1);}

/* k17940 in k17933 in k17927 in a17924 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  fprintf");
t2=C_retrieve(lf[641]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[642],t1);}

/* k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[60],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4913,2,t0,t1);}
t2=C_mutate(&lf[131],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4915,a[2]=((C_word)li90),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[133],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4931,a[2]=((C_word)li91),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[135],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4963,a[2]=((C_word)li92),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[136],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4975,a[2]=((C_word)li93),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[137],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4985,a[2]=((C_word)li94),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[139],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5003,a[2]=((C_word)li95),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[150],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5036,a[2]=((C_word)li96),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[153],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5244,a[2]=((C_word)li98),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[154],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5252,a[2]=((C_word)li101),tmp=(C_word)a,a+=3,tmp));
t11=lf[155]=C_SCHEME_FALSE;;
t12=C_mutate(&lf[156],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5356,a[2]=((C_word)li115),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[132],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5975,a[2]=((C_word)li116),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[149],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6023,a[2]=((C_word)li117),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[152],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6125,a[2]=((C_word)li118),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[134],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6137,a[2]=((C_word)li119),tmp=(C_word)a,a+=3,tmp));
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6158,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17903,a[2]=t17,tmp=(C_word)a,a+=3,tmp);
t19=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(3328),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(2816),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[144],t21);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t18,lf[640],C_fix(25856),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k17901 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(25856),t1);}

/* k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6158,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6161,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17883,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[144],t5);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[639],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k17881 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(26112),t1);}

/* k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6161,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6164,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17843,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[144],t10);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[638],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k17841 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(26368),t1);}

/* k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6164,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6167,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17733,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[120],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[143],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17739,a[2]=((C_word)li370),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17749,a[2]=((C_word)li371),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[637],C_fix(26624),t9,t10,t11);}

/* a17748 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17749(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_17749,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17753,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  get-emit-info");
f_4963(t5,lf[631],t3);}

/* k17751 in a17748 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17753,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17756,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t2,((C_word*)t0)[2]);}

/* k17754 in k17751 in a17748 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17756,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 264  emit");
f_5003(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[361]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17774,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  add-emit-info");
f_4975(t3,lf[631],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k17772 in k17754 in k17751 in a17748 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17774,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17777,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k17775 in k17772 in k17754 in k17751 in a17748 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17777,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17780,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17808,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  get-emit-info");
f_4963(t5,lf[631],((C_word*)t0)[2]);}

/* k17806 in k17775 in k17772 in k17754 in k17751 in a17748 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17808,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[632]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[636],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17780(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[311],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17780(t5,t4);}}

/* k17778 in k17775 in k17772 in k17754 in k17751 in a17748 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_17780(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17780,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17786,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  get-emit-info");
f_4963(t2,lf[599],((C_word*)t0)[2]);}

/* k17784 in k17778 in k17775 in k17772 in k17754 in k17751 in a17748 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17786,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[361]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[15],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a17738 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17739(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17739,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k17731 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(26624),t1);}

/* k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6167,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6170,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17633,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[144],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[143],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17641,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-parser");
f_5244(t10,C_fix(27648));}

/* k17639 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17641,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17643,a[2]=((C_word)li369),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(((C_word*)t0)[3],lf[635],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a17642 in k17639 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17643(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_17643,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17647,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t5,t2);}

/* k17645 in a17642 in k17639 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17647,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17650,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4931(t2,t3,C_fix(5376));}

/* k17648 in k17645 in a17642 in k17639 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17650,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17653,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  get-emit-info");
f_4963(t2,lf[631],((C_word*)t0)[4]);}

/* k17651 in k17648 in k17645 in a17642 in k17639 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17653,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17656,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_17656(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17685,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[633]:lf[634]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17693,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 264  parse-unit-position");
f_4903(t5,t6);}}

/* k17691 in k17651 in k17648 in k17645 in a17642 in k17639 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-error");
f_4795(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k17683 in k17651 in k17648 in k17645 in a17642 in k17639 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k17654 in k17651 in k17648 in k17645 in a17642 in k17639 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17656,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17659,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t2,t3,((C_word*)t0)[4],((C_word*)t0)[2]);}

/* k17657 in k17654 in k17651 in k17648 in k17645 in a17642 in k17639 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17659,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17662,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  set-emit-info!");
f_4985(t2,lf[631],lf[632],((C_word*)t0)[2]);}

/* k17660 in k17657 in k17654 in k17651 in k17648 in k17645 in a17642 in k17639 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17662,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[629],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[630],((C_word*)t0)[2])));}

/* k17631 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(27648),t1);}

/* k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6170,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6173,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17605,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[144],t7);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[628],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k17603 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(26880),t1);}

/* k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6173,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6176,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17545,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[143],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17551,a[2]=((C_word)li367),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17569,a[2]=((C_word)li368),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[627],C_fix(27136),t8,t9,t10);}

/* a17568 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17569(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_17569,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17577,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17581,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t6,t2);}

/* k17579 in a17568 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  emit");
f_5003(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k17575 in a17568 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17577,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[595],t1));}

/* a17550 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17551(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17551,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k17543 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(27136),t1);}

/* k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6176,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6179,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17422,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[160],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[143],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17428,a[2]=((C_word)li365),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17459,a[2]=((C_word)li366),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[626],C_fix(27392),t14,t15,t16);}

/* a17458 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17459(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_17459,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17463,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t5,t2);}

/* k17461 in a17458 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17463,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17466,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k17464 in k17461 in a17458 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17466,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17469,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k17467 in k17464 in k17461 in a17458 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17469,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17482,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[176],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k17480 in k17467 in k17464 in k17461 in a17458 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17482,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[176],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a17427 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17428(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17428,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17432,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  sixth");
t5=C_retrieve(lf[29]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k17430 in a17427 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17432,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17447,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  fifth");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k17445 in k17430 in a17427 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17447,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k17420 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(27392),t1);}

/* k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6179,2,t0,t1);}
t2=C_mutate(&lf[166],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6181,a[2]=((C_word)li121),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6235,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17302,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[161],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[143],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[144],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17308,a[2]=((C_word)li364),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t4,lf[625],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a17307 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17308(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17308,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17324,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4931(t4,t8,C_fix(256));}
else{
t7=t4;
f_17324(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_17324(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k17322 in a17307 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17324,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17335,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 264  remove-token-type");
f_6181(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k17333 in k17322 in a17307 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17335,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k17300 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(28416),t1);}

/* k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6235,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6238,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17163,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[161],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[143],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[143],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[144],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17169,a[2]=((C_word)li363),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[624],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a17168 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17169(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17169,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17189,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17192,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4931(t7,t11,C_fix(256));}
else{
t10=t7;
f_17192(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_17192(2,t9,C_SCHEME_FALSE);}}

/* k17190 in a17168 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 264  remove-token-type");
f_6181(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_17189(2,t2,C_SCHEME_END_OF_LIST);}}

/* k17187 in a17168 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17189,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k17161 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(28672),t1);}

/* k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6238,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6241,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17011,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[143],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[143],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[143],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[144],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17017,a[2]=((C_word)li362),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[623],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a17016 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17017(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17017,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17035,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4931(t10,t7,C_fix(768));}

/* k17033 in a17016 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17035,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17044,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4931(t2,t3,C_fix(256));}}

/* k17042 in k17033 in a17016 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 264  append");
t3=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k17009 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_17011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(28160),t1);}

/* k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6241,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6244,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16940,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16946,a[2]=((C_word)li360),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16964,a[2]=((C_word)li361),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[622],C_fix(27904),t6,t7,t8);}

/* a16963 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16964(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16964,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16968,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t5,t2);}

/* k16966 in a16963 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16968,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16971,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16969 in k16966 in a16963 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16971,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16987,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16985 in k16969 in k16966 in a16963 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16987,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a16945 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16946(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16946,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k16938 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(27904),t1);}

/* k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6244,2,t0,t1);}
t2=C_mutate(&lf[167],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6246,a[2]=((C_word)li122),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[168],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6267,a[2]=((C_word)li125),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6383,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16864,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[144],t21);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t5,lf[621],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k16862 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(28928),t1);}

/* k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6383,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6386,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16784,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[120],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[143],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16790,a[2]=((C_word)li359),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[620],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a16789 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16790(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16790,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16797,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 264  is-op?");
f_6246(t4,t7);}
else{
t6=t4;
f_16797(2,t6,C_SCHEME_FALSE);}}

/* k16795 in a16789 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16797,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 264  inf->pre");
f_6267(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k16782 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(29184),t1);}

/* k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6386,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6389,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16648,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[143],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[143],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[144],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16654,a[2]=((C_word)li357),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16680,a[2]=((C_word)li358),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[619],C_fix(29440),t23,t24,t25);}

/* a16679 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16680(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16680,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16688,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t5,t2);}

/* k16686 in a16679 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  emit");
f_5003(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a16653 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16654(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16654,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16662,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16671,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4931(t5,t6,C_fix(512));}
else{
t5=t4;
f_16662(t5,t2);}}

/* k16669 in a16653 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_16662(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k16660 in a16653 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_16662(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k16646 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(29440),t1);}

/* k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6389,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6392,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16604,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[144],t11);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[618],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k16602 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(29696),t1);}

/* k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6392,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6395,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16494,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[120],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[143],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16500,a[2]=((C_word)li354),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16522,a[2]=((C_word)li356),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[617],C_fix(33536),t10,t11,t12);}

/* a16521 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16522(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16522,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[203]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16533,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t8,t2);}

/* k16531 in a16521 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16533,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16535,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li355),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_16535(t5,((C_word*)t0)[2],t1);}

/* do998 in k16531 in a16521 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_16535(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16535,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16564,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k16562 in do998 in k16531 in a16521 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16564,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_16535(t7,((C_word*)t0)[2],t6);}

/* a16499 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16500(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16500,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16516,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 264  remove-token-type");
f_6181(t5,t6,C_fix(256));}

/* k16514 in a16499 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16516,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k16492 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(33536),t1);}

/* k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6395,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6398,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16419,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[120],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16896),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[143],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16425,a[2]=((C_word)li352),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16447,a[2]=((C_word)li353),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[616],C_fix(34560),t10,t11,t12);}

/* a16446 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16447(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16447,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16451,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t5,t2);}

/* k16449 in a16446 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16451,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16458,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16456 in k16449 in a16446 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16458,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[483],t1));}

/* a16424 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16425(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16425,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16441,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 264  remove-token-type");
f_6181(t5,t6,C_fix(256));}

/* k16439 in a16424 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16441,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k16417 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(34560),t1);}

/* k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6398,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6401,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16220,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[144],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[143],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[144],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[160],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[143],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16226,a[2]=((C_word)li349),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16287,a[2]=((C_word)li351),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[615],C_fix(34304),t21,t22,t23);}

/* a16286 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16287(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16287,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16291,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16327,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t6,t2);}

/* k16325 in a16286 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  emit");
f_5003(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16289 in a16286 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16291,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16307,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li350),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  expand-send");
t6=C_retrieve(lf[3]);
((C_proc5)C_retrieve_proc(t6))(5,t6,((C_word*)t0)[2],t3,t4,t5);}

/* a16306 in k16289 in a16286 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16307(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr3r,(void*)f_16307r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16307r(t0,t1,t2,t3);}}

static void C_ccall f_16307r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(8);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16315,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16319,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[5]),t2,t3);}

/* k16317 in a16306 in k16289 in a16286 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16319,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16323,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-position");
f_4903(t2,((C_word*)t0)[2]);}

/* k16321 in k16317 in a16306 in k16289 in a16286 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-error");
f_4795(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16313 in a16306 in k16289 in a16286 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a16225 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16226(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16226,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16233,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(C_word)C_i_car(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_pairp(t11))){
t12=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16273,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t13=(C_word)C_i_car(((C_word*)t6)[1]);
t14=(C_word)C_i_caddr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 264  append");
t15=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t12,t13,t14);}
else{
t12=t7;
f_16233(t12,C_SCHEME_UNDEFINED);}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_16233(t10,t9);}}

/* k16271 in a16225 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16233(t3,t2);}

/* k16231 in a16225 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_16233(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16233,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16244,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 264  parse-unit-position");
f_4903(t4,t5);}

/* k16242 in k16231 in a16225 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k16218 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(34304),t1);}

/* k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6401,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6404,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16194,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16200,a[2]=((C_word)li348),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[614],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a16199 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16200(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16200,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k16192 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(33792),t1);}

/* k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6404,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6407,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16166,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16174,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-parser");
f_5244(t7,C_fix(35072));}

/* k16172 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16174,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16178,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-emitter");
f_5252(t2,lf[214]);}

/* k16176 in k16172 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(((C_word*)t0)[4],lf[613],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16164 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(35072),t1);}

/* k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6407,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6410,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16138,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16146,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-parser");
f_5244(t7,C_fix(35584));}

/* k16144 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16146,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16150,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-emitter");
f_5252(t2,lf[213]);}

/* k16148 in k16144 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(((C_word*)t0)[4],lf[612],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16136 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(35584),t1);}

/* k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6410,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6413,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16110,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16118,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-parser");
f_5244(t7,C_fix(35328));}

/* k16116 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16118,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16122,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-emitter");
f_5252(t2,lf[611]);}

/* k16120 in k16116 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(((C_word*)t0)[4],lf[610],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16108 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(35328),t1);}

/* k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6413,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6416,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16082,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16090,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-parser");
f_5244(t7,C_fix(34816));}

/* k16088 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16090,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16094,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-emitter");
f_5252(t2,lf[224]);}

/* k16092 in k16088 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(((C_word*)t0)[4],lf[609],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16080 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_16082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(34816),t1);}

/* k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6416,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6419,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15945,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[144],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[143],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[144],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[120],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[143],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15951,a[2]=((C_word)li346),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15981,a[2]=((C_word)li347),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[608],C_fix(36096),t22,t23,t24);}

/* a15980 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15981(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15981,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[607]);}

/* a15950 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15951(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15951,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15975,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 264  remove-token-type");
f_6181(t6,t7,C_fix(256));}

/* k15973 in a15950 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15975,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k15943 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(36096),t1);}

/* k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6419,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6422,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15887,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15895,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-parser");
f_5244(t7,C_fix(31744));}

/* k15893 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15895,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15897,a[2]=((C_word)li345),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(((C_word*)t0)[3],lf[606],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a15896 in k15893 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15897(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15897,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15901,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t5,t2);}

/* k15899 in a15896 in k15893 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15901,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15904,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15929,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  get-emit-info");
f_4963(t3,lf[584],((C_word*)t0)[3]);}

/* k15927 in k15899 in a15896 in k15893 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15929,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_15904(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15917,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15921,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 264  parse-unit-position");
f_4903(t3,t4);}}

/* k15919 in k15927 in k15899 in a15896 in k15893 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-error");
f_4795(((C_word*)t0)[2],lf[605],t1);}

/* k15915 in k15927 in k15899 in a15896 in k15893 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k15902 in k15899 in a15896 in k15893 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  emit");
f_5003(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15885 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(31744),t1);}

/* k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6422,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6425,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15826,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15834,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-parser");
f_5244(t7,C_fix(31488));}

/* k15832 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15834,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15836,a[2]=((C_word)li344),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(((C_word*)t0)[3],lf[604],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a15835 in k15832 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15836(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15836,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15840,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t5,t2);}

/* k15838 in a15835 in k15832 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15840,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15843,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15871,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  get-emit-info");
f_4963(t3,lf[571],((C_word*)t0)[3]);}

/* k15869 in k15838 in a15835 in k15832 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15871,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_15843(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15859,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15863,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 264  parse-unit-position");
f_4903(t3,t4);}}

/* k15861 in k15869 in k15838 in a15835 in k15832 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-error");
f_4795(((C_word*)t0)[2],lf[603],t1);}

/* k15857 in k15869 in k15838 in a15835 in k15832 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k15841 in k15838 in a15835 in k15832 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15843,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15846,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  set-emit-info!");
f_4985(t2,lf[571],lf[570],((C_word*)t0)[3]);}

/* k15844 in k15841 in k15838 in a15835 in k15832 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  emit");
f_5003(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15824 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(31488),t1);}

/* k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6425,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6428,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15735,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[143],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[144],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15741,a[2]=((C_word)li341),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15776,a[2]=((C_word)li343),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[602],C_fix(30208),t10,t11,t12);}

/* a15775 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15776(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15776,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15782,a[2]=t4,a[3]=t3,a[4]=((C_word)li342),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15790,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t6,t2);}

/* k15788 in a15775 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[11]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a15781 in a15775 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15782(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15782,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a15740 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15741(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15741,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15774,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(t4,C_fix(4608),lf[601],C_SCHEME_FALSE);}}

/* k15772 in a15740 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15774,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k15733 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(30208),t1);}

/* k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6428,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6431,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15633,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[120],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[143],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15639,a[2]=((C_word)li338),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15682,a[2]=((C_word)li340),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[600],C_fix(29952),t10,t11,t12);}

/* a15681 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15682(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15682,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15686,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  add-emit-info");
f_4975(t5,lf[599],C_SCHEME_TRUE,t3);}

/* k15684 in a15681 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15686,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15691,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li339),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15699,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t3,((C_word*)t0)[2]);}

/* k15697 in k15684 in a15681 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[11]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a15690 in k15684 in a15681 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15691(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15691,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a15638 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15639(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15639,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15672,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 264  remove-token-type");
f_6181(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k15670 in a15638 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15672,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k15631 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(29952),t1);}

/* k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6431,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6434,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15547,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[144],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[144],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[143],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15553,a[2]=((C_word)li337),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[598],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a15552 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15553(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15553,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k15545 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(30720),t1);}

/* k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6434,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6437,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15267,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[120],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[143],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15273,a[2]=((C_word)li334),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15316,a[2]=((C_word)li336),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[597],C_fix(30464),t10,t11,t12);}

/* a15315 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15316(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15316,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15320,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t5,t2);}

/* k15318 in a15315 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15320,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[175]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15328,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li335),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_15328(t8,((C_word*)t0)[2],t1);}

/* do1077 in k15318 in a15315 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_15328(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15328,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15351,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t3,t4);}}

/* k15349 in do1077 in k15318 in a15315 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15351,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15354,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15352 in k15349 in do1077 in k15318 in a15315 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15354,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_15357,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 264  parse-unit-type");
f_4867(t2,t3);}

/* k15355 in k15352 in k15349 in do1077 in k15318 in a15315 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15357,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15360,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15358 in k15355 in k15352 in k15349 in do1077 in k15318 in a15315 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15360,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15363,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15420,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6137(t5,((C_word*)t0)[2],C_fix(10756));}

/* k15418 in k15358 in k15355 in k15352 in k15349 in do1077 in k15318 in a15315 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15420,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_15363(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15427,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6137(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k15425 in k15418 in k15358 in k15355 in k15352 in k15349 in do1077 in k15318 in a15315 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15427,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[161],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_15363(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15437,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6137(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k15435 in k15425 in k15418 in k15358 in k15355 in k15352 in k15349 in do1077 in k15318 in a15315 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15437,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[120],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_15363(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15447,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6137(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k15445 in k15435 in k15425 in k15418 in k15358 in k15355 in k15352 in k15349 in do1077 in k15318 in a15315 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15447,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[361],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[15],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_15363(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15461,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6137(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k15459 in k15445 in k15435 in k15425 in k15418 in k15358 in k15355 in k15352 in k15349 in do1077 in k15318 in a15315 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15461,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[557],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_15363(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15471,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6137(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k15469 in k15459 in k15445 in k15435 in k15425 in k15418 in k15358 in k15355 in k15352 in k15349 in do1077 in k15318 in a15315 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15471,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[15],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_15363(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15481,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6137(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k15479 in k15469 in k15459 in k15445 in k15435 in k15425 in k15418 in k15358 in k15355 in k15352 in k15349 in do1077 in k15318 in a15315 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15481,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[596],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_15363(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15491,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6137(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k15489 in k15479 in k15469 in k15459 in k15445 in k15435 in k15425 in k15418 in k15358 in k15355 in k15352 in k15349 in do1077 in k15318 in a15315 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15491,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[163],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_15363(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_15363(t2,C_SCHEME_UNDEFINED);}}

/* k15361 in k15358 in k15355 in k15352 in k15349 in do1077 in k15318 in a15315 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_15363(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15363,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15366,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15387,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_15387(t5,(C_word)C_eqp(t4,lf[595]));}
else{
t4=t3;
f_15387(t4,C_SCHEME_FALSE);}}

/* k15385 in k15361 in k15358 in k15355 in k15352 in k15349 in do1077 in k15318 in a15315 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_15387(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15387,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[593],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[594],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15366(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_15366(t4,t3);}}

/* k15364 in k15361 in k15358 in k15355 in k15352 in k15349 in do1077 in k15318 in a15315 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_15366(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15366,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_15328(t7,((C_word*)t0)[2],t6);}

/* a15272 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15273(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15273,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15306,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 264  remove-token-type");
f_6181(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k15304 in a15272 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15306,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k15265 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(30464),t1);}

/* k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6437,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6440,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15153,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[160],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[120],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[143],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15159,a[2]=((C_word)li332),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15185,a[2]=((C_word)li333),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[592],C_fix(32000),t12,t13,t14);}

/* a15184 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15185(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15185,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15189,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t5,t2);}

/* k15187 in a15184 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15189,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15195,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15193 in k15187 in a15184 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15195,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15215,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[175],t1));}}

/* k15213 in k15193 in k15187 in a15184 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15215,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[503],t2));}

/* a15158 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15159(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15159,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15169,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_15169(t12,t11);}
else{
t10=t8;
f_15169(t10,C_SCHEME_FALSE);}}

/* k15167 in a15158 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_15169(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15169,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k15151 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(32000),t1);}

/* k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6440,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6443,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14956,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[160],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[160],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[143],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[143],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[143],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[144],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14962,a[2]=((C_word)li330),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15030,a[2]=((C_word)li331),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[591],C_fix(32256),t26,t27,t28);}

/* a15029 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15030(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15030,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15034,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t5,t2);}

/* k15032 in a15029 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  emit");
f_5003(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a14961 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14962(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14962,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14975,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14981,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4931(t9,t4,C_fix(14336));}

/* k14979 in a14961 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14981,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_14987,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_14987(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15016,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(t11,C_fix(4608),lf[590],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14975(t5,t4);}}

/* k15014 in k14979 in a14961 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14987(t3,t2);}

/* k14985 in k14979 in a14961 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_14987(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14987,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14991,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 264  fifth");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k14989 in k14985 in k14979 in a14961 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14991,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14994,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_14994(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15005,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(t5,C_fix(4608),lf[589],C_SCHEME_FALSE);}}

/* k15003 in k14989 in k14985 in k14979 in a14961 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_15005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14994(t3,t2);}

/* k14992 in k14989 in k14985 in k14979 in a14961 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_14994(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14994,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14975(t4,t3);}

/* k14973 in a14961 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_14975(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k14954 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(32256),t1);}

/* k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6443,2,t0,t1);}
t2=C_mutate(&lf[169],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6445,a[2]=((C_word)li126),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6966,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14684,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[143],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[160],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[143],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[143],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[144],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[160],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[160],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[143],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[144],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[160],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[143],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[144],t58);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t4,lf[588],C_fix(33024),t59,C_retrieve2(lf[169],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k14682 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(33024),t1);}

/* k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6966,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6969,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14628,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[143],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[144],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14636,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-parser");
f_5244(t13,C_fix(33280));}

/* k14634 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(((C_word*)t0)[3],lf[587],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k14626 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(33280),t1);}

/* k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6969,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7491,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14456,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[144],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[160],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[120],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[120],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[161],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[160],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[143],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14462,a[2]=((C_word)li324),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14508,a[2]=((C_word)li329),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[586],C_fix(32512),t25,t26,t27);}

/* a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14508(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_14508,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6975,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t7,t2);}

/* k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6975,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_6993,a[2]=t11,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t13,a[9]=t5,a[10]=t9,a[11]=t3,tmp=(C_word)a,a+=12,tmp);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7450,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t16,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4931(t17,t18,C_fix(14864));}

/* k7448 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7450,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7454,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  add-emit-info");
f_4975(t2,lf[583],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7457,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7484,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  get-emit-info");
f_4963(t3,lf[573],((C_word*)((C_word*)t0)[6])[1]);}}

/* k7482 in k7448 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7484,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_7457(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7472,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7476,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 264  parse-unit-position");
f_4903(t3,t4);}}

/* k7474 in k7482 in k7448 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-error");
f_4795(((C_word*)t0)[2],lf[585],t1);}

/* k7470 in k7482 in k7448 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k7455 in k7448 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7457,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7461,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  add-emit-info");
f_4975(t2,lf[584],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k7459 in k7455 in k7448 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_6993(t4,t3);}

/* k7452 in k7448 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_6993(t3,t2);}

/* k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_6993(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6993,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_7000,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7439,a[2]=t4,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7443,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t6,t7,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}
else{
t5=t4;
f_7000(t5,C_SCHEME_UNDEFINED);}}

/* k7441 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  append");
t2=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k7437 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_7000(t3,t2);}

/* k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_7000(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7000,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_7003,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7314,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=t5,a[7]=((C_word)li328),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_7314(t7,t2,t3);}

/* do1187 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_7314(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7314,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7324,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7335,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t4,t5);}}

/* k7333 in do1187 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7335,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7337,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li327),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_7337(t5,((C_word*)t0)[2],t1);}

/* do1190 in k7333 in do1187 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_7337(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7337,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_7351,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 264  append");
t9=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k7349 in do1190 in k7333 in do1187 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7351,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7354,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7404,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 264  append");
t7=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_7354(t4,C_SCHEME_UNDEFINED);}}

/* k7402 in k7349 in do1190 in k7333 in do1187 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_7354(t3,t2);}

/* k7352 in k7349 in do1190 in k7333 in do1187 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_7354(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7354,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7357,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7389,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 264  append");
t6=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_7357(t3,C_SCHEME_UNDEFINED);}}

/* k7387 in k7352 in k7349 in do1190 in k7333 in do1187 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_7357(t3,t2);}

/* k7355 in k7352 in k7349 in do1190 in k7333 in do1187 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_7357(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7357,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7360,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7370,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  fifth");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k7368 in k7355 in k7352 in k7349 in do1190 in k7333 in do1187 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7370,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7374,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7382,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  fifth");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_7360(t2,C_SCHEME_UNDEFINED);}}

/* k7380 in k7368 in k7355 in k7352 in k7349 in do1190 in k7333 in do1187 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7382,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 264  append");
t3=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k7372 in k7368 in k7355 in k7352 in k7349 in do1190 in k7333 in do1187 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_7360(t3,t2);}

/* k7358 in k7355 in k7352 in k7349 in do1190 in k7333 in do1187 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_7360(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_7337(t3,((C_word*)t0)[2],t2);}

/* k7322 in do1187 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_7314(t3,((C_word*)t0)[2],t2);}

/* k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7003,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_7006,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7278,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t5,a[5]=((C_word*)t0)[11],a[6]=((C_word)li326),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_7278(t7,t2,t3);}

/* do1201 in k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_7278(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7278,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7289,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7304,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k7302 in do1201 in k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7304,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 264  append");
t3=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k7287 in do1201 in k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_7278(t4,((C_word*)t0)[2],t3);}

/* k7004 in k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7006,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7010,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 264  append");
t3=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k7008 in k7004 in k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7010,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7013,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7222,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word)li325),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_7222(t8,t3,t4);}

/* do1206 in k7008 in k7004 in k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_7222(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7222,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7232,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t3,t4);}}

/* k7230 in do1206 in k7008 in k7004 in k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7232,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7235,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k7233 in k7230 in do1206 in k7008 in k7004 in k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7235,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7238,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7256,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4931(t5,t6,C_fix(20224));}

/* k7254 in k7233 in k7230 in do1206 in k7008 in k7004 in k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7256,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[145],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_7238(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_7238(t2,C_SCHEME_UNDEFINED);}}

/* k7236 in k7233 in k7230 in do1206 in k7008 in k7004 in k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_7238(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7238,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7242,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 264  append");
t4=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k7240 in k7236 in k7233 in k7230 in do1206 in k7008 in k7004 in k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_7222(t4,((C_word*)t0)[2],t3);}

/* k7011 in k7008 in k7004 in k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7013,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7016,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[9])[1]))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_7016(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[144],((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_7016(t6,t5);}}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_SCHEME_FALSE);
t4=t2;
f_7016(t4,t3);}}

/* k7014 in k7011 in k7008 in k7004 in k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_7016(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7016,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7019,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7185,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  fifth");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k7183 in k7014 in k7011 in k7008 in k7004 in k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7185,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7189,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7193,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  fifth");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_7019(t3,t2);}}

/* k7191 in k7183 in k7014 in k7011 in k7008 in k7004 in k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  emit");
f_5003(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k7187 in k7183 in k7014 in k7011 in k7008 in k7004 in k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_7019(t3,t2);}

/* k7017 in k7014 in k7011 in k7008 in k7004 in k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_7019(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7019,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7047,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t4=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[582]);}
else{
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t4);
t6=(C_word)C_a_i_cons(&a,2,lf[414],t5);
t7=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,3,lf[503],((C_word*)((C_word*)t0)[3])[1],t6));}}

/* k7045 in k7017 in k7014 in k7011 in k7008 in k7004 in k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7047,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7050,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t3=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[581]);}

/* k7048 in k7045 in k7017 in k7014 in k7011 in k7008 in k7004 in k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7050,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_7053,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t3=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[580]);}

/* k7051 in k7048 in k7045 in k7017 in k7014 in k7011 in k7008 in k7004 in k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7053,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_7056,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t3=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[579]);}

/* k7054 in k7051 in k7048 in k7045 in k7017 in k7014 in k7011 in k7008 in k7004 in k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7056,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7059,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t3=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[578]);}

/* k7057 in k7054 in k7051 in k7048 in k7045 in k7017 in k7014 in k7011 in k7008 in k7004 in k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[150],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7059,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[9],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[499],C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,2,lf[500],t4);
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
t7=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[9],((C_word*)t0)[8]);
t8=(C_word)C_a_i_list(&a,3,lf[499],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[502],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,t1);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,2,lf[311],lf[470]);
t14=(C_word)C_a_i_list(&a,2,lf[311],lf[471]);
t15=(C_word)C_a_i_list(&a,3,lf[469],t13,t14);
t16=(C_word)C_a_i_list(&a,2,t15,((C_word*)t0)[7]);
t17=(C_word)C_a_i_list(&a,4,lf[5],lf[577],t16,((C_word*)t0)[10]);
t18=(C_word)C_a_i_list(&a,2,lf[192],t17);
t19=(C_word)C_a_i_list(&a,2,t1,C_fix(-2));
t20=(C_word)C_a_i_list(&a,4,lf[499],t12,t18,t19);
t21=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t22=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_7118,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t10,a[6]=t11,a[7]=t20,a[8]=t21,tmp=(C_word)a,a+=9,tmp);
t23=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
C_trace("##sys#append");
t24=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t22,((C_word*)((C_word*)t0)[2])[1],t23);}

/* k7116 in k7057 in k7054 in k7051 in k7048 in k7045 in k7017 in k7014 in k7011 in k7008 in k7004 in k7001 in k6998 in k6991 in k6973 in a14507 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7118,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[401],t1);
t3=(C_word)C_a_i_list(&a,3,lf[498],((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_list(&a,3,lf[499],C_SCHEME_END_OF_LIST,t3);
t5=(C_word)C_a_i_list(&a,3,lf[472],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,3,lf[499],((C_word*)t0)[6],t5);
t7=(C_word)C_a_i_list(&a,2,lf[473],t6);
t8=(C_word)C_a_i_list(&a,3,lf[503],((C_word*)t0)[5],t7);
t9=(C_word)C_a_i_list(&a,3,lf[499],((C_word*)t0)[4],t8);
t10=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,3,lf[503],((C_word*)((C_word*)t0)[2])[1],t9));}

/* a14461 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14462(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14462,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14478,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  fifth");
t11=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k14476 in a14461 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14478,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14481,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  sixth");
t3=C_retrieve(lf[29]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k14479 in k14476 in a14461 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14481,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14484,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_14484(t7,t6);}
else{
t5=t4;
f_14484(t5,C_SCHEME_UNDEFINED);}}

/* k14482 in k14479 in k14476 in a14461 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_14484(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14484,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14487,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_14487(t5,t4);}
else{
t3=t2;
f_14487(t3,C_SCHEME_UNDEFINED);}}

/* k14485 in k14482 in k14479 in k14476 in a14461 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_14487(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14487,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14498,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-position");
f_4903(t3,((C_word*)t0)[8]);}

/* k14496 in k14485 in k14482 in k14479 in k14476 in a14461 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k14454 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(32512),t1);}

/* k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7491,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7494,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14311,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[120],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[143],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[144],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[143],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14317,a[2]=((C_word)li323),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[576],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a14316 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14317(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14317,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14330,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_14330(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14356,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 264  remove-token-type");
f_6181(t12,t13,C_fix(256));}}

/* k14354 in a14316 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14356,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14330(t4,t3);}

/* k14328 in a14316 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_14330(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14330,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k14309 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(37632),t1);}

/* k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7494,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7497,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13854,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[120],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[143],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[143],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[143],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[144],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[143],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13860,a[2]=((C_word)li319),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13899,a[2]=((C_word)li322),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[575],C_fix(36352),t23,t24,t25);}

/* a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13899(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_13899,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13903,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t6,t2);}

/* k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13903,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[175]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13912,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13915,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4931(t7,t2,C_fix(24576));}

/* k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13915,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13924,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li320),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_13924(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13973,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t2,t3);}}

/* k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13973,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13976,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13976,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13979,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13979,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_14191,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 264  append");
t3=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14191,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13988,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_13988(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14129,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 264  symbol->string");
t15=*((C_word*)lf[19]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k14127 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14129,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14138,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14163,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 264  substring");
t6=*((C_word*)lf[196]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_14138(t4,C_SCHEME_FALSE);}}

/* k14161 in k14127 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_14138(t2,(C_word)C_i_string_equal_p(t1,lf[574]));}

/* k14136 in k14127 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_14138(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14138,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14145,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14149,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 264  substring");
t5=*((C_word*)lf[196]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_13988(t2,C_SCHEME_UNDEFINED);}}

/* k14147 in k14136 in k14127 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  string->symbol");
t2=*((C_word*)lf[140]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k14143 in k14136 in k14127 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_13988(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k13986 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_13988(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13988,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13991,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_14066,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4931(t3,((C_word*)t0)[2],C_fix(24064));}

/* k14064 in k13986 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14066,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14070,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 264  add-emit-info");
f_4975(t2,lf[571],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14107,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4931(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k14105 in k14064 in k13986 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14107,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14111,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 264  add-emit-info");
f_4975(t2,lf[573],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_13991(t2,C_SCHEME_UNDEFINED);}}

/* k14109 in k14105 in k14064 in k13986 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14111,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14115,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k14113 in k14109 in k14105 in k14064 in k13986 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14115,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[564],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[572]);
t6=((C_word*)t0)[2];
f_13991(t6,t5);}

/* k14068 in k14064 in k13986 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14070,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14074,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k14072 in k14068 in k14064 in k13986 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14074,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14077,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14101,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  get-emit-info");
f_4963(t4,lf[571],((C_word*)((C_word*)t0)[2])[1]);}

/* k14099 in k14072 in k14068 in k14064 in k13986 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14101,2,t0,t1);}
t2=(C_word)C_eqp(lf[570],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[383]);
t4=(C_word)C_a_i_list(&a,3,lf[499],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[473],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14077(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_14077(t3,C_SCHEME_UNDEFINED);}}

/* k14075 in k14072 in k14068 in k14064 in k13986 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_14077(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14077,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[564],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[569]);
t5=((C_word*)t0)[2];
f_13991(t5,t4);}

/* k13989 in k13986 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_13991(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13991,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13994,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14005,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14063,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  symbol->string");
t5=*((C_word*)lf[19]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k14061 in k13989 in k13986 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  string-append");
t2=*((C_word*)lf[193]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[568]);}

/* k14003 in k13989 in k13986 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14005,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14007,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li321),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_14007(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do1288 in k14003 in k13989 in k13986 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_14007(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14007,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14022,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  string-append");
t6=*((C_word*)lf[193]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[566]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14026,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14055,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 264  symbol->string");
t8=*((C_word*)lf[19]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k14053 in do1288 in k14003 in k13989 in k13986 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  string-append");
t2=*((C_word*)lf[193]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k14024 in do1288 in k14003 in k13989 in k13986 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14026,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14029,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_14029(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14043,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  string-append");
t6=*((C_word*)lf[193]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[567]);}}

/* k14041 in k14024 in do1288 in k14003 in k13989 in k13986 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14029(t3,t2);}

/* k14027 in k14024 in do1288 in k14003 in k13989 in k13986 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_14029(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_14007(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k14020 in do1288 in k14003 in k13989 in k13986 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_14022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14022,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[204],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k13992 in k13989 in k13986 in k14189 in k13977 in k13974 in k13971 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13994,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_13912(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do1262 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_13924(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13924,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13934,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k13932 in do1262 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13934,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13940,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  sprintf");
t4=C_retrieve(lf[5]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[565],t2);}

/* k13938 in k13932 in do1262 in k13913 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13940,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[564],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[203],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_13924(t9,((C_word*)t0)[2],t8);}

/* k13910 in k13901 in a13898 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a13859 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13860(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13860,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13871,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13877,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4931(t9,t7,C_fix(24576));}

/* k13875 in a13859 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13877,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13893,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 264  remove-token-type");
f_6181(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_13871(t2,C_SCHEME_UNDEFINED);}}

/* k13891 in k13875 in a13859 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13893,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13871(t5,t4);}

/* k13869 in a13859 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_13871(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k13852 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(36352),t1);}

/* k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7497,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7500,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13778,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[144],t19);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[563],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k13776 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(36608),t1);}

/* k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7500,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7503,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13734,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[161],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13740,a[2]=((C_word)li317),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13754,a[2]=((C_word)li318),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4545(t3,lf[562],C_fix(36864),t5,t6,t7);}

/* a13753 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13754(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_13754,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13762,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13766,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t6,t2);}

/* k13764 in a13753 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  emit");
f_5003(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k13760 in a13753 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13762,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[175],t1));}

/* a13739 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13740(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13740,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13748,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  parse-unit-position");
f_4903(t4,t5);}

/* k13746 in a13739 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k13732 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(36864),t1);}

/* k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7503,2,t0,t1);}
t2=lf[188]=C_SCHEME_FALSE;;
t3=lf[189]=C_SCHEME_FALSE;;
t4=lf[190]=C_SCHEME_FALSE;;
t5=C_mutate((C_word*)lf[191]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7509,a[2]=((C_word)li132),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[203]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7680,a[2]=((C_word)li136),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[213]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7859,a[2]=((C_word)li137),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[214]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7868,a[2]=((C_word)li138),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[222]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7915,a[2]=((C_word)li139),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[224]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7921,a[2]=((C_word)li140),tmp=(C_word)a,a+=3,tmp));
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7940,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13726,a[2]=((C_word)li316),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  ##sys#register-macro-2");
t13=C_retrieve(lf[553]);
((C_proc4)C_retrieve_proc(t13))(4,t13,t11,lf[560],t12);}

/* a13725 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13726(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13726,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11293,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  gensym");
t4=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[561]);}

/* k11291 in a13725 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11293,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11296,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  parse-iteration");
f_11275(t2,lf[560],((C_word*)t0)[2],C_retrieve2(lf[424],"*loop-operators*"));}

/* k11294 in k11291 in a13725 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11296,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_assoc(lf[383],C_retrieve2(lf[424],"*loop-operators*"));
t7=(C_word)C_i_cadddr(t6);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11303,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11448,a[2]=t8,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11462,a[2]=t1,a[3]=t9,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  loop-returning");
t11=C_retrieve2(lf[235],"loop-returning");
f_8047(3,t11,t10,t1);}

/* k11460 in k11294 in k11291 in a13725 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11462,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[3];
f_11448(t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11458,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  loop-returning");
t3=C_retrieve2(lf[235],"loop-returning");
f_8047(3,t3,t2,((C_word*)t0)[2]);}}

/* k11456 in k11460 in k11294 in k11291 in a13725 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_11448(t2,(C_word)C_i_car(t1));}

/* k11446 in k11294 in k11291 in a13725 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_11448(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  returnfn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k11301 in k11294 in k11291 in a13725 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11303,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11307,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  loop-end-tests");
t4=C_retrieve2(lf[230],"loop-end-tests");
f_7999(3,t4,t3,((C_word*)t0)[2]);}

/* k11305 in k11301 in k11294 in k11291 in a13725 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11307,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11310,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(t1))){
t3=t2;
f_11310(t3,C_SCHEME_END_OF_LIST);}
else{
t3=(C_word)C_i_cdr(t1);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(t1):(C_word)C_a_i_cons(&a,2,lf[144],t1));
t6=(C_word)C_a_i_list(&a,4,lf[176],t5,lf[559],C_SCHEME_FALSE);
t7=t2;
f_11310(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k11308 in k11305 in k11301 in k11294 in k11291 in a13725 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_11310(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11310,NULL,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11321,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  loop-bindings");
t4=C_retrieve2(lf[227],"loop-bindings");
f_7963(3,t4,t3,((C_word*)t0)[2]);}

/* k11319 in k11308 in k11305 in k11301 in k11294 in k11291 in a13725 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11321,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11325,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11329,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  loop-initially");
t4=C_retrieve2(lf[229],"loop-initially");
f_7987(3,t4,t3,((C_word*)t0)[3]);}

/* k11327 in k11319 in k11308 in k11305 in k11301 in k11294 in k11291 in a13725 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11329,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[383]);
t3=(C_word)C_a_i_list(&a,1,lf[518]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11393,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t3,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11397,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11401,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  loop-looping");
t7=C_retrieve2(lf[231],"loop-looping");
f_8011(3,t7,t6,((C_word*)t0)[3]);}

/* k11399 in k11327 in k11319 in k11308 in k11305 in k11301 in k11294 in k11291 in a13725 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11401,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11405,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11409,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  loop-stepping");
t4=C_retrieve2(lf[233],"loop-stepping");
f_8023(3,t4,t3,((C_word*)t0)[2]);}

/* k11407 in k11399 in k11327 in k11319 in k11308 in k11305 in k11301 in k11294 in k11291 in a13725 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11409,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
C_trace("ChickenBridge.scm: 265  ##sys#append");
t4=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t1,t3);}

/* k11403 in k11399 in k11327 in k11319 in k11308 in k11305 in k11301 in k11294 in k11291 in a13725 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  ##sys#append");
t2=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k11395 in k11327 in k11319 in k11308 in k11305 in k11301 in k11294 in k11291 in a13725 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  ##sys#append");
t2=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k11391 in k11327 in k11319 in k11308 in k11305 in k11301 in k11294 in k11291 in a13725 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11393,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[548],t3);
t5=(C_word)C_a_i_list(&a,3,lf[499],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[473],t5);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11361,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11365,a[2]=t7,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  loop-finally");
t9=C_retrieve2(lf[234],"loop-finally");
f_8035(3,t9,t8,((C_word*)t0)[2]);}

/* k11363 in k11391 in k11327 in k11319 in k11308 in k11305 in k11301 in k11294 in k11291 in a13725 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11365,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 265  ##sys#append");
t3=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k11359 in k11391 in k11327 in k11319 in k11308 in k11305 in k11301 in k11294 in k11291 in a13725 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11361,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[499],t3);
t5=(C_word)C_a_i_list(&a,2,lf[473],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 265  ##sys#append");
t7=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],((C_word*)t0)[2],t6);}

/* k11323 in k11319 in k11308 in k11305 in k11301 in k11294 in k11291 in a13725 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11325,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[548],t2));}

/* k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7940,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7943,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13712,a[2]=((C_word)li315),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  ##sys#register-macro");
t4=C_retrieve(lf[517]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[558],t3);}

/* a13711 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13712(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13712,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,3,lf[557],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[170],t3,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,3,lf[175],t5,t3));}

/* k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7943,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7946,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13683,a[2]=((C_word)li314),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  ##sys#register-macro");
t4=C_retrieve(lf[517]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[556],t3);}

/* a13682 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13683(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13683,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13687,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  gensym");
t4=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[555]);}

/* k13685 in a13682 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13687,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[21],((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,2,t1,t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_a_i_list(&a,2,lf[178],((C_word*)t0)[3]);
t6=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,4,lf[548],t4,t6,t1));}

/* k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7946,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7949,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13680,a[2]=((C_word)li313),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  ##sys#register-macro");
t4=C_retrieve(lf[517]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[554],t3);}

/* a13679 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13680(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13680,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[492],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7949,2,t0,t1);}
t2=C_mutate(&lf[226],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7957,a[2]=((C_word)li141),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[227],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7963,a[2]=((C_word)li142),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[228],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7975,a[2]=((C_word)li143),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[229],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7987,a[2]=((C_word)li144),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[230],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7999,a[2]=((C_word)li145),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[231],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8011,a[2]=((C_word)li146),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[232],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8017,a[2]=((C_word)li147),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[233],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8023,a[2]=((C_word)li148),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[234],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8035,a[2]=((C_word)li149),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[235],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8047,a[2]=((C_word)li150),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[236],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8059,a[2]=((C_word)li152),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[246],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8210,a[2]=((C_word)li155),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[247],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8281,a[2]=((C_word)li156),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[248],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8287,a[2]=((C_word)li157),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[249],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8293,a[2]=((C_word)li158),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[250],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8299,a[2]=((C_word)li162),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[260],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8459,a[2]=((C_word)li163),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[268],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8541,a[2]=((C_word)li165),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[298],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8923,a[2]=((C_word)li168),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[301],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8970,a[2]=((C_word)li170),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[322],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9321,a[2]=((C_word)li172),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[330],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9463,a[2]=((C_word)li174),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[344],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9656,a[2]=((C_word)li176),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[347],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9723,a[2]=((C_word)li177),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[350],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9761,a[2]=((C_word)li178),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[353],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9920,a[2]=((C_word)li184),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[382],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10466,a[2]=((C_word)li185),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[384],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10472,a[2]=((C_word)li186),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[390],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10538,a[2]=((C_word)li187),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[396],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10629,a[2]=((C_word)li188),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[399],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10730,a[2]=((C_word)li192),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[406],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10861,a[2]=((C_word)li197),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[413],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11275,a[2]=((C_word)li202),tmp=(C_word)a,a+=3,tmp));
t35=(C_word)C_a_i_list(&a,3,lf[331],C_retrieve2(lf[330],"parse-with"),C_SCHEME_FALSE);
t36=(C_word)C_a_i_list(&a,3,lf[240],C_retrieve2(lf[350],"parse-initially"),C_SCHEME_FALSE);
t37=(C_word)C_a_i_list(&a,3,lf[421],C_retrieve2(lf[298],"parse-repeat"),lf[418]);
t38=(C_word)C_a_i_list(&a,2,lf[276],C_retrieve2(lf[268],"parse-numerical-for"));
t39=(C_word)C_a_i_list(&a,2,lf[272],C_retrieve2(lf[268],"parse-numerical-for"));
t40=(C_word)C_a_i_list(&a,2,lf[274],C_retrieve2(lf[268],"parse-numerical-for"));
t41=(C_word)C_a_i_list(&a,2,lf[283],C_retrieve2(lf[268],"parse-numerical-for"));
t42=(C_word)C_a_i_list(&a,2,lf[273],C_retrieve2(lf[268],"parse-numerical-for"));
t43=(C_word)C_a_i_list(&a,2,lf[275],C_retrieve2(lf[268],"parse-numerical-for"));
t44=(C_word)C_a_i_list(&a,2,lf[310],C_retrieve2(lf[301],"parse-sequence-iteration"));
t45=(C_word)C_a_i_list(&a,2,lf[319],C_retrieve2(lf[301],"parse-sequence-iteration"));
t46=(C_word)C_a_i_list(&a,2,lf[302],C_retrieve2(lf[301],"parse-sequence-iteration"));
t47=(C_word)C_a_i_list(&a,2,lf[323],C_retrieve2(lf[322],"parse-general-iteration"));
t48=(C_word)C_a_i_list(&a,2,lf[307],C_retrieve2(lf[301],"parse-sequence-iteration"));
t49=(C_word)C_a_i_list(&a,14,lf[269],C_retrieve2(lf[260],"parse-for"),lf[418],t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48);
t50=(C_word)C_a_i_list(&a,3,lf[422],C_retrieve2(lf[260],"parse-for"),lf[418]);
t51=(C_word)C_a_i_list(&a,3,lf[414],C_retrieve2(lf[344],"parse-do"),lf[404]);
t52=(C_word)C_a_i_list(&a,3,lf[364],C_retrieve2(lf[353],"parse-accumulation"),lf[404]);
t53=(C_word)C_a_i_list(&a,3,lf[15],C_retrieve2(lf[353],"parse-accumulation"),lf[404]);
t54=(C_word)C_a_i_list(&a,3,lf[369],C_retrieve2(lf[353],"parse-accumulation"),lf[404]);
t55=(C_word)C_a_i_list(&a,3,lf[354],C_retrieve2(lf[353],"parse-accumulation"),lf[404]);
t56=(C_word)C_a_i_list(&a,3,lf[355],C_retrieve2(lf[353],"parse-accumulation"),lf[404]);
t57=(C_word)C_a_i_list(&a,3,lf[357],C_retrieve2(lf[353],"parse-accumulation"),lf[404]);
t58=(C_word)C_a_i_list(&a,3,lf[358],C_retrieve2(lf[353],"parse-accumulation"),lf[404]);
t59=(C_word)C_a_i_list(&a,4,lf[391],C_retrieve2(lf[390],"parse-thereis"),lf[404],C_retrieve2(lf[382],"loop-return"));
t60=(C_word)C_a_i_list(&a,4,lf[392],C_retrieve2(lf[390],"parse-thereis"),lf[404],C_retrieve2(lf[382],"loop-return"));
t61=(C_word)C_a_i_list(&a,4,lf[393],C_retrieve2(lf[390],"parse-thereis"),lf[404],C_retrieve2(lf[382],"loop-return"));
t62=(C_word)C_a_i_list(&a,4,lf[383],C_retrieve2(lf[396],"parse-return"),lf[404],C_retrieve2(lf[382],"loop-return"));
t63=(C_word)C_a_i_list(&a,3,lf[387],C_retrieve2(lf[384],"parse-while-until"),C_SCHEME_FALSE);
t64=(C_word)C_a_i_list(&a,3,lf[386],C_retrieve2(lf[384],"parse-while-until"),C_SCHEME_FALSE);
t65=(C_word)C_a_i_list(&a,3,lf[423],C_retrieve2(lf[406],"parse-conditional"),lf[404]);
t66=(C_word)C_a_i_list(&a,3,lf[409],C_retrieve2(lf[406],"parse-conditional"),lf[404]);
t67=(C_word)C_a_i_list(&a,3,lf[176],C_retrieve2(lf[406],"parse-conditional"),lf[404]);
t68=(C_word)C_a_i_list(&a,3,lf[244],C_retrieve2(lf[347],"parse-finally"),C_SCHEME_FALSE);
t69=(C_word)C_a_i_list(&a,23,t35,t36,t37,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68);
t70=C_mutate(&lf[424],t69);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11469,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13538,a[2]=((C_word)li312),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  ##sys#register-macro-2");
t73=C_retrieve(lf[553]);
((C_proc4)C_retrieve_proc(t73))(4,t73,t71,lf[418],t72);}

/* a13537 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13538(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13538,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11475,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  parse-iteration");
f_11275(t3,lf[418],t2,C_retrieve2(lf[424],"*loop-operators*"));}

/* k11473 in a13537 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11475,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11478,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_assoc(lf[383],C_retrieve2(lf[424],"*loop-operators*"));
t4=(C_word)C_i_cadddr(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11607,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  loop-returning");
t6=C_retrieve2(lf[235],"loop-returning");
f_8047(3,t6,t5,t1);}

/* k11605 in k11473 in a13537 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11607,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,t2);
C_apply(4,0,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k11476 in k11473 in a13537 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11478,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11489,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  loop-bindings");
t3=C_retrieve2(lf[227],"loop-bindings");
f_7963(3,t3,t2,((C_word*)t0)[2]);}

/* k11487 in k11476 in k11473 in a13537 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11489,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11493,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11497,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  loop-initially");
t4=C_retrieve2(lf[229],"loop-initially");
f_7987(3,t4,t3,((C_word*)t0)[2]);}

/* k11495 in k11487 in k11476 in k11473 in a13537 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11497,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11517,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11521,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  loop-end-tests");
t4=C_retrieve2(lf[230],"loop-end-tests");
f_7999(3,t4,t3,((C_word*)t0)[2]);}

/* k11519 in k11495 in k11487 in k11476 in k11473 in a13537 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11521,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11524,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cdr(t1);
t4=(C_truep(t3)?(C_word)C_a_i_cons(&a,2,lf[144],t1):(C_word)C_i_car(t1));
t5=(C_word)C_a_i_list(&a,2,lf[518],lf[106]);
t6=(C_word)C_a_i_list(&a,3,lf[176],t4,t5);
t7=t2;
f_11524(t7,(C_word)C_a_i_list(&a,1,t6));}
else{
t3=t2;
f_11524(t3,C_SCHEME_END_OF_LIST);}}

/* k11522 in k11519 in k11495 in k11487 in k11476 in k11473 in a13537 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_11524(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11524,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11528,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11532,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  loop-looping");
t4=C_retrieve2(lf[231],"loop-looping");
f_8011(3,t4,t3,((C_word*)t0)[2]);}

/* k11530 in k11522 in k11519 in k11495 in k11487 in k11476 in k11473 in a13537 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11532,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11536,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11540,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  loop-stepping");
t4=C_retrieve2(lf[233],"loop-stepping");
f_8023(3,t4,t3,((C_word*)t0)[2]);}

/* k11538 in k11530 in k11522 in k11519 in k11495 in k11487 in k11476 in k11473 in a13537 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11540,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[518],lf[549]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11556,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11560,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  loop-finally");
t5=C_retrieve2(lf[234],"loop-finally");
f_8035(3,t5,t4,((C_word*)t0)[2]);}

/* k11558 in k11538 in k11530 in k11522 in k11519 in k11495 in k11487 in k11476 in k11473 in a13537 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11560,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("##sys#append");
t3=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k11554 in k11538 in k11530 in k11522 in k11519 in k11495 in k11487 in k11476 in k11473 in a13537 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11556,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[106],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
C_trace("##sys#append");
t4=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k11534 in k11530 in k11522 in k11519 in k11495 in k11487 in k11476 in k11473 in a13537 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k11526 in k11522 in k11519 in k11495 in k11487 in k11476 in k11473 in a13537 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k11515 in k11495 in k11487 in k11476 in k11473 in a13537 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11517,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[549],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[550],t2);
t4=(C_word)C_a_i_list(&a,3,lf[551],lf[552],t3);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("##sys#append");
t6=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[3],((C_word*)t0)[2],t5);}

/* k11491 in k11487 in k11476 in k11473 in a13537 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11493,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[548],t2));}

/* k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word ab[84],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11469,2,t0,t1);}
t2=C_set_block_item(lf[425],0,C_fix(8));
t3=C_set_block_item(lf[426],0,C_fix(9));
t4=C_set_block_item(lf[427],0,C_fix(10));
t5=C_set_block_item(lf[428],0,C_fix(11));
t6=C_set_block_item(lf[429],0,C_fix(12));
t7=C_set_block_item(lf[430],0,C_fix(13));
t8=C_set_block_item(lf[431],0,C_fix(14));
t9=C_mutate((C_word*)lf[432]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11620,a[2]=((C_word)li213),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[441]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11786,a[2]=((C_word)li215),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[442]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11804,a[2]=((C_word)li217),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[443]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11819,a[2]=((C_word)li219),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[444]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11838,a[2]=((C_word)li221),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[445]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11853,a[2]=((C_word)li223),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[446]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11872,a[2]=((C_word)li225),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[447]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11887,a[2]=((C_word)li227),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[448]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11906,a[2]=((C_word)li229),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[449]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11925,a[2]=((C_word)li231),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[450]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11948,a[2]=((C_word)li233),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[451]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11967,a[2]=((C_word)li235),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[452]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11990,a[2]=((C_word)li238),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[453]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12037,a[2]=((C_word)li241),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[455]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12092,a[2]=((C_word)li243),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[456]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12111,a[2]=((C_word)li245),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[457]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12134,a[2]=((C_word)li247),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[458]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12162,a[2]=((C_word)li249),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[459]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12190,a[2]=((C_word)li251),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[460]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12218,a[2]=((C_word)li253),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[461]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12246,a[2]=((C_word)li255),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[462]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12274,a[2]=((C_word)li257),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[463]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12302,a[2]=((C_word)li259),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[464]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12330,a[2]=((C_word)li261),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[465]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12358,a[2]=((C_word)li263),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[466]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12386,a[2]=((C_word)li265),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[467]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12401,a[2]=((C_word)li271),tmp=(C_word)a,a+=3,tmp));
t36=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12448,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  hash-table-set!");
t37=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t37))(5,t37,t36,*((C_word*)lf[2]+1),lf[546],lf[547]);}

/* k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12448,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12451,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[544],lf[545]);}

/* k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12451,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12454,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[542],lf[543]);}

/* k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12454,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12457,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[540],lf[541]);}

/* k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12457,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12460,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[538],lf[539]);}

/* k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12460,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12463,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[536],lf[537]);}

/* k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12463,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12466,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[534],lf[535]);}

/* k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12466,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12469,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[532],lf[533]);}

/* k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12469,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12472,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[530],lf[531]);}

/* k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12472,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12475,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[528],lf[529]);}

/* k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12475,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12478,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[526],lf[527]);}

/* k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12478,2,t0,t1);}
t2=C_mutate((C_word*)lf[474]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12480,a[2]=((C_word)li273),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[475]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12537,a[2]=((C_word)li275),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[476]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12594,a[2]=((C_word)li277),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12603,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 267  hash-table-set!");
t6=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,*((C_word*)lf[2]+1),lf[524],lf[525]);}

/* k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12603,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12606,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 267  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[522],lf[523]);}

/* k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12606,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12609,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 267  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[520],lf[521]);}

/* k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12609,2,t0,t1);}
t2=C_mutate((C_word*)lf[204]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12611,a[2]=((C_word)li278),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[192]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12625,a[2]=((C_word)li279),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[477]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12639,a[2]=((C_word)li280),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[478]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12642,a[2]=((C_word)li281),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[479],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12654,a[2]=((C_word)li283),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[481],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12663,a[2]=((C_word)li285),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[482],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12707,a[2]=((C_word)li287),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[215]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12729,a[2]=((C_word)li289),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[483]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12748,a[2]=((C_word)li296),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[484]+1,C_retrieve(lf[478]));
t12=C_mutate((C_word*)lf[485]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12916,a[2]=((C_word)li298),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[491]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12979,a[2]=((C_word)li300),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[492]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12988,a[2]=((C_word)li302),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[493]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12994,a[2]=((C_word)li304),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[494]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13003,a[2]=((C_word)li306),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[496]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13061,a[2]=((C_word)li308),tmp=(C_word)a,a+=3,tmp));
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13071,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t19=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13532,a[2]=((C_word)li311),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 407  ##sys#register-macro");
t20=C_retrieve(lf[517]);
((C_proc4)C_retrieve_proc(t20))(4,t20,t18,lf[518],t19);}

/* a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13532(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr4r,(void*)f_13532r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_13532r(t0,t1,t2,t3,t4);}}

static void C_ccall f_13532r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a=C_alloc(17);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13086,a[2]=t2,a[3]=t12,a[4]=t6,a[5]=t10,a[6]=t1,a[7]=t8,a[8]=t3,tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_listp(t2))){
t14=t13;
f_13086(2,t14,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 416  error");
t14=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t14))(4,t14,t13,lf[516],t2);}}

/* k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13086,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13089,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[8]))){
C_trace("ChickenBridge.scm: 420  error");
t3=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[514]);}
else{
t3=t2;
f_13089(2,t3,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 418  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[515],((C_word*)t0)[8]);}}

/* k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13089,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13092,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13367,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[7],a[5]=t4,a[6]=((C_word)li310),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_13367(t6,t2,((C_word*)t0)[2]);}

/* do2836 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_13367(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13367,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13377,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13387,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13475,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_length(t7);
C_trace("ChickenBridge.scm: 424  <");
C_lessp(5,0,t6,C_fix(0),t8,C_fix(4));}
else{
t6=t4;
f_13387(t6,C_SCHEME_FALSE);}}}

/* k13473 in do2836 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=((C_word*)t0)[2];
f_13387(t4,(C_word)C_i_symbolp(t3));}
else{
t2=((C_word*)t0)[2];
f_13387(t2,C_SCHEME_FALSE);}}

/* k13385 in do2836 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_13387(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13387,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[6]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_car(((C_word*)t0)[6]);
t5=(C_word)C_i_cadr(t4);
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13396,a[2]=t5,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t7=(C_word)C_i_car(((C_word*)t0)[6]);
t8=(C_word)C_i_cddr(t7);
if(C_truep((C_word)C_i_nullp(t8))){
t9=t6;
f_13396(t9,lf[512]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[6]);
t10=t6;
f_13396(t10,(C_word)C_i_caddr(t9));}}
else{
t2=(C_word)C_i_car(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 437  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],lf[513],t2);}}

/* k13394 in k13385 in do2836 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_13396(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13396,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13400,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 432  append");
t4=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[7])[1],t3);}

/* k13398 in k13394 in k13385 in do2836 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13400,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13404,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 433  append");
t5=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k13402 in k13398 in k13394 in k13385 in do2836 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13404,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13408,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13412,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[3],lf[512]);
if(C_truep(t5)){
t6=t4;
f_13412(t6,C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[2],((C_word*)t0)[3]);
t7=t4;
f_13412(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k13410 in k13402 in k13398 in k13394 in k13385 in do2836 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_13412(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 434  append");
t2=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k13406 in k13402 in k13398 in k13394 in k13385 in do2836 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13377(2,t3,t2);}

/* k13375 in do2836 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13367(t3,((C_word*)t0)[2],t2);}

/* k13090 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13092,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13095,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 439  gensym");
t3=C_retrieve(lf[172]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k13093 in k13090 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13095,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13098,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 440  gensym");
t3=C_retrieve(lf[172]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k13096 in k13093 in k13090 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13098,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_13101,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 441  gensym");
t3=C_retrieve(lf[172]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k13099 in k13096 in k13093 in k13090 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13101,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13104,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 442  gensym");
t3=C_retrieve(lf[172]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k13102 in k13099 in k13096 in k13093 in k13090 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13104,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_13107,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],a[12]=t5,a[13]=((C_word*)t0)[10],tmp=(C_word)a,a+=14,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13260,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13361,a[2]=t7,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 448  caar");
t10=*((C_word*)lf[509]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)((C_word*)t0)[3])[1]);}
else{
t9=t7;
f_13260(t9,C_SCHEME_FALSE);}}
else{
t8=t7;
f_13260(t8,C_SCHEME_FALSE);}}

/* k13359 in k13102 in k13099 in k13096 in k13093 in k13090 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13260(t2,(C_word)C_eqp(t1,lf[511]));}

/* k13258 in k13102 in k13099 in k13096 in k13093 in k13090 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_13260(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13260,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13267,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 449  cdar");
t3=*((C_word*)lf[507]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)t0)[2];
f_13107(2,t2,C_SCHEME_UNDEFINED);}}

/* k13265 in k13258 in k13102 in k13099 in k13096 in k13093 in k13090 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13267,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13269,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li309),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_13269(t5,((C_word*)t0)[2],t1);}

/* do2852 in k13265 in k13258 in k13102 in k13099 in k13096 in k13093 in k13090 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_13269(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13269,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13283,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13293,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13341,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 453  cdar");
t7=*((C_word*)lf[507]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}
else{
t6=t4;
f_13293(t6,C_SCHEME_FALSE);}}}

/* k13339 in do2852 in k13265 in k13258 in k13102 in k13099 in k13096 in k13093 in k13090 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13293(t2,(C_word)C_i_pairp(t1));}

/* k13291 in do2852 in k13265 in k13258 in k13102 in k13099 in k13096 in k13093 in k13090 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_13293(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13293,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13296,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 454  caar");
t3=*((C_word*)lf[509]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 460  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[4],lf[510],t2);}}

/* k13294 in k13291 in do2852 in k13265 in k13258 in k13102 in k13099 in k13096 in k13093 in k13090 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13296,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[506]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13317,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 456  cdar");
t4=*((C_word*)lf[507]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 459  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[4],lf[508],t3);}}

/* k13315 in k13294 in k13291 in do2852 in k13265 in k13258 in k13102 in k13099 in k13096 in k13093 in k13090 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_car(t1))){
t2=((C_word*)t0)[3];
f_13283(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
f_13283(2,t3,t2);}}

/* k13281 in do2852 in k13265 in k13258 in k13102 in k13099 in k13096 in k13093 in k13090 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13269(t3,((C_word*)t0)[2],t2);}

/* k13105 in k13102 in k13099 in k13096 in k13093 in k13090 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13107,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[13]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_13249,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t2,tmp=(C_word)a,a+=14,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[13]);
t5=(C_word)C_a_i_list(&a,1,C_fix(-1));
C_trace("ChickenBridge.scm: 411  ##sys#append");
t6=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t3,t4,t5);}

/* k13247 in k13105 in k13102 in k13099 in k13096 in k13093 in k13090 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13249,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[13],t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_13233,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=t2,tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13237,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
C_trace("ChickenBridge.scm: 411  ##sys#append");
t6=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,((C_word*)((C_word*)t0)[2])[1],t5);}

/* k13235 in k13247 in k13105 in k13102 in k13099 in k13096 in k13093 in k13090 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 411  ##sys#append");
t2=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k13231 in k13247 in k13105 in k13102 in k13099 in k13096 in k13093 in k13090 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[122],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13233,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[401],t1);
t3=(C_word)C_a_i_list(&a,3,lf[498],((C_word*)t0)[11],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[10])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13114,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t7=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
t8=(C_word)C_a_i_list(&a,2,lf[311],lf[470]);
t9=(C_word)C_a_i_list(&a,2,lf[311],lf[471]);
t10=(C_word)C_a_i_list(&a,3,lf[469],t8,t9);
t11=(C_word)C_a_i_list(&a,2,t10,((C_word*)t0)[2]);
t12=(C_word)C_a_i_list(&a,4,lf[5],lf[504],t11,((C_word*)t0)[9]);
t13=(C_word)C_a_i_list(&a,2,lf[192],t12);
t14=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(-2));
t15=(C_word)C_a_i_list(&a,4,lf[499],t7,t13,t14);
t16=(C_word)C_a_i_list(&a,3,lf[499],C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[10])[1]);
t17=(C_word)C_a_i_list(&a,3,lf[472],t15,t16);
t18=(C_word)C_a_i_list(&a,3,lf[499],t6,t17);
t19=(C_word)C_a_i_list(&a,2,lf[473],t18);
t20=C_mutate(((C_word *)((C_word*)t0)[10])+1,t19);
t21=t5;
f_13114(t21,t20);}
else{
t6=t5;
f_13114(t6,C_SCHEME_UNDEFINED);}}

/* k13112 in k13231 in k13247 in k13105 in k13102 in k13099 in k13096 in k13093 in k13090 in k13087 in k13084 in a13531 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_13114(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[90],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13114,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[6],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[499],C_SCHEME_END_OF_LIST,((C_word*)t0)[7]);
t5=(C_word)C_a_i_list(&a,2,lf[500],t4);
t6=(C_word)C_a_i_list(&a,1,lf[501]);
t7=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[6],lf[501]);
t8=(C_word)C_a_i_list(&a,3,lf[499],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[502],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,3,lf[503],t10,((C_word*)((C_word*)t0)[5])[1]);
t12=(C_word)C_a_i_list(&a,3,lf[499],t2,t11);
t13=(C_word)C_a_i_list(&a,3,lf[499],((C_word*)((C_word*)t0)[4])[1],t12);
t14=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[2])[1]));}

/* k13069 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13071,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13530,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 505  return-to-host");
t3=C_retrieve(lf[497]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k13528 in k13069 in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* hush in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13061,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13065,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12724,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[480]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k12722 in hush in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12724,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub2763,a[2]=((C_word)li307),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k13063 in hush in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 401  values");
C_values(2,0,((C_word*)t0)[2]);}

/* stop in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13003(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_13003r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_13003r(t0,t1,t2);}}

static void C_ccall f_13003r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13007,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 391  scheduler-stop");
f_12707(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13021,a[2]=t5,a[3]=((C_word)li305),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_13021(t7,t3,t2);}}

/* do2820 in stop in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_13021(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13021,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13031,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 395  scheduler-stop");
f_12707(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 396  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[495],t5);}}}

/* k13029 in do2820 in stop in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13021(t3,((C_word*)t0)[2],t2);}

/* k13005 in stop in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_13007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 397  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cont in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12994,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12998,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12702,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[480]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k12700 in cont in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12702,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub2753,a[2]=((C_word)li303),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k12996 in cont in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 387  values");
C_values(2,0,((C_word*)t0)[2]);}

/* paused? in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12988,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12684,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t3=C_retrieve(lf[480]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k12682 in paused? in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12684,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub2745,a[2]=((C_word)li301),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* pause in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12979,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12983,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12693,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[480]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k12691 in pause in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12693,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub2749,a[2]=((C_word)li299),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k12981 in pause in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* time-format in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12916(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2rv,(void*)f_12916r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_12916r(t0,t1,t2);}}

static void C_ccall f_12916r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
if(C_truep((C_word)C_vemptyp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12929,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12649,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t5=C_retrieve(lf[480]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
t4=(C_word)C_i_eqvp(t3,lf[487]);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12941,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t4)){
t6=t5;
f_12941(t6,t4);}
else{
t6=(C_word)C_eqp(t3,C_fix(1));
t7=t5;
f_12941(t7,(C_truep(t6)?t6:(C_word)C_eqp(t3,lf[490])));}}}

/* k12939 in time-format in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_12941(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(C_truep(t1)){
t2=C_mutate((C_word*)lf[484]+1,C_retrieve(lf[478]));
C_trace("ChickenBridge.scm: 369  scheduler-set-time-milliseconds");
f_12654(((C_word*)t0)[4],C_SCHEME_FALSE);}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],C_fix(1000));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)t0)[3],lf[488]));
if(C_truep(t3)){
t4=C_mutate((C_word*)lf[484]+1,C_retrieve(lf[477]));
C_trace("ChickenBridge.scm: 373  scheduler-set-time-milliseconds");
f_12654(((C_word*)t0)[4],C_SCHEME_TRUE);}
else{
t4=(C_word)C_i_vector_ref(((C_word*)t0)[2],C_fix(0));
C_trace("ChickenBridge.scm: 376  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[4],lf[489],t4);}}}

/* k12647 in time-format in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12649,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub2725,a[2]=((C_word)li297),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k12927 in time-format in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_fix(1000):lf[486]));}

/* sprout in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12748(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_12748r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_12748r(t0,t1,t2,t3);}}

static void C_ccall f_12748r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12750,a[2]=t2,a[3]=((C_word)li293),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12862,a[2]=t4,a[3]=((C_word)li294),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12867,a[2]=t5,a[3]=((C_word)li295),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-start27802801");
t7=t6;
f_12867(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-id27812799");
t9=t5;
f_12862(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body27782783");
t11=t4;
f_12750(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[61]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[0],t10);}}}}

/* def-start2780 in sprout in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_12867(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12867,NULL,2,t0,t1);}
C_trace("def-id27812799");
t2=((C_word*)t0)[2];
f_12862(t2,t1,C_fix(0));}

/* def-id2781 in sprout in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_12862(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12862,NULL,3,t0,t1,t2);}
C_trace("body27782783");
t3=((C_word*)t0)[2];
f_12750(t3,t1,t2,C_fix(-1));}

/* body2778 in sprout in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_12750(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12750,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12752,a[2]=t4,a[3]=((C_word)li290),tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12780,a[2]=t5,a[3]=((C_word)li291),tmp=(C_word)a,a+=4,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12810,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12821,a[2]=t6,a[3]=t7,a[4]=t10,a[5]=((C_word*)t0)[2],a[6]=((C_word)li292),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_12821(t12,t8,((C_word*)t0)[2]);}
else{
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12853,a[2]=((C_word*)t0)[2],a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12857,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t9,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 353  nextstart");
t11=t6;
f_12752(t11,t10);}}

/* k12855 in body2778 in sprout in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12857,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12861,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 353  nextid");
t3=((C_word*)t0)[2];
f_12780(t3,t2);}

/* k12859 in k12855 in body2778 in sprout in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 353  scheduler-sprout");
f_12663(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k12851 in body2778 in sprout in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_12810(2,t2,((C_word*)t0)[2]);}

/* do2792 in body2778 in sprout in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_12821(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12821,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12831,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12846,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 351  nextstart");
t6=((C_word*)t0)[2];
f_12752(t6,t5);}}

/* k12844 in do2792 in body2778 in sprout in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12846,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12850,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 351  nextid");
t3=((C_word*)t0)[2];
f_12780(t3,t2);}

/* k12848 in k12844 in do2792 in body2778 in sprout in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 351  scheduler-sprout");
f_12663(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k12829 in do2792 in body2778 in sprout in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_12821(t3,((C_word*)t0)[2],t2);}

/* k12808 in body2778 in sprout in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  values");
C_values(2,0,((C_word*)t0)[2]);}

/* nextid in body2778 in sprout in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_12780(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12780,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in body2778 in sprout in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_12752(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12752,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* load-sal-file in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12729(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12729,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12734,a[2]=((C_word)li288),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_12734 in load-sal-file in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12734(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12734,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12739,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[42]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_12739(2,t4,C_SCHEME_FALSE);}}

/* k12737 */
static void C_ccall f_12739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub2769(C_SCHEME_UNDEFINED,t1));}

/* scheduler-stop in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_12707(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12707,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12711,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[480]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k12709 in scheduler-stop in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12711,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub2758,a[2]=((C_word)li286),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],t2,t3);}

/* scheduler-sprout in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_12663(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12663,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12667,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("##sys#gc");
t6=C_retrieve(lf[480]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,C_SCHEME_FALSE);}

/* k12665 in scheduler-sprout in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12667,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_flonum_argumentp(((C_word*)t0)[5]);
t4=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub2738,a[2]=((C_word)li284),tmp=(C_word)a,a+=3,tmp);
((C_proc6)C_retrieve_proc(t5))(6,t5,((C_word*)t0)[3],t2,((C_word*)t0)[2],t3,t4);}

/* scheduler-set-time-milliseconds in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_12654(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12654,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12658,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[480]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k12656 in scheduler-set-time-milliseconds in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12658,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub2730,a[2]=((C_word)li282),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* current-time-seconds in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12642,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub2722(t2));}

/* current-time-milliseconds in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12639,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub2719(t2));}

/* print-error in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12625(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12625,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12630,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[42]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_12630(2,t4,C_SCHEME_FALSE);}}

/* k12628 in print-error in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub2714(C_SCHEME_UNDEFINED,t1));}

/* print-message in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12611(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12611,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12616,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[42]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_12616(2,t4,C_SCHEME_FALSE);}}

/* k12614 in print-message in k12607 in k12604 in k12601 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub2708(C_SCHEME_UNDEFINED,t1));}

/* cs:clear in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12594,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12599,a[2]=((C_word)li276),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_12599 in cs:clear in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12599,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub2700(C_SCHEME_UNDEFINED));}

/* cs:f in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12537(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_12537r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_12537r(t0,t1,t2);}}

static void C_ccall f_12537r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12541,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_12541(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12550,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12570,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_12570(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_12570(t8,C_SCHEME_FALSE);}}}

/* k12568 in cs:f in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_12570(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_12550(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_12550(t2,C_SCHEME_UNDEFINED);}}

/* k12548 in cs:f in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_12550(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12550,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12558,a[2]=((C_word)li274),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(2),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_12558 in k12548 in cs:f in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12558(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12558,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub2693(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k12539 in cs:f in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 267  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:i in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12480(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_12480r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_12480r(t0,t1,t2);}}

static void C_ccall f_12480r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12484,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_12484(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12493,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12513,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_12513(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_12513(t8,C_SCHEME_FALSE);}}}

/* k12511 in cs:i in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_12513(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_12493(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_12493(t2,C_SCHEME_UNDEFINED);}}

/* k12491 in cs:i in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_12493(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12493,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12501,a[2]=((C_word)li272),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(1),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_12501 in k12491 in cs:i in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12501(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12501,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub2682(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k12482 in cs:i in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k12458 in k12455 in k12452 in k12449 in k12446 in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 267  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:inhook in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12401(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12401,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12407,a[2]=t2,a[3]=((C_word)li269),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12444,a[2]=((C_word)li270),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t1,t3);}

/* f_12444 in mp:inhook in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12444(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12444,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub2626(C_SCHEME_UNDEFINED,t2));}

/* a12406 in mp:inhook in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12407(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12407,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12413,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word)li268),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 266  call-with-current-continuation");
t4=*((C_word*)lf[473]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* a12412 in a12406 in mp:inhook in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12413(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12413,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12419,a[2]=t2,a[3]=((C_word)li266),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12439,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word)li267),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 266  with-exception-handler");
t5=C_retrieve(lf[472]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t3,t4);}

/* a12438 in a12412 in a12406 in mp:inhook in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12439,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12443,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  %hook");
t3=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k12441 in a12438 in a12412 in a12406 in mp:inhook in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* a12418 in a12412 in a12406 in mp:inhook in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12419(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12419,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12423,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12430,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12434,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12437,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 266  condition-property-accessor");
t7=C_retrieve(lf[469]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[470],lf[471]);}

/* k12435 in a12418 in a12412 in a12406 in mp:inhook in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=t1;
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k12432 in a12418 in a12412 in a12406 in mp:inhook in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 266  sprintf");
t2=C_retrieve(lf[5]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[468],t1);}

/* k12428 in a12418 in a12412 in a12406 in mp:inhook in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 266  print-error");
t2=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k12421 in a12418 in a12412 in a12406 in mp:inhook in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 266  %cont");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],C_fix(-1));}

/* mp:mm in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12386(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12386,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12391,a[2]=((C_word)li264),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_12391 in mp:mm in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12391(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12391,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub2619(C_SCHEME_UNDEFINED,t3));}

/* mp:bend in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12358(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12358,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12363,a[2]=((C_word)li262),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_retrieve(lf[431]),t2,t4,t3,C_fix(0));}

/* f_12363 in mp:bend in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12363(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12363,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub2610(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:press in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12330(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12330,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12335,a[2]=((C_word)li260),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_retrieve(lf[430]),t2,t4,t3,C_fix(0));}

/* f_12335 in mp:press in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12335(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12335,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub2595(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:prog in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12302(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12302,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12307,a[2]=((C_word)li258),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_retrieve(lf[429]),t2,t4,t3,C_fix(0));}

/* f_12307 in mp:prog in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12307(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12307,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub2580(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:ctrl in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12274(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_12274,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12279,a[2]=((C_word)li256),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_retrieve(lf[428]),t2,t5,t3,t4);}

/* f_12279 in mp:ctrl in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12279(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12279,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub2565(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:touch in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12246(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_12246,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12251,a[2]=((C_word)li254),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_retrieve(lf[427]),t2,t5,t3,t4);}

/* f_12251 in mp:touch in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12251(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12251,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub2549(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:on in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12218(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_12218,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12223,a[2]=((C_word)li252),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_retrieve(lf[426]),t2,t5,t3,t4);}

/* f_12223 in mp:on in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12223(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12223,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub2533(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:off in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12190(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12190,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12195,a[2]=((C_word)li250),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_retrieve(lf[425]),t2,t4,t3,C_fix(0));}

/* f_12195 in mp:off in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12195(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12195,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub2517(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:midi in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12162(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12162,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12167,a[2]=((C_word)li248),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_12167 in mp:midi in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12167(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12167,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub2502(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:note in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12134(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12134,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12139,a[2]=((C_word)li246),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_12139 in mp:note in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12139(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12139,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub2485(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mm:num-set! in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12111(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12111,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12115,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12116,a[2]=((C_word)li244),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_12116 in mm:num-set! in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12116(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12116,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub2467(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k12113 in mm:num-set! in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:num in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12092(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12092,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12097,a[2]=((C_word)li242),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_12097 in mm:num in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12097(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12097,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub2456(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:val-set! in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12037(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12037,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12041,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12044,a[2]=t3,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 266  mm:type?");
t6=C_retrieve(lf[443]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t2,C_retrieve(lf[428]));}

/* k12042 in mm:val-set! in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12044,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12047,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_12047(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 266  mm:type?");
t3=C_retrieve(lf[443]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],C_retrieve(lf[427]));}}

/* k12045 in k12042 in mm:val-set! in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12047,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12051,a[2]=((C_word)li239),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(2),((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12071,a[2]=((C_word)li240),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(1),C_retrieve(lf[454]));}}

/* f_12071 in k12045 in k12042 in mm:val-set! in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12071(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12071,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub2445(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* f_12051 in k12045 in k12042 in mm:val-set! in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12051(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12051,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub2435(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k12039 in mm:val-set! in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:val in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11990(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11990,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11997,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 266  mm:type?");
t4=C_retrieve(lf[443]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_retrieve(lf[428]));}

/* k11995 in mm:val in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11997,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12000,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t1)){
t3=t2;
f_12000(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 266  mm:type?");
t3=C_retrieve(lf[443]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_retrieve(lf[427]));}}

/* k11998 in k11995 in mm:val in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12000,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12004,a[2]=((C_word)li236),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(2));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12020,a[2]=((C_word)li237),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}}

/* f_12020 in k11998 in k11995 in mm:val in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12020(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12020,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub2422(C_SCHEME_UNDEFINED,t4,t5));}

/* f_12004 in k11998 in k11995 in mm:val in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_12004(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12004,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub2414(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:vel-set! in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11967(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11967,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11971,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11972,a[2]=((C_word)li234),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(2),t3);}

/* f_11972 in mm:vel-set! in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11972(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11972,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub2401(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k11969 in mm:vel-set! in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:vel in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11948(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11948,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11953,a[2]=((C_word)li232),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(2));}

/* f_11953 in mm:vel in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11953(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11953,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub2390(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:key-set! in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11925(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11925,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11929,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11930,a[2]=((C_word)li230),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_11930 in mm:key-set! in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11930(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11930,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub2379(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k11927 in mm:key-set! in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:key in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11906(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11906,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11911,a[2]=((C_word)li228),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_11911 in mm:key in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11911(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11911,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub2368(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:chan-set! in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11887(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11887,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11891,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11892,a[2]=((C_word)li226),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_11892 in mm:chan-set! in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11892(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11892,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub2358(C_SCHEME_UNDEFINED,t4,t5));}

/* k11889 in mm:chan-set! in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:chan in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11872(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11872,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11877,a[2]=((C_word)li224),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_11877 in mm:chan in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11877(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11877,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub2349(C_SCHEME_UNDEFINED,t3));}

/* mm:time-set! in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11853(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11853,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11857,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11858,a[2]=((C_word)li222),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_11858 in mm:time-set! in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11858(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11858,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub2340(C_SCHEME_UNDEFINED,t4,t5));}

/* k11855 in mm:time-set! in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:time in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11838(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11838,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11843,a[2]=((C_word)li220),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_11843 in mm:time in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11843(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11843,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub2330(t3,t4));}

/* mm:type? in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11819(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11819,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11824,a[2]=((C_word)li218),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,t2,t3);}

/* f_11824 in mm:type? in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11824(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11824,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub2322(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:copy in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11804(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11804,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11809,a[2]=((C_word)li216),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_11809 in mm:copy in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11809(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11809,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub2312(t3,t4));}

/* mm:free in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11786(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11786,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11790,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11794,a[2]=((C_word)li214),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t3,t2);}

/* f_11794 in mm:free in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11794(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11794,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub2304(C_SCHEME_UNDEFINED,t3));}

/* k11788 in mm:free in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 266  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mm:make in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11620(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr3r,(void*)f_11620r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11620r(t0,t1,t2,t3);}}

static void C_ccall f_11620r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(8);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11624,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11783,a[2]=((C_word)li212),tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#get-keyword");
t6=C_retrieve(lf[434]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,lf[440],t3,t5);}

/* a11782 in mm:make in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11783,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* k11622 in mm:make in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11624,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11627,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11780,a[2]=((C_word)li211),tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#get-keyword");
t4=C_retrieve(lf[434]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,lf[439],((C_word*)t0)[2],t3);}

/* a11779 in k11622 in mm:make in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11780,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* k11625 in k11622 in mm:make in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11627,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11630,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11777,a[2]=((C_word)li210),tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#get-keyword");
t4=C_retrieve(lf[434]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,lf[438],((C_word*)t0)[2],t3);}

/* a11776 in k11625 in k11622 in mm:make in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11777,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(60));}

/* k11628 in k11625 in k11622 in mm:make in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11630,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11633,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11774,a[2]=((C_word)li209),tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#get-keyword");
t4=C_retrieve(lf[434]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,lf[437],((C_word*)t0)[2],t3);}

/* a11773 in k11628 in k11625 in k11622 in mm:make in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11774,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(64));}

/* k11631 in k11628 in k11625 in k11622 in mm:make in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11633,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11636,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11771,a[2]=((C_word)li208),tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#get-keyword");
t4=C_retrieve(lf[434]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,lf[436],((C_word*)t0)[2],t3);}

/* a11770 in k11631 in k11628 in k11625 in k11622 in mm:make in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11771,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* k11634 in k11631 in k11628 in k11625 in k11622 in mm:make in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11636,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11639,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11768,a[2]=((C_word)li207),tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#get-keyword");
t4=C_retrieve(lf[434]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,lf[435],((C_word*)t0)[2],t3);}

/* a11767 in k11634 in k11631 in k11628 in k11625 in k11622 in mm:make in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11768,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* k11637 in k11634 in k11631 in k11628 in k11625 in k11622 in mm:make in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11639,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11645,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 266  <=");
C_less_or_equal_p(5,0,t2,C_retrieve(lf[425]),((C_word*)t0)[7],C_retrieve(lf[426]));}

/* k11643 in k11637 in k11634 in k11631 in k11628 in k11625 in k11622 in mm:make in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11645,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11649,a[2]=((C_word)li203),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[8],C_retrieve(lf[428])))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11680,a[2]=((C_word)li204),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[8],C_retrieve(lf[427])))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11711,a[2]=((C_word)li205),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11738,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 266  <=");
C_less_or_equal_p(5,0,t2,C_retrieve(lf[429]),((C_word*)t0)[8],C_retrieve(lf[431]));}}}}

/* k11736 in k11643 in k11637 in k11634 in k11631 in k11628 in k11625 in k11622 in mm:make in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11738,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11742,a[2]=((C_word)li206),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0));}
else{
C_trace("ChickenBridge.scm: 266  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[433],((C_word*)t0)[5]);}}

/* f_11742 in k11736 in k11643 in k11637 in k11634 in k11631 in k11628 in k11625 in k11622 in mm:make in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11742(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_11742,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub2294(t7,t8,t9,t10,t11,t12));}

/* f_11711 in k11643 in k11637 in k11634 in k11631 in k11628 in k11625 in k11622 in mm:make in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11711(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_11711,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub2281(t7,t8,t9,t10,t11,t12));}

/* f_11680 in k11643 in k11637 in k11634 in k11631 in k11628 in k11625 in k11622 in mm:make in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11680(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_11680,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub2268(t7,t8,t9,t10,t11,t12));}

/* f_11649 in k11643 in k11637 in k11634 in k11631 in k11628 in k11625 in k11622 in mm:make in k11467 in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11649(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_11649,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub2255(t7,t8,t9,t10,t11,t12));}

/* parse-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_11275(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11275,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11283,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11115,a[2]=t4,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t8)){
t10=t9;
f_11115(t10,t8);}
else{
t10=(C_word)C_i_car(((C_word*)t7)[1]);
t11=(C_word)C_i_symbolp(t10);
t12=t9;
f_11115(t12,(C_word)C_i_not(t11));}}

/* k11113 in parse-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_11115(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11115,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11122,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8059(t2,(C_word)C_a_i_list(&a,4,lf[237],lf[414],lf[242],((C_word*)((C_word*)t0)[3])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11123,a[2]=((C_word)li198),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11148,a[2]=t6,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11150,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t9,a[5]=t6,a[6]=t4,a[7]=((C_word*)t0)[3],a[8]=((C_word)li201),tmp=(C_word)a,a+=9,tmp));
t11=((C_word*)t9)[1];
f_11150(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do2149 in k11113 in parse-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_11150(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11150,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11160,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t9,a[5]=t7,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t8,a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[6],a[12]=t6,tmp=(C_word)a,a+=13,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t12=(C_word)C_eqp(t11,lf[143]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[7])+1,t14);
t16=t10;
f_11160(t16,t13);}
else{
t13=t10;
f_11160(t13,C_SCHEME_UNDEFINED);}}}

/* k11158 in do2149 in k11113 in parse-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_11160(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11160,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11164,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8281(t2,t3,((C_word*)t0)[3]);}

/* k11162 in k11158 in do2149 in k11113 in parse-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11164,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11167,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t4=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t4)){
t5=t3;
f_11167(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,3,lf[419],t5,lf[420]));}}

/* k11165 in k11162 in k11158 in do2149 in k11113 in parse-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11167,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11170,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11219,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[6],a[6]=((C_word)li199),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11228,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[5],a[4]=((C_word)li200),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a11227 in k11165 in k11162 in k11158 in do2149 in k11113 in parse-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11228(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11228,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a11218 in k11165 in k11162 in k11158 in do2149 in k11113 in parse-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11219,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k11168 in k11165 in k11162 in k11158 in do2149 in k11113 in parse-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11170,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11173,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11189,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 265  op-type?");
f_11123(t3,((C_word*)((C_word*)t0)[6])[1],lf[404]);}

/* k11187 in k11168 in k11165 in k11162 in k11158 in do2149 in k11113 in parse-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11189,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=((C_word*)t0)[5];
f_11173(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11196,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  op-type?");
f_11123(t2,((C_word*)((C_word*)t0)[6])[1],lf[418]);}}

/* k11194 in k11187 in k11168 in k11165 in k11162 in k11158 in do2149 in k11113 in parse-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11196,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t2=((C_word*)t0)[5];
f_11173(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[415],t2,lf[416],t3,lf[417]));}}
else{
t2=((C_word*)t0)[5];
f_11173(2,t2,C_SCHEME_UNDEFINED);}}

/* k11171 in k11168 in k11165 in k11162 in k11158 in do2149 in k11113 in parse-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11173,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11179,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 265  append");
t6=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k11177 in k11171 in k11168 in k11165 in k11162 in k11158 in do2149 in k11113 in parse-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_11150(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k11146 in k11113 in parse-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_11283(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k11113 in parse-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_11123(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11123,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k11120 in k11113 in parse-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11122,2,t0,t1);}
t2=((C_word*)t0)[2];
f_11283(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k11281 in parse-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_11283(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  gather-clauses");
f_8210(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10861(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10861,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[407],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10883,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[411],t8,lf[412]));}
else{
t19=t17;
f_10883(2,t19,C_SCHEME_UNDEFINED);}}

/* k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10883,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10898,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[410]));}
else{
t9=t8;
f_10898(2,t9,C_SCHEME_UNDEFINED);}}

/* k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10898,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10901,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[409]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[145],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_10901(t6,t5);}
else{
t4=t2;
f_10901(t4,C_SCHEME_UNDEFINED);}}

/* k10899 in k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_10901(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10901,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10904,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11071,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li195),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11077,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li196),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a11076 in k10899 in k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11077(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11077,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a11070 in k10899 in k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11071,2,t0,t1);}
C_trace("ChickenBridge.scm: 265  parse-then-else-dependents");
f_10730(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k10902 in k10899 in k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10904,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10907,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_10907(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11053,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  gather-clauses");
f_8210(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k11051 in k10902 in k10899 in k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10907(t3,t2);}

/* k10905 in k10902 in k10899 in k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_10907(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10907,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10910,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 265  loop-operator-set!");
f_7957(t2,((C_word*)((C_word*)t0)[7])[1],lf[176]);}

/* k10908 in k10905 in k10902 in k10899 in k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10910,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11034,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11046,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  loop-looping");
t4=C_retrieve2(lf[231],"loop-looping");
f_8011(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k11044 in k10908 in k10905 in k10902 in k10899 in k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11046,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[175],t1);
C_trace("ChickenBridge.scm: 265  append");
t3=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k11032 in k10908 in k10905 in k10902 in k10899 in k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11034,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[176],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10917,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10930,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_10930(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_10930(t7,(C_word)C_eqp(t6,lf[401]));}}

/* k10928 in k11032 in k10908 in k10905 in k10902 in k10899 in k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_10930(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10930,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10937,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[408]));}
else{
t5=t4;
f_10937(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_10917(t2,C_SCHEME_UNDEFINED);}}

/* k10935 in k10928 in k11032 in k10908 in k10905 in k10902 in k10899 in k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10937,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10940,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10993,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li193),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11007,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li194),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a11006 in k10935 in k10928 in k11032 in k10908 in k10905 in k10902 in k10899 in k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11007(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11007,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a10992 in k10935 in k10928 in k11032 in k10908 in k10905 in k10902 in k10899 in k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10993,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11001,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 265  append");
t4=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k10999 in a10992 in k10935 in k10928 in k11032 in k10908 in k10905 in k10902 in k10899 in k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_11001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  parse-then-else-dependents");
f_10730(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k10938 in k10935 in k10928 in k11032 in k10908 in k10905 in k10902 in k10899 in k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10940,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10943,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_10943(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10979,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  gather-clauses");
f_8210(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k10977 in k10938 in k10935 in k10928 in k11032 in k10908 in k10905 in k10902 in k10899 in k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10943(t3,t2);}

/* k10941 in k10938 in k10935 in k10928 in k11032 in k10908 in k10905 in k10902 in k10899 in k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_10943(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10943,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10972,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 265  loop-looping");
t4=C_retrieve2(lf[231],"loop-looping");
f_8011(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k10970 in k10941 in k10938 in k10935 in k10928 in k11032 in k10908 in k10905 in k10902 in k10899 in k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10972,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[175],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10949,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  loop-looping-set!");
f_8017(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k10947 in k10970 in k10941 in k10938 in k10935 in k10928 in k11032 in k10908 in k10905 in k10902 in k10899 in k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10949,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10952,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  loop-looping-set!");
f_8017(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k10950 in k10947 in k10970 in k10941 in k10938 in k10935 in k10928 in k11032 in k10908 in k10905 in k10902 in k10899 in k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10952,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10956,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 265  gather-clauses");
f_8210(t2,lf[176],t3);}

/* k10954 in k10950 in k10947 in k10970 in k10941 in k10938 in k10935 in k10928 in k11032 in k10908 in k10905 in k10902 in k10899 in k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10917(t3,t2);}

/* k10915 in k11032 in k10908 in k10905 in k10902 in k10899 in k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_10917(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10917,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10920,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 265  loop-looping-set!");
f_8017(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k10918 in k10915 in k11032 in k10908 in k10905 in k10902 in k10899 in k10896 in k10881 in parse-conditional in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_10730(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10730,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10734,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10739,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li191),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_10739(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do2082 in parse-then-else-dependents in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_10739(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10739,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10687,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8281(t12,t10,t11);}}

/* k10685 in do2082 in parse-then-else-dependents in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10687,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_10693,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_10693(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[404]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[405]);
t8=t2;
f_10693(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_10693(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_10693(t3,C_SCHEME_FALSE);}}

/* k10691 in k10685 in do2082 in parse-then-else-dependents in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_10693(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10693,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10756,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_10756(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[402],t6,lf[403]));}}

/* k10754 in k10691 in k10685 in do2082 in parse-then-else-dependents in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10756,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10759,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10829,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li189),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10842,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li190),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a10841 in k10754 in k10691 in k10685 in do2082 in parse-then-else-dependents in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10842(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10842,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a10828 in k10754 in k10691 in k10685 in do2082 in parse-then-else-dependents in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10829,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10837,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 265  append");
t3=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k10835 in a10828 in k10754 in k10691 in k10685 in do2082 in parse-then-else-dependents in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k10757 in k10754 in k10691 in k10685 in do2082 in parse-then-else-dependents in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10759,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10763,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 265  append");
t4=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k10761 in k10757 in k10754 in k10691 in k10685 in do2082 in parse-then-else-dependents in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10763,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10768,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_10768(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[143]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[400]));}
else{
t10=t5;
f_10768(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[401]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_10768(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10806,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8281(t10,t11,((C_word*)t0)[3]);}}}}

/* k10804 in k10761 in k10757 in k10754 in k10691 in k10685 in do2082 in parse-then-else-dependents in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_10768(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_10768(2,t2,C_SCHEME_UNDEFINED);}}

/* k10766 in k10761 in k10757 in k10754 in k10691 in k10685 in do2082 in parse-then-else-dependents in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_10739(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k10732 in parse-then-else-dependents in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10629(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10629,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10636,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[397],t13,lf[398]));}
else{
t13=t11;
f_10636(2,t13,C_SCHEME_UNDEFINED);}}

/* k10634 in parse-return in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10636,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10667,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8281(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k10665 in k10634 in parse-return in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10667,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10655,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10663,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k10661 in k10665 in k10634 in parse-return in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10663,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8059(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[237],lf[383],lf[242],t2));}

/* k10653 in k10665 in k10634 in parse-return in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10538(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10538,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10545,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[394],t15,lf[395]));}
else{
t15=t13;
f_10545(2,t15,C_SCHEME_UNDEFINED);}}

/* k10543 in parse-thereis in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10545,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10613,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8281(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k10611 in k10543 in parse-thereis in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10613,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10556,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[391]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_10556(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[392]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[145],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_10556(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[393]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_10556(t9,t8);}
else{
t8=t4;
f_10556(t8,C_SCHEME_UNDEFINED);}}}}

/* k10554 in k10611 in k10543 in parse-thereis in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_10556(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10556,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10567,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10583,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 265  func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k10581 in k10554 in k10611 in k10543 in parse-thereis in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10583,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[176],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8059(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[237],lf[391],lf[242],t3,lf[245],t4));}

/* k10565 in k10554 in k10611 in k10543 in parse-thereis in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10472(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10472,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10483,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[388],t7,lf[389]));}
else{
t13=t12;
f_10483(2,t13,C_SCHEME_UNDEFINED);}}

/* k10481 in parse-while-until in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10483,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10486,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[386]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_10486(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[387]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[145],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_10486(t10,t9);}
else{
t5=t2;
f_10486(t5,C_SCHEME_UNDEFINED);}}}

/* k10484 in k10481 in parse-while-until in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_10486(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10486,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10493,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[176],((C_word*)((C_word*)t0)[3])[1],lf[385]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8059(t2,(C_word)C_a_i_list(&a,4,lf[237],((C_word*)t0)[2],lf[242],t4));}

/* k10491 in k10484 in k10481 in parse-while-until in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10466(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10466,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[383],t2));}

/* parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9920(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9920,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9929,a[2]=((C_word)li179),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9934,a[2]=((C_word)li180),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9939,a[2]=((C_word)li181),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_9951,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[380],t7,lf[381]));}
else{
t30=t29;
f_9951(2,t30,C_SCHEME_UNDEFINED);}}

/* k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9951,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_9962,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_9962(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[376]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10415,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[379]));}
else{
t11=t9;
f_10415(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_9962(2,t9,C_SCHEME_UNDEFINED);}}}

/* k10413 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10415,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10421,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 265  loop-variable?");
f_8287(t2,t3);}

/* k10419 in k10413 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10421,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_9962(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[377],t2,lf[378]));}}

/* k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9962,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_9966,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9847,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li183),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_9847(t9,t2,C_SCHEME_FALSE);}

/* do1904 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_9847(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9847,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9861,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9872,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 265  loop-collectors");
t9=C_retrieve2(lf[228],"loop-collectors");
f_7975(3,t9,t7,t8);}}

/* k9870 in do1904 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9872,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9807,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li182),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_9807(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do1896 in k9870 in do1904 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_9807(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9807,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9820,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_9820(t12,t11);}
else{
t10=t6;
f_9820(t10,C_SCHEME_UNDEFINED);}}}

/* k9818 in do1896 in k9870 in do1904 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_9820(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_9807(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k9859 in do1904 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_9847(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9966,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_9969,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10399,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10403,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  collector-type");
f_9934(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_9969(2,t6,t5);}}

/* k10401 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[373];
t3=lf[374];
t4=lf[375];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_10399(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_10399(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_10399(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_10399(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k10397 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_10399(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10399,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_9969(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10395,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 265  collector-type");
f_9934(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k10393 in k10397 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10395,2,t0,t1);}
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[370],t1,lf[371],((C_word*)t0)[2],lf[372]));}

/* k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9969,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9972,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[354]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[355]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10015,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10053,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_10053(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 265  gensym");
t10=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[356]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10082,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  collector-acc");
f_9939(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[357]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[358]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10094,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 265  gensym");
t8=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[360]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[15]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_10189,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_10189(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[364]);
t10=t8;
f_10189(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[369])));}}}}

/* k10187 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_10189(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10189,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10192,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10305,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10363,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8293(t9,((C_word*)((C_word*)t0)[13])[1],lf[368]);}
else{
t9=t8;
f_10305(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10298,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 265  collector-acc");
f_9939(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_9972(t2,C_SCHEME_UNDEFINED);}}

/* k10296 in k10187 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_10192(t6,t5);}

/* k10361 in k10187 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10363,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_10305(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k10303 in k10187 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_10305(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10305,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10309,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 265  gensym");
t3=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[367]);}

/* k10307 in k10303 in k10187 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10309,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10313,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 265  gensym");
t4=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[366]);}

/* k10311 in k10307 in k10303 in k10187 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10313,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10355,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8293(t3,((C_word*)((C_word*)t0)[11])[1],lf[365]);}

/* k10353 in k10311 in k10307 in k10303 in k10187 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10355,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10351,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8293(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k10349 in k10353 in k10311 in k10307 in k10303 in k10187 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10351,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10329,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  make-collector");
f_9929(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k10327 in k10349 in k10353 in k10311 in k10307 in k10303 in k10187 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10329,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_10192(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[178],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_10192(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k10190 in k10187 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_10192(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10192,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10195,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[15]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[361]);
t5=(C_word)C_a_i_list(&a,3,lf[15],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[362],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[363],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_10195(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[364]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[361],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[362],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[178],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_10195(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[362],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[363],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_10195(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k10193 in k10190 in k10187 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_10195(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10195,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[178],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_9972(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_9972(t2,C_SCHEME_UNDEFINED);}}

/* k10092 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10094,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[357]);
t3=(C_truep(t2)?lf[184]:lf[181]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10100,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10144,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_10144(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 265  gensym");
t9=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[359]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10177,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  collector-acc");
f_9939(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k10175 in k10092 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10100(t3,t2);}

/* k10142 in k10092 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10144,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10170,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8293(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k10168 in k10142 in k10092 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10170,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10152,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  make-collector");
f_9929(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k10150 in k10168 in k10142 in k10092 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10152,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_10100(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[144],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_10100(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k10098 in k10092 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_10100(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10100,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10140,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8293(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k10138 in k10098 in k10092 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10140,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[145],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[144],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[176],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[175],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_9972(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k10080 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10015(t3,t2);}

/* k10051 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10053,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10075,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8293(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k10073 in k10051 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10075,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10061,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  make-collector");
f_9929(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k10059 in k10073 in k10051 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_10061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10061,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_10015(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_10015(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k10013 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_10015(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10015,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[354]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[161],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9972(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[161],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[176],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_9972(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k9970 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_9972(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9972,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9979,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9983,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 265  reverse");
t4=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k9981 in k9970 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9983,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9987,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 265  reverse");
t3=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k9985 in k9981 in k9970 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9987,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9991,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 265  reverse");
t3=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k9989 in k9985 in k9981 in k9970 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9991,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9995,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 265  reverse");
t3=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k9993 in k9989 in k9985 in k9981 in k9970 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9995,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8059(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[237],((C_word*)t0)[5],lf[238],((C_word*)t0)[4],lf[240],((C_word*)t0)[3],lf[242],((C_word*)t0)[2],lf[245],t1,lf[239],t2,lf[241],C_SCHEME_END_OF_LIST));}

/* k9977 in k9970 in k9967 in k9964 in k9960 in k9949 in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_9939(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9939,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_9934(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9934,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_9929(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9929,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9761(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9761,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9772,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[351],t6,lf[352]));}
else{
t12=t11;
f_9772(2,t12,C_SCHEME_UNDEFINED);}}

/* k9770 in parse-initially in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9772,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9787,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8059(t6,(C_word)C_a_i_list(&a,4,lf[237],((C_word*)t0)[2],lf[240],t7));}

/* k9785 in k9770 in parse-initially in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9723(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9723,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9734,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[348],t6,lf[349]));}
else{
t12=t11;
f_9734(2,t12,C_SCHEME_UNDEFINED);}}

/* k9732 in parse-finally in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9734,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9749,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8059(t6,(C_word)C_a_i_list(&a,4,lf[237],((C_word*)t0)[2],lf[244],t7));}

/* k9747 in k9732 in parse-finally in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9656(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9656,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9667,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9676,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li175),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_9676(t16,t12);}

/* do1853 in parse-do in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_9676(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9676,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9686,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_9686(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8281(t3,t4,((C_word*)t0)[5]);}}

/* k9684 in do1853 in parse-do in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9686,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[345],((C_word*)t0)[4],lf[346]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9699,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  reverse");
t3=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_9676(t7,((C_word*)t0)[7]);}}

/* k9697 in k9684 in do1853 in parse-do in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k9665 in parse-do in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9667,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9674,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8059(t2,(C_word)C_a_i_list(&a,4,lf[237],((C_word*)t0)[3],lf[242],((C_word*)((C_word*)t0)[2])[1]));}

/* k9672 in k9665 in parse-do in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9463(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9463,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9470,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9523,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li173),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_9523(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do1809 in parse-with in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_9523(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9523,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_9533,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_9533(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8281(t7,t8,((C_word*)t0)[5]);}}

/* k9531 in do1809 in parse-with in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9533,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9544,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_9647,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 265  loop-variable?");
f_8287(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k9645 in k9531 in do1809 in parse-with in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9647,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9553,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[335],((C_word*)((C_word*)t0)[10])[1],lf[336]));}
else{
t4=t3;
f_9553(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[143]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9575,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[337]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9604,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8293(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9612,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8293(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[338]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[323]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[339]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_9544(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[340],((C_word*)((C_word*)t0)[10])[1],lf[341]));}
else{
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[342],((C_word*)((C_word*)t0)[10])[1],lf[343]));}}}}}

/* k9610 in k9645 in k9531 in do1809 in parse-with in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9612,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9575(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k9602 in k9645 in k9531 in do1809 in parse-with in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9604,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9575(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k9573 in k9645 in k9531 in do1809 in parse-with in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_9544(2,t6,t5);}

/* k9551 in k9645 in k9531 in do1809 in parse-with in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9553,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9556,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[333],((C_word*)((C_word*)t0)[8])[1],lf[334]));}
else{
t3=t2;
f_9556(2,t3,C_SCHEME_UNDEFINED);}}

/* k9554 in k9551 in k9645 in k9531 in do1809 in parse-with in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_9544(2,t6,t5);}

/* k9542 in k9531 in do1809 in parse-with in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_9523(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k9468 in parse-with in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9470,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9473,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[332]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9513,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8293(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9521,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8293(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_9473(2,t3,C_SCHEME_UNDEFINED);}}}

/* k9519 in k9468 in parse-with in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9521,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9473(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k9511 in k9468 in parse-with in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9513,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9473(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k9471 in k9468 in parse-with in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9473,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9480,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9484,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  reverse");
t4=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k9482 in k9471 in k9468 in parse-with in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9484,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9488,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  reverse");
t3=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k9486 in k9482 in k9471 in k9468 in parse-with in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9488,2,t0,t1);}
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8059(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[237],lf[331],lf[238],((C_word*)t0)[2],lf[240],t1));}

/* k9478 in k9471 in k9468 in parse-with in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9321(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9321,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9331,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9369,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li171),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_9369(t22,t18,C_SCHEME_FALSE);}

/* do1771 in parse-general-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_9369(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9369,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_9379,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_9379(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8281(t5,t6,((C_word*)t0)[5]);}}

/* k9377 in do1771 in parse-general-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9379,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_9390,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[329]));}
else{
t7=t6;
f_9390(2,t7,C_SCHEME_UNDEFINED);}}}

/* k9388 in k9377 in do1771 in parse-general-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9390,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9393,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[323]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9402,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[324]));}
else{
t6=t5;
f_9402(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[325]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9427,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[326]));}
else{
t7=t6;
f_9427(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[327],((C_word*)((C_word*)t0)[12])[1],lf[328]));}}}

/* k9425 in k9388 in k9377 in do1771 in parse-general-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9427,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_9393(2,t10,t9);}

/* k9400 in k9388 in k9377 in do1771 in parse-general-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9402,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_9393(2,t8,t7);}

/* k9391 in k9388 in k9377 in do1771 in parse-general-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_9369(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k9329 in parse-general-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9331,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9338,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9367,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8293(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k9365 in k9329 in parse-general-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9367,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8059(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[237],lf[269],lf[238],t2,lf[240],t3,lf[242],t4,lf[243],t5));}

/* k9336 in k9329 in parse-general-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8970(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_8970,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8977,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  gensym");
t8=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[321]);}

/* k8975 in parse-sequence-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8977,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_8983,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9211,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li169),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_9211(t25,t21,C_SCHEME_FALSE);}

/* do1704 in k8975 in parse-sequence-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_9211(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9211,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9221,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_9221(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8281(t5,t6,((C_word*)t0)[4]);}}

/* k9219 in do1704 in k8975 in parse-sequence-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9221,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9232,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[320]));}
else{
t7=t6;
f_9232(2,t7,C_SCHEME_UNDEFINED);}}}

/* k9230 in k9219 in do1704 in k8975 in parse-sequence-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9232,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9235,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[310]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9244,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_9244(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[319]);
if(C_truep(t6)){
t7=t5;
f_9244(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[302]);
t8=t5;
f_9244(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[307])));}}}

/* k9242 in k9230 in k9219 in do1704 in k8975 in parse-sequence-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_9244(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9244,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9247,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[312],((C_word*)((C_word*)t0)[9])[1],lf[313],((C_word*)((C_word*)t0)[10])[1],lf[314]));}
else{
t3=t2;
f_9247(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[293]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[315]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[302]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[316]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_9235(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[317],((C_word*)((C_word*)t0)[9])[1],lf[318]));}}}

/* k9245 in k9242 in k9230 in k9219 in do1704 in k8975 in parse-sequence-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_9235(2,t7,t6);}

/* k9233 in k9230 in k9219 in do1704 in k8975 in parse-sequence-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_9211(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k8981 in k8975 in parse-sequence-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8983,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_9209,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8293(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k9207 in k8981 in k8975 in parse-sequence-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9209,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_9205,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8293(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k9203 in k9207 in k8981 in k8975 in parse-sequence-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9205,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8994,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[302]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9011,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 265  gensym");
t7=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[306]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[307]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9087,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[309],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_9087(t9,(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[309],((C_word*)t0)[4]);
t9=t7;
f_9087(t9,(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9116,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9151,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_9151(t10,(C_word)C_eqp(t9,lf[311]));}
else{
t9=t8;
f_9151(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[178],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_9116(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k9149 in k9203 in k9207 in k8981 in k8975 in parse-sequence-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_9151(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9151,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9116(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_9116(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k9114 in k9203 in k9207 in k8981 in k8975 in parse-sequence-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_9116(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9116,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9132,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[310]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[21],((C_word*)t0)[6]);
t5=t2;
f_9132(t5,(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_9132(t4,(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k9130 in k9114 in k9203 in k9207 in k8981 in k8975 in parse-sequence-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_9132(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9132,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[179],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8994(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k9085 in k9203 in k9207 in k8981 in k8975 in parse-sequence-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_9087(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9087,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[308],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[175],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_8994(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k9009 in k9203 in k9207 in k8981 in k8975 in parse-sequence-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9011,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9014,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 265  gensym");
t3=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[305]);}

/* k9012 in k9009 in k9203 in k9207 in k8981 in k8975 in parse-sequence-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9014,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9078,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8293(t2,((C_word*)t0)[7],C_fix(0));}

/* k9076 in k9012 in k9009 in k9203 in k9207 in k8981 in k8975 in parse-sequence-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9078,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9074,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8293(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k9072 in k9076 in k9012 in k9009 in k9203 in k9207 in k8981 in k8975 in parse-sequence-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9074,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[303],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[161],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[304],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[184],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[145],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_8994(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k8992 in k9203 in k9207 in k8981 in k8975 in parse-sequence-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_8994(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8994,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9001,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9005,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  reverse");
t4=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k9003 in k8992 in k9203 in k9207 in k8981 in k8975 in parse-sequence-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9005,2,t0,t1);}
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8059(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[237],lf[269],lf[238],t1,lf[241],((C_word*)((C_word*)t0)[5])[1],lf[240],((C_word*)((C_word*)t0)[4])[1],lf[242],((C_word*)((C_word*)t0)[3])[1],lf[243],((C_word*)((C_word*)t0)[2])[1]));}

/* k8999 in k8992 in k9203 in k9207 in k8981 in k8975 in parse-sequence-iteration in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_9001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8923(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_8923,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[299]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8938,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li166),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8956,a[2]=t2,a[3]=((C_word)li167),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a8955 in parse-repeat in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8956(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8956,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,t1,t2,t4);}

/* a8937 in parse-repeat in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8938,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8950,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 265  gensym");
t3=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[300]);}

/* k8948 in a8937 in parse-repeat in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8950,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[269],t1,lf[274],t2);
C_trace("ChickenBridge.scm: 265  parse-numerical-for");
t4=C_retrieve2(lf[268],"parse-numerical-for");
f_8541(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8541(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_8541,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_8551,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_8750,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li164),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_8750(t31,t27,C_SCHEME_FALSE);}

/* do1605 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_8750(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8750,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_8760,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_8760(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8281(t5,t6,((C_word*)t0)[6]);}}

/* k8758 in do1605 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8760,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_8771,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[297]));}
else{
t7=t6;
f_8771(2,t7,C_SCHEME_UNDEFINED);}}}

/* k8769 in k8758 in do1605 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8771,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8774,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[276]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[272]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8786,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[277],((C_word*)((C_word*)t0)[12])[1],lf[278],((C_word*)((C_word*)t0)[9])[1],lf[279]));}
else{
t7=t6;
f_8786(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[274]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8807,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[280],((C_word*)((C_word*)t0)[12])[1],lf[281],((C_word*)((C_word*)t0)[3])[1],lf[282]));}
else{
t8=t7;
f_8807(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[283]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8828,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[284],((C_word*)((C_word*)t0)[12])[1],lf[285],((C_word*)((C_word*)t0)[3])[1],lf[286]));}
else{
t9=t8;
f_8828(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[273]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8849,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[287],((C_word*)((C_word*)t0)[12])[1],lf[288],((C_word*)((C_word*)t0)[3])[1],lf[289]));}
else{
t10=t9;
f_8849(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[275]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8870,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[290],((C_word*)((C_word*)t0)[12])[1],lf[291],((C_word*)((C_word*)t0)[3])[1],lf[292]));}
else{
t11=t10;
f_8870(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[293]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8891,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[294]));}
else{
t12=t11;
f_8891(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[295],((C_word*)((C_word*)t0)[12])[1],lf[296]));}}}}}}}

/* k8889 in k8769 in k8758 in do1605 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_8774(2,t6,t5);}

/* k8868 in k8769 in k8758 in do1605 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_8774(2,t7,t6);}

/* k8847 in k8769 in k8758 in do1605 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_8774(2,t7,t6);}

/* k8826 in k8769 in k8758 in do1605 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_8774(2,t7,t6);}

/* k8805 in k8769 in k8758 in do1605 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_8774(2,t7,t6);}

/* k8784 in k8769 in k8758 in do1605 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_8774(2,t7,t6);}

/* k8772 in k8769 in k8758 in do1605 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_8750(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k8549 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8551,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_8554,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_8554(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[276]);
t5=t2;
f_8554(t5,t4);}}

/* k8552 in k8549 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_8554(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8554,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_8557,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[272]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8717,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_8717(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[275]);
t6=t4;
f_8717(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[273])));}}

/* k8715 in k8552 in k8549 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_8717(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[183]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[273]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[182]);
t5=((C_word*)t0)[2];
f_8557(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[184]);
t5=((C_word*)t0)[2];
f_8557(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[161]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[274]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[171]);
t5=((C_word*)t0)[2];
f_8557(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[181]);
t5=((C_word*)t0)[2];
f_8557(t5,t4);}}}

/* k8555 in k8552 in k8549 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_8557(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8557,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8560,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8688,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 265  make-binding");
f_8293(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8708,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8293(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k8706 in k8555 in k8552 in k8549 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8708,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8560(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k8686 in k8555 in k8552 in k8549 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8688,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8560(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k8558 in k8555 in k8552 in k8549 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_8560(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8560,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8563,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_8563(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8653,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 265  gensym");
t5=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[271]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_8563(t5,t4);}}

/* k8651 in k8558 in k8555 in k8552 in k8549 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8653,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8670,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8293(t2,t1,C_SCHEME_FALSE);}

/* k8668 in k8651 in k8558 in k8555 in k8552 in k8549 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8670,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_8563(t8,t7);}

/* k8561 in k8558 in k8555 in k8552 in k8549 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_8563(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8563,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8570,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8602,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 265  gensym");
t7=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[270]);}
else{
t6=t5;
f_8570(t6,C_SCHEME_UNDEFINED);}}

/* k8600 in k8561 in k8558 in k8555 in k8552 in k8549 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8602,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8605,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8620,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8293(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8636,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8293(t3,t1,C_SCHEME_FALSE);}}

/* k8634 in k8600 in k8561 in k8558 in k8555 in k8552 in k8549 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8636,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8605(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k8618 in k8600 in k8561 in k8558 in k8555 in k8552 in k8549 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8620,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8605(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k8603 in k8600 in k8561 in k8558 in k8555 in k8552 in k8549 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_8605(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8605,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8570(t4,t3);}

/* k8568 in k8561 in k8558 in k8555 in k8552 in k8549 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_8570(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8570,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8577,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8581,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 265  reverse");
t4=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k8579 in k8568 in k8561 in k8558 in k8555 in k8552 in k8549 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8581,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8585,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 265  reverse");
t3=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k8583 in k8579 in k8568 in k8561 in k8558 in k8555 in k8552 in k8549 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8585,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8059(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[237],lf[269],lf[238],((C_word*)t0)[2],lf[240],t1,lf[243],t2,lf[241],t4));}

/* k8575 in k8568 in k8561 in k8558 in k8555 in k8552 in k8549 in parse-numerical-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8459(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_8459,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8463,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8281(t5,t6,t4);}

/* k8461 in parse-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8463,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[261]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8481,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  loop-variable?");
f_8287(t4,t3);}}

/* k8479 in k8461 in parse-for in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8481,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[262]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[263],t6,lf[264],lf[265]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 265  loop-error");
f_8299(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[266],t2,lf[267]));}}

/* loop-error in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_8299(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8299,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8355,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8307,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li161),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_8307(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do1556 in loop-error in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_8307(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8307,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8317,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_8317(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_8317(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8281(t6,t8,((C_word*)t0)[2]);}}}

/* k8315 in do1556 in loop-error in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8317,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 265  reverse");
t2=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_8307(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k8353 in loop-error in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8355,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8358,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  newline");
t3=*((C_word*)lf[252]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k8356 in k8353 in loop-error in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8358,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8361,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  display");
t3=*((C_word*)lf[253]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[259]);}

/* k8359 in k8356 in k8353 in loop-error in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8361,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8364,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8436,a[2]=t4,a[3]=((C_word)li160),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_8436(t6,t2,((C_word*)t0)[2]);}

/* do1566 in k8359 in k8356 in k8353 in loop-error in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_8436(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8436,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8446,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 265  display");
t5=*((C_word*)lf[253]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k8444 in do1566 in k8359 in k8356 in k8353 in loop-error in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_8436(t3,((C_word*)t0)[2],t2);}

/* k8362 in k8359 in k8356 in k8353 in loop-error in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8367,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  newline");
t3=*((C_word*)lf[252]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k8365 in k8362 in k8359 in k8356 in k8353 in loop-error in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8367,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8370,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  display");
t3=*((C_word*)lf[253]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[258]);}

/* k8368 in k8365 in k8362 in k8359 in k8356 in k8353 in loop-error in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8370,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8373,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 265  display");
t3=*((C_word*)lf[253]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[254]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8390,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li159),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_8390(t6,t2,((C_word*)t0)[2]);}}

/* do1571 in k8368 in k8365 in k8362 in k8359 in k8356 in k8353 in loop-error in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_8390(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8390,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8400,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 265  display");
t5=*((C_word*)lf[253]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[257]);}
else{
t5=t3;
f_8400(2,t5,C_SCHEME_UNDEFINED);}}}

/* k8398 in do1571 in k8368 in k8365 in k8362 in k8359 in k8356 in k8353 in loop-error in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8400,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8403,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 265  display");
t4=*((C_word*)lf[253]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k8401 in k8398 in do1571 in k8368 in k8365 in k8362 in k8359 in k8356 in k8353 in loop-error in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8403,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8406,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[255]:lf[256]);
C_trace("ChickenBridge.scm: 265  display");
t6=*((C_word*)lf[253]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k8404 in k8401 in k8398 in do1571 in k8368 in k8365 in k8362 in k8359 in k8356 in k8353 in loop-error in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_8390(t3,((C_word*)t0)[2],t2);}

/* k8371 in k8368 in k8365 in k8362 in k8359 in k8356 in k8353 in loop-error in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8373,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8376,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  newline");
t3=*((C_word*)lf[252]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k8374 in k8371 in k8368 in k8365 in k8362 in k8359 in k8356 in k8353 in loop-error in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[251]);}

/* make-binding in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_8293(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8293,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_8287(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8287,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_8281(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8281,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_8210(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8210,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8212,a[2]=((C_word)li154),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8251,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 265  gather-clause");
f_8212(t5,t3,C_retrieve2(lf[227],"loop-bindings"));}

/* k8249 in gather-clauses in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8251,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8255,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  gather-clause");
f_8212(t2,((C_word*)t0)[2],C_retrieve2(lf[228],"loop-collectors"));}

/* k8253 in k8249 in gather-clauses in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8255,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8259,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 265  gather-clause");
f_8212(t2,((C_word*)t0)[2],C_retrieve2(lf[229],"loop-initially"));}

/* k8257 in k8253 in k8249 in gather-clauses in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8259,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8263,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 265  gather-clause");
f_8212(t2,((C_word*)t0)[2],C_retrieve2(lf[230],"loop-end-tests"));}

/* k8261 in k8257 in k8253 in k8249 in gather-clauses in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8263,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_8267,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 265  gather-clause");
f_8212(t2,((C_word*)t0)[2],C_retrieve2(lf[231],"loop-looping"));}

/* k8265 in k8261 in k8257 in k8253 in k8249 in gather-clauses in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8267,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8271,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 265  gather-clause");
f_8212(t2,((C_word*)t0)[2],C_retrieve2(lf[233],"loop-stepping"));}

/* k8269 in k8265 in k8261 in k8257 in k8253 in k8249 in gather-clauses in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8271,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_8275,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 265  gather-clause");
f_8212(t2,((C_word*)t0)[2],C_retrieve2(lf[234],"loop-finally"));}

/* k8273 in k8269 in k8265 in k8261 in k8257 in k8253 in k8249 in gather-clauses in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8275,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8279,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 265  gather-clause");
f_8212(t2,((C_word*)t0)[2],C_retrieve2(lf[235],"loop-returning"));}

/* k8277 in k8273 in k8269 in k8265 in k8261 in k8257 in k8253 in k8249 in gather-clauses in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8279,2,t0,t1);}
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8059(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[237],((C_word*)t0)[9],lf[238],((C_word*)t0)[8],lf[239],((C_word*)t0)[7],lf[240],((C_word*)t0)[6],lf[241],((C_word*)t0)[5],lf[242],((C_word*)t0)[4],lf[243],((C_word*)t0)[3],lf[244],((C_word*)t0)[2],lf[245],t1));}

/* gather-clause in gather-clauses in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_8212(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8212,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8218,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li153),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_8218(t8,t1,C_SCHEME_END_OF_LIST);}

/* do1539 in gather-clause in gather-clauses in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_8218(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8218,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8229,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8240,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 265  accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k8238 in do1539 in gather-clause in gather-clauses in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  append");
t2=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k8227 in do1539 in gather-clause in gather-clauses in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_8218(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_8059(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8059,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8074,a[2]=t5,a[3]=t3,a[4]=((C_word)li151),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_8074(t7,t1,t2);}}

/* do1527 in make-loop-clause in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_8074(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8074,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8087,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[237]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 265  loop-operator-set!");
f_7957(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[238]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_8087(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[239]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_8087(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[240]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_8087(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[241]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_8087(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[242]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 265  loop-looping-set!");
f_8017(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[243]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_8087(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[244]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_8087(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[245]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_8087(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_8087(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k8085 in do1527 in make-loop-clause in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_8074(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8047(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8047,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8035(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8035,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8023(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8023,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_8017(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8017,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_8011(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8011,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7999(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7999,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7987(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7987,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7975(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7975,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7963(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7963,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k7947 in k7944 in k7941 in k7938 in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_7957(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7957,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* sal:output in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7921(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7921,2,t0,t1);}
C_trace("ChickenBridge.scm: 264  print-error");
t2=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[225]);}

/* sal:open in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7915(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7915,2,t0,t1);}
C_trace("ChickenBridge.scm: 264  print-error");
t2=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[223]);}

/* sal:load in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7868(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7868,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7872,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  file-exists?");
t4=C_retrieve(lf[221]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k7870 in sal:load in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7872,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7875,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_string_length(((C_word*)t0)[2]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7897,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_greaterp(t3,C_fix(4)))){
t5=(C_word)C_a_i_minus(&a,2,t3,C_fix(4));
C_trace("substring=?");
t6=C_retrieve(lf[217]);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t4,((C_word*)t0)[2],lf[218],t5,C_fix(0),C_SCHEME_FALSE);}
else{
t5=t4;
f_7897(2,t5,C_SCHEME_FALSE);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7888,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  string-append");
t4=*((C_word*)lf[193]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[219],((C_word*)t0)[2],lf[220]);}}

/* k7886 in k7870 in sal:load in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  print-error");
t2=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k7895 in k7870 in sal:load in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 264  load-sal-file");
t2=C_retrieve(lf[215]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 264  load");
t2=C_retrieve(lf[216]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k7873 in k7870 in sal:load in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7859(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7859,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7863,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  chdir");
t4=C_retrieve(lf[40]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k7861 in sal:chdir in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7680(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_7680r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7680r(t0,t1,t2);}}

static void C_ccall f_7680r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7683,a[2]=t4,a[3]=((C_word)li134),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7828,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7833,a[2]=t4,a[3]=t8,a[4]=((C_word)li135),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_7833(t10,t6,t2);}

/* do1355 in sal:print in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_7833(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7833,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 264  print-message");
t3=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[212]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7846,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_7683(t5,t3,t4);}}

/* k7844 in do1355 in sal:print in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_7833(t3,((C_word*)t0)[2],t2);}

/* k7826 in sal:print in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_7683(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7683,NULL,3,t0,t1,t2);}
t3=t2;
if(C_truep(t3)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 264  print-message");
t4=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,lf[205]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7711,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  print-message");
t5=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[208]);}
else{
t4=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 264  print-message");
t5=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[209]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_inexactp(t2))){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7798,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7802,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  decimals");
t7=C_retrieve(lf[57]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,t2,C_fix(3));}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7809,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  number->string");
C_number_to_string(3,0,t5,t2);}}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 264  print-message");
t5=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t2);}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7825,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  sprintf");
t6=C_retrieve(lf[5]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[210],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 264  print-message");
t4=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,lf[211]);}}

/* k7823 in printer in sal:print in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  print-message");
t2=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k7807 in printer in sal:print in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  print-message");
t2=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k7800 in printer in sal:print in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  number->string");
C_number_to_string(3,0,((C_word*)t0)[2],t1);}

/* k7796 in printer in sal:print in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  print-message");
t2=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k7709 in printer in sal:print in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7711,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7714,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7719,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li133),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_7719(t6,t2,((C_word*)t0)[2]);}

/* do1347 in k7709 in printer in sal:print in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_7719(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7719,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7729,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_7683(t5,t3,t4);}}

/* k7727 in do1347 in k7709 in printer in sal:print in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7729,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7732,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_7732(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 264  print-message");
t4=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[207]);}}

/* k7730 in k7727 in do1347 in k7709 in printer in sal:print in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_7719(t3,((C_word*)t0)[2],t2);}

/* k7712 in k7709 in printer in sal:print in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  print-message");
t2=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[206]);}

/* sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7509(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7509,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=C_mutate(&lf[188],t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7515,a[2]=t6,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t9=*((C_word*)lf[11]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t8,C_retrieve2(lf[105],"list->token"),t4);}

/* k7513 in sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7515,2,t0,t1);}
t2=C_mutate(&lf[189],t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7518,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(36608));
t5=t3;
f_7518(t5,t4);}
else{
t4=t3;
f_7518(t4,C_SCHEME_FALSE);}}

/* k7516 in k7513 in sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_7518(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7518,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7522,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
t4=C_retrieve2(lf[189],"*sal-tokens*");
t5=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5318,a[2]=t4,a[3]=t3,a[4]=((C_word)li131),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  call/cc");
t7=*((C_word*)lf[202]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t2,t6);}

/* a5317 in k7516 in k7513 in sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5318(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5318,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5324,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li129),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5331,a[2]=t2,a[3]=((C_word)li130),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a5330 in a5317 in k7516 in k7513 in sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5331(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5331,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5338,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_5338(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_5338(t6,C_SCHEME_FALSE);}}

/* k5336 in a5330 in a5317 in k7516 in k7513 in sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_5338(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5338,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5345,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  add-emit-info");
f_4975(t2,lf[199],lf[200],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 264  make-parse-error");
f_4795(((C_word*)t0)[4],lf[201],C_retrieve2(lf[155],"*maxtokpos*"));}}

/* k5343 in k5336 in a5330 in a5317 in k7516 in k7513 in sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  emit");
f_5003(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a5323 in a5317 in k7516 in k7513 in sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5324,2,t0,t1);}
t2=lf[155]=C_fix(0);;
C_trace("ChickenBridge.scm: 264  parser");
f_5356(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k7520 in k7516 in k7513 in sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7522,2,t0,t1);}
t2=C_mutate(&lf[190],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7525,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=C_retrieve2(lf[190],"*sal-output*");
if(C_truep((C_word)C_i_structurep(t4,lf[122]))){
t5=C_retrieve2(lf[188],"*sal-string*");
t6=C_retrieve2(lf[190],"*sal-output*");
t7=(C_word)C_i_string_length(t5);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7556,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  parse-error-position");
f_4834(t8,t6);}
else{
if(C_truep(((C_word*)t0)[2])){
C_trace("ChickenBridge.scm: 264  pp");
t5=C_retrieve(lf[197]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[190],"*sal-output*"));}
else{
C_trace("ChickenBridge.scm: 264  eval");
t5=C_retrieve(lf[198]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[190],"*sal-output*"));}}}

/* k7554 in k7520 in k7516 in k7513 in sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7556,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_7562,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7649,a[2]=((C_word*)t0)[4],a[3]=t9,a[4]=t4,a[5]=((C_word)li128),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_7649(t11,t7,C_SCHEME_FALSE);}

/* do1321 in k7554 in k7520 in k7516 in k7513 in sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_7649(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7649,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7659,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_7659(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_7659(t11,t10);}}}

/* k7657 in do1321 in k7554 in k7520 in k7516 in k7513 in sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_7659(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_7649(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k7560 in k7554 in k7520 in k7516 in k7513 in sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7562,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7570,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7619,a[2]=((C_word*)t0)[4],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li127),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_7619(t9,t5,C_SCHEME_FALSE);}

/* do1328 in k7560 in k7554 in k7520 in k7516 in k7513 in sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_7619(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7619,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7629,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_7629(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_7629(t11,t10);}}}

/* k7627 in do1328 in k7560 in k7554 in k7520 in k7516 in k7513 in sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_7629(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_7619(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k7568 in k7560 in k7554 in k7520 in k7516 in k7513 in sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7570,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7573,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7580,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7584,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  parse-error-string");
f_4816(t4,((C_word*)t0)[2]);}

/* k7582 in k7568 in k7560 in k7554 in k7520 in k7516 in k7513 in sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7584,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7588,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  make-string");
t3=*((C_word*)lf[195]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k7586 in k7582 in k7568 in k7560 in k7554 in k7520 in k7516 in k7513 in sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7588,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7592,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  substring");
t3=*((C_word*)lf[196]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k7590 in k7586 in k7582 in k7568 in k7560 in k7554 in k7520 in k7516 in k7513 in sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7592,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7596,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  make-string");
t3=*((C_word*)lf[195]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k7594 in k7590 in k7586 in k7582 in k7568 in k7560 in k7554 in k7520 in k7516 in k7513 in sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7596,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7603,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 264  make-string");
t5=*((C_word*)lf[195]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k7601 in k7594 in k7590 in k7586 in k7582 in k7568 in k7560 in k7554 in k7520 in k7516 in k7513 in sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7603,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 264  string-append");
t5=*((C_word*)lf[193]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[194],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k7578 in k7568 in k7560 in k7554 in k7520 in k7516 in k7513 in sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  print-error");
t2=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k7571 in k7568 in k7560 in k7554 in k7520 in k7516 in k7513 in sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  values");
C_values(2,0,((C_word*)t0)[2]);}

/* k7523 in k7520 in k7516 in k7513 in sal in k7501 in k7498 in k7495 in k7492 in k7489 in k6967 in k6964 in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_7525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6445(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_6445,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6452,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_6458,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4931(t33,t34,C_fix(23296));}

/* k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6458,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6462,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_6508,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4931(t2,t3,C_fix(10756));}}

/* k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6508,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_6512,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_6605,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4931(t2,t3,C_fix(22784));}}

/* k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6605,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6609,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_6673,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6673,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_6680,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6930,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_6680(t8,t7);}}

/* k6928 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_6680(t3,t2);}

/* k6678 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_6680(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6680,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6683,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6869,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6918,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k6916 in k6678 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_6683(t3,t2);}

/* k6867 in k6678 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6869,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6875,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  fifth");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k6873 in k6867 in k6678 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6875,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6899,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  fifth");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_6683(t4,t3);}}

/* k6897 in k6873 in k6867 in k6678 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6899,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6883,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6895,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  fifth");
t6=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k6893 in k6897 in k6873 in k6867 in k6678 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k6881 in k6897 in k6873 in k6867 in k6678 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_6683(t3,t2);}

/* k6681 in k6678 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_6683(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6683,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6686,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_6686(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6845,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t4=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[187]);}}

/* k6843 in k6681 in k6678 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6845,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6849,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 264  append");
t5=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k6847 in k6843 in k6681 in k6678 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_6686(t4,t3);}

/* k6684 in k6681 in k6678 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_6686(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6686,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6689,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_6689(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6822,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t4=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[186]);}}

/* k6820 in k6684 in k6681 in k6678 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6822,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6826,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 264  append");
t5=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k6824 in k6820 in k6684 in k6681 in k6678 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_6689(t4,t3);}

/* k6687 in k6684 in k6681 in k6678 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_6689(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6689,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6692,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_6692(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6799,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t4=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[185]);}}
else{
t3=t2;
f_6692(t3,C_SCHEME_UNDEFINED);}}

/* k6797 in k6687 in k6684 in k6681 in k6678 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6799,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6803,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 264  append");
t5=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k6801 in k6797 in k6687 in k6684 in k6681 in k6678 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_6692(t4,t3);}

/* k6690 in k6687 in k6684 in k6681 in k6678 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_6692(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6692,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6695,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6724,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4931(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[161],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_6695(t7,t6);}}

/* k6722 in k6690 in k6687 in k6684 in k6681 in k6678 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6724,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[171],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[161],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_6695(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6742,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4931(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k6740 in k6722 in k6690 in k6687 in k6684 in k6681 in k6678 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6742,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[181],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[161],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_6695(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6760,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4931(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k6758 in k6740 in k6722 in k6690 in k6687 in k6684 in k6681 in k6678 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6760,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[182],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[183],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_6695(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6778,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4931(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k6776 in k6758 in k6740 in k6722 in k6690 in k6687 in k6684 in k6681 in k6678 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6778,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[184],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[183],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_6695(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_6695(t2,C_SCHEME_UNDEFINED);}}

/* k6693 in k6690 in k6687 in k6684 in k6681 in k6678 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_6695(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6695,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6699,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 264  append");
t5=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k6697 in k6693 in k6690 in k6687 in k6684 in k6681 in k6678 in k6671 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_6452(t3,t2);}

/* k6607 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6609,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6613,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k6611 in k6607 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6613,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6617,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t4=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[180]);}

/* k6615 in k6611 in k6607 in k6603 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6617,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[178],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[179],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[21],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_6452(t12,t11);}

/* k6510 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6512,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_6516,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k6514 in k6510 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6516,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6520,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 264  fifth");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k6518 in k6514 in k6510 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6520,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6523,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6539,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_6523(t6,t5);}}

/* k6537 in k6518 in k6514 in k6510 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6539,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6543,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t4=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[177]);}

/* k6541 in k6537 in k6518 in k6514 in k6510 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6543,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[175],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[176],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_6523(t12,t11);}

/* k6521 in k6518 in k6514 in k6510 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_6523(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6523,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6527,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 264  append");
t5=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k6525 in k6521 in k6518 in k6514 in k6510 in k6506 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_6452(t3,t2);}

/* k6460 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6462,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6466,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t4=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[174]);}

/* k6464 in k6460 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6466,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6470,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t4=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[173]);}

/* k6468 in k6464 in k6460 in k6456 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6470,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[161],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[171],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_6452(t10,t9);}

/* k6450 in sal-parse-stepping in k6441 in k6438 in k6435 in k6432 in k6429 in k6426 in k6423 in k6420 in k6417 in k6414 in k6411 in k6408 in k6405 in k6402 in k6399 in k6396 in k6393 in k6390 in k6387 in k6384 in k6381 in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_6452(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_6267(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6267,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6279,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li124),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_6279(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do958 in inf->pre in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_6279(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6279,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6298,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 264  is-op?");
f_6246(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k6296 in do958 in inf->pre in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6298,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6301,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6316,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li123),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_6316(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_6301(2,t5,t4);}}

/* do960 in k6296 in do958 in inf->pre in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_6316(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6316,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6330,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6344,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  reverse");
t12=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6348,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 264  is-op?");
f_6246(t10,t11);}}

/* k6346 in do960 in k6296 in do958 in inf->pre in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6348,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6351,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_6351(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_6351(t10,t9);}}

/* k6349 in k6346 in do960 in k6296 in do958 in inf->pre in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_6351(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_6316(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k6342 in do960 in k6296 in do958 in inf->pre in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  inf->pre");
f_6267(((C_word*)t0)[2],t1);}

/* k6328 in do960 in k6296 in do958 in inf->pre in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6330,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k6299 in k6296 in do958 in inf->pre in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_6279(t2,((C_word*)t0)[2]);}

/* is-op? in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_6246(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6246,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6253,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  token-unit?");
f_4915(t3,t2);}

/* k6251 in is-op? in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6253,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6256,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-type");
f_4867(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k6254 in k6251 in is-op? in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6256,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6262,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  SalOpType?");
f_6023(t2,t1);}

/* k6260 in k6254 in k6251 in is-op? in k6242 in k6239 in k6236 in k6233 in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6262,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_bitwise_and(&a,2,t3,C_fix(255)));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_6181(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6181,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6190,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li120),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_6190(t10,t1,t2);}

/* do924 in remove-token-type in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_6190(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6190,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6203,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6213,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4931(t4,t5,((C_word*)t0)[2]);}}

/* k6211 in do924 in remove-token-type in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_6213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6213,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_6203(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_6203(t7,t6);}}

/* k6201 in do924 in remove-token-type in k6177 in k6174 in k6171 in k6168 in k6165 in k6162 in k6159 in k6156 in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_6203(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_6190(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_6137(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6137,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_arithmetic_shift(&a,2,t2,C_fix(-8));
t5=(C_word)C_a_i_arithmetic_shift(&a,2,t3,C_fix(-8));
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_nequalp(t4,t5));}

/* SalRuleType? in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_6125(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6125,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_6023(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6023,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_5975(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5975,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_5356(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5356,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5360,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 264  printf");
t10=C_retrieve(lf[164]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,lf[165],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_5360(2,t10,C_SCHEME_UNDEFINED);}}

/* k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5360,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5363,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 264  null-tokens?");
f_4535(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5363,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5366,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_5366(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5781,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5785,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5789,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  first-token");
f_4523(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k5787 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  token-position");
f_4482(((C_word*)t0)[2],t1);}

/* k5783 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  max");
t2=*((C_word*)lf[163]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[155],"*maxtokpos*"),t1);}

/* k5779 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[155],t1);
t3=((C_word*)t0)[2];
f_5366(t3,t2);}

/* k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_5366(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5366,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=((C_word*)t0)[8];
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5381,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  SalTokenType?");
f_5975(t4,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5489,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 264  pattern-clause?");
f_4677(t3,((C_word*)t0)[8]);}}

/* k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5489,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5495,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4722,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  pattern-clause?");
f_4677(t4,t3);}
else{
C_trace("ChickenBridge.scm: 264  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[162],((C_word*)t0)[2]);}}

/* k4720 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_5495(t3,(C_word)C_eqp(t2,lf[143]));}
else{
t2=((C_word*)t0)[2];
f_5495(t2,C_SCHEME_FALSE);}}

/* k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_5495(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5495,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_5504,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 264  pattern-nsubs");
f_4695(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5583,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4738,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  pattern-clause?");
f_4677(t5,t4);}}

/* k4736 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_5583(t3,(C_word)C_eqp(t2,lf[144]));}
else{
t2=((C_word*)t0)[2];
f_5583(t2,C_SCHEME_FALSE);}}

/* k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_5583(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5583,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_5589,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 264  pattern-nsubs");
f_4695(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5653,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  pattern-zero-or-more?");
f_4763(t2,((C_word*)t0)[2]);}}

/* k5651 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5653,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5656,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_5656(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4754,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  pattern-clause?");
f_4677(t4,t3);}}

/* k4752 in k5651 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_5656(t3,(C_word)C_eqp(t2,lf[161]));}
else{
t2=((C_word*)t0)[2];
f_5656(t2,C_SCHEME_FALSE);}}

/* k5654 in k5651 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_5656(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5656,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5662,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_5685,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li112),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_5685(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5734,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4786,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  pattern-clause?");
f_4677(t4,t3);}}

/* k4784 in k5654 in k5651 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_5734(t3,(C_word)C_eqp(t2,lf[160]));}
else{
t2=((C_word*)t0)[2];
f_5734(t2,C_SCHEME_FALSE);}}

/* k5732 in k5654 in k5651 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_5734(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5734,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5743,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5754,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li113),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5760,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li114),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[159],t3);}}

/* a5759 in k5732 in k5654 in k5651 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5760(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5760,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a5753 in k5732 in k5654 in k5651 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5754,2,t0,t1);}
C_trace("ChickenBridge.scm: 264  parser");
f_5356(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k5741 in k5732 in k5654 in k5651 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 264  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 264  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do661 in k5654 in k5651 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_5685(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5685,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_5695,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_5695(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 264  null-tokens?");
f_4535(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k5693 in do661 in k5654 in k5651 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5695,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5698,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5715,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li110),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5721,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li111),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a5720 in k5693 in do661 in k5654 in k5651 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5721(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5721,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a5714 in k5693 in do661 in k5654 in k5651 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5715,2,t0,t1);}
C_trace("ChickenBridge.scm: 264  parser");
f_5356(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k5696 in k5693 in do661 in k5654 in k5651 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5698,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5701,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5708,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  append");
t4=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_5701(t3,C_SCHEME_UNDEFINED);}}

/* k5706 in k5696 in k5693 in do661 in k5654 in k5651 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5708,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_5701(t6,t5);}

/* k5699 in k5696 in k5693 in do661 in k5654 in k5651 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_5701(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_5685(t2,((C_word*)t0)[2]);}

/* k5660 in k5654 in k5651 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5662,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5665,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5671,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  pattern-zero-or-more?");
f_4763(t3,((C_word*)t0)[2]);}

/* k5669 in k5660 in k5654 in k5651 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_5665(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_5665(t5,t4);}}

/* k5663 in k5660 in k5654 in k5651 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_5665(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k5587 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5589,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5592,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_5607,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li109),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_5607(t6,t2,C_fix(0));}

/* do641 in k5587 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_5607(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5607,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5617,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5626,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li107),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5640,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li108),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a5639 in do641 in k5587 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5640(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5640,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a5625 in do641 in k5587 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5626,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5634,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  pattern-sub");
f_4705(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k5632 in a5625 in do641 in k5587 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5634,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 264  parser");
f_5356(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k5615 in do641 in k5587 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5617,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_5607(t3,((C_word*)t0)[2],t2);}

/* k5590 in k5587 in k5581 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 264  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 264  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k5502 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5504,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5507,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_5526,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li106),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_5526(t8,t4,C_fix(0));}

/* do619 in k5502 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_5526(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5526,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5539,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5559,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li104),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5573,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li105),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a5572 in do619 in k5502 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5573(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5573,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a5558 in do619 in k5502 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5559,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5567,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  pattern-sub");
f_4705(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k5565 in a5558 in do619 in k5502 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5567,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 264  parser");
f_5356(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k5537 in do619 in k5502 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5539,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5542,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_5542(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_5542(t5,t4);}}

/* k5540 in k5537 in do619 in k5502 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_5542(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5542,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_5526(t3,((C_word*)t0)[2],t2);}

/* k5505 in k5502 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5507,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5510,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_5510(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5524,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  reverse");
t5=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k5522 in k5505 in k5502 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_5510(t3,t2);}

/* k5508 in k5505 in k5502 in k5493 in k5487 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_5510(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k5379 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5381,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5387,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  null-tokens?");
f_4535(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5439,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  SalRuleType?");
f_6125(t2,((C_word*)t0)[5]);}}

/* k5437 in k5379 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5439,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5442,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  get-rule");
f_4653(t2,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 264  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[157],((C_word*)t0)[2]);}}

/* k5440 in k5437 in k5379 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5442,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[111]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[111]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5453,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li102),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5463,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li103),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a5462 in k5440 in k5437 in k5379 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5463(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5463,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5474,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 264  func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_5474(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 264  values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k5472 in a5462 in k5440 in k5437 in k5379 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a5452 in k5440 in k5437 in k5379 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5453,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 264  parser");
f_5356(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k5385 in k5379 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5387,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 264  values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5397,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  first-token");
f_4523(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k5395 in k5385 in k5379 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5397,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5403,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5433,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  token-type");
f_4446(t3,t1);}

/* k5431 in k5395 in k5385 in k5379 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6137(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k5401 in k5395 in k5385 in k5379 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5403,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5410,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5418,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  token-type");
f_4446(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 264  values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k5416 in k5401 in k5395 in k5385 in k5379 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5418,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5422,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  token-string");
f_4464(t2,((C_word*)t0)[2]);}

/* k5420 in k5416 in k5401 in k5395 in k5385 in k5379 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5422,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5426,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  token-position");
f_4482(t2,((C_word*)t0)[2]);}

/* k5424 in k5420 in k5416 in k5401 in k5395 in k5385 in k5379 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k5408 in k5401 in k5395 in k5385 in k5379 in k5364 in k5361 in k5358 in parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 264  values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_5252(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5252,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5254,a[2]=t2,a[3]=((C_word)li100),tmp=(C_word)a,a+=4,tmp));}

/* f_5254 in simple-unit-emitter in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5254(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5254,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5258,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5302,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t6,t2);}

/* k5300 */
static void C_ccall f_5302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  append");
t2=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k5256 */
static void C_ccall f_5258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5258,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5261,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_5261(t9,t8);}
else{
t6=t5;
f_5261(t6,C_SCHEME_UNDEFINED);}}

/* k5259 in k5256 */
static void C_fcall f_5261(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5261,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5266,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li99),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_5266(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do576 in k5259 in k5256 */
static void C_fcall f_5266(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5266,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5287,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k5285 in do576 in k5259 in k5256 */
static void C_ccall f_5287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_5266(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_5244(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5244,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5246,a[2]=t2,a[3]=((C_word)li97),tmp=(C_word)a,a+=4,tmp));}

/* f_5246 in simple-unit-parser in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5246(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_5246,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4846(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* emit-list in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_5036(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5036,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5053,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  emit");
f_5003(t5,t6,t3,t4);}}

/* k5051 in emit-list in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5053,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5057,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 264  emit-list");
f_5036(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k5055 in k5051 in emit-list in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5057,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_5003(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5003,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5010,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  token-unit?");
f_4915(t5,t2);}

/* k5008 in emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5010,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5081,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-type");
f_4867(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5019,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4954,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit?");
f_4852(t4,t3);}}

/* k4952 in k5008 in emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4954,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4961,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-type");
f_4867(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_5019(2,t2,C_SCHEME_FALSE);}}

/* k4959 in k4952 in k5008 in emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  SalRuleType?");
f_6125(((C_word*)t0)[2],t1);}

/* k5017 in k5008 in emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5019,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5219,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5242,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-type");
f_4867(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 264  emit-list");
f_5036(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 264  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[151],((C_word*)t0)[4]);}}}

/* k5240 in k5017 in k5008 in emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  get-rule");
f_4653(((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k5217 in k5017 in k5008 in emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5219,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[111]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 264  meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5235,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t4,((C_word*)t0)[4]);}}

/* k5233 in k5217 in k5017 in k5008 in emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  emit");
f_5003(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k5079 in k5008 in emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5081,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5084,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4885(t2,((C_word*)t0)[2]);}

/* k5082 in k5079 in k5008 in emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5084,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 264  string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 264  string->symbol");
t8=*((C_word*)lf[140]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5108,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  SalOpType?");
f_6023(t8,((C_word*)t0)[4]);}}}

/* k5106 in k5082 in k5079 in k5008 in emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5108,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5114,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6137(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5159,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6137(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5165,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6137(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k5163 in k5106 in k5082 in k5079 in k5008 in emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5165,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5171,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6137(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k5169 in k5163 in k5106 in k5082 in k5079 in k5008 in emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5171,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 264  string->keyword");
t2=C_retrieve(lf[146]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5180,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6137(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k5178 in k5169 in k5163 in k5106 in k5082 in k5079 in k5008 in emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5180,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 264  string->keyword");
t2=C_retrieve(lf[146]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5189,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6137(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k5187 in k5178 in k5169 in k5163 in k5106 in k5082 in k5079 in k5008 in emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5189,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 264  string->symbol");
t2=*((C_word*)lf[140]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5198,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6137(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k5196 in k5187 in k5178 in k5169 in k5163 in k5106 in k5082 in k5079 in k5008 in emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5198,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 264  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[147],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5207,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6137(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k5205 in k5196 in k5187 in k5178 in k5169 in k5163 in k5106 in k5082 in k5079 in k5008 in emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 264  string->symbol");
t2=*((C_word*)lf[140]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 264  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[148],((C_word*)t0)[2]);}}

/* k5157 in k5106 in k5082 in k5079 in k5008 in emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k5112 in k5106 in k5082 in k5079 in k5008 in emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5114,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[74]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5120,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6137(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k5118 in k5112 in k5106 in k5082 in k5079 in k5008 in emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5120,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[141]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5126,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6137(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k5124 in k5118 in k5112 in k5106 in k5082 in k5079 in k5008 in emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5126,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[142]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5132,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6137(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k5130 in k5124 in k5118 in k5112 in k5106 in k5082 in k5079 in k5008 in emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5132,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[143]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5138,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6137(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k5136 in k5130 in k5124 in k5118 in k5112 in k5106 in k5082 in k5079 in k5008 in emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5138,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[144]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5144,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6137(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k5142 in k5136 in k5130 in k5124 in k5118 in k5112 in k5106 in k5082 in k5079 in k5008 in emit in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_5144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[145]);}
else{
C_trace("ChickenBridge.scm: 264  string->symbol");
t2=*((C_word*)lf[140]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4985(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4985,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_4992,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_4992(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 264  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[138],t2);}}

/* k4990 in set-emit-info! in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4975(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4975,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4963(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4963,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4931(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4931,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_4938,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  token-unit?");
f_4915(t4,t2);}

/* k4936 in token-unit-type=? in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4938,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4945,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-type");
f_4867(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k4943 in k4936 in token-unit-type=? in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6137(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4915(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4915,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4922,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit?");
f_4852(t3,t2);}

/* k4920 in token-unit? in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4922,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4929,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-type");
f_4867(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k4927 in k4920 in token-unit? in k4911 in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  SalTokenType?");
f_5975(((C_word*)t0)[2],t1);}

/* parse-unit-position in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4903(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4903,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[126]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4885(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4885,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[126]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4867(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4867,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[126]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4852(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4852,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[126]));}

/* make-parse-unit in k4842 in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4846(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4846,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[126],t2,t3,t4));}

/* parse-error-position in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4834(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4834,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[122]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-error-string in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4816(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4816,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[122]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-parse-error in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4795(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4795,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[122],t2,t3));}

/* pattern-zero-or-more? in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4763(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4763,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4770,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  pattern-clause?");
f_4677(t3,t2);}

/* k4768 in pattern-zero-or-more? in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[120]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4705(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4705,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4713,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  pattern-subs");
f_4689(t4,t2);}

/* k4711 in pattern-sub in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4695(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4695,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4703,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  pattern-subs");
f_4689(t3,t2);}

/* k4701 in pattern-nsubs in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4689(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4689,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4677(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4677,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* get-rule in k4649 in k4646 in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4653(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4653,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 264  hash-table-ref");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[109],"*rules*"),t2);}
else{
C_trace("ChickenBridge.scm: 264  hash-table-ref/default");
t4=C_retrieve(lf[114]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[109],"*rules*"),t3);}}

/* rule-name in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4566(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4566,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[111]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-rule in k4541 in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4545(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4545,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[111],t2,t3,t4,t5,t6));}

/* null-tokens? in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4535(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4535,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4523(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4523,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k4490 in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4494(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_4494,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[106]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[100],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[100],"make-token"),t2);}}

/* token-position in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4482(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4482,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[101]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-string in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4464(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4464,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[101]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* token-type in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4446(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4446,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[101]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4425(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_4425,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[101],t2,t3,t4));}

/* ranpink in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4419,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub217(t2));}

/* ranbrown in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4413,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub220(t2));}

/* rangamma in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4394(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_4394r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_4394r(t0,t1,t2);}}

static void C_ccall f_4394r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 263  tb:rangamma");
f_3656(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 263  tb:rangamma");
f_3656(t1,t3);}}

/* ranpoisson in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4375(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_4375r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_4375r(t0,t1,t2);}}

static void C_ccall f_4375r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_i_nullp(C_retrieve(lf[96])))){
C_trace("ChickenBridge.scm: 263  tb:ranpoisson");
f_3666(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 263  tb:ranpoisson");
f_3666(t1,t3);}}

/* rancauchy in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4369,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub210(t2));}

/* rangauss in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4329(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_4329r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_4329r(t0,t1,t2);}}

static void C_ccall f_4329r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 263  tb:rangauss");
f_3627(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 263  tb:rangauss");
f_3627(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 263  tb:rangauss");
f_3627(t1,t4,t5);}}}

/* ranexp in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4310(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_4310r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_4310r(t0,t1,t2);}}

static void C_ccall f_4310r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 263  tb:ranexp");
f_3638(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 263  tb:ranexp");
f_3638(t1,t3);}}

/* ranbeta in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4266(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_4266r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_4266r(t0,t1,t2);}}

static void C_ccall f_4266r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 263  tb:ranbeta");
f_3645(t1,lf[90],lf[91]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 263  tb:ranbeta");
f_3645(t1,t4,t5);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 263  tb:ranbeta");
f_3645(t1,t4,t5);}}}

/* ranmiddle in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4260,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub183(t2));}

/* ranhigh in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4254,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub180(t2));}

/* ranlow in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4248,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub177(t2));}

/* pick in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4242(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_4242r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_4242r(t0,t1,t2);}}

static void C_ccall f_4242r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_trace("ChickenBridge.scm: 263  pickl");
t3=C_retrieve(lf[83]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,t2);}

/* pickl in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4219(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_4219,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 263  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[84],t2);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4236,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 263  tb:rani");
f_3582(t3,t4);}}

/* k4234 in pickl in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* odds in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4161(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_4161r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_4161r(t0,t1,t2,t3);}}

static void C_ccall f_4161r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(14);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4178,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 263  tb:ranf");
f_3589(t4,lf[80]);}
else{
t4=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_4197,a[2]=t3,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 263  tb:ranf");
f_3589(t5,lf[81]);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_4213,a[2]=t3,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 263  tb:ranf");
f_3589(t5,lf[82]);}}}

/* k4211 in odds in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[4]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?(C_word)C_i_car(((C_word*)t0)[2]):(C_word)C_i_cadr(((C_word*)t0)[2])));}

/* k4195 in odds in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[4]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?(C_word)C_i_car(((C_word*)t0)[2]):C_SCHEME_FALSE));}

/* k4176 in odds in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* between in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4155(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_4155,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 263  ran");
t4=C_retrieve(lf[76]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t2,t3);}

/* ran in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4067(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_4067r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_4067r(t0,t1,t2);}}

static void C_ccall f_4067r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 263  tb:ranf");
f_3589(t1,lf[77]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 263  tb:rani");
f_3582(t1,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 263  tb:ranf");
f_3589(t1,t5);}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4113,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t5))){
t6=(C_word)C_i_cadr(t2);
t7=t4;
f_4113(t7,(C_word)C_fixnump(t6));}
else{
t6=t4;
f_4113(t6,C_SCHEME_FALSE);}}}}

/* k4111 in ran in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4113(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4113,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t4;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub166(C_SCHEME_UNDEFINED,t5,t6));}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t2);
t7=(C_word)C_i_foreign_flonum_argumentp(t3);
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub172(t5,t6,t7));}}

/* ran-set! in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4061(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_4061,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub152(C_SCHEME_UNDEFINED,t2));}

/* steps in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4002(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr4rv,(void*)f_4002r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest_vector(a,C_rest_count(0));
f_4002r(t0,t1,t2,t3,t4);}}

static void C_ccall f_4002r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(12);
t5=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t6=(C_word)C_block_size(t4);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_4015,a[2]=t5,a[3]=t8,a[4]=t4,a[5]=t2,a[6]=((C_word)li48),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_4015(t10,t1,C_fix(0),t3,t6,t5);}

/* do288 in steps in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_4015(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4015,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[5]))){
t8=(C_word)C_a_i_list(&a,1,((C_word*)t6)[1]);
t9=(C_word)C_i_set_cdr(((C_word*)t7)[1],t8);
t10=(C_word)C_i_cdr(((C_word*)t7)[1]);
t11=C_set_block_item(t7,0,t10);
t12=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_4051,a[2]=t7,a[3]=t4,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t6,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 263  modulo");
t13=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,t2,t4);}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k4049 in do288 in steps in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_4051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4051,2,t0,t1);}
t2=(C_word)C_i_vector_ref(((C_word*)t0)[8],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_4015(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* interp in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3996(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_3996r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_3996r(t0,t1,t2,t3);}}

static void C_ccall f_3996r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 263  interpl");
t4=C_retrieve(lf[67]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t2,t3);}

/* interpl in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3901(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr4rv,(void*)f_3901r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest_vector(a,C_rest_count(0));
f_3901r(t0,t1,t2,t3,t4);}}

static void C_ccall f_3901r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word *a=C_alloc(6);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_3905,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 263  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[71],t3);}
else{
t6=t5;
f_3905(2,t6,(C_word)C_i_car(t3));}}

/* k3903 in interpl in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3905,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_3908,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 263  err");
t6=C_retrieve(lf[69]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[70],((C_word*)t0)[4]);}
else{
t6=t4;
f_3908(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k3906 in k3903 in interpl in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3908,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_vemptyp(((C_word*)t0)[5]);
t9=(C_truep(t8)?C_fix(1):(C_word)C_i_vector_ref(((C_word*)t0)[5],C_fix(0)));
t10=(C_word)C_i_cddr(((C_word*)t0)[4]);
t11=C_SCHEME_UNDEFINED;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_set_block_item(t12,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_3920,a[2]=((C_word*)t0)[4],a[3]=t12,a[4]=t9,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li45),tmp=(C_word)a,a+=11,tmp));
t14=((C_word*)t12)[1];
f_3920(t14,((C_word*)t0)[2],t10);}

/* do272 in k3906 in k3903 in interpl in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_3920(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3920,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 263  tb:rescale");
f_3446(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_3942,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 263  error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[68],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_3942(2,t13,t12);}}}

/* k3940 in do272 in k3906 in k3903 in interpl in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_3920(t3,((C_word*)t0)[2],t2);}

/* hertz->keynum in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3895(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3895,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub147(t3,t4));}

/* keynum->pc in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3889(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3889,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub143(C_SCHEME_UNDEFINED,t3));}

/* keynum->hertz in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3883(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3883,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub138(t3,t4));}

/* scaler->cents in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3877(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3877,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub134(C_SCHEME_UNDEFINED,t3));}

/* cents->scaler in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3871(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3871,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_fixnum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub129(t3,t4));}

/* rhythm->seconds in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3811(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_3811r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_3811r(t0,t1,t2,t3);}}

static void C_ccall f_3811r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_3813,a[2]=t2,a[3]=((C_word)li36),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_3818,a[2]=t4,a[3]=((C_word)li37),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_3823,a[2]=t5,a[3]=((C_word)li38),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-tempo245253");
t7=t6;
f_3823(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-beat246251");
t9=t5;
f_3818(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body243248");
t11=t4;
f_3813(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[61]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[0],t10);}}}}

/* def-tempo245 in rhythm->seconds in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_3823(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3823,NULL,2,t0,t1);}
C_trace("def-beat246251");
t2=((C_word*)t0)[2];
f_3818(t2,t1,lf[60]);}

/* def-beat246 in rhythm->seconds in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_3818(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3818,NULL,3,t0,t1,t2);}
C_trace("body243248");
t3=((C_word*)t0)[2];
f_3813(t3,t1,t2,lf[59]);}

/* body243 in rhythm->seconds in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_3813(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3813,NULL,4,t0,t1,t2,t3);}
t4=((C_word*)t0)[2];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub122(t5,t6,t7,t8));}

/* decimals in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3792(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3rv,(void*)f_3792r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_3792r(t0,t1,t2,t3);}}

static void C_ccall f_3792r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
if(C_truep((C_word)C_vemptyp(t3))){
C_trace("ChickenBridge.scm: 263  tb:decimals");
f_3507(t1,t2,C_fix(3));}
else{
t4=(C_word)C_i_vector_ref(t3,C_fix(0));
C_trace("ChickenBridge.scm: 263  tb:decimals");
f_3507(t1,t2,t4);}}

/* quantize in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3786(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_3786,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub114(t4,t5,t6));}

/* int in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3780(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3780,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub102(C_SCHEME_UNDEFINED,t3));}

/* discrete in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3698(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr6r,(void*)f_3698r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_3698r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_3698r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_pairp(t5))){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_3712,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t6))){
t8=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 263  tb:discrete");
f_3473(t7,t2,t3,t4,C_fix(0),t8,C_fix(1));}
else{
t8=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t8))){
t9=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 263  tb:discrete");
f_3473(t7,t2,t3,t4,C_fix(0),t9,C_fix(1));}
else{
t9=(C_word)C_i_car(t6);
t10=(C_word)C_i_cadr(t6);
C_trace("ChickenBridge.scm: 263  tb:discrete");
f_3473(t7,t2,t3,t4,C_fix(0),t9,t10);}}}
else{
t7=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 263  tb:discrete");
f_3473(t1,t2,t3,t4,t5,t8,C_fix(1));}
else{
t8=(C_word)C_i_car(t6);
t9=(C_word)C_i_cadr(t6);
C_trace("ChickenBridge.scm: 263  tb:discrete");
f_3473(t1,t2,t3,t4,t5,t8,t9);}}}

/* k3710 in discrete in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* rescale in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3679(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr7rv,(void*)f_3679r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest_vector(a,C_rest_count(0));
f_3679r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_3679r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
if(C_truep((C_word)C_vemptyp(t7))){
C_trace("ChickenBridge.scm: 263  tb:rescale");
f_3446(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_vector_ref(t7,C_fix(0));
C_trace("ChickenBridge.scm: 263  tb:rescale");
f_3446(t1,t2,t3,t4,t5,t6,t8);}}

/* tb:ranpoisson in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_3666(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3666,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub214(C_SCHEME_UNDEFINED,t3));}

/* tb:rangamma in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_3656(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3656,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub206(t3,t4));}

/* tb:ranbeta in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_3645(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3645,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub200(t4,t5,t6));}

/* tb:ranexp in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_3638(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3638,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub194(t3,t4));}

/* tb:rangauss in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_3627(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3627,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub188(t4,t5,t6));}

/* tb:ranf in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_3589(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3589,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub160(t3,t4));}

/* tb:rani in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_3582(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3582,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub156(C_SCHEME_UNDEFINED,t3));}

/* tb:decimals in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_3507(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3507,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub107(t4,t5,t6));}

/* tb:discrete in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_3473(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3473,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_i_foreign_flonum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_flonum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=(C_word)C_i_foreign_flonum_argumentp(t7);
t14=t1;
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)stub93(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12,t13));}

/* tb:rescale in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_3446(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3446,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub78(t8,t9,t10,t11,t12,t13,t14));}

/* chdir in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3417(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2rv,(void*)f_3417r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_3417r(t0,t1,t2);}}

static void C_ccall f_3417r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?lf[41]:(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3426,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t5+1)))(3,t5,t1,t4);}

/* f_3426 in chdir in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3426(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3426,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3431,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[42]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_3431(2,t4,C_SCHEME_FALSE);}}

/* k3429 */
static void C_ccall f_3431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub67(C_SCHEME_UNDEFINED,t1));}

/* cwd in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3406,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3411,a[2]=((C_word)li17),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_3411 in cwd in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3411,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[39]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub62(t2),C_fix(0));}

/* list* in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3366(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_3366r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_3366r(t0,t1,t2);}}

static void C_ccall f_3366r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 263  error");
t3=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[37]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_3396,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t2);
C_apply(4,0,t5,C_retrieve(lf[36]),t6);}}}

/* k3394 in list* in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3396,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* butlast in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3318(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3318,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_3352,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 263  butlast");
t8=C_retrieve(lf[35]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k3350 in butlast in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3352,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3298(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3298,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 263  last");
t5=C_retrieve(lf[34]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* tenth in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3278(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3278,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3264(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3264,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3254(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3254,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3244(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3244,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3234(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3234,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k3216 in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3224(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3224,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* expand-send in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_2927(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[17],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_2927,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=t4;
t7=(C_truep(t6)?t6:(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3207,a[2]=((C_word)li0),tmp=(C_word)a,a+=3,tmp));
t8=t4;
t9=(C_truep(t8)?(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3196,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp):(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3205,a[2]=((C_word)li2),tmp=(C_word)a,a+=3,tmp));
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_2937,a[2]=t9,a[3]=t7,a[4]=t1,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t2))){
C_trace("ChickenBridge.scm: 187  symbol->string");
t11=*((C_word*)lf[19]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}
else{
t11=t10;
f_2937(2,t11,t2);}}

/* k2935 in expand-send in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_2937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_2937,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_2940,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3188,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 188  hash-table-ref");
t4=*((C_word*)lf[18]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,*((C_word*)lf[2]+1),t1,t3);}

/* a3187 in k2935 in expand-send in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3188,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k2938 in k2935 in expand-send in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_2940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_2940,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_2943,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=t1;
if(C_truep(t3)){
t4=t2;
f_2943(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 189  ferror");
t4=((C_word*)t0)[4];
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[17],((C_word*)t0)[3]);}}

/* k2941 in k2938 in k2935 in expand-send in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_2943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_2943,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
t3=(C_word)C_i_car(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_length(t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_2958,a[2]=t2,a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=((C_word*)t0)[5],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nequalp(t7,C_fix(1)))){
t9=(C_word)C_i_car(t4);
t10=t8;
f_2958(t10,(C_word)C_eqp(t9,lf[16]));}
else{
t9=t8;
f_2958(t9,C_SCHEME_FALSE);}}

/* k2956 in k2941 in k2938 in k2935 in expand-send in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_2958(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_2958,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[11];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[10],((C_word*)((C_word*)t0)[9])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_2968,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 203  append");
t3=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[8],C_SCHEME_END_OF_LIST);}}

/* k2966 in k2956 in k2941 in k2938 in k2935 in expand-send in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_2968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_2968,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_2970,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=t3,a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word)li5),tmp=(C_word)a,a+=13,tmp));
t5=((C_word*)t3)[1];
f_2970(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do25 in k2966 in k2956 in k2941 in k2938 in k2935 in expand-send in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_2970(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_2970,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_2982,a[2]=((C_word*)t0)[9],a[3]=t10,a[4]=t2,a[5]=((C_word*)t0)[10],a[6]=((C_word)li3),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_2982(t12,t1,t2);}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_3023,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_3029,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t8,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=t2,a[9]=t7,a[10]=((C_word*)t0)[9],a[11]=t6,a[12]=((C_word*)t0)[11],a[13]=t9,a[14]=((C_word*)t0)[7],tmp=(C_word)a,a+=15,tmp);
t11=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t11)){
t12=t10;
f_3029(2,t12,C_SCHEME_FALSE);}
else{
t12=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 218  keyword?");
t13=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t10,t12);}}}

/* k3027 in do25 in k2966 in k2956 in k2941 in k2938 in k2935 in expand-send in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3029,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[13];
f_3023(t3,t2);}
else{
t2=((C_word*)((C_word*)t0)[14])[1];
if(C_truep(t2)){
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=(C_word)C_i_assoc(((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10]);
t6=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[12])+1,t7);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_3083,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_3156,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t9,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 239  keyword?");
t11=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)((C_word*)t0)[11])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_3039,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t4=(C_word)C_i_length(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 229  ferror");
t5=((C_word*)t0)[7];
((C_proc6)C_retrieve_proc(t5))(6,t5,t3,lf[14],((C_word*)t0)[6],((C_word*)t0)[3],t4);}
else{
t4=t3;
f_3039(2,t4,C_SCHEME_UNDEFINED);}}}}

/* k3037 in k3027 in do25 in k2966 in k2956 in k2941 in k2938 in k2935 in expand-send in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3039,2,t0,t1);}
t2=(C_word)C_i_list_tail(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_set_car(t2,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=((C_word*)t0)[2];
f_3023(t9,t8);}

/* k3154 in k3027 in do25 in k2966 in k2956 in k2941 in k2938 in k2935 in expand-send in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3156,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_3129,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 244  keyname");
t3=((C_word*)t0)[5];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t2)){
t3=((C_word*)t0)[7];
f_3083(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_3142,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_3144,a[2]=((C_word*)t0)[5],a[3]=((C_word)li4),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[11]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}}}
else{
C_trace("ChickenBridge.scm: 240  ferror");
t2=((C_word*)t0)[8];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[7],lf[12],((C_word*)t0)[6],((C_word*)((C_word*)t0)[4])[1]);}}

/* a3143 in k3154 in k3027 in do25 in k2966 in k2956 in k2941 in k2938 in k2935 in expand-send in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3144(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3144,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 248  keyname");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* k3140 in k3154 in k3027 in do25 in k2966 in k2956 in k2941 in k2938 in k2935 in expand-send in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 246  ferror");
t2=((C_word*)t0)[5];
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],lf[10],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k3127 in k3154 in k3027 in do25 in k2966 in k2956 in k2941 in k2938 in k2935 in expand-send in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 243  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[9],((C_word*)t0)[2],t1);}

/* k3081 in k3027 in do25 in k2966 in k2956 in k2941 in k2938 in k2935 in expand-send in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3083,2,t0,t1);}
t2=(C_word)C_i_member(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_3089,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_3089(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_3110,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 255  keyname");
t5=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k3108 in k3081 in k3027 in do25 in k2966 in k2956 in k2941 in k2938 in k2935 in expand-send in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 254  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[8],((C_word*)t0)[2],t1);}

/* k3087 in k3081 in k3027 in do25 in k2966 in k2956 in k2941 in k2938 in k2935 in expand-send in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_set_car(((C_word*)t0)[3],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=((C_word*)t0)[2];
f_3023(t6,t5);}

/* k3021 in do25 in k2966 in k2956 in k2941 in k2938 in k2935 in expand-send in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_3023(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[7])[1];
f_2970(t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* do31 in do25 in k2966 in k2956 in k2941 in k2938 in k2935 in expand-send in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_2982(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_2982,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_2995,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_member(t4,((C_word*)t0)[2]))){
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=t3;
f_2995(t7,(C_word)C_i_set_car(t2,t6));}
else{
t5=t3;
f_2995(t5,C_SCHEME_UNDEFINED);}}}

/* k2993 in do31 in do25 in k2966 in k2956 in k2941 in k2938 in k2935 in expand-send in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_fcall f_2995(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_2982(t3,((C_word*)t0)[2],t2);}

/* f_3205 in expand-send in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3205(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3205,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_3196 in expand-send in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3196(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3196,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3204,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 185  keyword->string");
t4=C_retrieve(lf[7]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k3202 */
static void C_ccall f_3204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 185  sprintf");
t2=C_retrieve(lf[5]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[6],t1);}

/* f_3207 in expand-send in k2923 in k2920 in k2916 in k2913 in k2910 in k2907 */
static void C_ccall f_3207(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr3r,(void*)f_3207r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_3207r(t0,t1,t2,t3);}}

static void C_ccall f_3207r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3215,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(5,0,t4,C_retrieve(lf[5]),t2,t3);}

/* k3213 */
static void C_ccall f_3215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 181  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[1220] = {
{"toplevelChickenBridge.scm",(void*)C_grace_toplevel},
{"f_2909ChickenBridge.scm",(void*)f_2909},
{"f_2912ChickenBridge.scm",(void*)f_2912},
{"f_2915ChickenBridge.scm",(void*)f_2915},
{"f_2918ChickenBridge.scm",(void*)f_2918},
{"f_2922ChickenBridge.scm",(void*)f_2922},
{"f_18098ChickenBridge.scm",(void*)f_18098},
{"f_18145ChickenBridge.scm",(void*)f_18145},
{"f_18135ChickenBridge.scm",(void*)f_18135},
{"f_18102ChickenBridge.scm",(void*)f_18102},
{"f_2925ChickenBridge.scm",(void*)f_2925},
{"f_18092ChickenBridge.scm",(void*)f_18092},
{"f_3218ChickenBridge.scm",(void*)f_3218},
{"f_18078ChickenBridge.scm",(void*)f_18078},
{"f_18086ChickenBridge.scm",(void*)f_18086},
{"f_18090ChickenBridge.scm",(void*)f_18090},
{"f_4492ChickenBridge.scm",(void*)f_4492},
{"f_4543ChickenBridge.scm",(void*)f_4543},
{"f_18068ChickenBridge.scm",(void*)f_18068},
{"f_18076ChickenBridge.scm",(void*)f_18076},
{"f_4648ChickenBridge.scm",(void*)f_4648},
{"f_17965ChickenBridge.scm",(void*)f_17965},
{"f_18028ChickenBridge.scm",(void*)f_18028},
{"f_18032ChickenBridge.scm",(void*)f_18032},
{"f_18046ChickenBridge.scm",(void*)f_18046},
{"f_17968ChickenBridge.scm",(void*)f_17968},
{"f_17988ChickenBridge.scm",(void*)f_17988},
{"f_17992ChickenBridge.scm",(void*)f_17992},
{"f_4651ChickenBridge.scm",(void*)f_4651},
{"f_17951ChickenBridge.scm",(void*)f_17951},
{"f_17959ChickenBridge.scm",(void*)f_17959},
{"f_17963ChickenBridge.scm",(void*)f_17963},
{"f_4844ChickenBridge.scm",(void*)f_4844},
{"f_17925ChickenBridge.scm",(void*)f_17925},
{"f_17929ChickenBridge.scm",(void*)f_17929},
{"f_17935ChickenBridge.scm",(void*)f_17935},
{"f_17946ChickenBridge.scm",(void*)f_17946},
{"f_17942ChickenBridge.scm",(void*)f_17942},
{"f_4913ChickenBridge.scm",(void*)f_4913},
{"f_17903ChickenBridge.scm",(void*)f_17903},
{"f_6158ChickenBridge.scm",(void*)f_6158},
{"f_17883ChickenBridge.scm",(void*)f_17883},
{"f_6161ChickenBridge.scm",(void*)f_6161},
{"f_17843ChickenBridge.scm",(void*)f_17843},
{"f_6164ChickenBridge.scm",(void*)f_6164},
{"f_17749ChickenBridge.scm",(void*)f_17749},
{"f_17753ChickenBridge.scm",(void*)f_17753},
{"f_17756ChickenBridge.scm",(void*)f_17756},
{"f_17774ChickenBridge.scm",(void*)f_17774},
{"f_17777ChickenBridge.scm",(void*)f_17777},
{"f_17808ChickenBridge.scm",(void*)f_17808},
{"f_17780ChickenBridge.scm",(void*)f_17780},
{"f_17786ChickenBridge.scm",(void*)f_17786},
{"f_17739ChickenBridge.scm",(void*)f_17739},
{"f_17733ChickenBridge.scm",(void*)f_17733},
{"f_6167ChickenBridge.scm",(void*)f_6167},
{"f_17641ChickenBridge.scm",(void*)f_17641},
{"f_17643ChickenBridge.scm",(void*)f_17643},
{"f_17647ChickenBridge.scm",(void*)f_17647},
{"f_17650ChickenBridge.scm",(void*)f_17650},
{"f_17653ChickenBridge.scm",(void*)f_17653},
{"f_17693ChickenBridge.scm",(void*)f_17693},
{"f_17685ChickenBridge.scm",(void*)f_17685},
{"f_17656ChickenBridge.scm",(void*)f_17656},
{"f_17659ChickenBridge.scm",(void*)f_17659},
{"f_17662ChickenBridge.scm",(void*)f_17662},
{"f_17633ChickenBridge.scm",(void*)f_17633},
{"f_6170ChickenBridge.scm",(void*)f_6170},
{"f_17605ChickenBridge.scm",(void*)f_17605},
{"f_6173ChickenBridge.scm",(void*)f_6173},
{"f_17569ChickenBridge.scm",(void*)f_17569},
{"f_17581ChickenBridge.scm",(void*)f_17581},
{"f_17577ChickenBridge.scm",(void*)f_17577},
{"f_17551ChickenBridge.scm",(void*)f_17551},
{"f_17545ChickenBridge.scm",(void*)f_17545},
{"f_6176ChickenBridge.scm",(void*)f_6176},
{"f_17459ChickenBridge.scm",(void*)f_17459},
{"f_17463ChickenBridge.scm",(void*)f_17463},
{"f_17466ChickenBridge.scm",(void*)f_17466},
{"f_17469ChickenBridge.scm",(void*)f_17469},
{"f_17482ChickenBridge.scm",(void*)f_17482},
{"f_17428ChickenBridge.scm",(void*)f_17428},
{"f_17432ChickenBridge.scm",(void*)f_17432},
{"f_17447ChickenBridge.scm",(void*)f_17447},
{"f_17422ChickenBridge.scm",(void*)f_17422},
{"f_6179ChickenBridge.scm",(void*)f_6179},
{"f_17308ChickenBridge.scm",(void*)f_17308},
{"f_17324ChickenBridge.scm",(void*)f_17324},
{"f_17335ChickenBridge.scm",(void*)f_17335},
{"f_17302ChickenBridge.scm",(void*)f_17302},
{"f_6235ChickenBridge.scm",(void*)f_6235},
{"f_17169ChickenBridge.scm",(void*)f_17169},
{"f_17192ChickenBridge.scm",(void*)f_17192},
{"f_17189ChickenBridge.scm",(void*)f_17189},
{"f_17163ChickenBridge.scm",(void*)f_17163},
{"f_6238ChickenBridge.scm",(void*)f_6238},
{"f_17017ChickenBridge.scm",(void*)f_17017},
{"f_17035ChickenBridge.scm",(void*)f_17035},
{"f_17044ChickenBridge.scm",(void*)f_17044},
{"f_17011ChickenBridge.scm",(void*)f_17011},
{"f_6241ChickenBridge.scm",(void*)f_6241},
{"f_16964ChickenBridge.scm",(void*)f_16964},
{"f_16968ChickenBridge.scm",(void*)f_16968},
{"f_16971ChickenBridge.scm",(void*)f_16971},
{"f_16987ChickenBridge.scm",(void*)f_16987},
{"f_16946ChickenBridge.scm",(void*)f_16946},
{"f_16940ChickenBridge.scm",(void*)f_16940},
{"f_6244ChickenBridge.scm",(void*)f_6244},
{"f_16864ChickenBridge.scm",(void*)f_16864},
{"f_6383ChickenBridge.scm",(void*)f_6383},
{"f_16790ChickenBridge.scm",(void*)f_16790},
{"f_16797ChickenBridge.scm",(void*)f_16797},
{"f_16784ChickenBridge.scm",(void*)f_16784},
{"f_6386ChickenBridge.scm",(void*)f_6386},
{"f_16680ChickenBridge.scm",(void*)f_16680},
{"f_16688ChickenBridge.scm",(void*)f_16688},
{"f_16654ChickenBridge.scm",(void*)f_16654},
{"f_16671ChickenBridge.scm",(void*)f_16671},
{"f_16662ChickenBridge.scm",(void*)f_16662},
{"f_16648ChickenBridge.scm",(void*)f_16648},
{"f_6389ChickenBridge.scm",(void*)f_6389},
{"f_16604ChickenBridge.scm",(void*)f_16604},
{"f_6392ChickenBridge.scm",(void*)f_6392},
{"f_16522ChickenBridge.scm",(void*)f_16522},
{"f_16533ChickenBridge.scm",(void*)f_16533},
{"f_16535ChickenBridge.scm",(void*)f_16535},
{"f_16564ChickenBridge.scm",(void*)f_16564},
{"f_16500ChickenBridge.scm",(void*)f_16500},
{"f_16516ChickenBridge.scm",(void*)f_16516},
{"f_16494ChickenBridge.scm",(void*)f_16494},
{"f_6395ChickenBridge.scm",(void*)f_6395},
{"f_16447ChickenBridge.scm",(void*)f_16447},
{"f_16451ChickenBridge.scm",(void*)f_16451},
{"f_16458ChickenBridge.scm",(void*)f_16458},
{"f_16425ChickenBridge.scm",(void*)f_16425},
{"f_16441ChickenBridge.scm",(void*)f_16441},
{"f_16419ChickenBridge.scm",(void*)f_16419},
{"f_6398ChickenBridge.scm",(void*)f_6398},
{"f_16287ChickenBridge.scm",(void*)f_16287},
{"f_16327ChickenBridge.scm",(void*)f_16327},
{"f_16291ChickenBridge.scm",(void*)f_16291},
{"f_16307ChickenBridge.scm",(void*)f_16307},
{"f_16319ChickenBridge.scm",(void*)f_16319},
{"f_16323ChickenBridge.scm",(void*)f_16323},
{"f_16315ChickenBridge.scm",(void*)f_16315},
{"f_16226ChickenBridge.scm",(void*)f_16226},
{"f_16273ChickenBridge.scm",(void*)f_16273},
{"f_16233ChickenBridge.scm",(void*)f_16233},
{"f_16244ChickenBridge.scm",(void*)f_16244},
{"f_16220ChickenBridge.scm",(void*)f_16220},
{"f_6401ChickenBridge.scm",(void*)f_6401},
{"f_16200ChickenBridge.scm",(void*)f_16200},
{"f_16194ChickenBridge.scm",(void*)f_16194},
{"f_6404ChickenBridge.scm",(void*)f_6404},
{"f_16174ChickenBridge.scm",(void*)f_16174},
{"f_16178ChickenBridge.scm",(void*)f_16178},
{"f_16166ChickenBridge.scm",(void*)f_16166},
{"f_6407ChickenBridge.scm",(void*)f_6407},
{"f_16146ChickenBridge.scm",(void*)f_16146},
{"f_16150ChickenBridge.scm",(void*)f_16150},
{"f_16138ChickenBridge.scm",(void*)f_16138},
{"f_6410ChickenBridge.scm",(void*)f_6410},
{"f_16118ChickenBridge.scm",(void*)f_16118},
{"f_16122ChickenBridge.scm",(void*)f_16122},
{"f_16110ChickenBridge.scm",(void*)f_16110},
{"f_6413ChickenBridge.scm",(void*)f_6413},
{"f_16090ChickenBridge.scm",(void*)f_16090},
{"f_16094ChickenBridge.scm",(void*)f_16094},
{"f_16082ChickenBridge.scm",(void*)f_16082},
{"f_6416ChickenBridge.scm",(void*)f_6416},
{"f_15981ChickenBridge.scm",(void*)f_15981},
{"f_15951ChickenBridge.scm",(void*)f_15951},
{"f_15975ChickenBridge.scm",(void*)f_15975},
{"f_15945ChickenBridge.scm",(void*)f_15945},
{"f_6419ChickenBridge.scm",(void*)f_6419},
{"f_15895ChickenBridge.scm",(void*)f_15895},
{"f_15897ChickenBridge.scm",(void*)f_15897},
{"f_15901ChickenBridge.scm",(void*)f_15901},
{"f_15929ChickenBridge.scm",(void*)f_15929},
{"f_15921ChickenBridge.scm",(void*)f_15921},
{"f_15917ChickenBridge.scm",(void*)f_15917},
{"f_15904ChickenBridge.scm",(void*)f_15904},
{"f_15887ChickenBridge.scm",(void*)f_15887},
{"f_6422ChickenBridge.scm",(void*)f_6422},
{"f_15834ChickenBridge.scm",(void*)f_15834},
{"f_15836ChickenBridge.scm",(void*)f_15836},
{"f_15840ChickenBridge.scm",(void*)f_15840},
{"f_15871ChickenBridge.scm",(void*)f_15871},
{"f_15863ChickenBridge.scm",(void*)f_15863},
{"f_15859ChickenBridge.scm",(void*)f_15859},
{"f_15843ChickenBridge.scm",(void*)f_15843},
{"f_15846ChickenBridge.scm",(void*)f_15846},
{"f_15826ChickenBridge.scm",(void*)f_15826},
{"f_6425ChickenBridge.scm",(void*)f_6425},
{"f_15776ChickenBridge.scm",(void*)f_15776},
{"f_15790ChickenBridge.scm",(void*)f_15790},
{"f_15782ChickenBridge.scm",(void*)f_15782},
{"f_15741ChickenBridge.scm",(void*)f_15741},
{"f_15774ChickenBridge.scm",(void*)f_15774},
{"f_15735ChickenBridge.scm",(void*)f_15735},
{"f_6428ChickenBridge.scm",(void*)f_6428},
{"f_15682ChickenBridge.scm",(void*)f_15682},
{"f_15686ChickenBridge.scm",(void*)f_15686},
{"f_15699ChickenBridge.scm",(void*)f_15699},
{"f_15691ChickenBridge.scm",(void*)f_15691},
{"f_15639ChickenBridge.scm",(void*)f_15639},
{"f_15672ChickenBridge.scm",(void*)f_15672},
{"f_15633ChickenBridge.scm",(void*)f_15633},
{"f_6431ChickenBridge.scm",(void*)f_6431},
{"f_15553ChickenBridge.scm",(void*)f_15553},
{"f_15547ChickenBridge.scm",(void*)f_15547},
{"f_6434ChickenBridge.scm",(void*)f_6434},
{"f_15316ChickenBridge.scm",(void*)f_15316},
{"f_15320ChickenBridge.scm",(void*)f_15320},
{"f_15328ChickenBridge.scm",(void*)f_15328},
{"f_15351ChickenBridge.scm",(void*)f_15351},
{"f_15354ChickenBridge.scm",(void*)f_15354},
{"f_15357ChickenBridge.scm",(void*)f_15357},
{"f_15360ChickenBridge.scm",(void*)f_15360},
{"f_15420ChickenBridge.scm",(void*)f_15420},
{"f_15427ChickenBridge.scm",(void*)f_15427},
{"f_15437ChickenBridge.scm",(void*)f_15437},
{"f_15447ChickenBridge.scm",(void*)f_15447},
{"f_15461ChickenBridge.scm",(void*)f_15461},
{"f_15471ChickenBridge.scm",(void*)f_15471},
{"f_15481ChickenBridge.scm",(void*)f_15481},
{"f_15491ChickenBridge.scm",(void*)f_15491},
{"f_15363ChickenBridge.scm",(void*)f_15363},
{"f_15387ChickenBridge.scm",(void*)f_15387},
{"f_15366ChickenBridge.scm",(void*)f_15366},
{"f_15273ChickenBridge.scm",(void*)f_15273},
{"f_15306ChickenBridge.scm",(void*)f_15306},
{"f_15267ChickenBridge.scm",(void*)f_15267},
{"f_6437ChickenBridge.scm",(void*)f_6437},
{"f_15185ChickenBridge.scm",(void*)f_15185},
{"f_15189ChickenBridge.scm",(void*)f_15189},
{"f_15195ChickenBridge.scm",(void*)f_15195},
{"f_15215ChickenBridge.scm",(void*)f_15215},
{"f_15159ChickenBridge.scm",(void*)f_15159},
{"f_15169ChickenBridge.scm",(void*)f_15169},
{"f_15153ChickenBridge.scm",(void*)f_15153},
{"f_6440ChickenBridge.scm",(void*)f_6440},
{"f_15030ChickenBridge.scm",(void*)f_15030},
{"f_15034ChickenBridge.scm",(void*)f_15034},
{"f_14962ChickenBridge.scm",(void*)f_14962},
{"f_14981ChickenBridge.scm",(void*)f_14981},
{"f_15016ChickenBridge.scm",(void*)f_15016},
{"f_14987ChickenBridge.scm",(void*)f_14987},
{"f_14991ChickenBridge.scm",(void*)f_14991},
{"f_15005ChickenBridge.scm",(void*)f_15005},
{"f_14994ChickenBridge.scm",(void*)f_14994},
{"f_14975ChickenBridge.scm",(void*)f_14975},
{"f_14956ChickenBridge.scm",(void*)f_14956},
{"f_6443ChickenBridge.scm",(void*)f_6443},
{"f_14684ChickenBridge.scm",(void*)f_14684},
{"f_6966ChickenBridge.scm",(void*)f_6966},
{"f_14636ChickenBridge.scm",(void*)f_14636},
{"f_14628ChickenBridge.scm",(void*)f_14628},
{"f_6969ChickenBridge.scm",(void*)f_6969},
{"f_14508ChickenBridge.scm",(void*)f_14508},
{"f_6975ChickenBridge.scm",(void*)f_6975},
{"f_7450ChickenBridge.scm",(void*)f_7450},
{"f_7484ChickenBridge.scm",(void*)f_7484},
{"f_7476ChickenBridge.scm",(void*)f_7476},
{"f_7472ChickenBridge.scm",(void*)f_7472},
{"f_7457ChickenBridge.scm",(void*)f_7457},
{"f_7461ChickenBridge.scm",(void*)f_7461},
{"f_7454ChickenBridge.scm",(void*)f_7454},
{"f_6993ChickenBridge.scm",(void*)f_6993},
{"f_7443ChickenBridge.scm",(void*)f_7443},
{"f_7439ChickenBridge.scm",(void*)f_7439},
{"f_7000ChickenBridge.scm",(void*)f_7000},
{"f_7314ChickenBridge.scm",(void*)f_7314},
{"f_7335ChickenBridge.scm",(void*)f_7335},
{"f_7337ChickenBridge.scm",(void*)f_7337},
{"f_7351ChickenBridge.scm",(void*)f_7351},
{"f_7404ChickenBridge.scm",(void*)f_7404},
{"f_7354ChickenBridge.scm",(void*)f_7354},
{"f_7389ChickenBridge.scm",(void*)f_7389},
{"f_7357ChickenBridge.scm",(void*)f_7357},
{"f_7370ChickenBridge.scm",(void*)f_7370},
{"f_7382ChickenBridge.scm",(void*)f_7382},
{"f_7374ChickenBridge.scm",(void*)f_7374},
{"f_7360ChickenBridge.scm",(void*)f_7360},
{"f_7324ChickenBridge.scm",(void*)f_7324},
{"f_7003ChickenBridge.scm",(void*)f_7003},
{"f_7278ChickenBridge.scm",(void*)f_7278},
{"f_7304ChickenBridge.scm",(void*)f_7304},
{"f_7289ChickenBridge.scm",(void*)f_7289},
{"f_7006ChickenBridge.scm",(void*)f_7006},
{"f_7010ChickenBridge.scm",(void*)f_7010},
{"f_7222ChickenBridge.scm",(void*)f_7222},
{"f_7232ChickenBridge.scm",(void*)f_7232},
{"f_7235ChickenBridge.scm",(void*)f_7235},
{"f_7256ChickenBridge.scm",(void*)f_7256},
{"f_7238ChickenBridge.scm",(void*)f_7238},
{"f_7242ChickenBridge.scm",(void*)f_7242},
{"f_7013ChickenBridge.scm",(void*)f_7013},
{"f_7016ChickenBridge.scm",(void*)f_7016},
{"f_7185ChickenBridge.scm",(void*)f_7185},
{"f_7193ChickenBridge.scm",(void*)f_7193},
{"f_7189ChickenBridge.scm",(void*)f_7189},
{"f_7019ChickenBridge.scm",(void*)f_7019},
{"f_7047ChickenBridge.scm",(void*)f_7047},
{"f_7050ChickenBridge.scm",(void*)f_7050},
{"f_7053ChickenBridge.scm",(void*)f_7053},
{"f_7056ChickenBridge.scm",(void*)f_7056},
{"f_7059ChickenBridge.scm",(void*)f_7059},
{"f_7118ChickenBridge.scm",(void*)f_7118},
{"f_14462ChickenBridge.scm",(void*)f_14462},
{"f_14478ChickenBridge.scm",(void*)f_14478},
{"f_14481ChickenBridge.scm",(void*)f_14481},
{"f_14484ChickenBridge.scm",(void*)f_14484},
{"f_14487ChickenBridge.scm",(void*)f_14487},
{"f_14498ChickenBridge.scm",(void*)f_14498},
{"f_14456ChickenBridge.scm",(void*)f_14456},
{"f_7491ChickenBridge.scm",(void*)f_7491},
{"f_14317ChickenBridge.scm",(void*)f_14317},
{"f_14356ChickenBridge.scm",(void*)f_14356},
{"f_14330ChickenBridge.scm",(void*)f_14330},
{"f_14311ChickenBridge.scm",(void*)f_14311},
{"f_7494ChickenBridge.scm",(void*)f_7494},
{"f_13899ChickenBridge.scm",(void*)f_13899},
{"f_13903ChickenBridge.scm",(void*)f_13903},
{"f_13915ChickenBridge.scm",(void*)f_13915},
{"f_13973ChickenBridge.scm",(void*)f_13973},
{"f_13976ChickenBridge.scm",(void*)f_13976},
{"f_13979ChickenBridge.scm",(void*)f_13979},
{"f_14191ChickenBridge.scm",(void*)f_14191},
{"f_14129ChickenBridge.scm",(void*)f_14129},
{"f_14163ChickenBridge.scm",(void*)f_14163},
{"f_14138ChickenBridge.scm",(void*)f_14138},
{"f_14149ChickenBridge.scm",(void*)f_14149},
{"f_14145ChickenBridge.scm",(void*)f_14145},
{"f_13988ChickenBridge.scm",(void*)f_13988},
{"f_14066ChickenBridge.scm",(void*)f_14066},
{"f_14107ChickenBridge.scm",(void*)f_14107},
{"f_14111ChickenBridge.scm",(void*)f_14111},
{"f_14115ChickenBridge.scm",(void*)f_14115},
{"f_14070ChickenBridge.scm",(void*)f_14070},
{"f_14074ChickenBridge.scm",(void*)f_14074},
{"f_14101ChickenBridge.scm",(void*)f_14101},
{"f_14077ChickenBridge.scm",(void*)f_14077},
{"f_13991ChickenBridge.scm",(void*)f_13991},
{"f_14063ChickenBridge.scm",(void*)f_14063},
{"f_14005ChickenBridge.scm",(void*)f_14005},
{"f_14007ChickenBridge.scm",(void*)f_14007},
{"f_14055ChickenBridge.scm",(void*)f_14055},
{"f_14026ChickenBridge.scm",(void*)f_14026},
{"f_14043ChickenBridge.scm",(void*)f_14043},
{"f_14029ChickenBridge.scm",(void*)f_14029},
{"f_14022ChickenBridge.scm",(void*)f_14022},
{"f_13994ChickenBridge.scm",(void*)f_13994},
{"f_13924ChickenBridge.scm",(void*)f_13924},
{"f_13934ChickenBridge.scm",(void*)f_13934},
{"f_13940ChickenBridge.scm",(void*)f_13940},
{"f_13912ChickenBridge.scm",(void*)f_13912},
{"f_13860ChickenBridge.scm",(void*)f_13860},
{"f_13877ChickenBridge.scm",(void*)f_13877},
{"f_13893ChickenBridge.scm",(void*)f_13893},
{"f_13871ChickenBridge.scm",(void*)f_13871},
{"f_13854ChickenBridge.scm",(void*)f_13854},
{"f_7497ChickenBridge.scm",(void*)f_7497},
{"f_13778ChickenBridge.scm",(void*)f_13778},
{"f_7500ChickenBridge.scm",(void*)f_7500},
{"f_13754ChickenBridge.scm",(void*)f_13754},
{"f_13766ChickenBridge.scm",(void*)f_13766},
{"f_13762ChickenBridge.scm",(void*)f_13762},
{"f_13740ChickenBridge.scm",(void*)f_13740},
{"f_13748ChickenBridge.scm",(void*)f_13748},
{"f_13734ChickenBridge.scm",(void*)f_13734},
{"f_7503ChickenBridge.scm",(void*)f_7503},
{"f_13726ChickenBridge.scm",(void*)f_13726},
{"f_11293ChickenBridge.scm",(void*)f_11293},
{"f_11296ChickenBridge.scm",(void*)f_11296},
{"f_11462ChickenBridge.scm",(void*)f_11462},
{"f_11458ChickenBridge.scm",(void*)f_11458},
{"f_11448ChickenBridge.scm",(void*)f_11448},
{"f_11303ChickenBridge.scm",(void*)f_11303},
{"f_11307ChickenBridge.scm",(void*)f_11307},
{"f_11310ChickenBridge.scm",(void*)f_11310},
{"f_11321ChickenBridge.scm",(void*)f_11321},
{"f_11329ChickenBridge.scm",(void*)f_11329},
{"f_11401ChickenBridge.scm",(void*)f_11401},
{"f_11409ChickenBridge.scm",(void*)f_11409},
{"f_11405ChickenBridge.scm",(void*)f_11405},
{"f_11397ChickenBridge.scm",(void*)f_11397},
{"f_11393ChickenBridge.scm",(void*)f_11393},
{"f_11365ChickenBridge.scm",(void*)f_11365},
{"f_11361ChickenBridge.scm",(void*)f_11361},
{"f_11325ChickenBridge.scm",(void*)f_11325},
{"f_7940ChickenBridge.scm",(void*)f_7940},
{"f_13712ChickenBridge.scm",(void*)f_13712},
{"f_7943ChickenBridge.scm",(void*)f_7943},
{"f_13683ChickenBridge.scm",(void*)f_13683},
{"f_13687ChickenBridge.scm",(void*)f_13687},
{"f_7946ChickenBridge.scm",(void*)f_7946},
{"f_13680ChickenBridge.scm",(void*)f_13680},
{"f_7949ChickenBridge.scm",(void*)f_7949},
{"f_13538ChickenBridge.scm",(void*)f_13538},
{"f_11475ChickenBridge.scm",(void*)f_11475},
{"f_11607ChickenBridge.scm",(void*)f_11607},
{"f_11478ChickenBridge.scm",(void*)f_11478},
{"f_11489ChickenBridge.scm",(void*)f_11489},
{"f_11497ChickenBridge.scm",(void*)f_11497},
{"f_11521ChickenBridge.scm",(void*)f_11521},
{"f_11524ChickenBridge.scm",(void*)f_11524},
{"f_11532ChickenBridge.scm",(void*)f_11532},
{"f_11540ChickenBridge.scm",(void*)f_11540},
{"f_11560ChickenBridge.scm",(void*)f_11560},
{"f_11556ChickenBridge.scm",(void*)f_11556},
{"f_11536ChickenBridge.scm",(void*)f_11536},
{"f_11528ChickenBridge.scm",(void*)f_11528},
{"f_11517ChickenBridge.scm",(void*)f_11517},
{"f_11493ChickenBridge.scm",(void*)f_11493},
{"f_11469ChickenBridge.scm",(void*)f_11469},
{"f_12448ChickenBridge.scm",(void*)f_12448},
{"f_12451ChickenBridge.scm",(void*)f_12451},
{"f_12454ChickenBridge.scm",(void*)f_12454},
{"f_12457ChickenBridge.scm",(void*)f_12457},
{"f_12460ChickenBridge.scm",(void*)f_12460},
{"f_12463ChickenBridge.scm",(void*)f_12463},
{"f_12466ChickenBridge.scm",(void*)f_12466},
{"f_12469ChickenBridge.scm",(void*)f_12469},
{"f_12472ChickenBridge.scm",(void*)f_12472},
{"f_12475ChickenBridge.scm",(void*)f_12475},
{"f_12478ChickenBridge.scm",(void*)f_12478},
{"f_12603ChickenBridge.scm",(void*)f_12603},
{"f_12606ChickenBridge.scm",(void*)f_12606},
{"f_12609ChickenBridge.scm",(void*)f_12609},
{"f_13532ChickenBridge.scm",(void*)f_13532},
{"f_13086ChickenBridge.scm",(void*)f_13086},
{"f_13089ChickenBridge.scm",(void*)f_13089},
{"f_13367ChickenBridge.scm",(void*)f_13367},
{"f_13475ChickenBridge.scm",(void*)f_13475},
{"f_13387ChickenBridge.scm",(void*)f_13387},
{"f_13396ChickenBridge.scm",(void*)f_13396},
{"f_13400ChickenBridge.scm",(void*)f_13400},
{"f_13404ChickenBridge.scm",(void*)f_13404},
{"f_13412ChickenBridge.scm",(void*)f_13412},
{"f_13408ChickenBridge.scm",(void*)f_13408},
{"f_13377ChickenBridge.scm",(void*)f_13377},
{"f_13092ChickenBridge.scm",(void*)f_13092},
{"f_13095ChickenBridge.scm",(void*)f_13095},
{"f_13098ChickenBridge.scm",(void*)f_13098},
{"f_13101ChickenBridge.scm",(void*)f_13101},
{"f_13104ChickenBridge.scm",(void*)f_13104},
{"f_13361ChickenBridge.scm",(void*)f_13361},
{"f_13260ChickenBridge.scm",(void*)f_13260},
{"f_13267ChickenBridge.scm",(void*)f_13267},
{"f_13269ChickenBridge.scm",(void*)f_13269},
{"f_13341ChickenBridge.scm",(void*)f_13341},
{"f_13293ChickenBridge.scm",(void*)f_13293},
{"f_13296ChickenBridge.scm",(void*)f_13296},
{"f_13317ChickenBridge.scm",(void*)f_13317},
{"f_13283ChickenBridge.scm",(void*)f_13283},
{"f_13107ChickenBridge.scm",(void*)f_13107},
{"f_13249ChickenBridge.scm",(void*)f_13249},
{"f_13237ChickenBridge.scm",(void*)f_13237},
{"f_13233ChickenBridge.scm",(void*)f_13233},
{"f_13114ChickenBridge.scm",(void*)f_13114},
{"f_13071ChickenBridge.scm",(void*)f_13071},
{"f_13530ChickenBridge.scm",(void*)f_13530},
{"f_13061ChickenBridge.scm",(void*)f_13061},
{"f_12724ChickenBridge.scm",(void*)f_12724},
{"f_13065ChickenBridge.scm",(void*)f_13065},
{"f_13003ChickenBridge.scm",(void*)f_13003},
{"f_13021ChickenBridge.scm",(void*)f_13021},
{"f_13031ChickenBridge.scm",(void*)f_13031},
{"f_13007ChickenBridge.scm",(void*)f_13007},
{"f_12994ChickenBridge.scm",(void*)f_12994},
{"f_12702ChickenBridge.scm",(void*)f_12702},
{"f_12998ChickenBridge.scm",(void*)f_12998},
{"f_12988ChickenBridge.scm",(void*)f_12988},
{"f_12684ChickenBridge.scm",(void*)f_12684},
{"f_12979ChickenBridge.scm",(void*)f_12979},
{"f_12693ChickenBridge.scm",(void*)f_12693},
{"f_12983ChickenBridge.scm",(void*)f_12983},
{"f_12916ChickenBridge.scm",(void*)f_12916},
{"f_12941ChickenBridge.scm",(void*)f_12941},
{"f_12649ChickenBridge.scm",(void*)f_12649},
{"f_12929ChickenBridge.scm",(void*)f_12929},
{"f_12748ChickenBridge.scm",(void*)f_12748},
{"f_12867ChickenBridge.scm",(void*)f_12867},
{"f_12862ChickenBridge.scm",(void*)f_12862},
{"f_12750ChickenBridge.scm",(void*)f_12750},
{"f_12857ChickenBridge.scm",(void*)f_12857},
{"f_12861ChickenBridge.scm",(void*)f_12861},
{"f_12853ChickenBridge.scm",(void*)f_12853},
{"f_12821ChickenBridge.scm",(void*)f_12821},
{"f_12846ChickenBridge.scm",(void*)f_12846},
{"f_12850ChickenBridge.scm",(void*)f_12850},
{"f_12831ChickenBridge.scm",(void*)f_12831},
{"f_12810ChickenBridge.scm",(void*)f_12810},
{"f_12780ChickenBridge.scm",(void*)f_12780},
{"f_12752ChickenBridge.scm",(void*)f_12752},
{"f_12729ChickenBridge.scm",(void*)f_12729},
{"f_12734ChickenBridge.scm",(void*)f_12734},
{"f_12739ChickenBridge.scm",(void*)f_12739},
{"f_12707ChickenBridge.scm",(void*)f_12707},
{"f_12711ChickenBridge.scm",(void*)f_12711},
{"f_12663ChickenBridge.scm",(void*)f_12663},
{"f_12667ChickenBridge.scm",(void*)f_12667},
{"f_12654ChickenBridge.scm",(void*)f_12654},
{"f_12658ChickenBridge.scm",(void*)f_12658},
{"f_12642ChickenBridge.scm",(void*)f_12642},
{"f_12639ChickenBridge.scm",(void*)f_12639},
{"f_12625ChickenBridge.scm",(void*)f_12625},
{"f_12630ChickenBridge.scm",(void*)f_12630},
{"f_12611ChickenBridge.scm",(void*)f_12611},
{"f_12616ChickenBridge.scm",(void*)f_12616},
{"f_12594ChickenBridge.scm",(void*)f_12594},
{"f_12599ChickenBridge.scm",(void*)f_12599},
{"f_12537ChickenBridge.scm",(void*)f_12537},
{"f_12570ChickenBridge.scm",(void*)f_12570},
{"f_12550ChickenBridge.scm",(void*)f_12550},
{"f_12558ChickenBridge.scm",(void*)f_12558},
{"f_12541ChickenBridge.scm",(void*)f_12541},
{"f_12480ChickenBridge.scm",(void*)f_12480},
{"f_12513ChickenBridge.scm",(void*)f_12513},
{"f_12493ChickenBridge.scm",(void*)f_12493},
{"f_12501ChickenBridge.scm",(void*)f_12501},
{"f_12484ChickenBridge.scm",(void*)f_12484},
{"f_12401ChickenBridge.scm",(void*)f_12401},
{"f_12444ChickenBridge.scm",(void*)f_12444},
{"f_12407ChickenBridge.scm",(void*)f_12407},
{"f_12413ChickenBridge.scm",(void*)f_12413},
{"f_12439ChickenBridge.scm",(void*)f_12439},
{"f_12443ChickenBridge.scm",(void*)f_12443},
{"f_12419ChickenBridge.scm",(void*)f_12419},
{"f_12437ChickenBridge.scm",(void*)f_12437},
{"f_12434ChickenBridge.scm",(void*)f_12434},
{"f_12430ChickenBridge.scm",(void*)f_12430},
{"f_12423ChickenBridge.scm",(void*)f_12423},
{"f_12386ChickenBridge.scm",(void*)f_12386},
{"f_12391ChickenBridge.scm",(void*)f_12391},
{"f_12358ChickenBridge.scm",(void*)f_12358},
{"f_12363ChickenBridge.scm",(void*)f_12363},
{"f_12330ChickenBridge.scm",(void*)f_12330},
{"f_12335ChickenBridge.scm",(void*)f_12335},
{"f_12302ChickenBridge.scm",(void*)f_12302},
{"f_12307ChickenBridge.scm",(void*)f_12307},
{"f_12274ChickenBridge.scm",(void*)f_12274},
{"f_12279ChickenBridge.scm",(void*)f_12279},
{"f_12246ChickenBridge.scm",(void*)f_12246},
{"f_12251ChickenBridge.scm",(void*)f_12251},
{"f_12218ChickenBridge.scm",(void*)f_12218},
{"f_12223ChickenBridge.scm",(void*)f_12223},
{"f_12190ChickenBridge.scm",(void*)f_12190},
{"f_12195ChickenBridge.scm",(void*)f_12195},
{"f_12162ChickenBridge.scm",(void*)f_12162},
{"f_12167ChickenBridge.scm",(void*)f_12167},
{"f_12134ChickenBridge.scm",(void*)f_12134},
{"f_12139ChickenBridge.scm",(void*)f_12139},
{"f_12111ChickenBridge.scm",(void*)f_12111},
{"f_12116ChickenBridge.scm",(void*)f_12116},
{"f_12115ChickenBridge.scm",(void*)f_12115},
{"f_12092ChickenBridge.scm",(void*)f_12092},
{"f_12097ChickenBridge.scm",(void*)f_12097},
{"f_12037ChickenBridge.scm",(void*)f_12037},
{"f_12044ChickenBridge.scm",(void*)f_12044},
{"f_12047ChickenBridge.scm",(void*)f_12047},
{"f_12071ChickenBridge.scm",(void*)f_12071},
{"f_12051ChickenBridge.scm",(void*)f_12051},
{"f_12041ChickenBridge.scm",(void*)f_12041},
{"f_11990ChickenBridge.scm",(void*)f_11990},
{"f_11997ChickenBridge.scm",(void*)f_11997},
{"f_12000ChickenBridge.scm",(void*)f_12000},
{"f_12020ChickenBridge.scm",(void*)f_12020},
{"f_12004ChickenBridge.scm",(void*)f_12004},
{"f_11967ChickenBridge.scm",(void*)f_11967},
{"f_11972ChickenBridge.scm",(void*)f_11972},
{"f_11971ChickenBridge.scm",(void*)f_11971},
{"f_11948ChickenBridge.scm",(void*)f_11948},
{"f_11953ChickenBridge.scm",(void*)f_11953},
{"f_11925ChickenBridge.scm",(void*)f_11925},
{"f_11930ChickenBridge.scm",(void*)f_11930},
{"f_11929ChickenBridge.scm",(void*)f_11929},
{"f_11906ChickenBridge.scm",(void*)f_11906},
{"f_11911ChickenBridge.scm",(void*)f_11911},
{"f_11887ChickenBridge.scm",(void*)f_11887},
{"f_11892ChickenBridge.scm",(void*)f_11892},
{"f_11891ChickenBridge.scm",(void*)f_11891},
{"f_11872ChickenBridge.scm",(void*)f_11872},
{"f_11877ChickenBridge.scm",(void*)f_11877},
{"f_11853ChickenBridge.scm",(void*)f_11853},
{"f_11858ChickenBridge.scm",(void*)f_11858},
{"f_11857ChickenBridge.scm",(void*)f_11857},
{"f_11838ChickenBridge.scm",(void*)f_11838},
{"f_11843ChickenBridge.scm",(void*)f_11843},
{"f_11819ChickenBridge.scm",(void*)f_11819},
{"f_11824ChickenBridge.scm",(void*)f_11824},
{"f_11804ChickenBridge.scm",(void*)f_11804},
{"f_11809ChickenBridge.scm",(void*)f_11809},
{"f_11786ChickenBridge.scm",(void*)f_11786},
{"f_11794ChickenBridge.scm",(void*)f_11794},
{"f_11790ChickenBridge.scm",(void*)f_11790},
{"f_11620ChickenBridge.scm",(void*)f_11620},
{"f_11783ChickenBridge.scm",(void*)f_11783},
{"f_11624ChickenBridge.scm",(void*)f_11624},
{"f_11780ChickenBridge.scm",(void*)f_11780},
{"f_11627ChickenBridge.scm",(void*)f_11627},
{"f_11777ChickenBridge.scm",(void*)f_11777},
{"f_11630ChickenBridge.scm",(void*)f_11630},
{"f_11774ChickenBridge.scm",(void*)f_11774},
{"f_11633ChickenBridge.scm",(void*)f_11633},
{"f_11771ChickenBridge.scm",(void*)f_11771},
{"f_11636ChickenBridge.scm",(void*)f_11636},
{"f_11768ChickenBridge.scm",(void*)f_11768},
{"f_11639ChickenBridge.scm",(void*)f_11639},
{"f_11645ChickenBridge.scm",(void*)f_11645},
{"f_11738ChickenBridge.scm",(void*)f_11738},
{"f_11742ChickenBridge.scm",(void*)f_11742},
{"f_11711ChickenBridge.scm",(void*)f_11711},
{"f_11680ChickenBridge.scm",(void*)f_11680},
{"f_11649ChickenBridge.scm",(void*)f_11649},
{"f_11275ChickenBridge.scm",(void*)f_11275},
{"f_11115ChickenBridge.scm",(void*)f_11115},
{"f_11150ChickenBridge.scm",(void*)f_11150},
{"f_11160ChickenBridge.scm",(void*)f_11160},
{"f_11164ChickenBridge.scm",(void*)f_11164},
{"f_11167ChickenBridge.scm",(void*)f_11167},
{"f_11228ChickenBridge.scm",(void*)f_11228},
{"f_11219ChickenBridge.scm",(void*)f_11219},
{"f_11170ChickenBridge.scm",(void*)f_11170},
{"f_11189ChickenBridge.scm",(void*)f_11189},
{"f_11196ChickenBridge.scm",(void*)f_11196},
{"f_11173ChickenBridge.scm",(void*)f_11173},
{"f_11179ChickenBridge.scm",(void*)f_11179},
{"f_11148ChickenBridge.scm",(void*)f_11148},
{"f_11123ChickenBridge.scm",(void*)f_11123},
{"f_11122ChickenBridge.scm",(void*)f_11122},
{"f_11283ChickenBridge.scm",(void*)f_11283},
{"f_10861ChickenBridge.scm",(void*)f_10861},
{"f_10883ChickenBridge.scm",(void*)f_10883},
{"f_10898ChickenBridge.scm",(void*)f_10898},
{"f_10901ChickenBridge.scm",(void*)f_10901},
{"f_11077ChickenBridge.scm",(void*)f_11077},
{"f_11071ChickenBridge.scm",(void*)f_11071},
{"f_10904ChickenBridge.scm",(void*)f_10904},
{"f_11053ChickenBridge.scm",(void*)f_11053},
{"f_10907ChickenBridge.scm",(void*)f_10907},
{"f_10910ChickenBridge.scm",(void*)f_10910},
{"f_11046ChickenBridge.scm",(void*)f_11046},
{"f_11034ChickenBridge.scm",(void*)f_11034},
{"f_10930ChickenBridge.scm",(void*)f_10930},
{"f_10937ChickenBridge.scm",(void*)f_10937},
{"f_11007ChickenBridge.scm",(void*)f_11007},
{"f_10993ChickenBridge.scm",(void*)f_10993},
{"f_11001ChickenBridge.scm",(void*)f_11001},
{"f_10940ChickenBridge.scm",(void*)f_10940},
{"f_10979ChickenBridge.scm",(void*)f_10979},
{"f_10943ChickenBridge.scm",(void*)f_10943},
{"f_10972ChickenBridge.scm",(void*)f_10972},
{"f_10949ChickenBridge.scm",(void*)f_10949},
{"f_10952ChickenBridge.scm",(void*)f_10952},
{"f_10956ChickenBridge.scm",(void*)f_10956},
{"f_10917ChickenBridge.scm",(void*)f_10917},
{"f_10920ChickenBridge.scm",(void*)f_10920},
{"f_10730ChickenBridge.scm",(void*)f_10730},
{"f_10739ChickenBridge.scm",(void*)f_10739},
{"f_10687ChickenBridge.scm",(void*)f_10687},
{"f_10693ChickenBridge.scm",(void*)f_10693},
{"f_10756ChickenBridge.scm",(void*)f_10756},
{"f_10842ChickenBridge.scm",(void*)f_10842},
{"f_10829ChickenBridge.scm",(void*)f_10829},
{"f_10837ChickenBridge.scm",(void*)f_10837},
{"f_10759ChickenBridge.scm",(void*)f_10759},
{"f_10763ChickenBridge.scm",(void*)f_10763},
{"f_10806ChickenBridge.scm",(void*)f_10806},
{"f_10768ChickenBridge.scm",(void*)f_10768},
{"f_10734ChickenBridge.scm",(void*)f_10734},
{"f_10629ChickenBridge.scm",(void*)f_10629},
{"f_10636ChickenBridge.scm",(void*)f_10636},
{"f_10667ChickenBridge.scm",(void*)f_10667},
{"f_10663ChickenBridge.scm",(void*)f_10663},
{"f_10655ChickenBridge.scm",(void*)f_10655},
{"f_10538ChickenBridge.scm",(void*)f_10538},
{"f_10545ChickenBridge.scm",(void*)f_10545},
{"f_10613ChickenBridge.scm",(void*)f_10613},
{"f_10556ChickenBridge.scm",(void*)f_10556},
{"f_10583ChickenBridge.scm",(void*)f_10583},
{"f_10567ChickenBridge.scm",(void*)f_10567},
{"f_10472ChickenBridge.scm",(void*)f_10472},
{"f_10483ChickenBridge.scm",(void*)f_10483},
{"f_10486ChickenBridge.scm",(void*)f_10486},
{"f_10493ChickenBridge.scm",(void*)f_10493},
{"f_10466ChickenBridge.scm",(void*)f_10466},
{"f_9920ChickenBridge.scm",(void*)f_9920},
{"f_9951ChickenBridge.scm",(void*)f_9951},
{"f_10415ChickenBridge.scm",(void*)f_10415},
{"f_10421ChickenBridge.scm",(void*)f_10421},
{"f_9962ChickenBridge.scm",(void*)f_9962},
{"f_9847ChickenBridge.scm",(void*)f_9847},
{"f_9872ChickenBridge.scm",(void*)f_9872},
{"f_9807ChickenBridge.scm",(void*)f_9807},
{"f_9820ChickenBridge.scm",(void*)f_9820},
{"f_9861ChickenBridge.scm",(void*)f_9861},
{"f_9966ChickenBridge.scm",(void*)f_9966},
{"f_10403ChickenBridge.scm",(void*)f_10403},
{"f_10399ChickenBridge.scm",(void*)f_10399},
{"f_10395ChickenBridge.scm",(void*)f_10395},
{"f_9969ChickenBridge.scm",(void*)f_9969},
{"f_10189ChickenBridge.scm",(void*)f_10189},
{"f_10298ChickenBridge.scm",(void*)f_10298},
{"f_10363ChickenBridge.scm",(void*)f_10363},
{"f_10305ChickenBridge.scm",(void*)f_10305},
{"f_10309ChickenBridge.scm",(void*)f_10309},
{"f_10313ChickenBridge.scm",(void*)f_10313},
{"f_10355ChickenBridge.scm",(void*)f_10355},
{"f_10351ChickenBridge.scm",(void*)f_10351},
{"f_10329ChickenBridge.scm",(void*)f_10329},
{"f_10192ChickenBridge.scm",(void*)f_10192},
{"f_10195ChickenBridge.scm",(void*)f_10195},
{"f_10094ChickenBridge.scm",(void*)f_10094},
{"f_10177ChickenBridge.scm",(void*)f_10177},
{"f_10144ChickenBridge.scm",(void*)f_10144},
{"f_10170ChickenBridge.scm",(void*)f_10170},
{"f_10152ChickenBridge.scm",(void*)f_10152},
{"f_10100ChickenBridge.scm",(void*)f_10100},
{"f_10140ChickenBridge.scm",(void*)f_10140},
{"f_10082ChickenBridge.scm",(void*)f_10082},
{"f_10053ChickenBridge.scm",(void*)f_10053},
{"f_10075ChickenBridge.scm",(void*)f_10075},
{"f_10061ChickenBridge.scm",(void*)f_10061},
{"f_10015ChickenBridge.scm",(void*)f_10015},
{"f_9972ChickenBridge.scm",(void*)f_9972},
{"f_9983ChickenBridge.scm",(void*)f_9983},
{"f_9987ChickenBridge.scm",(void*)f_9987},
{"f_9991ChickenBridge.scm",(void*)f_9991},
{"f_9995ChickenBridge.scm",(void*)f_9995},
{"f_9979ChickenBridge.scm",(void*)f_9979},
{"f_9939ChickenBridge.scm",(void*)f_9939},
{"f_9934ChickenBridge.scm",(void*)f_9934},
{"f_9929ChickenBridge.scm",(void*)f_9929},
{"f_9761ChickenBridge.scm",(void*)f_9761},
{"f_9772ChickenBridge.scm",(void*)f_9772},
{"f_9787ChickenBridge.scm",(void*)f_9787},
{"f_9723ChickenBridge.scm",(void*)f_9723},
{"f_9734ChickenBridge.scm",(void*)f_9734},
{"f_9749ChickenBridge.scm",(void*)f_9749},
{"f_9656ChickenBridge.scm",(void*)f_9656},
{"f_9676ChickenBridge.scm",(void*)f_9676},
{"f_9686ChickenBridge.scm",(void*)f_9686},
{"f_9699ChickenBridge.scm",(void*)f_9699},
{"f_9667ChickenBridge.scm",(void*)f_9667},
{"f_9674ChickenBridge.scm",(void*)f_9674},
{"f_9463ChickenBridge.scm",(void*)f_9463},
{"f_9523ChickenBridge.scm",(void*)f_9523},
{"f_9533ChickenBridge.scm",(void*)f_9533},
{"f_9647ChickenBridge.scm",(void*)f_9647},
{"f_9612ChickenBridge.scm",(void*)f_9612},
{"f_9604ChickenBridge.scm",(void*)f_9604},
{"f_9575ChickenBridge.scm",(void*)f_9575},
{"f_9553ChickenBridge.scm",(void*)f_9553},
{"f_9556ChickenBridge.scm",(void*)f_9556},
{"f_9544ChickenBridge.scm",(void*)f_9544},
{"f_9470ChickenBridge.scm",(void*)f_9470},
{"f_9521ChickenBridge.scm",(void*)f_9521},
{"f_9513ChickenBridge.scm",(void*)f_9513},
{"f_9473ChickenBridge.scm",(void*)f_9473},
{"f_9484ChickenBridge.scm",(void*)f_9484},
{"f_9488ChickenBridge.scm",(void*)f_9488},
{"f_9480ChickenBridge.scm",(void*)f_9480},
{"f_9321ChickenBridge.scm",(void*)f_9321},
{"f_9369ChickenBridge.scm",(void*)f_9369},
{"f_9379ChickenBridge.scm",(void*)f_9379},
{"f_9390ChickenBridge.scm",(void*)f_9390},
{"f_9427ChickenBridge.scm",(void*)f_9427},
{"f_9402ChickenBridge.scm",(void*)f_9402},
{"f_9393ChickenBridge.scm",(void*)f_9393},
{"f_9331ChickenBridge.scm",(void*)f_9331},
{"f_9367ChickenBridge.scm",(void*)f_9367},
{"f_9338ChickenBridge.scm",(void*)f_9338},
{"f_8970ChickenBridge.scm",(void*)f_8970},
{"f_8977ChickenBridge.scm",(void*)f_8977},
{"f_9211ChickenBridge.scm",(void*)f_9211},
{"f_9221ChickenBridge.scm",(void*)f_9221},
{"f_9232ChickenBridge.scm",(void*)f_9232},
{"f_9244ChickenBridge.scm",(void*)f_9244},
{"f_9247ChickenBridge.scm",(void*)f_9247},
{"f_9235ChickenBridge.scm",(void*)f_9235},
{"f_8983ChickenBridge.scm",(void*)f_8983},
{"f_9209ChickenBridge.scm",(void*)f_9209},
{"f_9205ChickenBridge.scm",(void*)f_9205},
{"f_9151ChickenBridge.scm",(void*)f_9151},
{"f_9116ChickenBridge.scm",(void*)f_9116},
{"f_9132ChickenBridge.scm",(void*)f_9132},
{"f_9087ChickenBridge.scm",(void*)f_9087},
{"f_9011ChickenBridge.scm",(void*)f_9011},
{"f_9014ChickenBridge.scm",(void*)f_9014},
{"f_9078ChickenBridge.scm",(void*)f_9078},
{"f_9074ChickenBridge.scm",(void*)f_9074},
{"f_8994ChickenBridge.scm",(void*)f_8994},
{"f_9005ChickenBridge.scm",(void*)f_9005},
{"f_9001ChickenBridge.scm",(void*)f_9001},
{"f_8923ChickenBridge.scm",(void*)f_8923},
{"f_8956ChickenBridge.scm",(void*)f_8956},
{"f_8938ChickenBridge.scm",(void*)f_8938},
{"f_8950ChickenBridge.scm",(void*)f_8950},
{"f_8541ChickenBridge.scm",(void*)f_8541},
{"f_8750ChickenBridge.scm",(void*)f_8750},
{"f_8760ChickenBridge.scm",(void*)f_8760},
{"f_8771ChickenBridge.scm",(void*)f_8771},
{"f_8891ChickenBridge.scm",(void*)f_8891},
{"f_8870ChickenBridge.scm",(void*)f_8870},
{"f_8849ChickenBridge.scm",(void*)f_8849},
{"f_8828ChickenBridge.scm",(void*)f_8828},
{"f_8807ChickenBridge.scm",(void*)f_8807},
{"f_8786ChickenBridge.scm",(void*)f_8786},
{"f_8774ChickenBridge.scm",(void*)f_8774},
{"f_8551ChickenBridge.scm",(void*)f_8551},
{"f_8554ChickenBridge.scm",(void*)f_8554},
{"f_8717ChickenBridge.scm",(void*)f_8717},
{"f_8557ChickenBridge.scm",(void*)f_8557},
{"f_8708ChickenBridge.scm",(void*)f_8708},
{"f_8688ChickenBridge.scm",(void*)f_8688},
{"f_8560ChickenBridge.scm",(void*)f_8560},
{"f_8653ChickenBridge.scm",(void*)f_8653},
{"f_8670ChickenBridge.scm",(void*)f_8670},
{"f_8563ChickenBridge.scm",(void*)f_8563},
{"f_8602ChickenBridge.scm",(void*)f_8602},
{"f_8636ChickenBridge.scm",(void*)f_8636},
{"f_8620ChickenBridge.scm",(void*)f_8620},
{"f_8605ChickenBridge.scm",(void*)f_8605},
{"f_8570ChickenBridge.scm",(void*)f_8570},
{"f_8581ChickenBridge.scm",(void*)f_8581},
{"f_8585ChickenBridge.scm",(void*)f_8585},
{"f_8577ChickenBridge.scm",(void*)f_8577},
{"f_8459ChickenBridge.scm",(void*)f_8459},
{"f_8463ChickenBridge.scm",(void*)f_8463},
{"f_8481ChickenBridge.scm",(void*)f_8481},
{"f_8299ChickenBridge.scm",(void*)f_8299},
{"f_8307ChickenBridge.scm",(void*)f_8307},
{"f_8317ChickenBridge.scm",(void*)f_8317},
{"f_8355ChickenBridge.scm",(void*)f_8355},
{"f_8358ChickenBridge.scm",(void*)f_8358},
{"f_8361ChickenBridge.scm",(void*)f_8361},
{"f_8436ChickenBridge.scm",(void*)f_8436},
{"f_8446ChickenBridge.scm",(void*)f_8446},
{"f_8364ChickenBridge.scm",(void*)f_8364},
{"f_8367ChickenBridge.scm",(void*)f_8367},
{"f_8370ChickenBridge.scm",(void*)f_8370},
{"f_8390ChickenBridge.scm",(void*)f_8390},
{"f_8400ChickenBridge.scm",(void*)f_8400},
{"f_8403ChickenBridge.scm",(void*)f_8403},
{"f_8406ChickenBridge.scm",(void*)f_8406},
{"f_8373ChickenBridge.scm",(void*)f_8373},
{"f_8376ChickenBridge.scm",(void*)f_8376},
{"f_8293ChickenBridge.scm",(void*)f_8293},
{"f_8287ChickenBridge.scm",(void*)f_8287},
{"f_8281ChickenBridge.scm",(void*)f_8281},
{"f_8210ChickenBridge.scm",(void*)f_8210},
{"f_8251ChickenBridge.scm",(void*)f_8251},
{"f_8255ChickenBridge.scm",(void*)f_8255},
{"f_8259ChickenBridge.scm",(void*)f_8259},
{"f_8263ChickenBridge.scm",(void*)f_8263},
{"f_8267ChickenBridge.scm",(void*)f_8267},
{"f_8271ChickenBridge.scm",(void*)f_8271},
{"f_8275ChickenBridge.scm",(void*)f_8275},
{"f_8279ChickenBridge.scm",(void*)f_8279},
{"f_8212ChickenBridge.scm",(void*)f_8212},
{"f_8218ChickenBridge.scm",(void*)f_8218},
{"f_8240ChickenBridge.scm",(void*)f_8240},
{"f_8229ChickenBridge.scm",(void*)f_8229},
{"f_8059ChickenBridge.scm",(void*)f_8059},
{"f_8074ChickenBridge.scm",(void*)f_8074},
{"f_8087ChickenBridge.scm",(void*)f_8087},
{"f_8047ChickenBridge.scm",(void*)f_8047},
{"f_8035ChickenBridge.scm",(void*)f_8035},
{"f_8023ChickenBridge.scm",(void*)f_8023},
{"f_8017ChickenBridge.scm",(void*)f_8017},
{"f_8011ChickenBridge.scm",(void*)f_8011},
{"f_7999ChickenBridge.scm",(void*)f_7999},
{"f_7987ChickenBridge.scm",(void*)f_7987},
{"f_7975ChickenBridge.scm",(void*)f_7975},
{"f_7963ChickenBridge.scm",(void*)f_7963},
{"f_7957ChickenBridge.scm",(void*)f_7957},
{"f_7921ChickenBridge.scm",(void*)f_7921},
{"f_7915ChickenBridge.scm",(void*)f_7915},
{"f_7868ChickenBridge.scm",(void*)f_7868},
{"f_7872ChickenBridge.scm",(void*)f_7872},
{"f_7888ChickenBridge.scm",(void*)f_7888},
{"f_7897ChickenBridge.scm",(void*)f_7897},
{"f_7875ChickenBridge.scm",(void*)f_7875},
{"f_7859ChickenBridge.scm",(void*)f_7859},
{"f_7863ChickenBridge.scm",(void*)f_7863},
{"f_7680ChickenBridge.scm",(void*)f_7680},
{"f_7833ChickenBridge.scm",(void*)f_7833},
{"f_7846ChickenBridge.scm",(void*)f_7846},
{"f_7828ChickenBridge.scm",(void*)f_7828},
{"f_7683ChickenBridge.scm",(void*)f_7683},
{"f_7825ChickenBridge.scm",(void*)f_7825},
{"f_7809ChickenBridge.scm",(void*)f_7809},
{"f_7802ChickenBridge.scm",(void*)f_7802},
{"f_7798ChickenBridge.scm",(void*)f_7798},
{"f_7711ChickenBridge.scm",(void*)f_7711},
{"f_7719ChickenBridge.scm",(void*)f_7719},
{"f_7729ChickenBridge.scm",(void*)f_7729},
{"f_7732ChickenBridge.scm",(void*)f_7732},
{"f_7714ChickenBridge.scm",(void*)f_7714},
{"f_7509ChickenBridge.scm",(void*)f_7509},
{"f_7515ChickenBridge.scm",(void*)f_7515},
{"f_7518ChickenBridge.scm",(void*)f_7518},
{"f_5318ChickenBridge.scm",(void*)f_5318},
{"f_5331ChickenBridge.scm",(void*)f_5331},
{"f_5338ChickenBridge.scm",(void*)f_5338},
{"f_5345ChickenBridge.scm",(void*)f_5345},
{"f_5324ChickenBridge.scm",(void*)f_5324},
{"f_7522ChickenBridge.scm",(void*)f_7522},
{"f_7556ChickenBridge.scm",(void*)f_7556},
{"f_7649ChickenBridge.scm",(void*)f_7649},
{"f_7659ChickenBridge.scm",(void*)f_7659},
{"f_7562ChickenBridge.scm",(void*)f_7562},
{"f_7619ChickenBridge.scm",(void*)f_7619},
{"f_7629ChickenBridge.scm",(void*)f_7629},
{"f_7570ChickenBridge.scm",(void*)f_7570},
{"f_7584ChickenBridge.scm",(void*)f_7584},
{"f_7588ChickenBridge.scm",(void*)f_7588},
{"f_7592ChickenBridge.scm",(void*)f_7592},
{"f_7596ChickenBridge.scm",(void*)f_7596},
{"f_7603ChickenBridge.scm",(void*)f_7603},
{"f_7580ChickenBridge.scm",(void*)f_7580},
{"f_7573ChickenBridge.scm",(void*)f_7573},
{"f_7525ChickenBridge.scm",(void*)f_7525},
{"f_6445ChickenBridge.scm",(void*)f_6445},
{"f_6458ChickenBridge.scm",(void*)f_6458},
{"f_6508ChickenBridge.scm",(void*)f_6508},
{"f_6605ChickenBridge.scm",(void*)f_6605},
{"f_6673ChickenBridge.scm",(void*)f_6673},
{"f_6930ChickenBridge.scm",(void*)f_6930},
{"f_6680ChickenBridge.scm",(void*)f_6680},
{"f_6918ChickenBridge.scm",(void*)f_6918},
{"f_6869ChickenBridge.scm",(void*)f_6869},
{"f_6875ChickenBridge.scm",(void*)f_6875},
{"f_6899ChickenBridge.scm",(void*)f_6899},
{"f_6895ChickenBridge.scm",(void*)f_6895},
{"f_6883ChickenBridge.scm",(void*)f_6883},
{"f_6683ChickenBridge.scm",(void*)f_6683},
{"f_6845ChickenBridge.scm",(void*)f_6845},
{"f_6849ChickenBridge.scm",(void*)f_6849},
{"f_6686ChickenBridge.scm",(void*)f_6686},
{"f_6822ChickenBridge.scm",(void*)f_6822},
{"f_6826ChickenBridge.scm",(void*)f_6826},
{"f_6689ChickenBridge.scm",(void*)f_6689},
{"f_6799ChickenBridge.scm",(void*)f_6799},
{"f_6803ChickenBridge.scm",(void*)f_6803},
{"f_6692ChickenBridge.scm",(void*)f_6692},
{"f_6724ChickenBridge.scm",(void*)f_6724},
{"f_6742ChickenBridge.scm",(void*)f_6742},
{"f_6760ChickenBridge.scm",(void*)f_6760},
{"f_6778ChickenBridge.scm",(void*)f_6778},
{"f_6695ChickenBridge.scm",(void*)f_6695},
{"f_6699ChickenBridge.scm",(void*)f_6699},
{"f_6609ChickenBridge.scm",(void*)f_6609},
{"f_6613ChickenBridge.scm",(void*)f_6613},
{"f_6617ChickenBridge.scm",(void*)f_6617},
{"f_6512ChickenBridge.scm",(void*)f_6512},
{"f_6516ChickenBridge.scm",(void*)f_6516},
{"f_6520ChickenBridge.scm",(void*)f_6520},
{"f_6539ChickenBridge.scm",(void*)f_6539},
{"f_6543ChickenBridge.scm",(void*)f_6543},
{"f_6523ChickenBridge.scm",(void*)f_6523},
{"f_6527ChickenBridge.scm",(void*)f_6527},
{"f_6462ChickenBridge.scm",(void*)f_6462},
{"f_6466ChickenBridge.scm",(void*)f_6466},
{"f_6470ChickenBridge.scm",(void*)f_6470},
{"f_6452ChickenBridge.scm",(void*)f_6452},
{"f_6267ChickenBridge.scm",(void*)f_6267},
{"f_6279ChickenBridge.scm",(void*)f_6279},
{"f_6298ChickenBridge.scm",(void*)f_6298},
{"f_6316ChickenBridge.scm",(void*)f_6316},
{"f_6348ChickenBridge.scm",(void*)f_6348},
{"f_6351ChickenBridge.scm",(void*)f_6351},
{"f_6344ChickenBridge.scm",(void*)f_6344},
{"f_6330ChickenBridge.scm",(void*)f_6330},
{"f_6301ChickenBridge.scm",(void*)f_6301},
{"f_6246ChickenBridge.scm",(void*)f_6246},
{"f_6253ChickenBridge.scm",(void*)f_6253},
{"f_6256ChickenBridge.scm",(void*)f_6256},
{"f_6262ChickenBridge.scm",(void*)f_6262},
{"f_6181ChickenBridge.scm",(void*)f_6181},
{"f_6190ChickenBridge.scm",(void*)f_6190},
{"f_6213ChickenBridge.scm",(void*)f_6213},
{"f_6203ChickenBridge.scm",(void*)f_6203},
{"f_6137ChickenBridge.scm",(void*)f_6137},
{"f_6125ChickenBridge.scm",(void*)f_6125},
{"f_6023ChickenBridge.scm",(void*)f_6023},
{"f_5975ChickenBridge.scm",(void*)f_5975},
{"f_5356ChickenBridge.scm",(void*)f_5356},
{"f_5360ChickenBridge.scm",(void*)f_5360},
{"f_5363ChickenBridge.scm",(void*)f_5363},
{"f_5789ChickenBridge.scm",(void*)f_5789},
{"f_5785ChickenBridge.scm",(void*)f_5785},
{"f_5781ChickenBridge.scm",(void*)f_5781},
{"f_5366ChickenBridge.scm",(void*)f_5366},
{"f_5489ChickenBridge.scm",(void*)f_5489},
{"f_4722ChickenBridge.scm",(void*)f_4722},
{"f_5495ChickenBridge.scm",(void*)f_5495},
{"f_4738ChickenBridge.scm",(void*)f_4738},
{"f_5583ChickenBridge.scm",(void*)f_5583},
{"f_5653ChickenBridge.scm",(void*)f_5653},
{"f_4754ChickenBridge.scm",(void*)f_4754},
{"f_5656ChickenBridge.scm",(void*)f_5656},
{"f_4786ChickenBridge.scm",(void*)f_4786},
{"f_5734ChickenBridge.scm",(void*)f_5734},
{"f_5760ChickenBridge.scm",(void*)f_5760},
{"f_5754ChickenBridge.scm",(void*)f_5754},
{"f_5743ChickenBridge.scm",(void*)f_5743},
{"f_5685ChickenBridge.scm",(void*)f_5685},
{"f_5695ChickenBridge.scm",(void*)f_5695},
{"f_5721ChickenBridge.scm",(void*)f_5721},
{"f_5715ChickenBridge.scm",(void*)f_5715},
{"f_5698ChickenBridge.scm",(void*)f_5698},
{"f_5708ChickenBridge.scm",(void*)f_5708},
{"f_5701ChickenBridge.scm",(void*)f_5701},
{"f_5662ChickenBridge.scm",(void*)f_5662},
{"f_5671ChickenBridge.scm",(void*)f_5671},
{"f_5665ChickenBridge.scm",(void*)f_5665},
{"f_5589ChickenBridge.scm",(void*)f_5589},
{"f_5607ChickenBridge.scm",(void*)f_5607},
{"f_5640ChickenBridge.scm",(void*)f_5640},
{"f_5626ChickenBridge.scm",(void*)f_5626},
{"f_5634ChickenBridge.scm",(void*)f_5634},
{"f_5617ChickenBridge.scm",(void*)f_5617},
{"f_5592ChickenBridge.scm",(void*)f_5592},
{"f_5504ChickenBridge.scm",(void*)f_5504},
{"f_5526ChickenBridge.scm",(void*)f_5526},
{"f_5573ChickenBridge.scm",(void*)f_5573},
{"f_5559ChickenBridge.scm",(void*)f_5559},
{"f_5567ChickenBridge.scm",(void*)f_5567},
{"f_5539ChickenBridge.scm",(void*)f_5539},
{"f_5542ChickenBridge.scm",(void*)f_5542},
{"f_5507ChickenBridge.scm",(void*)f_5507},
{"f_5524ChickenBridge.scm",(void*)f_5524},
{"f_5510ChickenBridge.scm",(void*)f_5510},
{"f_5381ChickenBridge.scm",(void*)f_5381},
{"f_5439ChickenBridge.scm",(void*)f_5439},
{"f_5442ChickenBridge.scm",(void*)f_5442},
{"f_5463ChickenBridge.scm",(void*)f_5463},
{"f_5474ChickenBridge.scm",(void*)f_5474},
{"f_5453ChickenBridge.scm",(void*)f_5453},
{"f_5387ChickenBridge.scm",(void*)f_5387},
{"f_5397ChickenBridge.scm",(void*)f_5397},
{"f_5433ChickenBridge.scm",(void*)f_5433},
{"f_5403ChickenBridge.scm",(void*)f_5403},
{"f_5418ChickenBridge.scm",(void*)f_5418},
{"f_5422ChickenBridge.scm",(void*)f_5422},
{"f_5426ChickenBridge.scm",(void*)f_5426},
{"f_5410ChickenBridge.scm",(void*)f_5410},
{"f_5252ChickenBridge.scm",(void*)f_5252},
{"f_5254ChickenBridge.scm",(void*)f_5254},
{"f_5302ChickenBridge.scm",(void*)f_5302},
{"f_5258ChickenBridge.scm",(void*)f_5258},
{"f_5261ChickenBridge.scm",(void*)f_5261},
{"f_5266ChickenBridge.scm",(void*)f_5266},
{"f_5287ChickenBridge.scm",(void*)f_5287},
{"f_5244ChickenBridge.scm",(void*)f_5244},
{"f_5246ChickenBridge.scm",(void*)f_5246},
{"f_5036ChickenBridge.scm",(void*)f_5036},
{"f_5053ChickenBridge.scm",(void*)f_5053},
{"f_5057ChickenBridge.scm",(void*)f_5057},
{"f_5003ChickenBridge.scm",(void*)f_5003},
{"f_5010ChickenBridge.scm",(void*)f_5010},
{"f_4954ChickenBridge.scm",(void*)f_4954},
{"f_4961ChickenBridge.scm",(void*)f_4961},
{"f_5019ChickenBridge.scm",(void*)f_5019},
{"f_5242ChickenBridge.scm",(void*)f_5242},
{"f_5219ChickenBridge.scm",(void*)f_5219},
{"f_5235ChickenBridge.scm",(void*)f_5235},
{"f_5081ChickenBridge.scm",(void*)f_5081},
{"f_5084ChickenBridge.scm",(void*)f_5084},
{"f_5108ChickenBridge.scm",(void*)f_5108},
{"f_5165ChickenBridge.scm",(void*)f_5165},
{"f_5171ChickenBridge.scm",(void*)f_5171},
{"f_5180ChickenBridge.scm",(void*)f_5180},
{"f_5189ChickenBridge.scm",(void*)f_5189},
{"f_5198ChickenBridge.scm",(void*)f_5198},
{"f_5207ChickenBridge.scm",(void*)f_5207},
{"f_5159ChickenBridge.scm",(void*)f_5159},
{"f_5114ChickenBridge.scm",(void*)f_5114},
{"f_5120ChickenBridge.scm",(void*)f_5120},
{"f_5126ChickenBridge.scm",(void*)f_5126},
{"f_5132ChickenBridge.scm",(void*)f_5132},
{"f_5138ChickenBridge.scm",(void*)f_5138},
{"f_5144ChickenBridge.scm",(void*)f_5144},
{"f_4985ChickenBridge.scm",(void*)f_4985},
{"f_4992ChickenBridge.scm",(void*)f_4992},
{"f_4975ChickenBridge.scm",(void*)f_4975},
{"f_4963ChickenBridge.scm",(void*)f_4963},
{"f_4931ChickenBridge.scm",(void*)f_4931},
{"f_4938ChickenBridge.scm",(void*)f_4938},
{"f_4945ChickenBridge.scm",(void*)f_4945},
{"f_4915ChickenBridge.scm",(void*)f_4915},
{"f_4922ChickenBridge.scm",(void*)f_4922},
{"f_4929ChickenBridge.scm",(void*)f_4929},
{"f_4903ChickenBridge.scm",(void*)f_4903},
{"f_4885ChickenBridge.scm",(void*)f_4885},
{"f_4867ChickenBridge.scm",(void*)f_4867},
{"f_4852ChickenBridge.scm",(void*)f_4852},
{"f_4846ChickenBridge.scm",(void*)f_4846},
{"f_4834ChickenBridge.scm",(void*)f_4834},
{"f_4816ChickenBridge.scm",(void*)f_4816},
{"f_4795ChickenBridge.scm",(void*)f_4795},
{"f_4763ChickenBridge.scm",(void*)f_4763},
{"f_4770ChickenBridge.scm",(void*)f_4770},
{"f_4705ChickenBridge.scm",(void*)f_4705},
{"f_4713ChickenBridge.scm",(void*)f_4713},
{"f_4695ChickenBridge.scm",(void*)f_4695},
{"f_4703ChickenBridge.scm",(void*)f_4703},
{"f_4689ChickenBridge.scm",(void*)f_4689},
{"f_4677ChickenBridge.scm",(void*)f_4677},
{"f_4653ChickenBridge.scm",(void*)f_4653},
{"f_4566ChickenBridge.scm",(void*)f_4566},
{"f_4545ChickenBridge.scm",(void*)f_4545},
{"f_4535ChickenBridge.scm",(void*)f_4535},
{"f_4523ChickenBridge.scm",(void*)f_4523},
{"f_4494ChickenBridge.scm",(void*)f_4494},
{"f_4482ChickenBridge.scm",(void*)f_4482},
{"f_4464ChickenBridge.scm",(void*)f_4464},
{"f_4446ChickenBridge.scm",(void*)f_4446},
{"f_4425ChickenBridge.scm",(void*)f_4425},
{"f_4419ChickenBridge.scm",(void*)f_4419},
{"f_4413ChickenBridge.scm",(void*)f_4413},
{"f_4394ChickenBridge.scm",(void*)f_4394},
{"f_4375ChickenBridge.scm",(void*)f_4375},
{"f_4369ChickenBridge.scm",(void*)f_4369},
{"f_4329ChickenBridge.scm",(void*)f_4329},
{"f_4310ChickenBridge.scm",(void*)f_4310},
{"f_4266ChickenBridge.scm",(void*)f_4266},
{"f_4260ChickenBridge.scm",(void*)f_4260},
{"f_4254ChickenBridge.scm",(void*)f_4254},
{"f_4248ChickenBridge.scm",(void*)f_4248},
{"f_4242ChickenBridge.scm",(void*)f_4242},
{"f_4219ChickenBridge.scm",(void*)f_4219},
{"f_4236ChickenBridge.scm",(void*)f_4236},
{"f_4161ChickenBridge.scm",(void*)f_4161},
{"f_4213ChickenBridge.scm",(void*)f_4213},
{"f_4197ChickenBridge.scm",(void*)f_4197},
{"f_4178ChickenBridge.scm",(void*)f_4178},
{"f_4155ChickenBridge.scm",(void*)f_4155},
{"f_4067ChickenBridge.scm",(void*)f_4067},
{"f_4113ChickenBridge.scm",(void*)f_4113},
{"f_4061ChickenBridge.scm",(void*)f_4061},
{"f_4002ChickenBridge.scm",(void*)f_4002},
{"f_4015ChickenBridge.scm",(void*)f_4015},
{"f_4051ChickenBridge.scm",(void*)f_4051},
{"f_3996ChickenBridge.scm",(void*)f_3996},
{"f_3901ChickenBridge.scm",(void*)f_3901},
{"f_3905ChickenBridge.scm",(void*)f_3905},
{"f_3908ChickenBridge.scm",(void*)f_3908},
{"f_3920ChickenBridge.scm",(void*)f_3920},
{"f_3942ChickenBridge.scm",(void*)f_3942},
{"f_3895ChickenBridge.scm",(void*)f_3895},
{"f_3889ChickenBridge.scm",(void*)f_3889},
{"f_3883ChickenBridge.scm",(void*)f_3883},
{"f_3877ChickenBridge.scm",(void*)f_3877},
{"f_3871ChickenBridge.scm",(void*)f_3871},
{"f_3811ChickenBridge.scm",(void*)f_3811},
{"f_3823ChickenBridge.scm",(void*)f_3823},
{"f_3818ChickenBridge.scm",(void*)f_3818},
{"f_3813ChickenBridge.scm",(void*)f_3813},
{"f_3792ChickenBridge.scm",(void*)f_3792},
{"f_3786ChickenBridge.scm",(void*)f_3786},
{"f_3780ChickenBridge.scm",(void*)f_3780},
{"f_3698ChickenBridge.scm",(void*)f_3698},
{"f_3712ChickenBridge.scm",(void*)f_3712},
{"f_3679ChickenBridge.scm",(void*)f_3679},
{"f_3666ChickenBridge.scm",(void*)f_3666},
{"f_3656ChickenBridge.scm",(void*)f_3656},
{"f_3645ChickenBridge.scm",(void*)f_3645},
{"f_3638ChickenBridge.scm",(void*)f_3638},
{"f_3627ChickenBridge.scm",(void*)f_3627},
{"f_3589ChickenBridge.scm",(void*)f_3589},
{"f_3582ChickenBridge.scm",(void*)f_3582},
{"f_3507ChickenBridge.scm",(void*)f_3507},
{"f_3473ChickenBridge.scm",(void*)f_3473},
{"f_3446ChickenBridge.scm",(void*)f_3446},
{"f_3417ChickenBridge.scm",(void*)f_3417},
{"f_3426ChickenBridge.scm",(void*)f_3426},
{"f_3431ChickenBridge.scm",(void*)f_3431},
{"f_3406ChickenBridge.scm",(void*)f_3406},
{"f_3411ChickenBridge.scm",(void*)f_3411},
{"f_3366ChickenBridge.scm",(void*)f_3366},
{"f_3396ChickenBridge.scm",(void*)f_3396},
{"f_3318ChickenBridge.scm",(void*)f_3318},
{"f_3352ChickenBridge.scm",(void*)f_3352},
{"f_3298ChickenBridge.scm",(void*)f_3298},
{"f_3278ChickenBridge.scm",(void*)f_3278},
{"f_3264ChickenBridge.scm",(void*)f_3264},
{"f_3254ChickenBridge.scm",(void*)f_3254},
{"f_3244ChickenBridge.scm",(void*)f_3244},
{"f_3234ChickenBridge.scm",(void*)f_3234},
{"f_3224ChickenBridge.scm",(void*)f_3224},
{"f_2927ChickenBridge.scm",(void*)f_2927},
{"f_2937ChickenBridge.scm",(void*)f_2937},
{"f_3188ChickenBridge.scm",(void*)f_3188},
{"f_2940ChickenBridge.scm",(void*)f_2940},
{"f_2943ChickenBridge.scm",(void*)f_2943},
{"f_2958ChickenBridge.scm",(void*)f_2958},
{"f_2968ChickenBridge.scm",(void*)f_2968},
{"f_2970ChickenBridge.scm",(void*)f_2970},
{"f_3029ChickenBridge.scm",(void*)f_3029},
{"f_3039ChickenBridge.scm",(void*)f_3039},
{"f_3156ChickenBridge.scm",(void*)f_3156},
{"f_3144ChickenBridge.scm",(void*)f_3144},
{"f_3142ChickenBridge.scm",(void*)f_3142},
{"f_3129ChickenBridge.scm",(void*)f_3129},
{"f_3083ChickenBridge.scm",(void*)f_3083},
{"f_3110ChickenBridge.scm",(void*)f_3110},
{"f_3089ChickenBridge.scm",(void*)f_3089},
{"f_3023ChickenBridge.scm",(void*)f_3023},
{"f_2982ChickenBridge.scm",(void*)f_2982},
{"f_2995ChickenBridge.scm",(void*)f_2995},
{"f_3205ChickenBridge.scm",(void*)f_3205},
{"f_3196ChickenBridge.scm",(void*)f_3196},
{"f_3204ChickenBridge.scm",(void*)f_3204},
{"f_3207ChickenBridge.scm",(void*)f_3207},
{"f_3215ChickenBridge.scm",(void*)f_3215},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
