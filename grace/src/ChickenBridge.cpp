/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2008-09-07 10:07
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-04-21 on dhcp218a.music.uiuc.edu (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: grace
*/

#include "chicken.h"


/*************************************************************************
 * Copyright (C) 2007 Todd Ingalls, Rick Taube.                          *
 * This program is free software; you can redistribute it and/or modify  *
 * it under the terms of the Lisp Lesser Gnu Public License. The text of *
 * this agreement is available at http://www.cliki.net/LLGPL             *
 *************************************************************************/

#include "Grace.h"
#include "Scheme.h"
#include "Syntax.h"
#include "Midi.h"
#include "Enumerations.h"
#include <juce.h>

//
// Console Window code
//

void print_message(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);

  //printf("message='%s'\n" , s.toUTF8());

  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleMessage(s, CommandIDs::ConsolePrintText, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleMessage(s, CommandIDs::ConsolePrintText, false);
}

void print_error(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleMessage(s, CommandIDs::ConsolePrintError, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleMessage(s, CommandIDs::ConsolePrintError, false);
}

//
// Scheduler code
//

void scheduler_sprout( C_word proc, double time, int id)
{
  ((GraceApp *)
   GraceApp::getInstance())->schemeProcess->addNode(0, time, proc, id);
}

bool scheduler_is_paused () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isPaused();
}

void scheduler_pause() {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(true);
}

void scheduler_cont () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(false);
}

void scheduler_stop (int id) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(id);
}

void scheduler_hush () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(-1);
  ((GraceApp *)GraceApp::getInstance())->midiOutPort->clear();
}

char *get_current_directory() {
  return (char *)File::getCurrentWorkingDirectory().getFullPathName().toUTF8();
}

void set_current_directory (char *path) {
  File dir=File(String(path));
  if ( dir.isDirectory() ) {
    dir.setAsCurrentWorkingDirectory();
    //print_working_directory();
  }
  else {
    String s=T(">>> Error: ") + dir.getFullPathName().quoted() + T(" is not a directory.\n");
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleMessage(s, CommandIDs::ConsolePrintError, true);
  }			 
}

void load_sal_file(char *path) {
  SalSyntax::getInstance()->loadFile( String(path) );  
}



#include "Toolbox.h"



void mp_note(double time, double dur, float key, float vel, float chan) 
{
  SchemeThread* sch=((GraceApp *)GraceApp::getInstance())->schemeProcess;
  // dont need a lock becuase we are in the thread
  if (sch->capturemode)
  {
    // if score capture is true AND we are under a process callback then
    // processtime will be >= 0 else it will be 0
    time=time+sch->processtime;
    ((GraceApp *)GraceApp::getInstance())->
      midiOutPort->sendNote(time, dur, key, vel, chan, true);
  }
  else
   ((GraceApp *)GraceApp::getInstance())->
      midiOutPort->sendNote(time, dur, key, vel, chan, false);
}

void mp_data(int type, double time, float chan, float data1, float data2)
{
  SchemeThread* sch=((GraceApp *)GraceApp::getInstance())->schemeProcess;
  if (sch->capturemode)
  {
    // if score capture is true AND we are under a process callback then
    // processtime will be >= 0 else it will be 0
    time=time+sch->processtime;
    ((GraceApp *)GraceApp::getInstance())->
      midiOutPort->sendData(type, time, chan, data1, data2, true) ;
  }
  else
  {
    ((GraceApp *)GraceApp::getInstance())->
      midiOutPort->sendData(type, time, chan, data1, data2, false) ;
  }
}

void mp_message(MidiMessage *m) 
{
  SchemeThread* sch=((GraceApp *)GraceApp::getInstance())->schemeProcess;
  if (sch->capturemode)
  {
    // if score capture is true AND we are under a process callback then
    // processtime will be >= 0 else it will be 0
    m->setTimeStamp(m->getTimeStamp()+sch->processtime);
    ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendMessage(m, true) ;
  }
  else 
  {
   ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendMessage(m,false) ;
  }
}

void mp_tuning(int div)
{
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( String::empty, CommandIDs::MidiOutTuning + div, true);
}

void mp_playseq()
{
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( String::empty, CommandIDs::MidiSeqPlay, true);
}

void mp_saveseq()
{
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( String::empty, CommandIDs::MidiSeqSave, true);
}

void mp_copyseq()
{
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( String::empty, CommandIDs::MidiSeqCopyToTrack, true);
}

void mp_plotseq()
{
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( String::empty, CommandIDs::MidiSeqPlot, true);
}

void mp_clearseq()
{
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( String::empty, CommandIDs::MidiSeqClear, true);
}

void mp_recordseq(bool b)
{
 int val = (b) ? CaptureModes::RecordMidiOut : CaptureModes::Off;
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( String::empty, CommandIDs::MidiSeqRecordMidiOut + val, true);
}


/// MidiMessage accessors

MidiMessage *mm_make(int type, double time, int chan, 
		     int data1, int data2 ) {
  MidiMessage *m;
  chan++; // juce channels are 1 based
  switch (type) {
  case MidiNode::MM_OFF :
    m=new MidiMessage(MidiMessage::noteOff(chan, data1));
    break;
  case MidiNode::MM_ON :
    m=new MidiMessage(MidiMessage::noteOn(chan, data1, (juce::uint8)data2));
    break;
  case MidiNode::MM_TOUCH :
    m=new MidiMessage(MidiMessage::aftertouchChange(chan, data1, data2));
    break;
  case MidiNode::MM_CTRL :
    m=new MidiMessage(MidiMessage::controllerEvent(chan, data1, data2));
    break;
  case MidiNode::MM_PROG :
    m=new MidiMessage(MidiMessage::programChange(chan, data1));
    break;
  case MidiNode::MM_PRESS :
    m=new MidiMessage(MidiMessage::channelPressureChange(chan, data1));
    break;
  case MidiNode::MM_BEND :
    m=new MidiMessage(MidiMessage::pitchWheel(chan, data1));
    break;
  default:
    return NULL;
  }
  return m;
}

MidiMessage *mm_copy(MidiMessage *m) {
  return new MidiMessage(*m);
}

void mm_free(MidiMessage *m) {
  delete m;
}

bool mm_is_type(MidiMessage *m, int typ) {
  switch (typ) {
  case MidiNode::MM_OFF :
    return m->isNoteOff();
    break;
  case MidiNode::MM_ON :
    return m->isNoteOn();
    break;
  case MidiNode::MM_TOUCH :
    return m->isAftertouch();
    break;
  case MidiNode::MM_CTRL :
    return m->isController();
    break;
  case MidiNode::MM_PROG :
    return m->isProgramChange();
    break;
  case MidiNode::MM_PRESS :
    return m->isChannelPressure();
    break;
  case MidiNode::MM_BEND :
    return m->isPitchWheel();
    break;
  default:
    return false;
  }
}

double mm_time(MidiMessage *m) {
  return m->getTimeStamp();
}

void mm_set_time(MidiMessage *m, double t) {
  m->setTimeStamp(t);
  return ;		
}

int mm_chan(MidiMessage *m) {
  // juce channels are 1 based
  return m->getChannel()-1;
}

void mm_set_chan(MidiMessage *m, int chan) {
  // juce channels are 1 based
  m->setChannel(chan+1);
}

int mm_data(MidiMessage *m, int n ) {
  juce::uint8 *data=m->getRawData();
  return (int)data[n];
}

void mm_set_data(MidiMessage *m, int n, int v ) {
  juce::uint8 *data=m->getRawData();
  data[n]=(v & 0x7f);
}

//INput Hook Code
void set_input_hook( C_word proc )
{
 // FIX
 ((GraceApp *)GraceApp::getInstance())->schemeProcess->setInputHook( proc);
}



#include "Csound.h"

void cs_send_score_event (int type, int len, C_word lyst)
{
  MYFLT buf[len];
  char typ = (type==2) ? 'f' : 'i';
  String str = String::empty;
  int pos=-1;
  int i=0;
  for ( ; C_SCHEME_END_OF_LIST != lyst; lyst = C_u_i_cdr( lyst ) ) {
    if (i==len) break;
    C_word w = C_u_i_car( lyst );
    if ( C_immediatep(w) ) {
      if ( C_truep(C_fixnump(w)) ) {
	buf[i++] = (MYFLT)C_unfix(w);
      }
      else
        buf[i++] = 0.0;
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_flonump( w ) )) {
      buf[i++] = (MYFLT)C_flonum_magnitude( w );
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_stringp( w ) )) {
      pos=i;  // position of string parameter
      str = String(C_c_string(w), C_header_size(w));
      buf[i++] = 0.0; // pad the pars values
      //printf("stringpar=%s\n", str.toUTF8());
    }								  
    else {
      buf[i++] = 0.0;
    }
  }
  SchemeThread* sch=((GraceApp *)GraceApp::getInstance())->schemeProcess;
  CsoundScoreEv* ev=new CsoundScoreEv(typ,len,buf,str,pos);
  ((GraceApp *)GraceApp::getInstance())->
    getCsoundPort()->sendScoreEvent( ev, true, sch->capturemode);
}

void cs_record_mode(bool b) {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->setRecordMode(b);
}

void cs_record_start(float f) {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->setRecordStart(f);
}

void cs_trace_mode(bool b) {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->setTraceMode(b);
}

void cs_clear_score() {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->clearScore();
}

void cs_print_score(float start, float end) {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->printScore(start,end);
}

void cs_play_score(float start, float end, float shift) {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->playScore(start,end,shift);
}



static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[992];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,11),40,97,54,55,55,55,32,105,51,50,41,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,11),40,97,54,55,57,57,32,105,51,49,41,0,0,0};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,11),40,97,54,56,48,57,32,105,51,48,41,0,0,0};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,11),40,97,54,56,49,53,32,118,50,54,41,0,0,0};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,111,112,116,107,101,121,115,32,117,115,101,114,48,32,115,112,101,99,49,32,98,111,100,121,50,41,0,0};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,23),40,102,95,55,49,52,49,32,115,116,114,53,48,32,46,32,97,114,103,115,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,12),40,102,95,55,49,51,48,32,107,53,52,41,0,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,12),40,102,95,55,49,51,57,32,107,53,53,41,0,0,0,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,13),40,100,111,54,57,32,116,97,105,108,55,49,41,0,0,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,11),40,97,55,48,55,55,32,120,55,55,41,0,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,31),40,100,111,54,51,32,97,114,103,115,54,53,32,107,101,121,54,54,32,97,114,103,54,55,32,112,111,115,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,7),40,97,55,49,50,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,115,101,110,100,32,109,101,115,103,52,52,32,100,97,116,97,52,53,32,101,114,114,102,52,54,41,0,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,8),40,102,95,55,49,53,57,41};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,14),40,102,95,55,49,55,52,32,97,57,52,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,46,32,100,105,114,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,12),40,102,105,102,116,104,32,108,49,48,48,41,0,0,0,0};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,12),40,115,105,120,116,104,32,108,49,48,49,41,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,14),40,115,101,118,101,110,116,104,32,108,49,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,13),40,101,105,103,104,116,104,32,108,49,48,51,41,0,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,12),40,110,105,110,116,104,32,108,49,48,52,41,0,0,0,0};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,12),40,116,101,110,116,104,32,108,49,48,53,41,0,0,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,11),40,114,101,115,116,32,108,49,48,54,41,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,11),40,108,97,115,116,32,108,49,48,55,41,0,0,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,14),40,98,117,116,108,97,115,116,32,108,49,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,11),40,116,97,105,108,32,108,49,48,57,41,0,0,0};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,17),40,108,105,115,116,42,32,46,32,97,114,103,115,49,49,57,41,0};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,32),40,108,105,115,116,45,115,101,116,33,32,108,105,115,49,50,48,32,112,111,115,49,50,49,32,118,97,108,49,50,50,41};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,22),40,100,111,49,50,54,32,105,49,50,56,32,106,49,50,57,32,116,49,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,15),40,114,101,118,101,114,115,101,33,32,108,49,50,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,14),40,108,49,32,97,49,52,48,32,98,49,52,49,41,0,0,0,0,0,0};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,14),40,108,50,32,97,49,52,50,32,98,49,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,25),40,109,97,107,101,45,108,105,115,116,32,110,49,51,54,32,46,32,111,98,106,49,51,55,41,0};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,25),40,100,111,49,52,57,32,116,97,105,108,49,53,49,32,105,49,53,50,32,102,49,53,51,41,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,22),40,108,105,115,116,45,105,110,100,101,120,32,112,49,52,55,32,108,49,52,56,41,0,0,0,0,0,0};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,25),40,100,111,49,54,48,32,116,97,105,108,49,54,50,32,120,49,54,51,32,102,49,54,52,41,0};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,21),40,108,105,115,116,45,102,105,110,100,32,112,49,53,56,32,108,49,53,57,41,0,0,0,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,23),40,100,111,49,55,49,32,116,97,105,108,49,55,51,32,102,108,97,103,49,55,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,18),40,101,118,101,114,121,63,32,102,49,54,57,32,108,49,55,48,41,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,35),40,108,105,115,116,45,112,114,111,112,32,108,105,115,49,55,57,32,112,114,111,112,49,56,48,32,46,32,100,101,102,49,56,49,41,0,0,0};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,12),40,100,111,49,56,55,32,102,49,56,57,41,0,0,0,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,24),40,98,105,116,119,105,115,101,45,116,101,115,116,32,97,49,56,53,32,98,49,56,54,41};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,60),40,116,98,58,114,101,115,99,97,108,101,32,97,50,50,53,50,50,56,32,97,50,50,52,50,50,57,32,97,50,50,51,50,51,48,32,97,50,50,50,50,51,49,32,97,50,50,49,50,51,50,32,97,50,50,48,50,51,51,41,0,0,0,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,61),40,116,98,58,100,105,115,99,114,101,116,101,32,97,50,52,48,50,52,51,32,97,50,51,57,50,52,52,32,97,50,51,56,50,52,53,32,97,50,51,55,50,52,54,32,97,50,51,54,50,52,55,32,97,50,51,53,50,52,56,41,0,0,0,0,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,16),40,116,98,58,105,110,116,32,97,50,52,57,50,53,50,41};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,29),40,116,98,58,113,117,97,110,116,105,122,101,32,97,50,53,52,50,53,55,32,97,50,53,51,50,53,56,41,0,0,0,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,44),40,116,98,58,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,97,50,54,50,50,54,53,32,97,50,54,49,50,54,54,32,97,50,54,48,50,54,55,41,0,0,0,0};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,26),40,116,98,58,99,101,110,116,115,45,62,115,99,97,108,101,114,32,97,50,54,57,50,55,50,41,0,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,26),40,116,98,58,115,99,97,108,101,114,45,62,99,101,110,116,115,32,97,50,55,52,50,55,55,41,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,44),40,116,98,58,101,120,112,108,115,101,103,32,97,50,56,49,50,56,52,32,97,50,56,48,50,56,53,32,97,50,55,57,50,56,54,32,97,50,55,56,50,56,55,41,0,0,0,0};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,43),40,116,98,58,103,101,111,115,101,103,32,97,50,57,50,50,57,53,32,97,50,57,49,50,57,54,32,97,50,57,48,50,57,55,32,97,50,56,57,50,57,56,41,0,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,26),40,116,98,58,107,101,121,110,117,109,45,62,104,101,114,116,122,32,97,51,48,48,51,48,51,41,0,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,45,115,101,116,33,32,97,51,49,52,51,49,55,41,0,0,0,0,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,105,32,97,51,49,56,51,50,49,41,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,102,32,97,51,50,50,51,50,53,41,0};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,11),40,116,98,58,114,97,110,108,111,119,41,0,0,0};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,104,105,103,104,41,0,0,0,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,109,105,100,100,108,101,41,0,0,0,0,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,29),40,116,98,58,114,97,110,103,97,117,115,115,32,97,51,53,48,51,53,51,32,97,51,52,57,51,53,52,41,0,0,0,0,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,19),40,116,98,58,114,97,110,101,120,112,32,97,51,53,54,51,53,57,41,0,0,0};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,103,97,109,109,97,32,97,51,54,56,51,55,49,41,0,0,0,0,0};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,99,97,117,99,104,121,41,0,0,0,0,0,0};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,23),40,116,98,58,114,97,110,112,111,105,115,115,111,110,32,97,51,55,54,51,55,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,112,105,110,107,41,0,0,0,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,13),40,116,98,58,114,97,110,98,114,111,119,110,41,0,0,0,0,0};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,15),40,108,111,103,49,48,32,97,51,57,53,51,57,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,14),40,108,111,103,50,32,97,52,48,48,52,48,51,41,0,0,0,0,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,12),40,97,56,49,57,48,32,122,52,49,49,41,0,0,0,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,45),40,114,101,115,99,97,108,101,32,120,52,48,53,32,120,49,52,48,54,32,120,50,52,48,55,32,121,49,52,48,56,32,121,50,52,48,57,32,46,32,98,52,49,48,41,0,0,0,0,0};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,12),40,97,56,50,51,48,32,122,52,50,51,41,0,0,0,0};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,12),40,97,56,50,53,54,32,122,52,50,52,41,0,0,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,43),40,100,105,115,99,114,101,116,101,32,120,52,49,50,32,120,49,52,49,51,32,120,50,52,49,52,32,105,49,52,49,53,32,46,32,97,114,103,115,52,49,54,41,0,0,0};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,10),40,105,110,116,32,102,52,50,54,41,0,0};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,12),40,97,56,51,53,48,32,120,52,50,56,41,0,0,0,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,12),40,102,108,111,97,116,32,110,52,50,55,41,0,0,0,0};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,12),40,97,56,52,48,54,32,120,52,51,48,41,0,0,0,0};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,16),40,112,108,117,115,32,46,32,97,114,103,115,52,50,57,41};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,12),40,97,56,52,55,53,32,120,52,51,50,41,0,0,0,0};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,17),40,116,105,109,101,115,32,46,32,97,114,103,115,52,51,49,41,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,12),40,97,56,53,51,48,32,120,52,51,53,41,0,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,24),40,109,105,110,117,115,32,97,114,103,52,51,51,32,46,32,97,114,103,115,52,51,52,41};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,12),40,97,56,53,55,51,32,120,52,51,56,41,0,0,0,0};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,25),40,100,105,118,105,100,101,32,97,114,103,52,51,54,32,46,32,97,114,103,115,52,51,55,41,0};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,12),40,97,56,53,57,56,32,110,52,52,49,41,0,0,0,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,26),40,113,117,97,110,116,105,122,101,32,110,117,109,52,51,57,32,115,116,101,112,115,52,52,48,41,0,0};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,12),40,97,56,54,50,50,32,118,52,52,53,41,0,0,0,0};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,29),40,100,101,99,105,109,97,108,115,32,118,97,108,117,101,52,52,50,32,112,108,97,99,101,115,52,52,51,41,0,0,0,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,12),40,97,56,54,54,56,32,120,52,56,54,41,0,0,0,0};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,36),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,52,52,54,32,46,32,97,114,103,115,52,52,55,41,0,0,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,23),40,99,101,110,116,115,45,62,114,97,116,105,111,32,99,101,110,116,115,52,57,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,21),40,114,97,116,105,111,45,62,99,101,110,116,115,32,110,117,109,52,57,49,41,0,0,0,0,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,15),40,100,111,53,48,48,32,116,97,105,108,53,48,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,32),40,105,110,116,101,114,112,49,32,120,52,57,50,32,99,111,111,114,100,115,52,57,51,32,98,97,115,101,52,57,52,41};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,23),40,105,110,116,101,114,112,32,120,53,49,48,32,46,32,97,114,103,115,53,49,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,40),40,116,101,110,100,101,110,99,121,32,120,53,49,51,32,108,111,119,53,49,52,32,104,105,103,104,53,49,53,32,46,32,97,114,103,115,53,49,54,41};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,33),40,102,105,116,49,32,110,117,109,53,50,57,32,108,98,53,51,48,32,117,98,53,51,49,32,109,111,100,101,53,51,50,41,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,12),40,97,57,50,50,51,32,110,53,51,55,41,0,0,0,0};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,34),40,102,105,116,32,110,117,109,53,50,50,32,108,98,53,50,51,32,117,98,53,50,52,32,46,32,109,111,100,101,53,50,53,41,0,0};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,27),40,100,111,53,52,57,32,105,53,53,49,32,107,53,53,50,32,108,53,53,51,32,116,53,53,52,41,0,0,0};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,34),40,115,99,97,108,101,32,108,101,110,53,52,49,32,107,101,121,110,117,109,53,52,50,32,46,32,97,114,103,115,53,52,51,41,0,0};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,14),40,114,97,110,32,46,32,110,117,109,53,54,49,41,0,0,0,0,0,0};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,19),40,98,101,116,119,101,101,110,32,97,53,54,51,32,98,53,54,52,41,0,0,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,16),40,112,105,99,107,32,46,32,97,114,103,115,53,54,53,41};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,21),40,111,100,100,115,32,110,53,54,54,32,46,32,97,114,103,115,53,54,55,41,0,0,0,0,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,30),40,118,97,114,121,49,32,118,97,108,54,49,51,32,118,97,114,105,54,49,52,32,109,111,100,101,54,49,53,41,0,0,0,0,0,0};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,12),40,97,57,55,53,50,32,118,54,50,48,41,0,0,0,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,31),40,118,97,114,121,32,118,97,108,54,48,57,32,118,97,114,105,54,49,48,32,46,32,109,111,100,101,54,49,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,22),40,100,111,54,50,54,32,105,54,50,56,32,106,54,50,57,32,118,54,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,15),40,115,104,117,102,102,108,101,33,32,108,54,50,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,19),40,115,104,117,102,102,108,101,32,46,32,97,114,103,115,54,51,53,41,0,0,0};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,19),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,54,51,54,41,0,0,0};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,18),40,114,97,110,101,120,112,32,46,32,97,114,103,115,54,55,57,41,0,0};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,54,56,48,41,0,0,0,0};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,22),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,54,56,49,41,0,0,0,0,0,0};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,54,56,50,41,0,0,0,0};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,12),40,100,111,54,57,52,32,105,54,57,54,41,0,0,0,0};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,15),40,100,111,55,49,48,32,116,97,105,108,55,49,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,17),40,100,111,55,48,54,32,105,55,48,56,32,110,55,48,57,41,0};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,30),40,115,101,103,115,32,110,117,109,54,56,51,32,115,117,109,54,56,52,32,46,32,97,114,103,115,54,56,53,41,0,0,0,0,0,0};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,8),40,97,49,48,52,52,48,41};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,8),40,97,49,48,52,53,53,41};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,41),40,115,116,114,105,110,103,45,62,110,111,116,101,45,101,110,116,114,121,32,115,116,114,55,54,51,32,111,99,116,55,54,52,32,101,114,114,55,54,53,41,0};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,8),40,97,49,48,52,55,48,41};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,8),40,97,49,48,52,57,50,41};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,34),40,110,111,116,101,45,97,117,120,32,102,114,101,113,55,55,49,32,100,111,99,116,55,55,50,32,101,114,114,63,55,55,51,41,0,0};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,39),40,100,111,55,55,54,32,116,97,105,108,55,55,56,32,100,101,102,111,55,55,57,32,116,104,105,115,55,56,48,32,114,101,115,108,55,56,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,14),40,110,111,116,101,32,102,114,101,113,55,55,52,41,0,0,0,0,0,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,39),40,100,111,55,57,48,32,116,97,105,108,55,57,50,32,100,101,102,111,55,57,51,32,116,104,105,115,55,57,52,32,114,101,115,108,55,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,13),40,107,101,121,32,102,114,101,113,55,56,56,41,0,0,0,0,0};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,39),40,100,111,56,48,54,32,116,97,105,108,56,48,56,32,100,101,102,111,56,48,57,32,116,104,105,115,56,49,48,32,114,101,115,108,56,49,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,12),40,104,122,32,102,114,101,113,56,48,52,41,0,0,0,0};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,9),40,112,99,32,120,56,50,48,41,0};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,23),40,100,111,56,50,54,32,116,97,105,108,56,50,56,32,108,97,115,116,56,50,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,17),40,105,110,118,107,101,121,115,32,107,101,121,115,56,50,51,41,0};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,13),40,97,49,49,48,53,51,32,122,56,51,51,41,0,0,0,0,0};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,13),40,105,110,118,101,114,116,32,120,56,50,49,41,0,0,0,0,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,23),40,100,111,56,52,49,32,116,97,105,108,56,52,51,32,108,97,115,116,56,52,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,28),40,116,114,97,110,115,112,107,101,121,115,32,107,101,121,115,56,51,56,32,111,114,105,103,56,51,57,41,0,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,13),40,97,49,49,50,48,54,32,122,56,52,56,41,0,0,0,0,0};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,21),40,116,114,97,110,115,112,111,115,101,32,120,56,51,52,32,121,56,51,53,41,0,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,18),40,97,49,49,50,54,57,32,97,56,53,49,32,98,56,53,50,41,0,0};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,18),40,97,49,49,51,50,55,32,97,56,53,51,32,98,56,53,52,41,0,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,32),40,115,99,97,108,101,45,111,114,100,101,114,32,115,99,97,108,101,56,52,57,32,46,32,109,111,100,101,56,53,48,41};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,48),40,109,97,107,101,45,115,112,101,99,116,114,117,109,32,116,105,109,101,57,52,48,32,115,105,122,101,57,52,49,32,102,114,101,113,115,57,52,50,32,97,109,112,115,57,52,51,41};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,16),40,115,112,101,99,116,114,117,109,63,32,120,57,52,52,41};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,20),40,115,112,101,99,116,114,117,109,45,116,105,109,101,32,120,57,52,56,41,0,0,0,0};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,32),40,115,112,101,99,116,114,117,109,45,115,105,122,101,45,115,101,116,33,32,120,57,53,49,32,118,97,108,57,53,50,41};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,20),40,115,112,101,99,116,114,117,109,45,115,105,122,101,32,120,57,53,52,41,0,0,0,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,33),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,45,115,101,116,33,32,120,57,53,55,32,118,97,108,57,53,56,41,0};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,21),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,32,120,57,54,48,41,0,0,0,0,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,32),40,115,112,101,99,116,114,117,109,45,97,109,112,115,45,115,101,116,33,32,120,57,54,51,32,118,97,108,57,54,52,41};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,20),40,115,112,101,99,116,114,117,109,45,97,109,112,115,32,120,57,54,54,41,0,0,0,0};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,27),40,115,112,101,99,116,114,117,109,45,99,111,112,121,32,115,112,101,99,116,114,117,109,57,55,54,41,0,0,0};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,12),40,100,111,57,56,51,32,105,57,56,53,41,0,0,0,0};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,28),40,115,112,101,99,116,114,117,109,45,112,97,105,114,115,32,115,112,101,99,116,114,117,109,57,55,55,41,0,0,0,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,105,110,102,114,101,113,32,115,112,101,99,116,114,117,109,57,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,97,120,102,114,101,113,32,115,112,101,99,116,114,117,109,57,57,48,41,0,0,0,0,0,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,13),40,97,49,49,54,50,51,32,97,57,57,52,41,0,0,0,0,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,29),40,115,112,101,99,116,114,117,109,45,109,105,110,97,109,112,32,115,112,101,99,116,114,117,109,57,57,49,41,0,0,0,0,0};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,14),40,97,49,49,54,53,52,32,97,49,48,48,49,41,0,0,0,0,0,0};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,29),40,115,112,101,99,116,114,117,109,45,109,97,120,97,109,112,32,115,112,101,99,116,114,117,109,57,57,56,41,0,0,0,0,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,8),40,100,111,49,48,50,48,41};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,8),40,100,111,49,48,50,52,41};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,15),40,102,95,49,49,54,56,52,32,104,49,48,49,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,15),40,102,95,49,49,55,53,54,32,107,49,48,50,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,15),40,102,95,49,49,55,56,57,32,104,49,48,51,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,15),40,102,95,49,49,55,57,57,32,104,49,48,51,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,20),40,97,49,49,56,53,51,32,97,49,48,51,55,32,98,49,48,51,56,41,0,0,0,0};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,20),40,97,49,49,56,54,56,32,97,49,48,51,57,32,98,49,48,52,48,41,0,0,0,0};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,39),40,115,112,101,99,116,114,117,109,45,107,101,121,115,32,115,112,101,99,116,114,117,109,49,48,53,50,32,46,32,97,114,103,115,49,48,53,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,35),40,100,111,49,51,49,49,32,116,97,105,108,49,51,49,51,32,115,105,122,101,49,51,49,52,32,97,109,112,108,49,51,49,53,41,0,0,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,26),40,100,111,49,50,56,57,32,105,49,50,57,49,32,102,49,50,57,50,32,120,49,50,57,51,41,0,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,24),40,100,111,49,50,56,51,32,110,101,103,49,50,56,53,32,112,111,115,49,50,56,54,41};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,24),40,102,95,56,49,53,52,32,97,51,56,57,51,57,50,32,97,51,56,56,51,57,51,41};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,26),40,100,111,49,50,55,49,32,107,49,50,55,51,32,102,49,50,55,52,32,97,49,50,55,53,41,0,0};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,46),40,102,109,45,115,112,101,99,116,114,117,109,32,99,97,114,114,105,101,114,49,50,54,51,32,109,114,97,116,105,111,49,50,54,52,32,105,110,100,101,120,49,50,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,47),40,100,111,49,51,52,57,32,102,114,101,113,115,49,51,53,49,32,97,109,112,115,49,51,53,50,32,108,97,115,116,102,49,51,53,51,32,108,97,115,116,97,49,51,53,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,41),40,115,112,101,99,116,114,117,109,45,97,100,100,33,32,115,112,101,99,49,51,52,54,32,102,114,101,113,49,51,52,55,32,97,109,112,49,51,52,56,41,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,16),40,103,101,116,102,114,101,113,115,32,115,49,51,55,54,41};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,15),40,103,101,116,97,109,112,115,32,115,49,51,55,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,36),40,115,117,109,115,45,97,110,100,45,100,105,102,102,115,32,115,49,51,55,56,32,102,49,49,51,55,57,32,102,50,49,51,56,49,41,0,0,0,0};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,15),40,100,111,49,51,57,50,32,108,49,49,51,57,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,15),40,100,111,49,51,56,57,32,108,50,49,51,57,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,15),40,100,111,49,51,57,57,32,108,49,49,52,48,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,15),40,100,111,49,52,48,52,32,115,50,49,52,48,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,33),40,114,109,45,115,112,101,99,116,114,117,109,32,115,112,101,99,49,49,51,55,49,32,115,112,101,99,50,49,51,55,50,41,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,44),40,100,111,49,52,49,49,32,109,97,120,102,49,52,49,51,32,109,105,110,102,49,52,49,52,32,116,97,105,108,49,52,49,53,32,102,108,105,112,49,52,49,54,41,0,0,0,0};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,25),40,115,112,101,99,116,114,117,109,45,102,108,105,112,33,32,115,112,101,99,49,52,49,48,41,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,51,48,32,116,97,105,108,49,52,51,50,41,0};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,51,53,32,116,97,105,108,49,52,51,55,41,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,26),40,100,111,49,51,51,51,32,116,97,105,108,49,51,51,53,32,97,109,112,108,49,51,51,54,41,0,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,20),40,97,49,51,55,52,52,32,97,49,51,50,57,32,98,49,51,51,48,41,0,0,0,0};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,20),40,97,49,51,55,53,56,32,97,49,51,50,55,32,98,49,51,50,56,41,0,0,0,0};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,53,55,32,116,97,105,108,49,52,53,57,41,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,54,50,32,116,97,105,108,49,52,54,52,41,0};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,52,56,32,116,97,105,108,49,52,53,48,41,0};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,48),40,115,112,101,99,116,114,117,109,45,114,101,115,99,97,108,101,33,32,115,112,101,99,49,52,50,48,32,109,111,100,101,49,52,50,49,32,46,32,97,114,103,115,49,52,50,50,41};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,12),40,114,104,100,114,32,112,49,53,48,51,41,0,0,0,0};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,12),40,114,100,97,116,32,112,49,52,56,50,41,0,0,0,0};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,26),40,100,111,49,52,56,53,32,105,49,52,56,55,32,97,49,52,56,56,32,102,49,52,56,57,41,0,0};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,26),40,100,111,49,53,49,54,32,108,105,110,101,49,53,49,56,32,115,112,101,99,49,53,49,57,41,0,0};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,8),40,100,111,49,53,48,54,41};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,8),40,97,49,52,55,51,57,41};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,30),40,105,109,112,111,114,116,45,115,112,101,97,114,45,102,114,97,109,101,115,32,102,105,108,101,49,52,57,57,41,0,0,0,0,0,0};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,75),40,109,97,107,101,45,112,101,114,105,111,100,32,99,111,117,110,116,49,53,52,50,32,108,101,110,103,116,104,49,53,52,51,32,115,116,114,101,97,109,49,53,52,52,32,100,101,102,97,117,108,116,49,53,52,53,32,111,109,105,116,49,53,52,54,32,114,101,112,115,49,53,52,55,41,0,0,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,33),40,112,101,114,105,111,100,45,99,111,117,110,116,45,115,101,116,33,32,120,49,53,52,57,32,118,97,108,49,53,53,48,41,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,99,111,117,110,116,32,120,49,53,53,50,41,0,0,0,0};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,108,101,110,103,116,104,32,120,49,53,53,56,41,0,0,0,0,0};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,115,116,114,101,97,109,32,120,49,53,54,52,41,0,0,0,0,0};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,32),40,112,101,114,105,111,100,45,111,109,105,116,45,115,101,116,33,32,120,49,53,55,51,32,118,97,108,49,53,55,52,41};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,111,109,105,116,32,120,49,53,55,54,41,0,0,0};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,114,101,112,115,32,120,49,53,56,50,41,0,0,0};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,16),40,112,97,116,116,101,114,110,63,32,120,49,54,48,56,41};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,102,108,97,103,115,32,120,49,54,49,50,41,0,0,0,0,0};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,33),40,112,97,116,116,101,114,110,45,100,97,116,97,45,115,101,116,33,32,120,49,54,49,53,32,118,97,108,49,54,49,54,41,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,100,97,116,97,32,120,49,54,49,56,41,0,0,0,0};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,108,101,110,103,116,104,32,120,49,54,50,52,41,0,0,0,0,0,0};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,100,97,116,117,109,45,115,101,116,33,32,120,49,54,50,55,32,118,97,108,49,54,50,56,41,0,0};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,100,97,116,117,109,32,120,49,54,51,48,41,0,0,0,0,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,112,101,114,105,111,100,32,120,49,54,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,118,97,108,117,101,45,115,101,116,33,32,120,49,54,51,57,32,118,97,108,49,54,52,48,41,0,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,15),40,102,95,49,53,49,50,49,32,120,49,54,52,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,115,116,97,116,101,45,115,101,116,33,32,120,49,54,52,53,32,118,97,108,49,54,52,54,41,0,0};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,115,116,97,116,101,32,120,49,54,52,56,41,0,0,0,0,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,99,97,99,104,101,45,115,101,116,33,32,120,49,54,56,55,32,118,97,108,49,54,56,56,41,0,0};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,99,97,99,104,101,32,120,49,54,57,48,41,0,0,0,0,0};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,16),40,37,97,108,108,111,99,45,112,97,116,116,101,114,110,41};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,14),40,97,49,53,52,57,57,32,120,49,55,50,48,41,0,0,0,0,0,0};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,98),40,105,110,105,116,105,97,108,105,122,101,45,112,97,116,116,101,114,110,32,111,98,106,49,55,49,48,32,100,97,116,97,49,55,49,49,32,102,111,114,49,55,49,50,32,114,101,112,49,55,49,51,32,102,108,97,103,115,49,55,49,52,32,108,101,110,49,55,49,53,32,100,112,101,114,49,55,49,54,32,103,101,116,114,49,55,49,55,32,109,97,112,114,49,55,49,56,41,0,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,12),40,101,111,112,63,32,120,49,55,52,53,41,0,0,0,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,12),40,101,111,100,63,32,120,49,55,52,54,41,0,0,0,0};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,20),40,100,111,49,55,53,49,32,105,49,55,53,51,32,101,49,55,53,52,41,0,0,0,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,26),40,100,111,49,55,53,56,32,110,49,55,54,48,32,101,49,55,54,49,32,102,49,55,54,50,41,0,0};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,32,111,98,106,49,55,52,55,32,46,32,97,114,103,115,49,55,52,56,41,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,8),40,100,111,49,55,56,54,41};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,26),40,100,111,49,55,56,50,32,100,121,110,63,49,55,56,52,32,115,116,111,112,49,55,56,53,41,0,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,16),40,110,101,120,116,45,49,32,111,98,106,49,55,54,56,41};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,45,105,110,45,112,97,116,116,101,114,110,32,111,98,106,49,56,48,54,41,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,33),40,109,97,112,45,112,97,116,116,101,114,110,45,100,97,116,97,32,102,110,49,56,48,55,32,111,98,106,49,56,48,56,41,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,14),40,97,49,54,48,55,53,32,120,49,56,49,55,41,0,0,0,0,0,0};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,22),40,114,101,115,101,116,45,112,101,114,105,111,100,32,111,98,106,49,56,49,50,41,0,0,0,0,0,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,23),40,97,49,54,49,54,57,32,102,110,49,56,54,57,32,111,98,106,49,56,55,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,99,121,99,108,101,32,100,97,116,97,49,56,50,54,32,46,32,97,114,103,115,49,56,50,55,41};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,99,121,99,108,101,32,111,98,106,49,56,55,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,17),40,112,97,108,105,110,45,108,101,110,32,120,49,56,57,54,41,0};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,30),40,112,97,108,105,110,45,105,110,99,45,115,101,116,33,32,120,49,56,57,57,32,118,97,108,49,57,48,48,41,0,0,0,0,0,0};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,23),40,97,49,54,53,57,57,32,102,110,49,57,57,55,32,111,98,106,49,57,57,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,37),40,109,97,107,101,45,112,97,108,105,110,100,114,111,109,101,32,100,97,116,97,49,57,50,53,32,46,32,97,114,103,115,49,57,50,54,41,0,0,0,0,0};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,28),40,110,101,120,116,45,105,110,45,112,97,108,105,110,100,114,111,109,101,32,111,98,106,50,48,48,54,41,0,0,0,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,23),40,97,49,55,50,54,54,32,102,110,50,48,54,56,32,111,98,106,50,48,54,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,108,105,110,101,32,100,97,116,97,50,48,50,53,32,46,32,97,114,103,115,50,48,50,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,108,105,110,101,32,111,98,106,50,48,55,53,41,0,0,0,0,0,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,23),40,97,49,55,53,53,51,32,102,110,50,49,50,51,32,111,98,106,50,49,50,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,104,101,97,112,32,100,97,116,97,50,48,56,48,32,46,32,97,114,103,115,50,48,56,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,26),40,100,111,50,49,51,52,32,105,50,49,51,54,32,106,50,49,51,55,32,118,50,49,51,56,41,0,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,104,101,97,112,32,111,98,106,50,49,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,23),40,97,49,55,56,57,56,32,102,110,50,50,49,56,32,111,98,106,50,50,49,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,114,111,116,97,116,105,111,110,32,100,97,116,97,50,49,52,54,32,46,32,97,114,103,115,50,49,52,55,41,0,0,0};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,14),40,100,111,50,50,51,52,32,105,50,50,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,61),40,114,111,116,97,116,101,45,105,116,101,109,115,32,105,116,101,109,115,50,50,50,57,32,115,116,97,114,116,50,50,51,48,32,115,116,101,112,50,50,51,49,32,119,105,100,116,104,50,50,51,50,32,101,110,100,50,50,51,51,41,0,0,0,0,0};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,26),40,110,101,120,116,45,105,110,45,114,111,116,97,116,105,111,110,32,111,98,106,50,50,50,55,41,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,100,97,116,117,109,32,120,50,50,54,49,41,0};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,45,115,101,116,33,32,120,50,50,54,52,32,118,97,108,50,50,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,32,120,50,50,54,55,41,0};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,26),40,114,97,110,100,111,109,45,105,116,101,109,45,119,101,105,103,104,116,32,120,50,50,55,51,41,0,0};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,105,110,32,120,50,50,55,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,97,120,32,120,50,50,56,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,45,115,101,116,33,32,120,50,50,56,56,32,118,97,108,50,50,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,32,120,50,50,57,49,41,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,14),40,97,49,56,55,56,51,32,105,50,51,55,52,41,0,0,0,0,0,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,23),40,97,49,56,55,55,55,32,102,110,50,51,55,50,32,111,98,106,50,51,55,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,17),40,97,49,57,48,49,52,32,105,116,101,109,50,51,50,55,41,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,25),40,37,109,97,107,101,45,114,97,110,100,111,109,45,105,116,101,109,32,119,50,51,56,53,41,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,36),40,109,97,107,101,45,119,101,105,103,104,116,105,110,103,32,100,97,116,97,50,51,49,55,32,46,32,97,114,103,115,50,51,49,56,41,0,0,0,0};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,37),40,100,111,50,52,55,50,32,116,97,105,108,50,52,55,52,32,105,110,100,101,120,50,52,55,53,32,116,111,116,97,108,50,52,55,54,41,0,0,0,0,0};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,17),40,100,111,50,52,54,54,32,116,97,105,108,50,52,54,56,41,0};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,36),40,114,101,99,97,108,99,45,119,101,105,103,104,116,105,110,103,115,32,111,98,106,50,52,54,50,32,102,105,120,63,50,52,54,51,41,0,0,0,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,27),40,100,111,50,52,57,52,32,116,97,105,108,50,52,57,54,32,105,110,100,101,120,50,52,57,55,41,0,0,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,18),40,112,105,99,107,32,99,50,52,57,50,32,114,50,52,57,51,41,0,0};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,48,51,32,116,97,105,108,50,53,48,53,41,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,17),40,100,111,50,52,57,57,32,105,116,101,109,50,53,48,49,41,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,27),40,110,101,120,116,45,105,110,45,119,101,105,103,104,116,105,110,103,32,111,98,106,50,52,56,50,41,0,0,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,23),40,97,50,48,48,57,55,32,102,110,50,54,51,49,32,111,98,106,50,54,51,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,14),40,97,49,57,56,53,49,32,115,50,53,51,50,41,0,0,0,0,0,0};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,8),40,100,111,50,53,50,53,41};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,41),40,100,111,50,53,52,55,32,116,97,105,108,50,53,52,57,32,111,114,100,101,114,50,53,53,48,32,108,105,115,50,53,53,49,32,112,50,53,53,50,41,0};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,33),40,109,97,107,101,45,109,97,114,107,111,118,32,100,97,116,97,50,53,53,57,32,46,32,97,114,103,115,50,53,54,48,41,0};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,17),40,100,111,50,54,53,54,32,116,97,105,108,50,54,53,56,41,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,33),40,100,111,50,54,52,54,32,116,97,105,108,50,54,52,56,32,111,117,116,50,54,52,57,32,115,117,109,50,54,53,48,41,0};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,37),40,115,101,108,101,99,116,45,111,117,116,112,117,116,32,114,97,110,103,101,50,54,52,52,32,111,117,116,112,117,116,115,50,54,52,53,41,0,0,0,0,0};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,17),40,100,111,50,54,56,54,32,108,97,115,116,50,54,56,56,41,0};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,26),40,100,111,50,54,54,50,32,105,50,54,54,52,32,106,50,54,54,53,32,102,50,54,54,54,41,0,0};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,35),40,100,111,50,54,55,55,32,116,97,105,108,50,54,55,57,32,112,97,115,116,50,54,56,48,32,105,116,101,109,50,54,56,49,41,0,0,0};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,109,97,114,107,111,118,32,111,98,106,50,54,52,49,41};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,24),40,103,114,97,112,104,45,110,111,100,101,45,100,97,116,117,109,32,120,50,55,48,54,41};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,14),40,97,50,48,57,54,57,32,110,50,55,55,50,41,0,0,0,0,0,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,23),40,97,50,48,57,54,51,32,102,110,50,55,55,48,32,111,98,106,50,55,55,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,28),40,97,50,49,50,49,53,32,105,116,101,109,50,55,56,50,32,46,32,97,114,103,115,50,55,56,51,41,0,0,0,0};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,29),40,112,97,114,115,101,45,103,114,97,112,104,45,105,116,101,109,32,101,120,116,101,114,110,50,55,56,49,41,0,0,0,0,0};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,103,114,97,112,104,32,100,97,116,97,50,55,50,55,32,46,32,97,114,103,115,50,55,50,56,41};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,51,54,32,116,97,105,108,50,56,51,56,41,0};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,103,114,97,112,104,32,111,98,106,50,56,50,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,14),40,97,50,49,54,52,50,32,120,50,57,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,31),40,97,100,100,45,111,117,116,99,111,109,101,32,112,114,101,118,50,56,57,57,32,110,101,120,116,50,57,48,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,14),40,97,50,49,54,57,48,32,122,50,57,49,48,41,0,0,0,0,0,0};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,14),40,97,50,49,55,48,48,32,122,50,57,48,57,41,0,0,0,0,0,0};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,27),40,98,101,102,111,114,101,63,32,120,50,57,48,52,32,121,50,57,48,53,32,108,50,57,48,54,41,0,0,0};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,16),40,97,50,49,55,57,56,32,114,111,119,51,48,51,51,41};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,48,55,32,105,51,48,48,57,32,109,51,48,49,48,41,0,0,0,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,48,48,32,108,51,48,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,20),40,100,111,50,57,57,51,32,105,50,57,57,53,32,109,50,57,57,54,41,0,0,0,0};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,20),40,100,111,50,57,56,55,32,105,50,57,56,57,32,109,50,57,57,48,41,0,0,0,0};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,49,51,32,120,50,57,49,53,41,0,0,0,0,0,0};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,17),40,100,111,50,57,56,49,32,116,97,105,108,50,57,56,51,41,0};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,20),40,100,111,50,57,55,49,32,105,50,57,55,51,32,109,50,57,55,52,41,0,0,0,0};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,54,54,32,108,50,57,54,56,41,0,0,0,0,0,0};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,54,49,32,105,50,57,54,51,41,0,0,0,0,0,0};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,20),40,97,50,50,48,57,52,32,120,50,57,53,55,32,121,50,57,53,56,41,0,0,0,0};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,52,56,32,101,50,57,53,48,41,0,0,0,0,0,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,20),40,100,111,50,57,52,50,32,101,50,57,52,52,32,115,50,57,52,53,41,0,0,0,0};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,25),40,100,111,50,57,51,52,32,116,97,105,108,50,57,51,54,32,108,101,110,50,57,51,55,41,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,20),40,97,50,50,50,52,51,32,120,50,57,51,50,32,121,50,57,51,51,41,0,0,0,0};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,29),40,100,111,50,57,50,49,32,112,114,101,118,50,57,50,51,32,106,50,57,50,52,32,120,50,57,50,53,41,0,0,0,0,0};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,49,56,32,105,50,57,50,48,41,0,0,0,0,0,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,35),40,109,97,114,107,111,118,45,97,110,97,108,121,122,101,32,115,101,113,50,56,52,52,32,46,32,97,114,103,115,50,56,52,53,41,0,0,0};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,45),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,51,48,55,55,32,115,116,114,105,110,103,51,48,55,56,32,112,111,115,105,116,105,111,110,51,48,55,57,41,0,0,0,0,0};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,116,121,112,101,32,120,51,48,56,52,41,0,0};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,20),40,116,111,107,101,110,45,115,116,114,105,110,103,32,120,51,48,57,48,41,0,0,0,0};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,22),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,51,48,57,54,41,0,0,0,0,0,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,19),40,108,105,115,116,45,62,116,111,107,101,110,32,108,51,49,48,53,41,0,0,0};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,22),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,51,49,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,23),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,51,49,48,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,63),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,51,49,49,48,32,116,121,112,101,51,49,49,49,32,112,97,116,116,101,114,110,51,49,49,50,32,112,97,114,115,101,114,51,49,49,51,32,101,109,105,116,101,114,51,49,49,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,17),40,114,117,108,101,45,110,97,109,101,32,120,51,49,49,57,41,0};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,26),40,103,101,116,45,114,117,108,101,32,116,121,112,51,49,54,51,32,100,101,102,51,49,54,52,41,0,0};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,118,97,108,117,101,32,120,51,49,54,54,41,0,0,0,0,0};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,51,49,54,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,51,49,54,57,41,0,0,0,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,51,49,55,48,41,0,0,0,0,0};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,25),40,112,97,116,116,101,114,110,45,115,117,98,32,120,51,49,55,49,32,105,51,49,55,50,41,0};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,29),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,51,49,55,54,41,0,0,0,0,0};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,51,49,55,56,32,112,111,115,105,116,105,111,110,51,49,55,57,41,0,0};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,26),40,112,97,114,115,101,45,101,114,114,111,114,45,115,116,114,105,110,103,32,120,51,49,56,52,41,0,0};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,28),40,112,97,114,115,101,45,101,114,114,111,114,45,112,111,115,105,116,105,111,110,32,120,51,49,57,48,41,0,0,0,0};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,51,49,57,56,32,112,97,114,115,101,100,51,49,57,57,32,112,111,115,105,116,105,111,110,51,50,48,48,41,0,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,19),40,112,97,114,115,101,45,117,110,105,116,63,32,120,51,50,48,49,41,0,0,0};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,23),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,51,50,48,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,51,50,49,49,41,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,51,50,49,55,41,0,0,0};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,117,110,105,116,63,32,120,51,50,50,55,41,0,0,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,33),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,51,50,50,56,32,116,121,112,51,50,50,57,41,0};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,33),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,51,50,51,49,32,105,110,102,111,51,50,51,50,41,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,42),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,51,50,51,52,32,100,97,116,97,51,50,51,53,32,105,110,102,111,51,50,51,54,41,0,0};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,43),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,51,50,51,55,32,100,97,116,97,51,50,51,56,32,105,110,102,111,51,50,51,57,41,0,0,0};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,30),40,101,109,105,116,32,120,51,50,52,50,32,105,110,102,111,51,50,52,51,32,101,114,114,102,51,50,52,52,41,0,0,0,0,0,0};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,37),40,101,109,105,116,45,108,105,115,116,32,108,105,115,51,50,52,53,32,105,110,102,111,51,50,52,54,32,101,114,114,102,51,50,52,55,41,0,0,0,0,0};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,15),40,33,61,32,46,32,110,117,109,115,51,50,52,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,27),40,102,95,50,51,51,57,49,32,97,114,103,115,51,50,54,48,32,101,114,114,102,51,50,54,49,41,0,0,0};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,51,50,53,57,41,0,0,0,0,0};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,54,57,32,116,97,105,108,51,50,55,49,41,0};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,36),40,102,95,50,51,51,57,57,32,117,110,105,116,51,50,54,51,32,105,110,102,111,51,50,54,52,32,101,114,114,102,51,50,54,53,41,0,0,0,0};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,30),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,51,50,54,50,41,0,0,0,0,0,0};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,8),40,97,50,51,53,57,55,41};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,26),40,97,50,51,54,48,55,32,97,51,51,48,49,32,98,51,51,48,50,32,99,51,51,48,51,41,0,0};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,8),40,97,50,51,55,48,51,41};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,26),40,97,50,51,55,49,55,32,97,51,51,49,55,32,98,51,51,49,56,32,99,51,51,49,57,41,0,0};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,14),40,100,111,51,51,49,50,32,105,51,51,49,52,41,0,0,0,0,0,0};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,8),40,97,50,51,55,55,48,41};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,26),40,97,50,51,55,56,52,32,97,51,51,51,57,32,98,51,51,52,48,32,99,51,51,52,49,41,0,0};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,14),40,100,111,51,51,51,52,32,105,51,51,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,8),40,97,50,51,56,53,57,41};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,26),40,97,50,51,56,54,53,32,97,51,51,53,56,32,98,51,51,53,57,32,99,51,51,54,48,41,0,0};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,8),40,100,111,51,51,53,52,41};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,8),40,97,50,51,56,57,56,41};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,26),40,97,50,51,57,48,52,32,97,51,51,55,54,32,98,51,51,55,55,32,99,51,51,55,56,41,0,0};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,70),40,112,97,114,115,101,114,32,112,97,116,51,50,56,56,32,116,111,107,101,110,115,51,50,56,57,32,102,111,114,99,101,45,97,110,100,51,50,57,48,32,108,101,118,101,108,51,50,57,49,32,116,114,97,99,101,51,50,57,50,32,101,114,114,102,51,50,57,51,41,0,0,0,0,0,0};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,21),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,51,53,53,51,41,0,0,0,0,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,18),40,83,97,108,79,112,84,121,112,101,63,32,105,51,53,53,55,41,0,0};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,20),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,51,53,54,54,41,0,0,0,0};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,29),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,51,53,54,55,32,116,121,112,50,51,53,54,56,41,0,0,0,0,0};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,17),40,100,111,51,54,49,55,32,116,111,107,115,51,54,49,57,41,0};
static C_char C_TLS li382[] C_aligned={C_lihdr(0,0,36),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,51,54,49,51,32,116,121,112,51,54,49,52,41,0,0,0,0};
static C_char C_TLS li383[] C_aligned={C_lihdr(0,0,14),40,105,115,45,111,112,63,32,120,51,54,52,52,41,0,0,0,0,0,0};
static C_char C_TLS li384[] C_aligned={C_lihdr(0,0,29),40,100,111,51,54,53,51,32,119,50,51,54,53,53,32,111,107,51,54,53,54,32,108,105,51,54,53,55,41,0,0,0,0,0};
static C_char C_TLS li385[] C_aligned={C_lihdr(0,0,8),40,100,111,51,54,53,49,41};
static C_char C_TLS li386[] C_aligned={C_lihdr(0,0,18),40,105,110,102,45,62,112,114,101,32,105,110,102,51,54,52,54,41,0,0};
static C_char C_TLS li387[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,51,56,49,50,32,101,114,114,102,51,56,49,51,41,0,0,0,0,0,0};
static C_char C_TLS li388[] C_aligned={C_lihdr(0,0,14),40,100,111,52,48,51,48,32,102,52,48,51,50,41,0,0,0,0,0,0};
static C_char C_TLS li389[] C_aligned={C_lihdr(0,0,14),40,100,111,52,48,50,51,32,102,52,48,50,53,41,0,0,0,0,0,0};
static C_char C_TLS li390[] C_aligned={C_lihdr(0,0,8),40,97,50,51,52,54,56,41};
static C_char C_TLS li391[] C_aligned={C_lihdr(0,0,44),40,97,50,51,52,55,53,32,115,117,99,99,101,115,115,51,50,56,51,32,114,101,115,117,108,116,115,51,50,56,52,32,114,101,109,97,105,110,115,51,50,56,53,41,0,0,0,0};
static C_char C_TLS li392[] C_aligned={C_lihdr(0,0,17),40,97,50,51,52,54,50,32,101,114,114,102,51,50,56,49,41,0};
static C_char C_TLS li393[] C_aligned={C_lihdr(0,0,47),40,115,97,108,32,115,116,114,105,110,103,52,48,48,55,32,114,117,108,101,52,48,48,56,32,116,111,107,101,110,115,52,48,48,57,32,116,114,97,99,101,63,52,48,49,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li394[] C_aligned={C_lihdr(0,0,17),40,100,111,52,48,53,48,32,116,97,105,108,52,48,53,50,41,0};
static C_char C_TLS li395[] C_aligned={C_lihdr(0,0,27),40,112,114,105,110,116,101,114,32,116,104,105,110,103,52,48,52,56,32,108,101,118,52,48,52,57,41,0,0,0};
static C_char C_TLS li396[] C_aligned={C_lihdr(0,0,17),40,100,111,52,48,53,56,32,116,97,105,108,52,48,54,48,41,0};
static C_char C_TLS li397[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,52,48,52,54,41,0,0,0,0,0,0};
static C_char C_TLS li398[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,52,48,54,53,41,0,0,0,0};
static C_char C_TLS li399[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,52,48,54,55,41,0,0,0};
static C_char C_TLS li400[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,52,48,55,50,41,0,0,0,0,0};
static C_char C_TLS li401[] C_aligned={C_lihdr(0,0,23),40,115,97,108,58,111,117,116,112,117,116,32,46,32,97,114,103,115,52,48,55,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li402[] C_aligned={C_lihdr(0,0,32),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,52,50,48,52,32,120,52,50,48,53,41};
static C_char C_TLS li403[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,52,50,48,54,41,0,0,0,0,0};
static C_char C_TLS li404[] C_aligned={C_lihdr(0,0,23),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,52,50,48,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li405[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,52,50,49,50,41,0,0,0,0,0,0};
static C_char C_TLS li406[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,52,50,49,53,41,0,0,0,0,0,0};
static C_char C_TLS li407[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,52,50,49,56,41,0,0,0,0};
static C_char C_TLS li408[] C_aligned={C_lihdr(0,0,31),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,52,50,49,57,32,120,52,50,50,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li409[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,52,50,50,49,41,0,0,0,0,0};
static C_char C_TLS li410[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,52,50,50,52,41,0,0,0,0};
static C_char C_TLS li411[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,52,50,50,55,41,0,0,0,0,0,0};
static C_char C_TLS li412[] C_aligned={C_lihdr(0,0,14),40,100,111,52,50,51,50,32,97,52,50,51,52,41,0,0,0,0,0,0};
static C_char C_TLS li413[] C_aligned={C_lihdr(0,0,27),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,52,50,51,48,41,0,0,0};
static C_char C_TLS li414[] C_aligned={C_lihdr(0,0,14),40,100,111,52,50,52,52,32,108,52,50,52,54,41,0,0,0,0,0,0};
static C_char C_TLS li415[] C_aligned={C_lihdr(0,0,40),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,52,50,52,50,32,97,99,99,101,115,115,111,114,52,50,52,51,41};
static C_char C_TLS li416[] C_aligned={C_lihdr(0,0,39),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,52,50,51,57,32,99,108,97,117,115,101,115,52,50,52,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li417[] C_aligned={C_lihdr(0,0,24),40,108,111,111,112,45,111,112,63,32,120,52,50,53,48,32,111,112,115,52,50,53,49,41};
static C_char C_TLS li418[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,52,50,53,50,41,0,0,0,0,0,0};
static C_char C_TLS li419[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,52,50,53,51,32,118,97,108,52,50,53,52,41,0,0,0,0,0,0};
static C_char C_TLS li420[] C_aligned={C_lihdr(0,0,17),40,100,111,52,50,55,54,32,116,97,105,108,52,50,55,56,41,0};
static C_char C_TLS li421[] C_aligned={C_lihdr(0,0,17),40,100,111,52,50,55,49,32,116,97,105,108,52,50,55,51,41,0};
static C_char C_TLS li422[] C_aligned={C_lihdr(0,0,20),40,100,111,52,50,54,49,32,104,52,50,54,51,32,108,52,50,54,52,41,0,0,0,0};
static C_char C_TLS li423[] C_aligned={C_lihdr(0,0,39),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,52,50,53,53,32,102,111,114,109,115,52,50,53,54,32,97,114,103,115,52,50,53,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li424[] C_aligned={C_lihdr(0,0,41),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,52,50,57,48,32,99,108,97,117,115,101,115,52,50,57,49,32,111,112,115,52,50,57,50,41,0};
static C_char C_TLS li425[] C_aligned={C_lihdr(0,0,17),40,100,111,52,51,49,48,32,110,101,120,116,52,51,49,50,41,0};
static C_char C_TLS li426[] C_aligned={C_lihdr(0,0,51),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,52,50,57,54,32,99,108,97,117,115,101,115,52,50,57,55,32,111,112,115,52,50,57,56,41,0,0,0};
static C_char C_TLS li427[] C_aligned={C_lihdr(0,0,8),40,97,50,55,49,51,49,41};
static C_char C_TLS li428[] C_aligned={C_lihdr(0,0,30),40,97,50,55,49,52,57,32,99,108,97,117,115,101,52,51,57,49,32,105,103,110,111,114,101,52,51,57,50,41,0,0,0,0,0,0};
static C_char C_TLS li429[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,52,51,56,56,32,99,108,97,117,115,101,115,52,51,56,57,32,111,112,115,52,51,57,48,41,0,0,0,0};
static C_char C_TLS li430[] C_aligned={C_lihdr(0,0,17),40,100,111,52,52,48,57,32,110,101,120,116,52,52,49,49,41,0};
static C_char C_TLS li431[] C_aligned={C_lihdr(0,0,56),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,52,51,57,52,32,99,108,97,117,115,101,115,52,51,57,53,32,111,112,115,52,51,57,54,41};
static C_char C_TLS li432[] C_aligned={C_lihdr(0,0,17),40,100,111,52,52,55,54,32,110,101,120,116,52,52,55,56,41,0};
static C_char C_TLS li433[] C_aligned={C_lihdr(0,0,55),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,52,52,54,54,32,99,108,97,117,115,101,115,52,52,54,55,32,111,112,115,52,52,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li434[] C_aligned={C_lihdr(0,0,26),40,100,111,52,53,49,52,32,110,101,101,100,52,53,49,54,32,110,101,120,116,52,53,49,55,41,0,0};
static C_char C_TLS li435[] C_aligned={C_lihdr(0,0,42),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,52,53,48,52,32,99,108,97,117,115,101,115,52,53,48,53,32,111,112,115,52,53,48,54,41,0,0};
static C_char C_TLS li436[] C_aligned={C_lihdr(0,0,8),40,100,111,52,53,53,56,41};
static C_char C_TLS li437[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,52,53,52,57,32,99,108,97,117,115,101,115,52,53,53,48,32,111,112,115,52,53,53,49,41};
static C_char C_TLS li438[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,52,53,54,56,32,99,108,97,117,115,101,115,52,53,54,57,32,111,112,115,52,53,55,48,41,0,0,0,0,0};
static C_char C_TLS li439[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,52,53,56,50,32,99,108,97,117,115,101,115,52,53,56,51,32,111,112,115,52,53,56,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li440[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,52,54,52,57,32,116,121,112,101,52,54,53,48,32,97,99,99,52,54,53,49,32,104,101,97,100,52,54,53,50,41,0,0};
static C_char C_TLS li441[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,52,54,53,51,41};
static C_char C_TLS li442[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,52,54,53,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li443[] C_aligned={C_lihdr(0,0,14),40,100,111,52,54,48,49,32,97,52,54,48,51,41,0,0,0,0,0,0};
static C_char C_TLS li444[] C_aligned={C_lihdr(0,0,14),40,100,111,52,54,48,57,32,99,52,54,49,49,41,0,0,0,0,0,0};
static C_char C_TLS li445[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,52,54,50,56,32,99,108,97,117,115,101,115,52,54,50,57,32,111,112,115,52,54,51,48,41,0,0};
static C_char C_TLS li446[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,52,55,50,57,41,0,0,0,0,0,0};
static C_char C_TLS li447[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,52,55,51,48,32,99,108,97,117,115,101,115,52,55,51,49,32,111,112,115,52,55,51,50,41,0};
static C_char C_TLS li448[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,52,55,53,49,32,99,108,97,117,115,101,115,52,55,53,50,32,111,112,115,52,55,53,51,41,0,0,0,0,0};
static C_char C_TLS li449[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,52,55,54,55,32,99,108,97,117,115,101,115,52,55,54,56,32,111,112,115,52,55,54,57,41,0,0,0,0};
static C_char C_TLS li450[] C_aligned={C_lihdr(0,0,8),40,97,50,57,48,50,50,41};
static C_char C_TLS li451[] C_aligned={C_lihdr(0,0,20),40,97,50,57,48,51,53,32,97,52,55,57,52,32,98,52,55,57,53,41,0,0,0,0};
static C_char C_TLS li452[] C_aligned={C_lihdr(0,0,38),40,100,111,52,55,56,55,32,111,112,52,55,56,57,32,99,108,97,117,115,101,52,55,57,48,32,114,101,109,97,105,110,115,52,55,57,49,41,0,0,0,0,0,0};
static C_char C_TLS li453[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,52,55,56,49,32,99,108,97,117,115,101,115,52,55,56,50,32,111,112,115,52,55,56,51,41,0,0};
static C_char C_TLS li454[] C_aligned={C_lihdr(0,0,8),40,97,50,57,49,56,54,41};
static C_char C_TLS li455[] C_aligned={C_lihdr(0,0,20),40,97,50,57,50,48,48,32,97,52,56,50,51,32,98,52,56,50,52,41,0,0,0,0};
static C_char C_TLS li456[] C_aligned={C_lihdr(0,0,8),40,97,50,57,50,54,52,41};
static C_char C_TLS li457[] C_aligned={C_lihdr(0,0,20),40,97,50,57,50,55,48,32,97,52,56,50,48,32,98,52,56,50,49,41,0,0,0,0};
static C_char C_TLS li458[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,52,56,48,55,32,99,108,97,117,115,101,115,52,56,48,56,32,111,112,115,52,56,48,57,41,0};
static C_char C_TLS li459[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,52,56,53,48,32,116,121,112,101,52,56,53,49,41,0,0};
static C_char C_TLS li460[] C_aligned={C_lihdr(0,0,8),40,97,50,57,52,49,50,41};
static C_char C_TLS li461[] C_aligned={C_lihdr(0,0,20),40,97,50,57,52,50,49,32,97,52,56,54,51,32,98,52,56,54,52,41,0,0,0,0};
static C_char C_TLS li462[] C_aligned={C_lihdr(0,0,47),40,100,111,52,56,53,52,32,111,112,52,56,53,54,32,99,108,97,117,115,101,52,56,53,55,32,114,101,109,97,105,110,115,52,56,53,56,32,98,111,100,121,52,56,53,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li463[] C_aligned={C_lihdr(0,0,46),40,112,97,114,115,101,45,105,116,101,114,97,116,105,111,110,32,99,97,108,108,101,114,52,56,55,54,32,102,111,114,109,115,52,56,55,55,32,111,112,115,52,56,55,56,41,0,0,0,0,0,0};
static C_char C_TLS li464[] C_aligned={C_lihdr(0,0,59),40,102,95,50,57,56,50,55,32,97,53,48,53,53,53,48,53,56,32,97,53,48,53,52,53,48,53,57,32,97,53,48,53,51,53,48,54,48,32,97,53,48,53,50,53,48,54,49,32,97,53,48,53,49,53,48,54,50,41,0,0,0};
static C_char C_TLS li465[] C_aligned={C_lihdr(0,0,23),40,109,109,58,109,97,107,101,45,111,110,32,46,32,97,114,103,115,52,57,52,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li466[] C_aligned={C_lihdr(0,0,29),40,102,95,51,48,53,52,49,32,97,53,48,55,49,53,48,55,53,32,97,53,48,55,48,53,48,55,54,41,0,0,0,0,0};
static C_char C_TLS li467[] C_aligned={C_lihdr(0,0,14),40,109,109,58,111,110,63,32,109,53,48,54,57,41,0,0,0,0,0,0};
static C_char C_TLS li468[] C_aligned={C_lihdr(0,0,59),40,102,95,51,48,53,55,50,32,97,53,49,53,48,53,49,53,51,32,97,53,49,52,57,53,49,53,52,32,97,53,49,52,56,53,49,53,53,32,97,53,49,52,55,53,49,53,54,32,97,53,49,52,54,53,49,53,55,41,0,0,0};
static C_char C_TLS li469[] C_aligned={C_lihdr(0,0,24),40,109,109,58,109,97,107,101,45,111,102,102,32,46,32,97,114,103,115,53,48,55,56,41};
static C_char C_TLS li470[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,48,49,49,32,97,53,49,54,53,53,49,54,57,32,97,53,49,54,52,53,49,55,48,41,0,0,0,0,0};
static C_char C_TLS li471[] C_aligned={C_lihdr(0,0,15),40,109,109,58,111,102,102,63,32,109,53,49,54,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li472[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,48,52,53,32,97,53,50,56,49,53,50,56,52,32,97,53,50,56,48,53,50,56,53,32,97,53,50,55,57,53,50,56,54,32,97,53,50,55,56,53,50,56,55,32,97,53,50,55,55,53,50,56,56,41,0,0,0};
static C_char C_TLS li473[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,116,111,117,99,104,32,46,32,97,114,103,115,53,49,55,50,41,0,0};
static C_char C_TLS li474[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,55,53,57,32,97,53,50,57,55,53,51,48,49,32,97,53,50,57,54,53,51,48,50,41,0,0,0,0,0};
static C_char C_TLS li475[] C_aligned={C_lihdr(0,0,17),40,109,109,58,116,111,117,99,104,63,32,109,53,50,57,53,41,0};
static C_char C_TLS li476[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,55,57,51,32,97,53,52,49,51,53,52,49,54,32,97,53,52,49,50,53,52,49,55,32,97,53,52,49,49,53,52,49,56,32,97,53,52,49,48,53,52,49,57,32,97,53,52,48,57,53,52,50,48,41,0,0,0};
static C_char C_TLS li477[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,99,116,114,108,32,46,32,97,114,103,115,53,51,48,52,41,0};
static C_char C_TLS li478[] C_aligned={C_lihdr(0,0,29),40,102,95,51,50,53,48,55,32,97,53,52,50,57,53,52,51,51,32,97,53,52,50,56,53,52,51,52,41,0,0,0,0,0};
static C_char C_TLS li479[] C_aligned={C_lihdr(0,0,16),40,109,109,58,99,116,114,108,63,32,109,53,52,50,55,41};
static C_char C_TLS li480[] C_aligned={C_lihdr(0,0,59),40,102,95,51,50,53,51,56,32,97,53,53,48,56,53,53,49,49,32,97,53,53,48,55,53,53,49,50,32,97,53,53,48,54,53,53,49,51,32,97,53,53,48,53,53,53,49,52,32,97,53,53,48,52,53,53,49,53,41,0,0,0};
static C_char C_TLS li481[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,112,114,111,103,32,46,32,97,114,103,115,53,52,51,54,41,0};
static C_char C_TLS li482[] C_aligned={C_lihdr(0,0,29),40,102,95,51,50,57,55,55,32,97,53,53,50,51,53,53,50,55,32,97,53,53,50,50,53,53,50,56,41,0,0,0,0,0};
static C_char C_TLS li483[] C_aligned={C_lihdr(0,0,16),40,109,109,58,112,114,111,103,63,32,109,53,53,50,49,41};
static C_char C_TLS li484[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,48,48,56,32,97,53,54,48,50,53,54,48,53,32,97,53,54,48,49,53,54,48,54,32,97,53,54,48,48,53,54,48,55,32,97,53,53,57,57,53,54,48,56,32,97,53,53,57,56,53,54,48,57,41,0,0,0};
static C_char C_TLS li485[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,112,114,101,115,115,32,46,32,97,114,103,115,53,53,51,48,41,0,0};
static C_char C_TLS li486[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,52,52,55,32,97,53,54,49,55,53,54,50,49,32,97,53,54,49,54,53,54,50,50,41,0,0,0,0,0};
static C_char C_TLS li487[] C_aligned={C_lihdr(0,0,17),40,109,109,58,112,114,101,115,115,63,32,109,53,54,49,53,41,0};
static C_char C_TLS li488[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,52,55,56,32,97,53,54,57,54,53,54,57,57,32,97,53,54,57,53,53,55,48,48,32,97,53,54,57,52,53,55,48,49,32,97,53,54,57,51,53,55,48,50,32,97,53,54,57,50,53,55,48,51,41,0,0,0};
static C_char C_TLS li489[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,98,101,110,100,32,46,32,97,114,103,115,53,54,50,52,41,0};
static C_char C_TLS li490[] C_aligned={C_lihdr(0,0,19),40,102,95,51,51,57,51,57,32,97,53,55,49,57,53,55,50,51,41,0,0,0};
static C_char C_TLS li491[] C_aligned={C_lihdr(0,0,15),40,109,109,58,102,114,101,101,32,109,53,55,49,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li492[] C_aligned={C_lihdr(0,0,19),40,102,95,51,51,57,53,52,32,97,53,55,50,55,53,55,51,49,41,0,0,0};
static C_char C_TLS li493[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,111,112,121,32,109,53,55,50,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li494[] C_aligned={C_lihdr(0,0,19),40,102,95,51,51,57,54,57,32,97,53,55,51,53,53,55,51,57,41,0,0,0};
static C_char C_TLS li495[] C_aligned={C_lihdr(0,0,15),40,109,109,58,116,105,109,101,32,109,53,55,51,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li496[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,57,56,52,32,97,53,55,52,53,53,55,52,57,32,97,53,55,52,52,53,55,53,48,41,0,0,0,0,0};
static C_char C_TLS li497[] C_aligned={C_lihdr(0,0,26),40,109,109,58,116,105,109,101,45,115,101,116,33,32,109,53,55,52,50,32,116,53,55,52,51,41,0,0};
static C_char C_TLS li498[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,48,48,51,32,97,53,55,53,52,53,55,53,56,41,0,0,0};
static C_char C_TLS li499[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,104,97,110,32,109,53,55,53,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li500[] C_aligned={C_lihdr(0,0,29),40,102,95,51,52,48,49,56,32,97,53,55,54,51,53,55,54,55,32,97,53,55,54,50,53,55,54,56,41,0,0,0,0,0};
static C_char C_TLS li501[] C_aligned={C_lihdr(0,0,26),40,109,109,58,99,104,97,110,45,115,101,116,33,32,109,53,55,54,48,32,99,53,55,54,49,41,0,0};
static C_char C_TLS li502[] C_aligned={C_lihdr(0,0,29),40,102,95,51,52,48,51,55,32,97,53,55,55,51,53,55,55,55,32,97,53,55,55,50,53,55,55,56,41,0,0,0,0,0};
static C_char C_TLS li503[] C_aligned={C_lihdr(0,0,14),40,109,109,58,107,101,121,32,109,53,55,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li504[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,48,53,54,32,97,53,55,56,52,53,55,56,56,32,97,53,55,56,51,53,55,56,57,32,97,53,55,56,50,53,55,57,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li505[] C_aligned={C_lihdr(0,0,25),40,109,109,58,107,101,121,45,115,101,116,33,32,109,53,55,56,48,32,107,53,55,56,49,41,0};
static C_char C_TLS li506[] C_aligned={C_lihdr(0,0,29),40,102,95,51,52,48,55,57,32,97,53,55,57,53,53,55,57,57,32,97,53,55,57,52,53,56,48,48,41,0,0,0,0,0};
static C_char C_TLS li507[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,101,108,32,109,53,55,57,51,41,0,0,0,0,0,0};
static C_char C_TLS li508[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,48,57,56,32,97,53,56,48,54,53,56,49,48,32,97,53,56,48,53,53,56,49,49,32,97,53,56,48,52,53,56,49,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li509[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,101,108,45,115,101,116,33,32,109,53,56,48,50,32,118,53,56,48,51,41,0};
static C_char C_TLS li510[] C_aligned={C_lihdr(0,0,29),40,102,95,51,52,49,51,48,32,97,53,56,49,57,53,56,50,51,32,97,53,56,49,56,53,56,50,52,41,0,0,0,0,0};
static C_char C_TLS li511[] C_aligned={C_lihdr(0,0,29),40,102,95,51,52,49,52,54,32,97,53,56,50,55,53,56,51,49,32,97,53,56,50,54,53,56,51,50,41,0,0,0,0,0};
static C_char C_TLS li512[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,97,108,32,109,53,56,49,53,41,0,0,0,0,0,0};
static C_char C_TLS li513[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,49,55,55,32,97,53,56,52,48,53,56,52,52,32,97,53,56,51,57,53,56,52,53,32,97,53,56,51,56,53,56,52,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li514[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,49,57,55,32,97,53,56,53,48,53,56,53,52,32,97,53,56,52,57,53,56,53,53,32,97,53,56,52,56,53,56,53,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li515[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,97,108,45,115,101,116,33,32,109,53,56,51,52,32,118,53,56,51,53,41,0};
static C_char C_TLS li516[] C_aligned={C_lihdr(0,0,29),40,102,95,51,52,50,50,51,32,97,53,56,54,49,53,56,54,53,32,97,53,56,54,48,53,56,54,54,41,0,0,0,0,0};
static C_char C_TLS li517[] C_aligned={C_lihdr(0,0,14),40,109,109,58,110,117,109,32,109,53,56,53,57,41,0,0,0,0,0,0};
static C_char C_TLS li518[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,50,52,50,32,97,53,56,55,50,53,56,55,54,32,97,53,56,55,49,53,56,55,55,32,97,53,56,55,48,53,56,55,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li519[] C_aligned={C_lihdr(0,0,25),40,109,109,58,110,117,109,45,115,101,116,33,32,109,53,56,54,56,32,118,53,56,54,57,41,0};
static C_char C_TLS li520[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,50,54,53,32,97,53,56,57,48,53,56,57,51,32,97,53,56,56,57,53,56,57,52,32,97,53,56,56,56,53,56,57,53,32,97,53,56,56,55,53,56,57,54,32,97,53,56,56,54,53,56,57,55,41,0,0,0};
static C_char C_TLS li521[] C_aligned={C_lihdr(0,0,51),40,109,112,58,110,111,116,101,32,116,105,109,101,53,56,56,49,32,100,117,114,53,56,56,50,32,107,101,121,53,56,56,51,32,97,109,112,53,56,56,52,32,99,104,97,110,53,56,56,53,41,0,0,0};
static C_char C_TLS li522[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,50,57,51,32,97,53,57,48,55,53,57,49,48,32,97,53,57,48,54,53,57,49,49,32,97,53,57,48,53,53,57,49,50,32,97,53,57,48,52,53,57,49,51,32,97,53,57,48,51,53,57,49,52,41,0,0,0};
static C_char C_TLS li523[] C_aligned={C_lihdr(0,0,51),40,109,112,58,109,105,100,105,32,116,105,109,101,53,56,57,56,32,100,117,114,53,56,57,57,32,107,101,121,53,57,48,48,32,97,109,112,53,57,48,49,32,99,104,97,110,53,57,48,50,41,0,0,0};
static C_char C_TLS li524[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,51,50,49,32,97,53,57,50,50,53,57,50,53,32,97,53,57,50,49,53,57,50,54,32,97,53,57,50,48,53,57,50,55,32,97,53,57,49,57,53,57,50,56,32,97,53,57,49,56,53,57,50,57,41,0,0,0};
static C_char C_TLS li525[] C_aligned={C_lihdr(0,0,34),40,109,112,58,111,102,102,32,116,105,109,101,53,57,49,53,32,107,101,121,53,57,49,54,32,99,104,97,110,53,57,49,55,41,0,0};
static C_char C_TLS li526[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,51,52,57,32,97,53,57,51,56,53,57,52,49,32,97,53,57,51,55,53,57,52,50,32,97,53,57,51,54,53,57,52,51,32,97,53,57,51,53,53,57,52,52,32,97,53,57,51,52,53,57,52,53,41,0,0,0};
static C_char C_TLS li527[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,110,32,116,105,109,101,53,57,51,48,32,107,101,121,53,57,51,49,32,118,101,108,53,57,51,50,32,99,104,97,110,53,57,51,51,41,0};
static C_char C_TLS li528[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,51,55,55,32,97,53,57,53,52,53,57,53,55,32,97,53,57,53,51,53,57,53,56,32,97,53,57,53,50,53,57,53,57,32,97,53,57,53,49,53,57,54,48,32,97,53,57,53,48,53,57,54,49,41,0,0,0};
static C_char C_TLS li529[] C_aligned={C_lihdr(0,0,44),40,109,112,58,116,111,117,99,104,32,116,105,109,101,53,57,52,54,32,107,101,121,53,57,52,55,32,118,97,108,53,57,52,56,32,99,104,97,110,53,57,52,57,41,0,0,0,0};
static C_char C_TLS li530[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,52,48,53,32,97,53,57,55,48,53,57,55,51,32,97,53,57,54,57,53,57,55,52,32,97,53,57,54,56,53,57,55,53,32,97,53,57,54,55,53,57,55,54,32,97,53,57,54,54,53,57,55,55,41,0,0,0};
static C_char C_TLS li531[] C_aligned={C_lihdr(0,0,43),40,109,112,58,99,116,114,108,32,116,105,109,101,53,57,54,50,32,110,117,109,53,57,54,51,32,118,97,108,53,57,54,52,32,99,104,97,110,53,57,54,53,41,0,0,0};
static C_char C_TLS li532[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,52,51,51,32,97,53,57,56,53,53,57,56,56,32,97,53,57,56,52,53,57,56,57,32,97,53,57,56,51,53,57,57,48,32,97,53,57,56,50,53,57,57,49,32,97,53,57,56,49,53,57,57,50,41,0,0,0};
static C_char C_TLS li533[] C_aligned={C_lihdr(0,0,35),40,109,112,58,112,114,111,103,32,116,105,109,101,53,57,55,56,32,118,97,108,53,57,55,57,32,99,104,97,110,53,57,56,48,41,0,0,0};
static C_char C_TLS li534[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,52,54,49,32,97,54,48,48,48,54,48,48,51,32,97,53,57,57,57,54,48,48,52,32,97,53,57,57,56,54,48,48,53,32,97,53,57,57,55,54,48,48,54,32,97,53,57,57,54,54,48,48,55,41,0,0,0};
static C_char C_TLS li535[] C_aligned={C_lihdr(0,0,36),40,109,112,58,112,114,101,115,115,32,116,105,109,101,53,57,57,51,32,118,97,108,53,57,57,52,32,99,104,97,110,53,57,57,53,41,0,0,0,0};
static C_char C_TLS li536[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,52,56,57,32,97,54,48,49,53,54,48,49,56,32,97,54,48,49,52,54,48,49,57,32,97,54,48,49,51,54,48,50,48,32,97,54,48,49,50,54,48,50,49,32,97,54,48,49,49,54,48,50,50,41,0,0,0};
static C_char C_TLS li537[] C_aligned={C_lihdr(0,0,35),40,109,112,58,98,101,110,100,32,116,105,109,101,54,48,48,56,32,118,97,108,54,48,48,57,32,99,104,97,110,54,48,49,48,41,0,0,0};
static C_char C_TLS li538[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,53,49,55,32,97,54,48,50,52,54,48,50,56,41,0,0,0};
static C_char C_TLS li539[] C_aligned={C_lihdr(0,0,15),40,109,112,58,109,109,32,112,116,114,54,48,50,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li540[] C_aligned={C_lihdr(0,0,17),40,97,51,52,53,53,48,32,37,101,114,114,54,48,51,55,41,0};
static C_char C_TLS li541[] C_aligned={C_lihdr(0,0,8),40,97,51,52,53,55,48,41};
static C_char C_TLS li542[] C_aligned={C_lihdr(0,0,18),40,97,51,52,53,52,52,32,37,99,111,110,116,54,48,51,54,41,0,0};
static C_char C_TLS li543[] C_aligned={C_lihdr(0,0,17),40,97,51,52,53,51,56,32,37,109,115,103,54,48,51,53,41,0};
static C_char C_TLS li544[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,53,55,54,32,97,54,48,51,49,54,48,51,52,41,0,0,0};
static C_char C_TLS li545[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,53,56,49,32,97,54,48,52,48,54,48,52,51,41,0,0,0};
static C_char C_TLS li546[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,104,111,111,107,32,37,104,111,111,107,54,48,51,48,41,0,0,0,0,0};
static C_char C_TLS li547[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,54,48,49,32,97,54,48,52,54,54,48,52,57,41,0,0,0};
static C_char C_TLS li548[] C_aligned={C_lihdr(0,0,22),40,109,112,58,116,117,110,105,110,103,32,46,32,97,114,103,115,54,48,52,52,41,0,0,0,0,0,0};
static C_char C_TLS li549[] C_aligned={C_lihdr(0,0,9),40,102,95,51,52,54,51,49,41,0};
static C_char C_TLS li550[] C_aligned={C_lihdr(0,0,12),40,109,112,58,112,108,97,121,115,101,113,41,0,0,0,0};
static C_char C_TLS li551[] C_aligned={C_lihdr(0,0,9),40,102,95,51,52,54,52,50,41,0};
static C_char C_TLS li552[] C_aligned={C_lihdr(0,0,12),40,109,112,58,115,97,118,101,115,101,113,41,0,0,0,0};
static C_char C_TLS li553[] C_aligned={C_lihdr(0,0,9),40,102,95,51,52,54,53,51,41,0};
static C_char C_TLS li554[] C_aligned={C_lihdr(0,0,12),40,109,112,58,99,111,112,121,115,101,113,41,0,0,0,0};
static C_char C_TLS li555[] C_aligned={C_lihdr(0,0,9),40,102,95,51,52,54,54,52,41,0};
static C_char C_TLS li556[] C_aligned={C_lihdr(0,0,12),40,109,112,58,112,108,111,116,115,101,113,41,0,0,0,0};
static C_char C_TLS li557[] C_aligned={C_lihdr(0,0,9),40,102,95,51,52,54,55,53,41,0};
static C_char C_TLS li558[] C_aligned={C_lihdr(0,0,13),40,109,112,58,99,108,101,97,114,115,101,113,41,0,0,0,0,0};
static C_char C_TLS li559[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,54,56,57,32,97,54,48,54,56,54,48,55,49,41,0,0,0};
static C_char C_TLS li560[] C_aligned={C_lihdr(0,0,25),40,109,112,58,114,101,99,111,114,100,115,101,113,32,46,32,97,114,103,115,54,48,54,54,41,0};
static C_char C_TLS li561[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,55,54,51,32,97,54,49,51,55,54,49,52,48,41,0,0,0};
static C_char C_TLS li562[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,55,55,55,32,97,54,49,52,53,54,49,52,56,41,0,0,0};
static C_char C_TLS li563[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,55,55,57,32,97,54,49,52,49,54,49,52,52,41,0,0,0};
static C_char C_TLS li564[] C_aligned={C_lihdr(0,0,19),40,99,115,58,114,101,99,111,114,100,32,118,97,108,54,49,51,54,41,0,0,0};
static C_char C_TLS li565[] C_aligned={C_lihdr(0,0,9),40,102,95,51,52,56,48,48,41,0};
static C_char C_TLS li566[] C_aligned={C_lihdr(0,0,10),40,99,115,58,99,108,101,97,114,41,0,0};
static C_char C_TLS li567[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,56,50,52,32,97,54,49,53,53,54,49,53,56,32,97,54,49,53,52,54,49,53,57,32,97,54,49,53,51,54,49,54,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li568[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,54,49,53,50,41,0};
static C_char C_TLS li569[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,56,56,49,32,97,54,49,54,54,54,49,54,57,32,97,54,49,54,53,54,49,55,48,32,97,54,49,54,52,54,49,55,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li570[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,54,49,54,51,41,0};
static C_char C_TLS li571[] C_aligned={C_lihdr(0,0,29),40,102,95,51,52,57,51,52,32,97,54,50,49,52,54,50,49,55,32,97,54,50,49,51,54,50,49,56,41,0,0,0,0,0};
static C_char C_TLS li572[] C_aligned={C_lihdr(0,0,21),40,99,115,58,112,114,105,110,116,32,46,32,97,114,103,115,54,49,55,52,41,0,0,0,0,0};
static C_char C_TLS li573[] C_aligned={C_lihdr(0,0,39),40,102,95,51,53,49,55,53,32,97,54,50,57,51,54,50,57,54,32,97,54,50,57,50,54,50,57,55,32,97,54,50,57,49,54,50,57,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li574[] C_aligned={C_lihdr(0,0,20),40,99,115,58,112,108,97,121,32,46,32,97,114,103,115,54,50,50,51,41,0,0,0,0};
static C_char C_TLS li575[] C_aligned={C_lihdr(0,0,14),40,100,111,54,51,51,50,32,120,54,51,51,52,41,0,0,0,0,0,0};
static C_char C_TLS li576[] C_aligned={C_lihdr(0,0,26),40,100,111,54,51,49,56,32,101,54,51,50,57,32,118,54,51,51,48,32,121,54,51,51,49,41,0,0};
static C_char C_TLS li577[] C_aligned={C_lihdr(0,0,18),40,99,109,45,108,111,103,111,32,118,101,114,115,54,51,49,55,41,0,0};
static C_char C_TLS li578[] C_aligned={C_lihdr(0,0,25),40,112,114,105,110,116,45,109,101,115,115,97,103,101,32,97,54,51,52,51,54,51,52,55,41,0};
static C_char C_TLS li579[] C_aligned={C_lihdr(0,0,23),40,112,114,105,110,116,45,101,114,114,111,114,32,97,54,51,52,57,54,51,53,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li580[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li581[] C_aligned={C_lihdr(0,0,48),40,115,99,104,101,100,117,108,101,114,45,115,112,114,111,117,116,32,97,54,51,53,55,54,51,54,48,32,97,54,51,53,54,54,51,54,49,32,97,54,51,53,53,54,51,54,50,41};
static C_char C_TLS li582[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li583[] C_aligned={C_lihdr(0,0,26),40,115,99,104,101,100,117,108,101,114,45,115,116,111,112,32,97,54,51,55,55,54,51,56,48,41,0,0};
static C_char C_TLS li584[] C_aligned={C_lihdr(0,0,19),40,102,95,51,53,57,49,56,32,97,54,51,56,56,54,51,57,50,41,0,0,0};
static C_char C_TLS li585[] C_aligned={C_lihdr(0,0,24),40,108,111,97,100,45,115,97,108,45,102,105,108,101,32,102,105,108,101,54,51,56,55,41};
static C_char C_TLS li586[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li587[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li588[] C_aligned={C_lihdr(0,0,14),40,100,111,54,52,49,55,32,112,54,52,49,57,41,0,0,0,0,0,0};
static C_char C_TLS li589[] C_aligned={C_lihdr(0,0,14),40,100,111,54,52,49,50,32,112,54,52,49,52,41,0,0,0,0,0,0};
static C_char C_TLS li590[] C_aligned={C_lihdr(0,0,27),40,98,111,100,121,54,51,57,56,32,115,116,97,114,116,54,52,48,52,32,105,100,54,52,48,53,41,0,0,0};
static C_char C_TLS li591[] C_aligned={C_lihdr(0,0,27),40,100,101,102,45,105,100,54,52,48,49,32,37,115,116,97,114,116,54,51,57,54,54,52,50,54,41,0,0,0};
static C_char C_TLS li592[] C_aligned={C_lihdr(0,0,15),40,100,101,102,45,115,116,97,114,116,54,52,48,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li593[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,54,51,57,52,32,46,32,97,114,103,115,54,51,57,53,41,0,0,0,0};
static C_char C_TLS li594[] C_aligned={C_lihdr(0,0,5),40,110,111,119,41,0,0,0,0,0};
static C_char C_TLS li595[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li596[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li597[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li598[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li599[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li600[] C_aligned={C_lihdr(0,0,6),40,99,111,110,116,41,0,0,0,0,0,0};
static C_char C_TLS li601[] C_aligned={C_lihdr(0,0,17),40,100,111,54,52,51,57,32,116,97,105,108,54,52,52,49,41,0};
static C_char C_TLS li602[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,54,52,51,56,41,0,0,0};
static C_char C_TLS li603[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li604[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li605[] C_aligned={C_lihdr(0,0,47),40,114,117,110,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,54,52,52,54,32,99,108,97,117,115,101,115,54,52,52,55,32,111,112,115,54,52,52,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li606[] C_aligned={C_lihdr(0,0,44),40,112,114,111,99,101,115,115,45,99,111,100,101,45,116,101,114,109,105,110,97,116,101,115,63,32,99,111,100,101,54,52,55,54,32,115,116,111,112,54,52,55,55,41,0,0,0,0};
static C_char C_TLS li607[] C_aligned={C_lihdr(0,0,31),40,97,51,54,54,48,55,32,102,111,114,109,97,108,115,54,52,57,55,32,46,32,98,111,100,121,54,52,57,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li608[] C_aligned={C_lihdr(0,0,17),40,97,51,54,54,51,54,32,97,114,103,115,54,52,57,54,41,0};
static C_char C_TLS li609[] C_aligned={C_lihdr(0,0,16),40,100,111,54,52,54,57,32,111,112,115,54,52,55,49,41};
static C_char C_TLS li610[] C_aligned={C_lihdr(0,0,17),40,97,51,54,55,48,53,32,97,114,103,115,52,56,56,57,41,0};
static C_char C_TLS li611[] C_aligned={C_lihdr(0,0,16),40,97,51,54,56,52,55,32,115,121,109,52,50,48,50,41};
static C_char C_TLS li612[] C_aligned={C_lihdr(0,0,16),40,97,51,54,56,53,48,32,115,121,109,52,50,48,48,41};
static C_char C_TLS li613[] C_aligned={C_lihdr(0,0,24),40,97,51,54,56,55,57,32,118,97,108,52,49,57,56,32,115,121,109,52,49,57,57,41};
static C_char C_TLS li614[] C_aligned={C_lihdr(0,0,17),40,97,51,54,56,57,51,32,97,114,103,115,52,49,57,55,41,0};
static C_char C_TLS li615[] C_aligned={C_lihdr(0,0,26),40,97,51,54,57,48,55,32,97,114,103,115,52,48,48,50,32,101,114,114,102,52,48,48,51,41,0,0};
static C_char C_TLS li616[] C_aligned={C_lihdr(0,0,35),40,97,51,54,57,50,49,32,117,110,105,116,52,48,48,52,32,105,110,102,111,52,48,48,53,32,101,114,114,102,52,48,48,54,41,0,0,0};
static C_char C_TLS li617[] C_aligned={C_lihdr(0,0,26),40,97,51,55,48,50,55,32,97,114,103,115,51,57,53,49,32,101,114,114,102,51,57,53,50,41,0,0};
static C_char C_TLS li618[] C_aligned={C_lihdr(0,0,17),40,100,111,51,57,54,51,32,114,101,115,116,51,57,54,53,41,0};
static C_char C_TLS li619[] C_aligned={C_lihdr(0,0,26),40,100,111,51,57,56,57,32,97,114,103,115,51,57,57,49,32,116,97,105,108,51,57,57,50,41,0,0};
static C_char C_TLS li620[] C_aligned={C_lihdr(0,0,35),40,97,51,55,48,54,54,32,117,110,105,116,51,57,53,54,32,105,110,102,111,51,57,53,55,32,101,114,114,102,51,57,53,56,41,0,0,0};
static C_char C_TLS li621[] C_aligned={C_lihdr(0,0,26),40,97,51,55,52,56,52,32,97,114,103,115,51,57,52,52,32,101,114,114,102,51,57,52,53,41,0,0};
static C_char C_TLS li622[] C_aligned={C_lihdr(0,0,26),40,97,51,55,54,50,57,32,97,114,103,115,51,57,51,48,32,101,114,114,102,51,57,51,49,41,0,0};
static C_char C_TLS li623[] C_aligned={C_lihdr(0,0,17),40,100,111,51,57,48,50,32,116,97,105,108,51,57,48,52,41,0};
static C_char C_TLS li624[] C_aligned={C_lihdr(0,0,17),40,100,111,51,56,57,53,32,116,97,105,108,51,56,57,55,41,0};
static C_char C_TLS li625[] C_aligned={C_lihdr(0,0,20),40,100,111,51,56,56,51,32,99,108,97,117,115,101,115,51,56,56,53,41,0,0,0,0};
static C_char C_TLS li626[] C_aligned={C_lihdr(0,0,17),40,100,111,51,56,56,48,32,116,97,105,108,51,56,56,50,41,0};
static C_char C_TLS li627[] C_aligned={C_lihdr(0,0,35),40,97,51,55,54,55,53,32,117,110,105,116,51,57,52,48,32,105,110,102,111,51,57,52,49,32,101,114,114,102,51,57,52,50,41,0,0,0};
static C_char C_TLS li628[] C_aligned={C_lihdr(0,0,26),40,97,51,56,49,50,57,32,97,114,103,115,51,55,57,54,32,101,114,114,102,51,55,57,55,41,0,0};
static C_char C_TLS li629[] C_aligned={C_lihdr(0,0,35),40,97,51,56,49,57,55,32,117,110,105,116,51,56,48,56,32,105,110,102,111,51,56,48,57,32,101,114,114,102,51,56,49,48,41,0,0,0};
static C_char C_TLS li630[] C_aligned={C_lihdr(0,0,26),40,97,51,56,51,56,56,32,97,114,103,115,51,55,56,52,32,101,114,114,102,51,55,56,53,41,0,0};
static C_char C_TLS li631[] C_aligned={C_lihdr(0,0,35),40,97,51,56,52,49,52,32,117,110,105,116,51,55,56,57,32,105,110,102,111,51,55,57,48,32,101,114,114,102,51,55,57,49,41,0,0,0};
static C_char C_TLS li632[] C_aligned={C_lihdr(0,0,26),40,97,51,56,53,48,50,32,97,114,103,115,51,55,54,50,32,101,114,114,102,51,55,54,51,41,0,0};
static C_char C_TLS li633[] C_aligned={C_lihdr(0,0,17),40,100,111,51,55,55,48,32,105,116,101,114,51,55,55,50,41,0};
static C_char C_TLS li634[] C_aligned={C_lihdr(0,0,35),40,97,51,56,53,52,53,32,117,110,105,116,51,55,54,52,32,105,110,102,111,51,55,54,53,32,101,114,114,102,51,55,54,54,41,0,0,0};
static C_char C_TLS li635[] C_aligned={C_lihdr(0,0,26),40,97,51,56,55,56,50,32,97,114,103,115,51,55,53,57,32,101,114,114,102,51,55,54,48,41,0,0};
static C_char C_TLS li636[] C_aligned={C_lihdr(0,0,26),40,97,51,56,56,54,56,32,97,114,103,115,51,55,53,49,32,101,114,114,102,51,55,53,50,41,0,0};
static C_char C_TLS li637[] C_aligned={C_lihdr(0,0,14),40,97,51,56,57,50,48,32,101,51,55,53,55,41,0,0,0,0,0,0};
static C_char C_TLS li638[] C_aligned={C_lihdr(0,0,35),40,97,51,56,57,49,49,32,117,110,105,116,51,55,53,51,32,105,110,102,111,51,55,53,52,32,101,114,114,102,51,55,53,53,41,0,0,0};
static C_char C_TLS li639[] C_aligned={C_lihdr(0,0,26),40,97,51,56,57,55,48,32,97,114,103,115,51,55,52,52,32,101,114,114,102,51,55,52,53,41,0,0};
static C_char C_TLS li640[] C_aligned={C_lihdr(0,0,14),40,97,51,57,48,49,49,32,101,51,55,52,57,41,0,0,0,0,0,0};
static C_char C_TLS li641[] C_aligned={C_lihdr(0,0,35),40,97,51,57,48,48,53,32,117,110,105,116,51,55,52,54,32,105,110,102,111,51,55,52,55,32,101,114,114,102,51,55,52,56,41,0,0,0};
static C_char C_TLS li642[] C_aligned={C_lihdr(0,0,35),40,97,51,57,48,54,53,32,117,110,105,116,51,55,51,55,32,105,110,102,111,51,55,51,56,32,101,114,114,102,51,55,51,57,41,0,0,0};
static C_char C_TLS li643[] C_aligned={C_lihdr(0,0,35),40,97,51,57,49,50,54,32,117,110,105,116,51,55,51,49,32,105,110,102,111,51,55,51,50,32,101,114,114,102,51,55,51,51,41,0,0,0};
static C_char C_TLS li644[] C_aligned={C_lihdr(0,0,26),40,97,51,57,49,56,48,32,97,114,103,115,51,55,50,53,32,101,114,114,102,51,55,50,54,41,0,0};
static C_char C_TLS li645[] C_aligned={C_lihdr(0,0,35),40,97,51,57,50,49,48,32,117,110,105,116,51,55,50,55,32,105,110,102,111,51,55,50,56,32,101,114,114,102,51,55,50,57,41,0,0,0};
static C_char C_TLS li646[] C_aligned={C_lihdr(0,0,26),40,97,51,57,52,50,57,32,97,114,103,115,51,55,49,56,32,101,114,114,102,51,55,49,57,41,0,0};
static C_char C_TLS li647[] C_aligned={C_lihdr(0,0,26),40,97,51,57,52,53,53,32,97,114,103,115,51,55,48,53,32,101,114,114,102,51,55,48,54,41,0,0};
static C_char C_TLS li648[] C_aligned={C_lihdr(0,0,27),40,97,51,57,53,53,48,32,115,116,114,51,55,49,53,32,46,32,97,114,103,115,51,55,49,54,41,0,0,0};
static C_char C_TLS li649[] C_aligned={C_lihdr(0,0,35),40,97,51,57,53,51,48,32,117,110,105,116,51,55,49,48,32,105,110,102,111,51,55,49,49,32,101,114,114,102,51,55,49,50,41,0,0,0};
static C_char C_TLS li650[] C_aligned={C_lihdr(0,0,26),40,97,51,57,54,54,56,32,97,114,103,115,51,54,57,56,32,101,114,114,102,51,54,57,57,41,0,0};
static C_char C_TLS li651[] C_aligned={C_lihdr(0,0,35),40,97,51,57,54,57,48,32,117,110,105,116,51,55,48,48,32,105,110,102,111,51,55,48,49,32,101,114,114,102,51,55,48,50,41,0,0,0};
static C_char C_TLS li652[] C_aligned={C_lihdr(0,0,26),40,97,51,57,55,52,51,32,97,114,103,115,51,54,56,52,32,101,114,114,102,51,54,56,53,41,0,0};
static C_char C_TLS li653[] C_aligned={C_lihdr(0,0,17),40,100,111,51,54,57,49,32,97,114,103,115,51,54,57,51,41,0};
static C_char C_TLS li654[] C_aligned={C_lihdr(0,0,35),40,97,51,57,55,54,53,32,117,110,105,116,51,54,56,54,32,105,110,102,111,51,54,56,55,32,101,114,114,102,51,54,56,56,41,0,0,0};
static C_char C_TLS li655[] C_aligned={C_lihdr(0,0,26),40,97,51,57,56,57,55,32,97,114,103,115,51,54,55,55,32,101,114,114,102,51,54,55,56,41,0,0};
static C_char C_TLS li656[] C_aligned={C_lihdr(0,0,35),40,97,51,57,57,50,51,32,117,110,105,116,51,54,55,57,32,105,110,102,111,51,54,56,48,32,101,114,114,102,51,54,56,49,41,0,0,0};
static C_char C_TLS li657[] C_aligned={C_lihdr(0,0,26),40,97,52,48,48,51,51,32,97,114,103,115,51,54,55,51,32,101,114,114,102,51,54,55,52,41,0,0};
static C_char C_TLS li658[] C_aligned={C_lihdr(0,0,26),40,97,52,48,49,56,57,32,97,114,103,115,51,54,51,54,32,101,114,114,102,51,54,51,55,41,0,0};
static C_char C_TLS li659[] C_aligned={C_lihdr(0,0,35),40,97,52,48,50,48,55,32,117,110,105,116,51,54,51,56,32,105,110,102,111,51,54,51,57,32,101,114,114,102,51,54,52,48,41,0,0,0};
static C_char C_TLS li660[] C_aligned={C_lihdr(0,0,26),40,97,52,48,50,54,48,32,97,114,103,115,51,54,51,48,32,101,114,114,102,51,54,51,49,41,0,0};
static C_char C_TLS li661[] C_aligned={C_lihdr(0,0,26),40,97,52,48,52,49,50,32,97,114,103,115,51,54,50,55,32,101,114,114,102,51,54,50,56,41,0,0};
static C_char C_TLS li662[] C_aligned={C_lihdr(0,0,26),40,97,52,48,53,53,49,32,97,114,103,115,51,54,50,52,32,101,114,114,102,51,54,50,53,41,0,0};
static C_char C_TLS li663[] C_aligned={C_lihdr(0,0,26),40,97,52,48,54,55,49,32,97,114,103,115,51,54,48,51,32,101,114,114,102,51,54,48,52,41,0,0};
static C_char C_TLS li664[] C_aligned={C_lihdr(0,0,35),40,97,52,48,55,48,50,32,117,110,105,116,51,54,48,54,32,105,110,102,111,51,54,48,55,32,101,114,114,102,51,54,48,56,41,0,0,0};
static C_char C_TLS li665[] C_aligned={C_lihdr(0,0,26),40,97,52,48,55,57,52,32,97,114,103,115,51,53,57,55,32,101,114,114,102,51,53,57,56,41,0,0};
static C_char C_TLS li666[] C_aligned={C_lihdr(0,0,35),40,97,52,48,56,49,50,32,117,110,105,116,51,53,57,57,32,105,110,102,111,51,54,48,48,32,101,114,114,102,51,54,48,49,41,0,0,0};
static C_char C_TLS li667[] C_aligned={C_lihdr(0,0,35),40,97,52,48,56,56,54,32,117,110,105,116,51,53,56,54,32,105,110,102,111,51,53,56,55,32,101,114,114,102,51,53,56,56,41,0,0,0};
static C_char C_TLS li668[] C_aligned={C_lihdr(0,0,26),40,97,52,48,57,56,50,32,97,114,103,115,51,53,55,52,32,101,114,114,102,51,53,55,53,41,0,0};
static C_char C_TLS li669[] C_aligned={C_lihdr(0,0,35),40,97,52,48,57,57,50,32,117,110,105,116,51,53,55,54,32,105,110,102,111,51,53,55,55,32,101,114,114,102,51,53,55,56,41,0,0,0};
static C_char C_TLS li670[] C_aligned={C_lihdr(0,0,20),40,97,52,49,49,54,56,32,117,51,50,50,52,32,112,51,50,50,53,41,0,0,0,0};
static C_char C_TLS li671[] C_aligned={C_lihdr(0,0,20),40,97,52,49,49,57,52,32,101,51,49,57,54,32,112,51,49,57,55,41,0,0,0,0};
static C_char C_TLS li672[] C_aligned={C_lihdr(0,0,12),40,112,112,97,116,32,112,51,49,53,57,41,0,0,0,0};
static C_char C_TLS li673[] C_aligned={C_lihdr(0,0,35),40,97,52,49,50,48,56,32,116,121,112,51,49,53,53,32,112,97,116,51,49,53,54,32,46,32,97,114,103,115,51,49,53,55,41,0,0,0};
static C_char C_TLS li674[] C_aligned={C_lihdr(0,0,20),40,97,52,49,51,49,49,32,114,51,49,53,50,32,112,51,49,53,51,41,0,0,0,0};
static C_char C_TLS li675[] C_aligned={C_lihdr(0,0,20),40,97,52,49,51,50,49,32,116,51,49,48,51,32,112,51,49,48,52,41,0,0,0,0};
static C_char C_TLS li676[] C_aligned={C_lihdr(0,0,23),40,97,52,49,51,51,53,32,111,98,106,57,55,52,32,112,111,114,116,57,55,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li677[] C_aligned={C_lihdr(0,0,71),40,100,111,55,51,49,32,100,55,51,51,32,107,55,51,52,32,112,55,51,53,32,107,60,55,51,54,32,107,62,55,51,55,32,102,55,51,56,32,102,62,55,51,57,32,102,60,55,52,48,32,111,55,52,49,32,120,55,52,50,32,110,55,52,51,32,101,55,52,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li678[] C_aligned={C_lihdr(0,0,14),40,100,111,55,50,53,32,107,101,121,55,50,55,41,0,0,0,0,0,0};
static C_char C_TLS li679[] C_aligned={C_lihdr(0,0,24),40,97,52,49,53,54,49,32,109,101,115,115,56,56,32,46,32,100,97,116,97,56,57,41};
static C_char C_TLS li680[] C_aligned={C_lihdr(0,0,22),40,97,52,49,53,54,55,32,102,117,110,99,51,56,32,105,110,102,111,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li681[] C_aligned={C_lihdr(0,0,24),40,97,52,49,54,49,57,32,115,112,101,99,51,54,32,46,32,98,111,100,121,51,55,41};
static C_char C_TLS li682[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from now in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub6433(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6433(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( (Time::getMillisecondCounterHiRes() / 1000.0) );
C_ret:
#undef return

return C_r;}

/* from k35921 */
static C_word C_fcall stub6389(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6389(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
load_sal_file(t0);
return C_r;}

/* from k35906 in hush in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
C_noret_decl(stub6383)
static void C_ccall stub6383(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6383(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_hush();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k35900 */
C_noret_decl(stub6378)
static void C_ccall stub6378(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub6378(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_stop(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k35884 in cont in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
C_noret_decl(stub6373)
static void C_ccall stub6373(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6373(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_cont();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k35875 in pause in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
C_noret_decl(stub6369)
static void C_ccall stub6369(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6369(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_pause();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k35866 in paused? in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
C_noret_decl(stub6365)
static void C_ccall stub6365(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6365(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_paused());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k35860 */
C_noret_decl(stub6358)
static void C_ccall stub6358(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_noret;
static void C_ccall stub6358(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_sprout(t0,t1,t2);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k35836 in print-error in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static C_word C_fcall stub6350(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6350(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_error(t0);
return C_r;}

/* from k35822 in print-message in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static C_word C_fcall stub6344(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6344(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_message(t0);
return C_r;}

/* from k35186 */
static C_word C_fcall stub6294(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub6294(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
cs_play_score(t0,t1,t2);
return C_r;}

/* from k34941 */
static C_word C_fcall stub6215(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub6215(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
cs_print_score(t0,t1);
return C_r;}

/* from k34888 */
static C_word C_fcall stub6167(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub6167(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from k34831 */
static C_word C_fcall stub6156(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub6156(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from f_34800 in cs:clear in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static C_word C_fcall stub6150(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6150(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cs_clear_score();
return C_r;}

/* from f_34777 in k34771 in cs:record in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static C_word C_fcall stub6146(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6146(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
cs_record_mode(t0);
return C_r;}

/* from k34782 */
static C_word C_fcall stub6142(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6142(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
cs_record_start(t0);
return C_r;}

/* from f_34763 in cs:record in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static C_word C_fcall stub6138(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6138(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
cs_record_mode(t0);
return C_r;}

/* from f_34689 in mp:recordseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static C_word C_fcall stub6069(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6069(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
mp_recordseq(t0);
return C_r;}

/* from f_34675 in mp:clearseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static C_word C_fcall stub6063(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6063(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_clearseq();
return C_r;}

/* from f_34664 in mp:plotseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static C_word C_fcall stub6060(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6060(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_plotseq();
return C_r;}

/* from f_34653 in mp:copyseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static C_word C_fcall stub6057(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6057(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_copyseq();
return C_r;}

/* from f_34642 in mp:saveseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static C_word C_fcall stub6054(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6054(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_saveseq();
return C_r;}

/* from f_34631 in mp:playseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static C_word C_fcall stub6051(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6051(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_playseq();
return C_r;}

/* from k34604 */
static C_word C_fcall stub6047(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6047(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_tuning(t0);
return C_r;}

/* from f_34581 in mp:inhook in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static C_word C_fcall stub6041(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6041(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from f_34576 in mp:inhook in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static C_word C_fcall stub6032(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6032(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from k34520 */
static C_word C_fcall stub6025(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6025(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mp_message(t0);
return C_r;}

/* from k34508 */
static C_word C_fcall stub6016(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub6016(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34480 */
static C_word C_fcall stub6001(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub6001(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34452 */
static C_word C_fcall stub5986(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5986(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34424 */
static C_word C_fcall stub5971(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5971(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34396 */
static C_word C_fcall stub5955(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5955(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34368 */
static C_word C_fcall stub5939(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5939(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34340 */
static C_word C_fcall stub5923(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5923(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34312 */
static C_word C_fcall stub5908(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5908(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k34284 */
static C_word C_fcall stub5891(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5891(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k34253 */
static C_word C_fcall stub5873(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5873(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k34230 */
static C_word C_fcall stub5862(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5862(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k34208 */
static C_word C_fcall stub5851(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5851(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k34188 */
static C_word C_fcall stub5841(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5841(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k34153 */
static C_word C_fcall stub5828(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5828(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k34137 */
static C_word C_fcall stub5820(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5820(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k34109 */
static C_word C_fcall stub5807(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5807(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k34086 */
static C_word C_fcall stub5796(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5796(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k34067 */
static C_word C_fcall stub5785(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5785(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k34044 */
static C_word C_fcall stub5774(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5774(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k34025 */
static C_word C_fcall stub5764(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5764(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
mm_set_chan(t0,t1);
return C_r;}

/* from k34006 */
static C_word C_fcall stub5755(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5755(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_fix((C_word)mm_chan(t0));
return C_r;}

/* from k33991 */
static C_word C_fcall stub5746(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5746(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
double t1=(double )C_c_double(C_a1);
mm_set_time(t0,t1);
return C_r;}

/* from k33972 */
static C_word C_fcall stub5736(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5736(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_flonum(&C_a,mm_time(t0));
return C_r;}

/* from k33957 */
static C_word C_fcall stub5728(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5728(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_mpointer_or_false(&C_a,(void*)mm_copy(t0));
return C_r;}

/* from k33942 */
static C_word C_fcall stub5720(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5720(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mm_free(t0);
return C_r;}

/* from k33924 */
static C_word C_fcall stub5712(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5712(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k33497 */
static C_word C_fcall stub5697(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5697(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k33454 */
static C_word C_fcall stub5618(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5618(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k33027 */
static C_word C_fcall stub5603(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5603(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k32984 */
static C_word C_fcall stub5524(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5524(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k32557 */
static C_word C_fcall stub5509(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5509(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k32514 */
static C_word C_fcall stub5430(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5430(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k31812 */
static C_word C_fcall stub5414(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5414(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k31766 */
static C_word C_fcall stub5298(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5298(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k31064 */
static C_word C_fcall stub5282(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5282(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k31018 */
static C_word C_fcall stub5166(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5166(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k30591 */
static C_word C_fcall stub5151(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5151(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k30548 */
static C_word C_fcall stub5072(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5072(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k29846 */
static C_word C_fcall stub5056(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5056(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k8175 */
static C_word C_fcall stub401(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub401(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::log_two(t0));
return C_r;}

/* from k8168 */
static C_word C_fcall stub396(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub396(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::log_ten(t0));
return C_r;}

/* from k8161 */
static C_word C_fcall stub390(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub390(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,jn(t0,t1));
return C_r;}

/* from tb:ranbrown in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static C_word C_fcall stub383(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub383(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranbrown());
return C_r;}

/* from tb:ranpink in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static C_word C_fcall stub380(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub380(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranpink());
return C_r;}

/* from k8139 */
static C_word C_fcall stub377(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub377(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::ranpoisson(t0));
return C_r;}

/* from tb:rancauchy in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static C_word C_fcall stub373(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub373(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::rancauchy());
return C_r;}

/* from k8129 */
static C_word C_fcall stub369(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub369(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::rangamma(t0));
return C_r;}

/* from k8122 */
static C_word C_fcall stub363(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub363(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ranbeta(t0,t1));
return C_r;}

/* from k8111 */
static C_word C_fcall stub357(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub357(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ranexp(t0));
return C_r;}

/* from k8104 */
static C_word C_fcall stub351(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub351(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::rangauss(t0,t1));
return C_r;}

/* from tb:ranmiddle in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static C_word C_fcall stub346(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub346(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranmiddle());
return C_r;}

/* from tb:ranhigh in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static C_word C_fcall stub343(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub343(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranhigh());
return C_r;}

/* from tb:ranlow in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static C_word C_fcall stub340(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub340(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranlow());
return C_r;}

/* from k8084 */
static C_word C_fcall stub335(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub335(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ran(t0,t1));
return C_r;}

/* from k8073 */
static C_word C_fcall stub329(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub329(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)Toolbox::ran(t0,t1));
return C_r;}

/* from k8062 */
static C_word C_fcall stub323(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub323(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ran(t0));
return C_r;}

/* from k8055 */
static C_word C_fcall stub319(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub319(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)Toolbox::ran(t0));
return C_r;}

/* from tb:ran-set! in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static C_word C_fcall stub315(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub315(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
Toolbox::ranstate_set(t0);
return C_r;}

/* from k8045 */
static C_word C_fcall stub310(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub310(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::hertz_to_keynum(t0));
return C_r;}

/* from k8038 */
static C_word C_fcall stub306(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub306(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::keynum_to_pc(t0));
return C_r;}

/* from k8031 */
static C_word C_fcall stub301(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub301(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::keynum_to_hertz(t0));
return C_r;}

/* from k8024 */
static C_word C_fcall stub293(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub293(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,Toolbox::geoseg(t0,t1,t2,t3));
return C_r;}

/* from k8005 */
static C_word C_fcall stub282(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub282(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,Toolbox::explseg(t0,t1,t2,t3));
return C_r;}

/* from k7986 */
static C_word C_fcall stub275(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub275(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::scaler_to_cents(t0));
return C_r;}

/* from k7979 */
static C_word C_fcall stub270(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub270(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,Toolbox::cents_to_scaler(t0));
return C_r;}

/* from k7972 */
static C_word C_fcall stub263(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub263(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
C_r=C_flonum(&C_a,Toolbox::rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k7957 */
static C_word C_fcall stub255(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub255(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::quantize(t0,t1));
return C_r;}

/* from k7946 */
static C_word C_fcall stub250(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub250(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::float_to_fixnum(t0));
return C_r;}

/* from k7939 */
static C_word C_fcall stub241(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub241(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_fix((C_word)Toolbox::discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k7912 */
static C_word C_fcall stub226(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub226(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_flonum(&C_a,Toolbox::rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k7177 */
static C_word C_fcall stub95(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub95(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
set_current_directory(t0);
return C_r;}

/* from f_7159 in cwd in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static C_word C_fcall stub90(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub90(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)get_current_directory());
return C_r;}

C_noret_decl(C_grace_toplevel)
C_externexport void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6552)
static void C_ccall f_6552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6555)
static void C_ccall f_6555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6558)
static void C_ccall f_6558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6561)
static void C_ccall f_6561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41620)
static void C_ccall f_41620(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_41620)
static void C_ccall f_41620r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6852)
static void C_ccall f_6852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6856)
static void C_ccall f_6856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41568)
static void C_ccall f_41568(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41615)
static void C_ccall f_41615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41605)
static void C_ccall f_41605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41572)
static void C_ccall f_41572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6859)
static void C_ccall f_6859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41562)
static void C_ccall f_41562(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_41562)
static void C_ccall f_41562r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7152)
static void C_ccall f_7152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10414)
static void C_ccall f_10414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41346)
static void C_fcall f_41346(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_41560)
static void C_ccall f_41560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41380)
static void C_ccall f_41380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41392)
static void C_ccall f_41392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41396)
static void C_ccall f_41396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41400)
static void C_ccall f_41400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41544)
static void C_ccall f_41544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41406)
static void C_fcall f_41406(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13) C_noret;
C_noret_decl(f_41426)
static void C_fcall f_41426(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41429)
static void C_fcall f_41429(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41437)
static void C_ccall f_41437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41444)
static void C_ccall f_41444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41447)
static void C_ccall f_41447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41451)
static void C_ccall f_41451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41458)
static void C_ccall f_41458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41461)
static void C_ccall f_41461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41465)
static void C_ccall f_41465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41472)
static void C_ccall f_41472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41416)
static void C_ccall f_41416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41369)
static void C_ccall f_41369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41359)
static void C_ccall f_41359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41362)
static void C_ccall f_41362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10417)
static void C_ccall f_10417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41336)
static void C_ccall f_41336(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41344)
static void C_ccall f_41344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11482)
static void C_ccall f_11482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41322)
static void C_ccall f_41322(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41330)
static void C_ccall f_41330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41334)
static void C_ccall f_41334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22637)
static void C_ccall f_22637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22688)
static void C_ccall f_22688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41312)
static void C_ccall f_41312(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41320)
static void C_ccall f_41320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22793)
static void C_ccall f_22793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41209)
static void C_ccall f_41209(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_41209)
static void C_ccall f_41209r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_41272)
static void C_ccall f_41272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41276)
static void C_ccall f_41276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41290)
static void C_fcall f_41290(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41212)
static void C_fcall f_41212(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_41232)
static void C_ccall f_41232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41236)
static void C_ccall f_41236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22796)
static void C_ccall f_22796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41195)
static void C_ccall f_41195(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41203)
static void C_ccall f_41203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41207)
static void C_ccall f_41207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22989)
static void C_ccall f_22989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41169)
static void C_ccall f_41169(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41173)
static void C_ccall f_41173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41179)
static void C_ccall f_41179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41190)
static void C_ccall f_41190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41186)
static void C_ccall f_41186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23058)
static void C_ccall f_23058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41147)
static void C_ccall f_41147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24303)
static void C_ccall f_24303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41127)
static void C_ccall f_41127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24306)
static void C_ccall f_24306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41087)
static void C_ccall f_41087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24309)
static void C_ccall f_24309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40993)
static void C_ccall f_40993(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40997)
static void C_ccall f_40997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41000)
static void C_ccall f_41000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41018)
static void C_ccall f_41018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41021)
static void C_ccall f_41021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41052)
static void C_ccall f_41052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41024)
static void C_fcall f_41024(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41030)
static void C_ccall f_41030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40983)
static void C_ccall f_40983(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40977)
static void C_ccall f_40977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24312)
static void C_ccall f_24312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40885)
static void C_ccall f_40885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40887)
static void C_ccall f_40887(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40891)
static void C_ccall f_40891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40894)
static void C_ccall f_40894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40897)
static void C_ccall f_40897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40937)
static void C_ccall f_40937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40929)
static void C_ccall f_40929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40900)
static void C_ccall f_40900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40903)
static void C_ccall f_40903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40906)
static void C_ccall f_40906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40877)
static void C_ccall f_40877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24315)
static void C_ccall f_24315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40849)
static void C_ccall f_40849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24318)
static void C_ccall f_24318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40813)
static void C_ccall f_40813(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40825)
static void C_ccall f_40825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40821)
static void C_ccall f_40821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40795)
static void C_ccall f_40795(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40789)
static void C_ccall f_40789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24321)
static void C_ccall f_24321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40703)
static void C_ccall f_40703(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40707)
static void C_ccall f_40707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40710)
static void C_ccall f_40710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40713)
static void C_ccall f_40713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40726)
static void C_ccall f_40726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40672)
static void C_ccall f_40672(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40676)
static void C_ccall f_40676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40691)
static void C_ccall f_40691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40666)
static void C_ccall f_40666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24324)
static void C_ccall f_24324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40552)
static void C_ccall f_40552(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40568)
static void C_ccall f_40568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40579)
static void C_ccall f_40579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40546)
static void C_ccall f_40546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24380)
static void C_ccall f_24380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40413)
static void C_ccall f_40413(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40436)
static void C_ccall f_40436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40433)
static void C_ccall f_40433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40407)
static void C_ccall f_40407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24383)
static void C_ccall f_24383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40261)
static void C_ccall f_40261(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40279)
static void C_ccall f_40279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40288)
static void C_ccall f_40288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40255)
static void C_ccall f_40255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24386)
static void C_ccall f_24386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40208)
static void C_ccall f_40208(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40212)
static void C_ccall f_40212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40215)
static void C_ccall f_40215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40231)
static void C_ccall f_40231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40190)
static void C_ccall f_40190(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40184)
static void C_ccall f_40184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24389)
static void C_ccall f_24389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40108)
static void C_ccall f_40108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24528)
static void C_ccall f_24528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40034)
static void C_ccall f_40034(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40041)
static void C_ccall f_40041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40028)
static void C_ccall f_40028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24531)
static void C_ccall f_24531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39924)
static void C_ccall f_39924(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39932)
static void C_ccall f_39932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39898)
static void C_ccall f_39898(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39915)
static void C_ccall f_39915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39906)
static void C_fcall f_39906(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39892)
static void C_ccall f_39892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24534)
static void C_ccall f_24534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39848)
static void C_ccall f_39848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24537)
static void C_ccall f_24537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39766)
static void C_ccall f_39766(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39777)
static void C_ccall f_39777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39779)
static void C_fcall f_39779(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39808)
static void C_ccall f_39808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39744)
static void C_ccall f_39744(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39760)
static void C_ccall f_39760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39738)
static void C_ccall f_39738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24540)
static void C_ccall f_24540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39691)
static void C_ccall f_39691(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39695)
static void C_ccall f_39695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39702)
static void C_ccall f_39702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39669)
static void C_ccall f_39669(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39685)
static void C_ccall f_39685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39663)
static void C_ccall f_39663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24543)
static void C_ccall f_24543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39531)
static void C_ccall f_39531(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39571)
static void C_ccall f_39571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39535)
static void C_ccall f_39535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39551)
static void C_ccall f_39551(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_39551)
static void C_ccall f_39551r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_39563)
static void C_ccall f_39563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39567)
static void C_ccall f_39567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39559)
static void C_ccall f_39559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39456)
static void C_ccall f_39456(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39499)
static void C_ccall f_39499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39503)
static void C_ccall f_39503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39463)
static void C_fcall f_39463(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39474)
static void C_ccall f_39474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39450)
static void C_ccall f_39450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24546)
static void C_ccall f_24546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39430)
static void C_ccall f_39430(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39424)
static void C_ccall f_39424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24549)
static void C_ccall f_24549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39404)
static void C_ccall f_39404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39408)
static void C_ccall f_39408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39396)
static void C_ccall f_39396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24552)
static void C_ccall f_24552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39376)
static void C_ccall f_39376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39380)
static void C_ccall f_39380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39368)
static void C_ccall f_39368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24555)
static void C_ccall f_24555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39348)
static void C_ccall f_39348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39352)
static void C_ccall f_39352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39340)
static void C_ccall f_39340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24558)
static void C_ccall f_24558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39320)
static void C_ccall f_39320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39324)
static void C_ccall f_39324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39312)
static void C_ccall f_39312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24561)
static void C_ccall f_24561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39211)
static void C_ccall f_39211(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39181)
static void C_ccall f_39181(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39205)
static void C_ccall f_39205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39175)
static void C_ccall f_39175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24564)
static void C_ccall f_24564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39125)
static void C_ccall f_39125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39127)
static void C_ccall f_39127(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39131)
static void C_ccall f_39131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39159)
static void C_ccall f_39159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39151)
static void C_ccall f_39151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39147)
static void C_ccall f_39147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39134)
static void C_ccall f_39134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39117)
static void C_ccall f_39117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24567)
static void C_ccall f_24567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39064)
static void C_ccall f_39064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39066)
static void C_ccall f_39066(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39070)
static void C_ccall f_39070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39101)
static void C_ccall f_39101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39093)
static void C_ccall f_39093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39089)
static void C_ccall f_39089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39073)
static void C_ccall f_39073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39076)
static void C_ccall f_39076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39056)
static void C_ccall f_39056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24570)
static void C_ccall f_24570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39006)
static void C_ccall f_39006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39020)
static void C_ccall f_39020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39012)
static void C_ccall f_39012(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38971)
static void C_ccall f_38971(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39004)
static void C_ccall f_39004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38965)
static void C_ccall f_38965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24573)
static void C_ccall f_24573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38912)
static void C_ccall f_38912(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38916)
static void C_ccall f_38916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38929)
static void C_ccall f_38929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38921)
static void C_ccall f_38921(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38869)
static void C_ccall f_38869(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38902)
static void C_ccall f_38902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38863)
static void C_ccall f_38863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24576)
static void C_ccall f_24576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38783)
static void C_ccall f_38783(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38777)
static void C_ccall f_38777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24579)
static void C_ccall f_24579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38546)
static void C_ccall f_38546(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38550)
static void C_ccall f_38550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38558)
static void C_fcall f_38558(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38581)
static void C_ccall f_38581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38584)
static void C_ccall f_38584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38587)
static void C_ccall f_38587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38590)
static void C_ccall f_38590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38650)
static void C_ccall f_38650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38657)
static void C_ccall f_38657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38667)
static void C_ccall f_38667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38677)
static void C_ccall f_38677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38691)
static void C_ccall f_38691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38701)
static void C_ccall f_38701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38711)
static void C_ccall f_38711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38721)
static void C_ccall f_38721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38593)
static void C_fcall f_38593(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38617)
static void C_fcall f_38617(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38596)
static void C_fcall f_38596(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38503)
static void C_ccall f_38503(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38536)
static void C_ccall f_38536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38497)
static void C_ccall f_38497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24582)
static void C_ccall f_24582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38415)
static void C_ccall f_38415(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38419)
static void C_ccall f_38419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38425)
static void C_ccall f_38425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38445)
static void C_ccall f_38445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38389)
static void C_ccall f_38389(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38399)
static void C_fcall f_38399(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38383)
static void C_ccall f_38383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24585)
static void C_ccall f_24585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38198)
static void C_ccall f_38198(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38202)
static void C_ccall f_38202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38208)
static void C_ccall f_38208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38217)
static void C_ccall f_38217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38255)
static void C_ccall f_38255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38247)
static void C_ccall f_38247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38224)
static void C_ccall f_38224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38228)
static void C_ccall f_38228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38130)
static void C_ccall f_38130(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38149)
static void C_ccall f_38149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38184)
static void C_ccall f_38184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38155)
static void C_fcall f_38155(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38159)
static void C_ccall f_38159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38173)
static void C_ccall f_38173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38162)
static void C_fcall f_38162(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38143)
static void C_fcall f_38143(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38124)
static void C_ccall f_38124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24588)
static void C_ccall f_24588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37852)
static void C_ccall f_37852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25111)
static void C_ccall f_25111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37804)
static void C_ccall f_37804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37796)
static void C_ccall f_37796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25114)
static void C_ccall f_25114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37676)
static void C_ccall f_37676(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25120)
static void C_ccall f_25120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25656)
static void C_ccall f_25656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25690)
static void C_ccall f_25690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25682)
static void C_ccall f_25682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25678)
static void C_ccall f_25678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25663)
static void C_ccall f_25663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25667)
static void C_ccall f_25667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25660)
static void C_ccall f_25660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25138)
static void C_fcall f_25138(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25649)
static void C_ccall f_25649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25645)
static void C_ccall f_25645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25145)
static void C_fcall f_25145(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25520)
static void C_fcall f_25520(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25541)
static void C_ccall f_25541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25543)
static void C_fcall f_25543(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25557)
static void C_ccall f_25557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25610)
static void C_ccall f_25610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25560)
static void C_fcall f_25560(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25595)
static void C_ccall f_25595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25563)
static void C_fcall f_25563(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25576)
static void C_ccall f_25576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25588)
static void C_ccall f_25588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25580)
static void C_ccall f_25580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25566)
static void C_fcall f_25566(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25530)
static void C_ccall f_25530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25148)
static void C_ccall f_25148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25484)
static void C_fcall f_25484(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25510)
static void C_ccall f_25510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25495)
static void C_ccall f_25495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25154)
static void C_ccall f_25154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25158)
static void C_ccall f_25158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25361)
static void C_ccall f_25361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25365)
static void C_ccall f_25365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25369)
static void C_ccall f_25369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25412)
static void C_fcall f_25412(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25422)
static void C_ccall f_25422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25425)
static void C_ccall f_25425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25446)
static void C_ccall f_25446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25428)
static void C_fcall f_25428(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25432)
static void C_ccall f_25432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25372)
static void C_ccall f_25372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25375)
static void C_fcall f_25375(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25161)
static void C_fcall f_25161(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25165)
static void C_ccall f_25165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25168)
static void C_fcall f_25168(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25321)
static void C_ccall f_25321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25329)
static void C_ccall f_25329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25325)
static void C_ccall f_25325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25171)
static void C_fcall f_25171(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25199)
static void C_ccall f_25199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25202)
static void C_ccall f_25202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25205)
static void C_ccall f_25205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25208)
static void C_ccall f_25208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25211)
static void C_ccall f_25211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25270)
static void C_ccall f_25270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37630)
static void C_ccall f_37630(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37646)
static void C_ccall f_37646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37649)
static void C_ccall f_37649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37652)
static void C_fcall f_37652(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37655)
static void C_fcall f_37655(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37666)
static void C_ccall f_37666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37624)
static void C_ccall f_37624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25697)
static void C_ccall f_25697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37485)
static void C_ccall f_37485(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37524)
static void C_ccall f_37524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37498)
static void C_fcall f_37498(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37479)
static void C_ccall f_37479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25700)
static void C_ccall f_25700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37067)
static void C_ccall f_37067(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37071)
static void C_ccall f_37071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37083)
static void C_ccall f_37083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37141)
static void C_ccall f_37141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37144)
static void C_ccall f_37144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37147)
static void C_ccall f_37147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37359)
static void C_ccall f_37359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37297)
static void C_ccall f_37297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37331)
static void C_ccall f_37331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37306)
static void C_fcall f_37306(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37317)
static void C_ccall f_37317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37313)
static void C_ccall f_37313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37156)
static void C_fcall f_37156(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37234)
static void C_ccall f_37234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37275)
static void C_ccall f_37275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37279)
static void C_ccall f_37279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37283)
static void C_ccall f_37283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37238)
static void C_ccall f_37238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37242)
static void C_ccall f_37242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37269)
static void C_ccall f_37269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37245)
static void C_fcall f_37245(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37159)
static void C_fcall f_37159(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37231)
static void C_ccall f_37231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37173)
static void C_ccall f_37173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37175)
static void C_fcall f_37175(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37223)
static void C_ccall f_37223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37194)
static void C_ccall f_37194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37211)
static void C_ccall f_37211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37197)
static void C_fcall f_37197(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37190)
static void C_ccall f_37190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37162)
static void C_ccall f_37162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37092)
static void C_fcall f_37092(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37102)
static void C_ccall f_37102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37108)
static void C_ccall f_37108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37080)
static void C_ccall f_37080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37028)
static void C_ccall f_37028(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37045)
static void C_ccall f_37045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37061)
static void C_ccall f_37061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37039)
static void C_fcall f_37039(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37022)
static void C_ccall f_37022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25703)
static void C_ccall f_25703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36946)
static void C_ccall f_36946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25706)
static void C_ccall f_25706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36922)
static void C_ccall f_36922(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36934)
static void C_ccall f_36934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36930)
static void C_ccall f_36930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36908)
static void C_ccall f_36908(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36916)
static void C_ccall f_36916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36902)
static void C_ccall f_36902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25709)
static void C_ccall f_25709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36894)
static void C_ccall f_36894(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29487)
static void C_ccall f_29487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29490)
static void C_ccall f_29490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29656)
static void C_ccall f_29656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29652)
static void C_ccall f_29652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29642)
static void C_fcall f_29642(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29497)
static void C_ccall f_29497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29501)
static void C_ccall f_29501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29504)
static void C_fcall f_29504(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29515)
static void C_ccall f_29515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29523)
static void C_ccall f_29523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29595)
static void C_ccall f_29595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29603)
static void C_ccall f_29603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29599)
static void C_ccall f_29599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29591)
static void C_ccall f_29591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29587)
static void C_ccall f_29587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29559)
static void C_ccall f_29559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29555)
static void C_ccall f_29555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29519)
static void C_ccall f_29519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26134)
static void C_ccall f_26134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36880)
static void C_ccall f_36880(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26137)
static void C_ccall f_26137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36851)
static void C_ccall f_36851(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36855)
static void C_ccall f_36855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26140)
static void C_ccall f_26140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36848)
static void C_ccall f_36848(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26143)
static void C_ccall f_26143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36706)
static void C_ccall f_36706(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29669)
static void C_ccall f_29669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29801)
static void C_ccall f_29801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29672)
static void C_ccall f_29672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29683)
static void C_ccall f_29683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29691)
static void C_ccall f_29691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29715)
static void C_ccall f_29715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29718)
static void C_fcall f_29718(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29726)
static void C_ccall f_29726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29734)
static void C_ccall f_29734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29754)
static void C_ccall f_29754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29750)
static void C_ccall f_29750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29730)
static void C_ccall f_29730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29722)
static void C_ccall f_29722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29711)
static void C_ccall f_29711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29687)
static void C_ccall f_29687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29663)
static void C_ccall f_29663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34699)
static void C_ccall f_34699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34702)
static void C_ccall f_34702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34705)
static void C_ccall f_34705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34708)
static void C_ccall f_34708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34711)
static void C_ccall f_34711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34714)
static void C_ccall f_34714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34717)
static void C_ccall f_34717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34720)
static void C_ccall f_34720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34723)
static void C_ccall f_34723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34726)
static void C_ccall f_34726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34729)
static void C_ccall f_34729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34732)
static void C_ccall f_34732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34735)
static void C_ccall f_34735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34738)
static void C_ccall f_34738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34741)
static void C_ccall f_34741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34744)
static void C_ccall f_34744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34747)
static void C_ccall f_34747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34750)
static void C_ccall f_34750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35606)
static void C_ccall f_35606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35609)
static void C_ccall f_35609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35612)
static void C_ccall f_35612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35615)
static void C_ccall f_35615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35618)
static void C_ccall f_35618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35621)
static void C_ccall f_35621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35624)
static void C_ccall f_35624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35627)
static void C_ccall f_35627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36643)
static void C_fcall f_36643(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36671)
static void C_fcall f_36671(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36310)
static void C_ccall f_36310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36637)
static void C_ccall f_36637(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36355)
static void C_ccall f_36355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36361)
static void C_ccall f_36361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36364)
static void C_ccall f_36364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36367)
static void C_ccall f_36367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36371)
static void C_ccall f_36371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36581)
static void C_ccall f_36581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36593)
static void C_ccall f_36593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36589)
static void C_ccall f_36589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36374)
static void C_fcall f_36374(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36538)
static void C_fcall f_36538(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36574)
static void C_ccall f_36574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36567)
static void C_ccall f_36567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36377)
static void C_ccall f_36377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36476)
static void C_ccall f_36476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36484)
static void C_ccall f_36484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36480)
static void C_ccall f_36480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36472)
static void C_ccall f_36472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36468)
static void C_ccall f_36468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36424)
static void C_ccall f_36424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36420)
static void C_ccall f_36420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36387)
static void C_fcall f_36387(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36398)
static void C_ccall f_36398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36406)
static void C_ccall f_36406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36402)
static void C_ccall f_36402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36600)
static void C_ccall f_36600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36608)
static void C_ccall f_36608(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_36608)
static void C_ccall f_36608r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_36622)
static void C_fcall f_36622(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36612)
static void C_ccall f_36612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36603)
static void C_ccall f_36603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36606)
static void C_ccall f_36606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36312)
static void C_fcall f_36312(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36328)
static void C_ccall f_36328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36239)
static void C_ccall f_36239(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36250)
static void C_ccall f_36250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36253)
static void C_fcall f_36253(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36260)
static void C_ccall f_36260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36229)
static void C_ccall f_36229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35908)
static void C_ccall f_35908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36233)
static void C_ccall f_36233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36171)
static void C_ccall f_36171(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_36171)
static void C_ccall f_36171r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_36189)
static void C_fcall f_36189(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36199)
static void C_ccall f_36199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36175)
static void C_ccall f_36175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36162)
static void C_ccall f_36162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35886)
static void C_ccall f_35886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36166)
static void C_ccall f_36166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36156)
static void C_ccall f_36156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35868)
static void C_ccall f_35868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36147)
static void C_ccall f_36147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35877)
static void C_ccall f_35877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36151)
static void C_ccall f_36151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36144)
static void C_ccall f_36144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35932)
static void C_ccall f_35932(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_35932)
static void C_ccall f_35932r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_36096)
static void C_fcall f_36096(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36091)
static void C_fcall f_36091(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35934)
static void C_fcall f_35934(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36083)
static void C_ccall f_36083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36087)
static void C_ccall f_36087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36079)
static void C_ccall f_36079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36039)
static void C_fcall f_36039(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36049)
static void C_ccall f_36049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36003)
static void C_ccall f_36003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36008)
static void C_fcall f_36008(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36033)
static void C_ccall f_36033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36037)
static void C_ccall f_36037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36018)
static void C_ccall f_36018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35994)
static void C_ccall f_35994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35964)
static void C_fcall f_35964(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35936)
static void C_fcall f_35936(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35913)
static void C_ccall f_35913(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35918)
static void C_ccall f_35918(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35923)
static void C_ccall f_35923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35891)
static void C_fcall f_35891(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35895)
static void C_ccall f_35895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35847)
static void C_fcall f_35847(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35851)
static void C_ccall f_35851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35833)
static void C_ccall f_35833(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35838)
static void C_ccall f_35838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35819)
static void C_ccall f_35819(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35824)
static void C_ccall f_35824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35629)
static void C_ccall f_35629(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35690)
static void C_ccall f_35690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35692)
static void C_fcall f_35692(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35702)
static void C_ccall f_35702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35721)
static void C_fcall f_35721(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35761)
static void C_ccall f_35761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35803)
static void C_ccall f_35803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35773)
static void C_ccall f_35773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35758)
static void C_fcall f_35758(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35676)
static void C_ccall f_35676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35641)
static void C_ccall f_35641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35668)
static void C_ccall f_35668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35649)
static void C_ccall f_35649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35656)
static void C_ccall f_35656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35660)
static void C_ccall f_35660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35664)
static void C_ccall f_35664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35741)
static void C_ccall f_35741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35719)
static void C_ccall f_35719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35705)
static void C_ccall f_35705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35708)
static void C_ccall f_35708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35683)
static void C_ccall f_35683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35155)
static void C_ccall f_35155(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35155)
static void C_ccall f_35155r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35582)
static void C_ccall f_35582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35597)
static void C_ccall f_35597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35589)
static void C_ccall f_35589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35553)
static void C_ccall f_35553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35557)
static void C_ccall f_35557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35518)
static void C_ccall f_35518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35522)
static void C_ccall f_35522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35483)
static void C_ccall f_35483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35487)
static void C_ccall f_35487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35159)
static void C_fcall f_35159(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35447)
static void C_ccall f_35447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35462)
static void C_ccall f_35462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35454)
static void C_ccall f_35454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35418)
static void C_ccall f_35418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35422)
static void C_ccall f_35422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35383)
static void C_ccall f_35383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35387)
static void C_ccall f_35387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35348)
static void C_ccall f_35348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35352)
static void C_ccall f_35352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35162)
static void C_fcall f_35162(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35312)
static void C_ccall f_35312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35327)
static void C_ccall f_35327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35319)
static void C_ccall f_35319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35283)
static void C_ccall f_35283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35287)
static void C_ccall f_35287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35248)
static void C_ccall f_35248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35252)
static void C_ccall f_35252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35213)
static void C_ccall f_35213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35217)
static void C_ccall f_35217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35165)
static void C_fcall f_35165(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35168)
static void C_ccall f_35168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35171)
static void C_fcall f_35171(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35175)
static void C_ccall f_35175(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34917)
static void C_ccall f_34917(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34917)
static void C_ccall f_34917r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35132)
static void C_ccall f_35132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35147)
static void C_ccall f_35147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35139)
static void C_ccall f_35139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35103)
static void C_ccall f_35103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35107)
static void C_ccall f_35107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35068)
static void C_ccall f_35068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35072)
static void C_ccall f_35072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34921)
static void C_fcall f_34921(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35032)
static void C_ccall f_35032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35047)
static void C_ccall f_35047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35039)
static void C_ccall f_35039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35003)
static void C_ccall f_35003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35007)
static void C_ccall f_35007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34968)
static void C_ccall f_34968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34972)
static void C_ccall f_34972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34924)
static void C_fcall f_34924(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34927)
static void C_ccall f_34927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34930)
static void C_fcall f_34930(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34934)
static void C_ccall f_34934(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34860)
static void C_ccall f_34860(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34860)
static void C_ccall f_34860r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34893)
static void C_fcall f_34893(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34873)
static void C_fcall f_34873(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34881)
static void C_ccall f_34881(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34864)
static void C_ccall f_34864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34803)
static void C_ccall f_34803(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34803)
static void C_ccall f_34803r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34836)
static void C_fcall f_34836(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34816)
static void C_fcall f_34816(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34824)
static void C_ccall f_34824(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34807)
static void C_ccall f_34807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34795)
static void C_ccall f_34795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34800)
static void C_ccall f_34800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34752)
static void C_ccall f_34752(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34779)
static void C_ccall f_34779(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34773)
static void C_ccall f_34773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34777)
static void C_ccall f_34777(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34763)
static void C_ccall f_34763(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34678)
static void C_ccall f_34678(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34678)
static void C_ccall f_34678r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34689)
static void C_ccall f_34689(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34685)
static void C_ccall f_34685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34667)
static void C_ccall f_34667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34675)
static void C_ccall f_34675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34671)
static void C_ccall f_34671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34656)
static void C_ccall f_34656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34664)
static void C_ccall f_34664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34660)
static void C_ccall f_34660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34645)
static void C_ccall f_34645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34653)
static void C_ccall f_34653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34649)
static void C_ccall f_34649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34634)
static void C_ccall f_34634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34642)
static void C_ccall f_34642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34638)
static void C_ccall f_34638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34623)
static void C_ccall f_34623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34631)
static void C_ccall f_34631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34627)
static void C_ccall f_34627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34584)
static void C_ccall f_34584(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34584)
static void C_ccall f_34584r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34597)
static void C_ccall f_34597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34601)
static void C_ccall f_34601(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34591)
static void C_ccall f_34591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34527)
static void C_ccall f_34527(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34581)
static void C_ccall f_34581(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34576)
static void C_ccall f_34576(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34539)
static void C_ccall f_34539(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34545)
static void C_ccall f_34545(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34571)
static void C_ccall f_34571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34575)
static void C_ccall f_34575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34551)
static void C_ccall f_34551(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34569)
static void C_ccall f_34569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34566)
static void C_ccall f_34566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34562)
static void C_ccall f_34562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34555)
static void C_ccall f_34555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34512)
static void C_ccall f_34512(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34517)
static void C_ccall f_34517(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34484)
static void C_ccall f_34484(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34489)
static void C_ccall f_34489(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34456)
static void C_ccall f_34456(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34461)
static void C_ccall f_34461(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34428)
static void C_ccall f_34428(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34433)
static void C_ccall f_34433(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34400)
static void C_ccall f_34400(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_34405)
static void C_ccall f_34405(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34372)
static void C_ccall f_34372(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_34377)
static void C_ccall f_34377(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34344)
static void C_ccall f_34344(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_34349)
static void C_ccall f_34349(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34316)
static void C_ccall f_34316(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34321)
static void C_ccall f_34321(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34288)
static void C_ccall f_34288(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34293)
static void C_ccall f_34293(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34260)
static void C_ccall f_34260(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34265)
static void C_ccall f_34265(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34237)
static void C_ccall f_34237(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34242)
static void C_ccall f_34242(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34241)
static void C_ccall f_34241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34218)
static void C_ccall f_34218(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34223)
static void C_ccall f_34223(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34163)
static void C_ccall f_34163(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34170)
static void C_ccall f_34170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34173)
static void C_ccall f_34173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34197)
static void C_ccall f_34197(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34177)
static void C_ccall f_34177(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34167)
static void C_ccall f_34167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34116)
static void C_ccall f_34116(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34123)
static void C_ccall f_34123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34126)
static void C_ccall f_34126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34146)
static void C_ccall f_34146(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34130)
static void C_ccall f_34130(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34093)
static void C_ccall f_34093(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34098)
static void C_ccall f_34098(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34097)
static void C_ccall f_34097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34074)
static void C_ccall f_34074(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34079)
static void C_ccall f_34079(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34051)
static void C_ccall f_34051(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34056)
static void C_ccall f_34056(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34055)
static void C_ccall f_34055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34032)
static void C_ccall f_34032(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34037)
static void C_ccall f_34037(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34013)
static void C_ccall f_34013(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34018)
static void C_ccall f_34018(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34017)
static void C_ccall f_34017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33998)
static void C_ccall f_33998(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34003)
static void C_ccall f_34003(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33979)
static void C_ccall f_33979(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33984)
static void C_ccall f_33984(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33983)
static void C_ccall f_33983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33964)
static void C_ccall f_33964(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33969)
static void C_ccall f_33969(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33949)
static void C_ccall f_33949(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33954)
static void C_ccall f_33954(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33931)
static void C_ccall f_33931(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33939)
static void C_ccall f_33939(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33935)
static void C_ccall f_33935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33461)
static void C_ccall f_33461(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_33461)
static void C_ccall f_33461r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_33889)
static void C_ccall f_33889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33904)
static void C_ccall f_33904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33896)
static void C_ccall f_33896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33860)
static void C_ccall f_33860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33864)
static void C_ccall f_33864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33825)
static void C_ccall f_33825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33829)
static void C_ccall f_33829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33790)
static void C_ccall f_33790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33794)
static void C_ccall f_33794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33465)
static void C_fcall f_33465(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33754)
static void C_ccall f_33754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33769)
static void C_ccall f_33769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33761)
static void C_ccall f_33761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33725)
static void C_ccall f_33725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33729)
static void C_ccall f_33729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33690)
static void C_ccall f_33690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33694)
static void C_ccall f_33694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33655)
static void C_ccall f_33655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33659)
static void C_ccall f_33659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33468)
static void C_fcall f_33468(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33619)
static void C_ccall f_33619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33634)
static void C_ccall f_33634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33626)
static void C_ccall f_33626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33590)
static void C_ccall f_33590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33594)
static void C_ccall f_33594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33555)
static void C_ccall f_33555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33559)
static void C_ccall f_33559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33520)
static void C_ccall f_33520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33524)
static void C_ccall f_33524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33471)
static void C_fcall f_33471(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33474)
static void C_ccall f_33474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33478)
static void C_ccall f_33478(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33442)
static void C_ccall f_33442(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33447)
static void C_ccall f_33447(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32991)
static void C_ccall f_32991(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32991)
static void C_ccall f_32991r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_33419)
static void C_ccall f_33419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33434)
static void C_ccall f_33434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33426)
static void C_ccall f_33426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33390)
static void C_ccall f_33390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33394)
static void C_ccall f_33394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33355)
static void C_ccall f_33355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33359)
static void C_ccall f_33359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33320)
static void C_ccall f_33320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33324)
static void C_ccall f_33324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32995)
static void C_fcall f_32995(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33284)
static void C_ccall f_33284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33299)
static void C_ccall f_33299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33291)
static void C_ccall f_33291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33255)
static void C_ccall f_33255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33259)
static void C_ccall f_33259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33220)
static void C_ccall f_33220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33224)
static void C_ccall f_33224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33185)
static void C_ccall f_33185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33189)
static void C_ccall f_33189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32998)
static void C_fcall f_32998(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33149)
static void C_ccall f_33149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33164)
static void C_ccall f_33164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33156)
static void C_ccall f_33156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33120)
static void C_ccall f_33120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33124)
static void C_ccall f_33124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33085)
static void C_ccall f_33085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33089)
static void C_ccall f_33089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33050)
static void C_ccall f_33050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33054)
static void C_ccall f_33054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33001)
static void C_fcall f_33001(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33004)
static void C_ccall f_33004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33008)
static void C_ccall f_33008(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_32972)
static void C_ccall f_32972(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32977)
static void C_ccall f_32977(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32521)
static void C_ccall f_32521(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32521)
static void C_ccall f_32521r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32949)
static void C_ccall f_32949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32964)
static void C_ccall f_32964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32956)
static void C_ccall f_32956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32920)
static void C_ccall f_32920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32924)
static void C_ccall f_32924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32885)
static void C_ccall f_32885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32889)
static void C_ccall f_32889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32850)
static void C_ccall f_32850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32854)
static void C_ccall f_32854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32525)
static void C_fcall f_32525(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32814)
static void C_ccall f_32814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32829)
static void C_ccall f_32829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32821)
static void C_ccall f_32821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32785)
static void C_ccall f_32785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32789)
static void C_ccall f_32789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32750)
static void C_ccall f_32750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32754)
static void C_ccall f_32754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32715)
static void C_ccall f_32715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32719)
static void C_ccall f_32719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32528)
static void C_fcall f_32528(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32679)
static void C_ccall f_32679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32694)
static void C_ccall f_32694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32686)
static void C_ccall f_32686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32650)
static void C_ccall f_32650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32654)
static void C_ccall f_32654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32615)
static void C_ccall f_32615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32619)
static void C_ccall f_32619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32580)
static void C_ccall f_32580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32584)
static void C_ccall f_32584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32531)
static void C_fcall f_32531(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32534)
static void C_ccall f_32534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32538)
static void C_ccall f_32538(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_32502)
static void C_ccall f_32502(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32507)
static void C_ccall f_32507(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31773)
static void C_ccall f_31773(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_31773)
static void C_ccall f_31773r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32479)
static void C_ccall f_32479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32494)
static void C_ccall f_32494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32486)
static void C_ccall f_32486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32450)
static void C_ccall f_32450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32454)
static void C_ccall f_32454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32415)
static void C_ccall f_32415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32419)
static void C_ccall f_32419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32380)
static void C_ccall f_32380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32384)
static void C_ccall f_32384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32345)
static void C_ccall f_32345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32349)
static void C_ccall f_32349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31777)
static void C_fcall f_31777(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32309)
static void C_ccall f_32309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32324)
static void C_ccall f_32324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32316)
static void C_ccall f_32316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32280)
static void C_ccall f_32280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32284)
static void C_ccall f_32284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32245)
static void C_ccall f_32245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32249)
static void C_ccall f_32249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32210)
static void C_ccall f_32210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32214)
static void C_ccall f_32214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32175)
static void C_ccall f_32175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32179)
static void C_ccall f_32179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31780)
static void C_fcall f_31780(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32139)
static void C_ccall f_32139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32154)
static void C_ccall f_32154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32146)
static void C_ccall f_32146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32110)
static void C_ccall f_32110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32114)
static void C_ccall f_32114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32075)
static void C_ccall f_32075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32079)
static void C_ccall f_32079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32040)
static void C_ccall f_32040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32044)
static void C_ccall f_32044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32005)
static void C_ccall f_32005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32009)
static void C_ccall f_32009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31783)
static void C_fcall f_31783(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31969)
static void C_ccall f_31969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31984)
static void C_ccall f_31984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31976)
static void C_ccall f_31976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31940)
static void C_ccall f_31940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31944)
static void C_ccall f_31944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31905)
static void C_ccall f_31905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31909)
static void C_ccall f_31909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31870)
static void C_ccall f_31870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31874)
static void C_ccall f_31874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31835)
static void C_ccall f_31835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31839)
static void C_ccall f_31839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31786)
static void C_fcall f_31786(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31789)
static void C_ccall f_31789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31793)
static void C_ccall f_31793(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31754)
static void C_ccall f_31754(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31759)
static void C_ccall f_31759(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31025)
static void C_ccall f_31025(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_31025)
static void C_ccall f_31025r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_31731)
static void C_ccall f_31731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31746)
static void C_ccall f_31746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31738)
static void C_ccall f_31738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31702)
static void C_ccall f_31702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31706)
static void C_ccall f_31706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31667)
static void C_ccall f_31667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31671)
static void C_ccall f_31671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31632)
static void C_ccall f_31632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31636)
static void C_ccall f_31636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31597)
static void C_ccall f_31597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31601)
static void C_ccall f_31601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31029)
static void C_fcall f_31029(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31561)
static void C_ccall f_31561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31576)
static void C_ccall f_31576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31568)
static void C_ccall f_31568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31532)
static void C_ccall f_31532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31536)
static void C_ccall f_31536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31497)
static void C_ccall f_31497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31501)
static void C_ccall f_31501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31462)
static void C_ccall f_31462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31466)
static void C_ccall f_31466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31427)
static void C_ccall f_31427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31431)
static void C_ccall f_31431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31032)
static void C_fcall f_31032(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31391)
static void C_ccall f_31391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31406)
static void C_ccall f_31406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31398)
static void C_ccall f_31398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31362)
static void C_ccall f_31362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31366)
static void C_ccall f_31366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31327)
static void C_ccall f_31327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31331)
static void C_ccall f_31331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31292)
static void C_ccall f_31292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31296)
static void C_ccall f_31296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31257)
static void C_ccall f_31257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31261)
static void C_ccall f_31261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31035)
static void C_fcall f_31035(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31221)
static void C_ccall f_31221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31236)
static void C_ccall f_31236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31228)
static void C_ccall f_31228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31192)
static void C_ccall f_31192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31196)
static void C_ccall f_31196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31157)
static void C_ccall f_31157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31161)
static void C_ccall f_31161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31122)
static void C_ccall f_31122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31126)
static void C_ccall f_31126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31087)
static void C_ccall f_31087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31091)
static void C_ccall f_31091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31038)
static void C_fcall f_31038(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31041)
static void C_ccall f_31041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31045)
static void C_ccall f_31045(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31006)
static void C_ccall f_31006(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31011)
static void C_ccall f_31011(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30555)
static void C_ccall f_30555(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_30555)
static void C_ccall f_30555r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_30983)
static void C_ccall f_30983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30998)
static void C_ccall f_30998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30990)
static void C_ccall f_30990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30954)
static void C_ccall f_30954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30958)
static void C_ccall f_30958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30919)
static void C_ccall f_30919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30923)
static void C_ccall f_30923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30884)
static void C_ccall f_30884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30888)
static void C_ccall f_30888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30559)
static void C_fcall f_30559(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30848)
static void C_ccall f_30848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30863)
static void C_ccall f_30863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30855)
static void C_ccall f_30855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30819)
static void C_ccall f_30819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30823)
static void C_ccall f_30823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30784)
static void C_ccall f_30784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30788)
static void C_ccall f_30788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30749)
static void C_ccall f_30749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30753)
static void C_ccall f_30753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30562)
static void C_fcall f_30562(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30713)
static void C_ccall f_30713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30728)
static void C_ccall f_30728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30720)
static void C_ccall f_30720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30684)
static void C_ccall f_30684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30688)
static void C_ccall f_30688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30649)
static void C_ccall f_30649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30653)
static void C_ccall f_30653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30614)
static void C_ccall f_30614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30618)
static void C_ccall f_30618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30565)
static void C_fcall f_30565(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30568)
static void C_ccall f_30568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30572)
static void C_ccall f_30572(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_30536)
static void C_ccall f_30536(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30541)
static void C_ccall f_30541(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29807)
static void C_ccall f_29807(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_29807)
static void C_ccall f_29807r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_30513)
static void C_ccall f_30513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30528)
static void C_ccall f_30528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30520)
static void C_ccall f_30520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30484)
static void C_ccall f_30484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30488)
static void C_ccall f_30488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30449)
static void C_ccall f_30449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30453)
static void C_ccall f_30453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30414)
static void C_ccall f_30414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30418)
static void C_ccall f_30418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30379)
static void C_ccall f_30379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30383)
static void C_ccall f_30383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29811)
static void C_fcall f_29811(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30343)
static void C_ccall f_30343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30358)
static void C_ccall f_30358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30350)
static void C_ccall f_30350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30314)
static void C_ccall f_30314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30318)
static void C_ccall f_30318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30279)
static void C_ccall f_30279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30283)
static void C_ccall f_30283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30244)
static void C_ccall f_30244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30248)
static void C_ccall f_30248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30209)
static void C_ccall f_30209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30213)
static void C_ccall f_30213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29814)
static void C_fcall f_29814(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30173)
static void C_ccall f_30173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30188)
static void C_ccall f_30188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30180)
static void C_ccall f_30180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30144)
static void C_ccall f_30144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30148)
static void C_ccall f_30148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30109)
static void C_ccall f_30109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30113)
static void C_ccall f_30113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30074)
static void C_ccall f_30074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30078)
static void C_ccall f_30078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30039)
static void C_ccall f_30039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30043)
static void C_ccall f_30043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29817)
static void C_fcall f_29817(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30003)
static void C_ccall f_30003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30018)
static void C_ccall f_30018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30010)
static void C_ccall f_30010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29974)
static void C_ccall f_29974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29978)
static void C_ccall f_29978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29939)
static void C_ccall f_29939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29943)
static void C_ccall f_29943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29904)
static void C_ccall f_29904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29908)
static void C_ccall f_29908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29869)
static void C_ccall f_29869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29873)
static void C_ccall f_29873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29820)
static void C_fcall f_29820(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29823)
static void C_ccall f_29823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29827)
static void C_ccall f_29827(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_29469)
static void C_fcall f_29469(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29309)
static void C_fcall f_29309(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29344)
static void C_fcall f_29344(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_29354)
static void C_fcall f_29354(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29358)
static void C_ccall f_29358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29361)
static void C_ccall f_29361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29422)
static void C_ccall f_29422(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29413)
static void C_ccall f_29413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29364)
static void C_ccall f_29364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29383)
static void C_ccall f_29383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29390)
static void C_ccall f_29390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29367)
static void C_ccall f_29367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29373)
static void C_ccall f_29373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29342)
static void C_ccall f_29342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29317)
static void C_fcall f_29317(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29316)
static void C_ccall f_29316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29477)
static void C_fcall f_29477(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29055)
static void C_ccall f_29055(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29077)
static void C_ccall f_29077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29092)
static void C_ccall f_29092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29095)
static void C_fcall f_29095(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29271)
static void C_ccall f_29271(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29265)
static void C_ccall f_29265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29098)
static void C_ccall f_29098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29247)
static void C_ccall f_29247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29101)
static void C_fcall f_29101(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29104)
static void C_ccall f_29104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29240)
static void C_ccall f_29240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29228)
static void C_ccall f_29228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29124)
static void C_fcall f_29124(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29131)
static void C_ccall f_29131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29201)
static void C_ccall f_29201(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29187)
static void C_ccall f_29187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29195)
static void C_ccall f_29195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29134)
static void C_ccall f_29134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29173)
static void C_ccall f_29173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29137)
static void C_fcall f_29137(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29166)
static void C_ccall f_29166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29143)
static void C_ccall f_29143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29146)
static void C_ccall f_29146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29150)
static void C_ccall f_29150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29111)
static void C_fcall f_29111(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29114)
static void C_ccall f_29114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28924)
static void C_fcall f_28924(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28933)
static void C_fcall f_28933(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28881)
static void C_ccall f_28881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28887)
static void C_fcall f_28887(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28950)
static void C_ccall f_28950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29036)
static void C_ccall f_29036(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29023)
static void C_ccall f_29023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29031)
static void C_ccall f_29031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28953)
static void C_ccall f_28953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28957)
static void C_ccall f_28957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29000)
static void C_ccall f_29000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28962)
static void C_ccall f_28962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28928)
static void C_ccall f_28928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28823)
static void C_ccall f_28823(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28830)
static void C_ccall f_28830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28861)
static void C_ccall f_28861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28857)
static void C_ccall f_28857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28849)
static void C_ccall f_28849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28732)
static void C_ccall f_28732(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28739)
static void C_ccall f_28739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28807)
static void C_ccall f_28807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28750)
static void C_fcall f_28750(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28777)
static void C_ccall f_28777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28761)
static void C_ccall f_28761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28666)
static void C_ccall f_28666(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28677)
static void C_ccall f_28677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28680)
static void C_fcall f_28680(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28687)
static void C_ccall f_28687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28660)
static void C_ccall f_28660(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28114)
static void C_ccall f_28114(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28145)
static void C_ccall f_28145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28609)
static void C_ccall f_28609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28615)
static void C_ccall f_28615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28156)
static void C_ccall f_28156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28041)
static void C_fcall f_28041(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28066)
static void C_ccall f_28066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28001)
static void C_fcall f_28001(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28014)
static void C_fcall f_28014(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28055)
static void C_ccall f_28055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28160)
static void C_ccall f_28160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28597)
static void C_ccall f_28597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28593)
static void C_fcall f_28593(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28589)
static void C_ccall f_28589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28163)
static void C_ccall f_28163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28383)
static void C_fcall f_28383(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28492)
static void C_ccall f_28492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28557)
static void C_ccall f_28557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28499)
static void C_fcall f_28499(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28503)
static void C_ccall f_28503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28507)
static void C_ccall f_28507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28549)
static void C_ccall f_28549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28545)
static void C_ccall f_28545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28523)
static void C_ccall f_28523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28386)
static void C_fcall f_28386(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28389)
static void C_fcall f_28389(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28288)
static void C_ccall f_28288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28371)
static void C_ccall f_28371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28338)
static void C_ccall f_28338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28364)
static void C_ccall f_28364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28346)
static void C_ccall f_28346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28294)
static void C_fcall f_28294(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28334)
static void C_ccall f_28334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28276)
static void C_ccall f_28276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28247)
static void C_ccall f_28247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28269)
static void C_ccall f_28269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28255)
static void C_ccall f_28255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28209)
static void C_fcall f_28209(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28166)
static void C_fcall f_28166(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28177)
static void C_ccall f_28177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28181)
static void C_ccall f_28181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28185)
static void C_ccall f_28185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28189)
static void C_ccall f_28189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28173)
static void C_ccall f_28173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28133)
static void C_fcall f_28133(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28128)
static void C_fcall f_28128(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28123)
static void C_fcall f_28123(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27955)
static void C_ccall f_27955(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27966)
static void C_ccall f_27966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27981)
static void C_ccall f_27981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27917)
static void C_ccall f_27917(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27928)
static void C_ccall f_27928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27943)
static void C_ccall f_27943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27850)
static void C_ccall f_27850(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27870)
static void C_fcall f_27870(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27880)
static void C_ccall f_27880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27893)
static void C_ccall f_27893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27861)
static void C_ccall f_27861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27868)
static void C_ccall f_27868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27657)
static void C_ccall f_27657(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27717)
static void C_fcall f_27717(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27727)
static void C_ccall f_27727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27841)
static void C_ccall f_27841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27806)
static void C_ccall f_27806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27798)
static void C_ccall f_27798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27769)
static void C_ccall f_27769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27747)
static void C_ccall f_27747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27750)
static void C_ccall f_27750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27738)
static void C_ccall f_27738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27664)
static void C_ccall f_27664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27715)
static void C_ccall f_27715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27707)
static void C_ccall f_27707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27667)
static void C_ccall f_27667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27678)
static void C_ccall f_27678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27682)
static void C_ccall f_27682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27674)
static void C_ccall f_27674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27515)
static void C_ccall f_27515(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27563)
static void C_fcall f_27563(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27573)
static void C_ccall f_27573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27584)
static void C_ccall f_27584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27621)
static void C_ccall f_27621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27596)
static void C_ccall f_27596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27587)
static void C_ccall f_27587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27525)
static void C_ccall f_27525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27561)
static void C_ccall f_27561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27532)
static void C_ccall f_27532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27164)
static void C_ccall f_27164(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27171)
static void C_ccall f_27171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27405)
static void C_fcall f_27405(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27415)
static void C_ccall f_27415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27426)
static void C_ccall f_27426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27438)
static void C_fcall f_27438(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27441)
static void C_ccall f_27441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27429)
static void C_ccall f_27429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27177)
static void C_ccall f_27177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27403)
static void C_ccall f_27403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27399)
static void C_ccall f_27399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27345)
static void C_fcall f_27345(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27310)
static void C_fcall f_27310(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27326)
static void C_fcall f_27326(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27281)
static void C_fcall f_27281(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27205)
static void C_ccall f_27205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27208)
static void C_ccall f_27208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27272)
static void C_ccall f_27272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27268)
static void C_ccall f_27268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27188)
static void C_fcall f_27188(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27199)
static void C_ccall f_27199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27195)
static void C_ccall f_27195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27117)
static void C_ccall f_27117(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27150)
static void C_ccall f_27150(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27132)
static void C_ccall f_27132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27144)
static void C_ccall f_27144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26735)
static void C_ccall f_26735(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26944)
static void C_fcall f_26944(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26954)
static void C_ccall f_26954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26965)
static void C_ccall f_26965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27085)
static void C_ccall f_27085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27064)
static void C_ccall f_27064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27043)
static void C_ccall f_27043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27022)
static void C_ccall f_27022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27001)
static void C_ccall f_27001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26980)
static void C_ccall f_26980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26968)
static void C_ccall f_26968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26745)
static void C_ccall f_26745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26748)
static void C_fcall f_26748(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26911)
static void C_fcall f_26911(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26751)
static void C_fcall f_26751(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26902)
static void C_ccall f_26902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26882)
static void C_ccall f_26882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26754)
static void C_fcall f_26754(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26847)
static void C_ccall f_26847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26864)
static void C_ccall f_26864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26757)
static void C_fcall f_26757(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26796)
static void C_ccall f_26796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26830)
static void C_ccall f_26830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26814)
static void C_ccall f_26814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26799)
static void C_fcall f_26799(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26764)
static void C_fcall f_26764(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26775)
static void C_ccall f_26775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26779)
static void C_ccall f_26779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26771)
static void C_ccall f_26771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26653)
static void C_ccall f_26653(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26657)
static void C_ccall f_26657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26675)
static void C_ccall f_26675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26493)
static void C_fcall f_26493(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26501)
static void C_fcall f_26501(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26511)
static void C_ccall f_26511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26549)
static void C_ccall f_26549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26552)
static void C_ccall f_26552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26555)
static void C_ccall f_26555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26630)
static void C_fcall f_26630(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26640)
static void C_ccall f_26640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26558)
static void C_ccall f_26558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26561)
static void C_ccall f_26561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26564)
static void C_ccall f_26564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26584)
static void C_fcall f_26584(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26594)
static void C_ccall f_26594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26597)
static void C_ccall f_26597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26600)
static void C_ccall f_26600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26567)
static void C_ccall f_26567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26570)
static void C_ccall f_26570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26487)
static void C_fcall f_26487(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26481)
static void C_fcall f_26481(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26475)
static void C_fcall f_26475(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26404)
static void C_fcall f_26404(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26445)
static void C_ccall f_26445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26449)
static void C_ccall f_26449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26453)
static void C_ccall f_26453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26457)
static void C_ccall f_26457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26461)
static void C_ccall f_26461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26465)
static void C_ccall f_26465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26469)
static void C_ccall f_26469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26473)
static void C_ccall f_26473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26406)
static void C_fcall f_26406(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26412)
static void C_fcall f_26412(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26434)
static void C_ccall f_26434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26423)
static void C_ccall f_26423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26253)
static void C_fcall f_26253(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26268)
static void C_fcall f_26268(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26281)
static void C_ccall f_26281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26241)
static void C_ccall f_26241(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26229)
static void C_ccall f_26229(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26217)
static void C_ccall f_26217(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26211)
static void C_fcall f_26211(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26205)
static void C_ccall f_26205(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26193)
static void C_ccall f_26193(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26181)
static void C_ccall f_26181(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26169)
static void C_ccall f_26169(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26157)
static void C_ccall f_26157(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26151)
static void C_fcall f_26151(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26115)
static void C_ccall f_26115(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26109)
static void C_ccall f_26109(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26055)
static void C_ccall f_26055(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26059)
static void C_ccall f_26059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26075)
static void C_ccall f_26075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26107)
static void C_ccall f_26107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26081)
static void C_ccall f_26081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26087)
static void C_ccall f_26087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26062)
static void C_ccall f_26062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26046)
static void C_ccall f_26046(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26050)
static void C_ccall f_26050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25893)
static void C_ccall f_25893(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25893)
static void C_ccall f_25893r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_26020)
static void C_fcall f_26020(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26033)
static void C_ccall f_26033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26015)
static void C_ccall f_26015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25896)
static void C_fcall f_25896(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26012)
static void C_ccall f_26012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25996)
static void C_ccall f_25996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25924)
static void C_ccall f_25924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25932)
static void C_fcall f_25932(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25942)
static void C_ccall f_25942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25945)
static void C_ccall f_25945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25927)
static void C_ccall f_25927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25716)
static void C_ccall f_25716(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_25720)
static void C_ccall f_25720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25725)
static void C_ccall f_25725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25728)
static void C_fcall f_25728(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23463)
static void C_ccall f_23463(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23476)
static void C_ccall f_23476(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23483)
static void C_fcall f_23483(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23490)
static void C_ccall f_23490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23469)
static void C_ccall f_23469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25732)
static void C_ccall f_25732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25769)
static void C_ccall f_25769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25862)
static void C_fcall f_25862(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25872)
static void C_fcall f_25872(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25775)
static void C_ccall f_25775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25832)
static void C_fcall f_25832(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25842)
static void C_fcall f_25842(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25783)
static void C_ccall f_25783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25797)
static void C_ccall f_25797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25801)
static void C_ccall f_25801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25805)
static void C_ccall f_25805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25809)
static void C_ccall f_25809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25816)
static void C_ccall f_25816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25793)
static void C_ccall f_25793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25786)
static void C_ccall f_25786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25735)
static void C_ccall f_25735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24590)
static void C_ccall f_24590(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24603)
static void C_ccall f_24603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24653)
static void C_ccall f_24653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24750)
static void C_ccall f_24750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24818)
static void C_ccall f_24818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25075)
static void C_ccall f_25075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24825)
static void C_fcall f_24825(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25063)
static void C_ccall f_25063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25014)
static void C_ccall f_25014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25020)
static void C_ccall f_25020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25044)
static void C_ccall f_25044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25040)
static void C_ccall f_25040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25028)
static void C_ccall f_25028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24828)
static void C_fcall f_24828(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24990)
static void C_ccall f_24990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24994)
static void C_ccall f_24994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24831)
static void C_fcall f_24831(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24967)
static void C_ccall f_24967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24971)
static void C_ccall f_24971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24834)
static void C_fcall f_24834(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24944)
static void C_ccall f_24944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24948)
static void C_ccall f_24948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24837)
static void C_fcall f_24837(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24869)
static void C_ccall f_24869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24887)
static void C_ccall f_24887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24905)
static void C_ccall f_24905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24923)
static void C_ccall f_24923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24840)
static void C_fcall f_24840(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24844)
static void C_ccall f_24844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24754)
static void C_ccall f_24754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24758)
static void C_ccall f_24758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24762)
static void C_ccall f_24762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24657)
static void C_ccall f_24657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24661)
static void C_ccall f_24661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24665)
static void C_ccall f_24665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24684)
static void C_ccall f_24684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24688)
static void C_ccall f_24688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24668)
static void C_fcall f_24668(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24672)
static void C_ccall f_24672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24607)
static void C_ccall f_24607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24611)
static void C_ccall f_24611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24615)
static void C_ccall f_24615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24597)
static void C_fcall f_24597(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24412)
static void C_fcall f_24412(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24424)
static void C_fcall f_24424(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24443)
static void C_ccall f_24443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24461)
static void C_fcall f_24461(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24493)
static void C_ccall f_24493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24496)
static void C_fcall f_24496(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24489)
static void C_ccall f_24489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24475)
static void C_ccall f_24475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24446)
static void C_ccall f_24446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24391)
static void C_fcall f_24391(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24398)
static void C_ccall f_24398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24401)
static void C_ccall f_24401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24407)
static void C_ccall f_24407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24326)
static void C_fcall f_24326(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24335)
static void C_fcall f_24335(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24358)
static void C_ccall f_24358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24348)
static void C_fcall f_24348(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24282)
static void C_fcall f_24282(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24270)
static void C_fcall f_24270(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24168)
static void C_fcall f_24168(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24120)
static void C_fcall f_24120(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23501)
static void C_fcall f_23501(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_23505)
static void C_ccall f_23505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23508)
static void C_ccall f_23508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23934)
static void C_ccall f_23934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23930)
static void C_ccall f_23930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23926)
static void C_ccall f_23926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23511)
static void C_fcall f_23511(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23634)
static void C_ccall f_23634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22867)
static void C_ccall f_22867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23640)
static void C_fcall f_23640(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22883)
static void C_ccall f_22883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23728)
static void C_fcall f_23728(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23798)
static void C_ccall f_23798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22899)
static void C_ccall f_22899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23801)
static void C_fcall f_23801(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22931)
static void C_ccall f_22931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23879)
static void C_fcall f_23879(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23905)
static void C_ccall f_23905(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23899)
static void C_ccall f_23899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23888)
static void C_ccall f_23888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23830)
static void C_fcall f_23830(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23840)
static void C_ccall f_23840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23866)
static void C_ccall f_23866(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23860)
static void C_ccall f_23860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23843)
static void C_ccall f_23843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23853)
static void C_ccall f_23853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23846)
static void C_fcall f_23846(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23807)
static void C_ccall f_23807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23816)
static void C_ccall f_23816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23810)
static void C_fcall f_23810(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23734)
static void C_ccall f_23734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23752)
static void C_fcall f_23752(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23785)
static void C_ccall f_23785(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23771)
static void C_ccall f_23771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23779)
static void C_ccall f_23779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23762)
static void C_ccall f_23762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23737)
static void C_ccall f_23737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23649)
static void C_ccall f_23649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23671)
static void C_fcall f_23671(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23718)
static void C_ccall f_23718(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23704)
static void C_ccall f_23704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23712)
static void C_ccall f_23712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23684)
static void C_ccall f_23684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23687)
static void C_fcall f_23687(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23652)
static void C_ccall f_23652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23669)
static void C_ccall f_23669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23655)
static void C_fcall f_23655(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23520)
static void C_ccall f_23520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23526)
static void C_ccall f_23526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23584)
static void C_ccall f_23584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23587)
static void C_ccall f_23587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23608)
static void C_ccall f_23608(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23619)
static void C_ccall f_23619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23598)
static void C_ccall f_23598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23532)
static void C_ccall f_23532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23542)
static void C_ccall f_23542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23578)
static void C_ccall f_23578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23548)
static void C_ccall f_23548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23563)
static void C_ccall f_23563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23567)
static void C_ccall f_23567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23571)
static void C_ccall f_23571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23555)
static void C_ccall f_23555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23397)
static void C_fcall f_23397(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23399)
static void C_ccall f_23399(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23447)
static void C_ccall f_23447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23403)
static void C_ccall f_23403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23406)
static void C_fcall f_23406(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23411)
static void C_fcall f_23411(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23432)
static void C_ccall f_23432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23389)
static void C_fcall f_23389(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23391)
static void C_ccall f_23391(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23212)
static void C_ccall f_23212(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_23212)
static void C_ccall f_23212r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_23220)
static void C_ccall f_23220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23181)
static void C_fcall f_23181(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23198)
static void C_ccall f_23198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23202)
static void C_ccall f_23202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23148)
static void C_fcall f_23148(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23155)
static void C_ccall f_23155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23099)
static void C_ccall f_23099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23106)
static void C_ccall f_23106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23164)
static void C_ccall f_23164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23387)
static void C_ccall f_23387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23364)
static void C_ccall f_23364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23380)
static void C_ccall f_23380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23226)
static void C_ccall f_23226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23229)
static void C_ccall f_23229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23253)
static void C_ccall f_23253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23310)
static void C_ccall f_23310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23316)
static void C_ccall f_23316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23325)
static void C_ccall f_23325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23334)
static void C_ccall f_23334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23343)
static void C_ccall f_23343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23352)
static void C_ccall f_23352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23304)
static void C_ccall f_23304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23259)
static void C_ccall f_23259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23265)
static void C_ccall f_23265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23271)
static void C_ccall f_23271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23277)
static void C_ccall f_23277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23283)
static void C_ccall f_23283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23289)
static void C_ccall f_23289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23130)
static void C_fcall f_23130(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23137)
static void C_ccall f_23137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23120)
static void C_fcall f_23120(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23108)
static void C_fcall f_23108(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23076)
static void C_fcall f_23076(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23083)
static void C_ccall f_23083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23090)
static void C_ccall f_23090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23060)
static void C_fcall f_23060(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23067)
static void C_ccall f_23067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23074)
static void C_ccall f_23074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23048)
static void C_fcall f_23048(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23030)
static void C_fcall f_23030(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23012)
static void C_fcall f_23012(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22997)
static void C_fcall f_22997(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22991)
static void C_fcall f_22991(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22979)
static void C_fcall f_22979(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22961)
static void C_fcall f_22961(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22940)
static void C_fcall f_22940(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22908)
static void C_fcall f_22908(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22915)
static void C_ccall f_22915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22850)
static void C_fcall f_22850(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22858)
static void C_ccall f_22858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22840)
static void C_fcall f_22840(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22848)
static void C_ccall f_22848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22834)
static void C_fcall f_22834(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22822)
static void C_fcall f_22822(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22819)
static void C_ccall f_22819(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22798)
static void C_fcall f_22798(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22711)
static void C_fcall f_22711(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22690)
static void C_fcall f_22690(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_22680)
static void C_fcall f_22680(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22668)
static void C_fcall f_22668(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22639)
static void C_ccall f_22639(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22627)
static void C_fcall f_22627(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22609)
static void C_fcall f_22609(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22591)
static void C_fcall f_22591(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22570)
static void C_ccall f_22570(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21548)
static void C_ccall f_21548(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_21548)
static void C_ccall f_21548r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_22547)
static void C_ccall f_22547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22562)
static void C_ccall f_22562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22554)
static void C_ccall f_22554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22518)
static void C_ccall f_22518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22522)
static void C_ccall f_22522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22483)
static void C_ccall f_22483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22487)
static void C_ccall f_22487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21558)
static void C_fcall f_21558(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22447)
static void C_ccall f_22447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22462)
static void C_ccall f_22462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22454)
static void C_ccall f_22454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22418)
static void C_ccall f_22418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22422)
static void C_ccall f_22422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22383)
static void C_ccall f_22383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22387)
static void C_ccall f_22387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21561)
static void C_fcall f_21561(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21564)
static void C_ccall f_21564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21569)
static void C_ccall f_21569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22276)
static void C_fcall f_22276(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22299)
static void C_fcall f_22299(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22352)
static void C_ccall f_22352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22334)
static void C_fcall f_22334(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22327)
static void C_ccall f_22327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22309)
static void C_ccall f_22309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22286)
static void C_ccall f_22286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21763)
static void C_ccall f_21763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22238)
static void C_fcall f_22238(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22260)
static void C_ccall f_22260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22244)
static void C_ccall f_22244(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22252)
static void C_ccall f_22252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22256)
static void C_ccall f_22256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22242)
static void C_ccall f_22242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22232)
static void C_ccall f_22232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21766)
static void C_fcall f_21766(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22109)
static void C_fcall f_22109(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22133)
static void C_ccall f_22133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22195)
static void C_fcall f_22195(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22136)
static void C_ccall f_22136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22152)
static void C_fcall f_22152(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22177)
static void C_ccall f_22177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22143)
static void C_ccall f_22143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22120)
static void C_ccall f_22120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21769)
static void C_ccall f_21769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22095)
static void C_ccall f_22095(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21773)
static void C_ccall f_21773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21817)
static void C_ccall f_21817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21820)
static void C_ccall f_21820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22076)
static void C_fcall f_22076(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22086)
static void C_ccall f_22086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21823)
static void C_ccall f_21823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22014)
static void C_fcall f_22014(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22024)
static void C_ccall f_22024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22027)
static void C_ccall f_22027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22047)
static void C_ccall f_22047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22049)
static void C_fcall f_22049(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22059)
static void C_ccall f_22059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22033)
static void C_ccall f_22033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22036)
static void C_ccall f_22036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21826)
static void C_ccall f_21826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21834)
static void C_fcall f_21834(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21847)
static void C_ccall f_21847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21721)
static void C_ccall f_21721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21730)
static void C_fcall f_21730(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21752)
static void C_ccall f_21752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21741)
static void C_ccall f_21741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21850)
static void C_ccall f_21850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21985)
static void C_ccall f_21985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21987)
static void C_fcall f_21987(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21997)
static void C_ccall f_21997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21856)
static void C_ccall f_21856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21958)
static void C_ccall f_21958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21960)
static void C_fcall f_21960(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21970)
static void C_ccall f_21970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21859)
static void C_ccall f_21859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21871)
static void C_fcall f_21871(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21897)
static void C_ccall f_21897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21903)
static void C_ccall f_21903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21909)
static void C_ccall f_21909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21919)
static void C_ccall f_21919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21921)
static void C_fcall f_21921(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21931)
static void C_ccall f_21931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21912)
static void C_ccall f_21912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21884)
static void C_ccall f_21884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21862)
static void C_ccall f_21862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21829)
static void C_ccall f_21829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21776)
static void C_ccall f_21776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21799)
static void C_ccall f_21799(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21788)
static void C_ccall f_21788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21653)
static void C_fcall f_21653(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21701)
static void C_ccall f_21701(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21663)
static void C_ccall f_21663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21691)
static void C_ccall f_21691(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21666)
static void C_ccall f_21666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21571)
static void C_fcall f_21571(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21643)
static void C_ccall f_21643(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21575)
static void C_ccall f_21575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21593)
static void C_ccall f_21593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21625)
static void C_ccall f_21625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21454)
static void C_ccall f_21454(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21458)
static void C_ccall f_21458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21487)
static void C_ccall f_21487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21492)
static void C_fcall f_21492(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21517)
static void C_fcall f_21517(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21502)
static void C_ccall f_21502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20936)
static void C_ccall f_20936(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_20936)
static void C_ccall f_20936r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_21207)
static void C_ccall f_21207(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21211)
static void C_ccall f_21211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21216)
static void C_ccall f_21216(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_21216)
static void C_ccall f_21216r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_21422)
static void C_ccall f_21422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21437)
static void C_ccall f_21437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21429)
static void C_ccall f_21429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21393)
static void C_ccall f_21393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21397)
static void C_ccall f_21397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21358)
static void C_ccall f_21358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21362)
static void C_ccall f_21362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21220)
static void C_fcall f_21220(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21322)
static void C_ccall f_21322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21337)
static void C_ccall f_21337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21329)
static void C_ccall f_21329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21293)
static void C_ccall f_21293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21297)
static void C_ccall f_21297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21258)
static void C_ccall f_21258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21262)
static void C_ccall f_21262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21223)
static void C_fcall f_21223(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21226)
static void C_ccall f_21226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21229)
static void C_fcall f_21229(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21198)
static void C_ccall f_21198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20940)
static void C_ccall f_20940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21167)
static void C_ccall f_21167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21182)
static void C_ccall f_21182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21174)
static void C_ccall f_21174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21138)
static void C_ccall f_21138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21142)
static void C_ccall f_21142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21103)
static void C_ccall f_21103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21107)
static void C_ccall f_21107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20943)
static void C_fcall f_20943(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21067)
static void C_ccall f_21067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21082)
static void C_ccall f_21082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21074)
static void C_ccall f_21074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21038)
static void C_ccall f_21038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21042)
static void C_ccall f_21042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21003)
static void C_ccall f_21003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21007)
static void C_ccall f_21007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20946)
static void C_fcall f_20946(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20949)
static void C_ccall f_20949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20952)
static void C_ccall f_20952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20964)
static void C_ccall f_20964(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20982)
static void C_ccall f_20982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20970)
static void C_ccall f_20970(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20958)
static void C_ccall f_20958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20873)
static void C_fcall f_20873(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20533)
static void C_ccall f_20533(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20715)
static void C_ccall f_20715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20719)
static void C_ccall f_20719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20721)
static void C_fcall f_20721(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20646)
static void C_fcall f_20646(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20656)
static void C_fcall f_20656(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20663)
static void C_fcall f_20663(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20731)
static void C_ccall f_20731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20734)
static void C_ccall f_20734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20738)
static void C_ccall f_20738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20758)
static void C_fcall f_20758(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20774)
static void C_ccall f_20774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20741)
static void C_ccall f_20741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20536)
static void C_fcall f_20536(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20548)
static void C_fcall f_20548(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20584)
static void C_ccall f_20584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20604)
static void C_ccall f_20604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20609)
static void C_fcall f_20609(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20046)
static void C_ccall f_20046(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_20046)
static void C_ccall f_20046r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_19973)
static void C_fcall f_19973(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_19818)
static void C_ccall f_19818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19824)
static void C_ccall f_19824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19909)
static void C_fcall f_19909(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19836)
static void C_ccall f_19836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19852)
static void C_ccall f_19852(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19856)
static void C_fcall f_19856(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19859)
static void C_fcall f_19859(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19839)
static void C_ccall f_19839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19850)
static void C_ccall f_19850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19990)
static void C_ccall f_19990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20527)
static void C_ccall f_20527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20050)
static void C_ccall f_20050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20496)
static void C_ccall f_20496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20511)
static void C_ccall f_20511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20503)
static void C_ccall f_20503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20467)
static void C_ccall f_20467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20471)
static void C_ccall f_20471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20432)
static void C_ccall f_20432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20436)
static void C_ccall f_20436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20397)
static void C_ccall f_20397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20401)
static void C_ccall f_20401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20053)
static void C_fcall f_20053(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20361)
static void C_ccall f_20361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20376)
static void C_ccall f_20376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20368)
static void C_ccall f_20368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20332)
static void C_ccall f_20332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20336)
static void C_ccall f_20336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20297)
static void C_ccall f_20297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20301)
static void C_ccall f_20301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20262)
static void C_ccall f_20262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20266)
static void C_ccall f_20266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20056)
static void C_fcall f_20056(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20226)
static void C_ccall f_20226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20241)
static void C_ccall f_20241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20233)
static void C_ccall f_20233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20197)
static void C_ccall f_20197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20201)
static void C_ccall f_20201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20162)
static void C_ccall f_20162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20166)
static void C_ccall f_20166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20127)
static void C_ccall f_20127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20131)
static void C_ccall f_20131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20059)
static void C_fcall f_20059(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20062)
static void C_ccall f_20062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20065)
static void C_ccall f_20065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20098)
static void C_ccall f_20098(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20106)
static void C_ccall f_20106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20071)
static void C_ccall f_20071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20084)
static void C_ccall f_20084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20074)
static void C_fcall f_20074(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20077)
static void C_ccall f_20077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19613)
static void C_ccall f_19613(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19617)
static void C_ccall f_19617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19620)
static void C_ccall f_19620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19623)
static void C_ccall f_19623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19792)
static void C_ccall f_19792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19805)
static void C_ccall f_19805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19809)
static void C_ccall f_19809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19629)
static void C_ccall f_19629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19785)
static void C_ccall f_19785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19766)
static void C_ccall f_19766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19773)
static void C_ccall f_19773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19777)
static void C_ccall f_19777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19635)
static void C_fcall f_19635(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19641)
static void C_ccall f_19641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19725)
static void C_ccall f_19725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19727)
static void C_fcall f_19727(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19749)
static void C_ccall f_19749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19756)
static void C_ccall f_19756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19760)
static void C_ccall f_19760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19746)
static void C_fcall f_19746(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19742)
static void C_ccall f_19742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19683)
static void C_ccall f_19683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19700)
static void C_fcall f_19700(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19710)
static void C_ccall f_19710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19686)
static void C_ccall f_19686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19645)
static void C_fcall f_19645(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19653)
static void C_ccall f_19653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19655)
static void C_fcall f_19655(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19676)
static void C_ccall f_19676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19501)
static void C_fcall f_19501(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19611)
static void C_ccall f_19611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19570)
static void C_fcall f_19570(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19603)
static void C_ccall f_19603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19599)
static void C_ccall f_19599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19584)
static void C_ccall f_19584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19508)
static void C_ccall f_19508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19516)
static void C_fcall f_19516(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19561)
static void C_ccall f_19561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19549)
static void C_ccall f_19549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19533)
static void C_ccall f_19533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18734)
static void C_ccall f_18734(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18734)
static void C_ccall f_18734r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_19051)
static void C_ccall f_19051(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19058)
static void C_fcall f_19058(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19463)
static void C_ccall f_19463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19478)
static void C_ccall f_19478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19470)
static void C_ccall f_19470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19434)
static void C_ccall f_19434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19438)
static void C_ccall f_19438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19399)
static void C_ccall f_19399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19403)
static void C_ccall f_19403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19364)
static void C_ccall f_19364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19368)
static void C_ccall f_19368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19061)
static void C_fcall f_19061(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19328)
static void C_ccall f_19328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19343)
static void C_ccall f_19343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19335)
static void C_ccall f_19335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19299)
static void C_ccall f_19299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19303)
static void C_ccall f_19303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19264)
static void C_ccall f_19264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19268)
static void C_ccall f_19268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19229)
static void C_ccall f_19229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19233)
static void C_ccall f_19233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19064)
static void C_fcall f_19064(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19193)
static void C_ccall f_19193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19208)
static void C_ccall f_19208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19200)
static void C_ccall f_19200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19164)
static void C_ccall f_19164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19168)
static void C_ccall f_19168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19129)
static void C_ccall f_19129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19133)
static void C_ccall f_19133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19094)
static void C_ccall f_19094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19098)
static void C_ccall f_19098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19067)
static void C_fcall f_19067(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19070)
static void C_ccall f_19070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18738)
static void C_ccall f_18738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18741)
static void C_ccall f_18741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19015)
static void C_ccall f_19015(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19019)
static void C_ccall f_19019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19022)
static void C_ccall f_19022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19025)
static void C_ccall f_19025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19028)
static void C_ccall f_19028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19041)
static void C_ccall f_19041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19031)
static void C_fcall f_19031(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18747)
static void C_ccall f_18747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18754)
static void C_fcall f_18754(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18985)
static void C_ccall f_18985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19000)
static void C_ccall f_19000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18992)
static void C_ccall f_18992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18956)
static void C_ccall f_18956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18960)
static void C_ccall f_18960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18921)
static void C_ccall f_18921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18925)
static void C_ccall f_18925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18757)
static void C_fcall f_18757(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18885)
static void C_ccall f_18885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18900)
static void C_ccall f_18900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18892)
static void C_ccall f_18892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18856)
static void C_ccall f_18856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18860)
static void C_ccall f_18860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18821)
static void C_ccall f_18821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18825)
static void C_ccall f_18825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18760)
static void C_fcall f_18760(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18763)
static void C_ccall f_18763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18778)
static void C_ccall f_18778(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18800)
static void C_ccall f_18800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18784)
static void C_ccall f_18784(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18792)
static void C_ccall f_18792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18766)
static void C_ccall f_18766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18769)
static void C_ccall f_18769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18651)
static void C_fcall f_18651(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18642)
static void C_fcall f_18642(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18633)
static void C_fcall f_18633(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18615)
static void C_fcall f_18615(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18597)
static void C_fcall f_18597(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18579)
static void C_fcall f_18579(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18570)
static void C_fcall f_18570(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18561)
static void C_fcall f_18561(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18339)
static void C_ccall f_18339(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18389)
static void C_ccall f_18389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18534)
static void C_ccall f_18534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18415)
static void C_ccall f_18415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18530)
static void C_ccall f_18530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18515)
static void C_ccall f_18515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18496)
static void C_ccall f_18496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18469)
static void C_ccall f_18469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18422)
static void C_ccall f_18422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18392)
static void C_fcall f_18392(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18342)
static void C_ccall f_18342(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_18348)
static void C_fcall f_18348(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18364)
static void C_ccall f_18364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18367)
static void C_ccall f_18367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17865)
static void C_ccall f_17865(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_17865)
static void C_ccall f_17865r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_18329)
static void C_ccall f_18329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17869)
static void C_fcall f_17869(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18301)
static void C_ccall f_18301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18316)
static void C_ccall f_18316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18308)
static void C_ccall f_18308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18272)
static void C_ccall f_18272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18276)
static void C_ccall f_18276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18237)
static void C_ccall f_18237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18241)
static void C_ccall f_18241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18202)
static void C_ccall f_18202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18206)
static void C_ccall f_18206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17872)
static void C_fcall f_17872(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18166)
static void C_ccall f_18166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18181)
static void C_ccall f_18181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18173)
static void C_ccall f_18173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18137)
static void C_ccall f_18137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18141)
static void C_ccall f_18141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18102)
static void C_ccall f_18102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18106)
static void C_ccall f_18106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18067)
static void C_ccall f_18067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18071)
static void C_ccall f_18071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17875)
static void C_fcall f_17875(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18031)
static void C_ccall f_18031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18046)
static void C_ccall f_18046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18038)
static void C_ccall f_18038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18002)
static void C_ccall f_18002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18006)
static void C_ccall f_18006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17967)
static void C_ccall f_17967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17971)
static void C_ccall f_17971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17932)
static void C_ccall f_17932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17936)
static void C_ccall f_17936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17878)
static void C_fcall f_17878(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17881)
static void C_ccall f_17881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17884)
static void C_ccall f_17884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17899)
static void C_ccall f_17899(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17911)
static void C_ccall f_17911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17890)
static void C_ccall f_17890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17893)
static void C_ccall f_17893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17789)
static void C_ccall f_17789(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17793)
static void C_ccall f_17793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17812)
static void C_ccall f_17812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17822)
static void C_ccall f_17822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17824)
static void C_fcall f_17824(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17841)
static void C_ccall f_17841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17844)
static void C_ccall f_17844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17855)
static void C_ccall f_17855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17796)
static void C_ccall f_17796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17526)
static void C_ccall f_17526(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_17526)
static void C_ccall f_17526r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_17779)
static void C_ccall f_17779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17530)
static void C_fcall f_17530(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17751)
static void C_ccall f_17751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17766)
static void C_ccall f_17766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17758)
static void C_ccall f_17758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17722)
static void C_ccall f_17722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17726)
static void C_ccall f_17726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17687)
static void C_ccall f_17687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17691)
static void C_ccall f_17691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17533)
static void C_fcall f_17533(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17651)
static void C_ccall f_17651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17666)
static void C_ccall f_17666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17658)
static void C_ccall f_17658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17622)
static void C_ccall f_17622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17626)
static void C_ccall f_17626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17587)
static void C_ccall f_17587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17591)
static void C_ccall f_17591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17536)
static void C_fcall f_17536(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17539)
static void C_ccall f_17539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17542)
static void C_ccall f_17542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17554)
static void C_ccall f_17554(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17566)
static void C_ccall f_17566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17548)
static void C_ccall f_17548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17490)
static void C_ccall f_17490(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17494)
static void C_ccall f_17494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17516)
static void C_ccall f_17516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17510)
static void C_ccall f_17510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17503)
static void C_ccall f_17503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17243)
static void C_ccall f_17243(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_17243)
static void C_ccall f_17243r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_17247)
static void C_fcall f_17247(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17460)
static void C_ccall f_17460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17475)
static void C_ccall f_17475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17467)
static void C_ccall f_17467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17431)
static void C_ccall f_17431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17435)
static void C_ccall f_17435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17396)
static void C_ccall f_17396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17400)
static void C_ccall f_17400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17250)
static void C_fcall f_17250(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17360)
static void C_ccall f_17360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17375)
static void C_ccall f_17375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17367)
static void C_ccall f_17367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17331)
static void C_ccall f_17331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17335)
static void C_ccall f_17335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17296)
static void C_ccall f_17296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17300)
static void C_ccall f_17300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17253)
static void C_fcall f_17253(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17256)
static void C_ccall f_17256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17259)
static void C_ccall f_17259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17267)
static void C_ccall f_17267(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17275)
static void C_ccall f_17275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17265)
static void C_ccall f_17265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17028)
static void C_ccall f_17028(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17032)
static void C_ccall f_17032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17241)
static void C_ccall f_17241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17194)
static void C_ccall f_17194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17206)
static void C_fcall f_17206(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17062)
static void C_ccall f_17062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17065)
static void C_ccall f_17065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17071)
static void C_ccall f_17071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17074)
static void C_ccall f_17074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17162)
static void C_fcall f_17162(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17077)
static void C_fcall f_17077(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17156)
static void C_ccall f_17156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17083)
static void C_ccall f_17083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17086)
static void C_ccall f_17086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17038)
static void C_ccall f_17038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17041)
static void C_ccall f_17041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17048)
static void C_ccall f_17048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16558)
static void C_ccall f_16558(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16558)
static void C_ccall f_16558r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16562)
static void C_fcall f_16562(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16998)
static void C_ccall f_16998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17013)
static void C_ccall f_17013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17005)
static void C_ccall f_17005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16969)
static void C_ccall f_16969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16973)
static void C_ccall f_16973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16934)
static void C_ccall f_16934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16938)
static void C_ccall f_16938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16899)
static void C_ccall f_16899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16903)
static void C_ccall f_16903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16565)
static void C_fcall f_16565(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16863)
static void C_ccall f_16863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16878)
static void C_ccall f_16878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16870)
static void C_ccall f_16870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16834)
static void C_ccall f_16834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16838)
static void C_ccall f_16838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16799)
static void C_ccall f_16799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16803)
static void C_ccall f_16803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16764)
static void C_ccall f_16764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16768)
static void C_ccall f_16768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16568)
static void C_fcall f_16568(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16728)
static void C_ccall f_16728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16743)
static void C_ccall f_16743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16735)
static void C_ccall f_16735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16699)
static void C_ccall f_16699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16703)
static void C_ccall f_16703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16664)
static void C_ccall f_16664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16668)
static void C_ccall f_16668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16629)
static void C_ccall f_16629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16633)
static void C_ccall f_16633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16571)
static void C_fcall f_16571(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16574)
static void C_ccall f_16574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16577)
static void C_ccall f_16577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16600)
static void C_ccall f_16600(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16608)
static void C_ccall f_16608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16583)
static void C_ccall f_16583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16586)
static void C_ccall f_16586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16478)
static void C_fcall f_16478(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16469)
static void C_fcall f_16469(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16397)
static void C_ccall f_16397(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16401)
static void C_ccall f_16401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16404)
static void C_fcall f_16404(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16142)
static void C_ccall f_16142(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16142)
static void C_ccall f_16142r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16146)
static void C_fcall f_16146(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16367)
static void C_ccall f_16367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16382)
static void C_ccall f_16382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16374)
static void C_ccall f_16374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16338)
static void C_ccall f_16338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16342)
static void C_ccall f_16342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16303)
static void C_ccall f_16303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16307)
static void C_ccall f_16307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16149)
static void C_fcall f_16149(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16267)
static void C_ccall f_16267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16282)
static void C_ccall f_16282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16274)
static void C_ccall f_16274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16238)
static void C_ccall f_16238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16242)
static void C_ccall f_16242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16203)
static void C_ccall f_16203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16207)
static void C_ccall f_16207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16152)
static void C_fcall f_16152(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16155)
static void C_ccall f_16155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16158)
static void C_ccall f_16158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16170)
static void C_ccall f_16170(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16182)
static void C_ccall f_16182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16164)
static void C_ccall f_16164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16027)
static void C_fcall f_16027(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16140)
static void C_ccall f_16140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16037)
static void C_ccall f_16037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16125)
static void C_ccall f_16125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16136)
static void C_ccall f_16136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16132)
static void C_ccall f_16132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16040)
static void C_ccall f_16040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16122)
static void C_ccall f_16122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16048)
static void C_ccall f_16048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16112)
static void C_ccall f_16112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16057)
static void C_ccall f_16057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16076)
static void C_ccall f_16076(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16105)
static void C_ccall f_16105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16086)
static void C_ccall f_16086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16101)
static void C_ccall f_16101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16089)
static void C_ccall f_16089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16060)
static void C_ccall f_16060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16070)
static void C_ccall f_16070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16051)
static void C_fcall f_16051(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16054)
static void C_ccall f_16054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15981)
static void C_fcall f_15981(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15972)
static void C_fcall f_15972(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15671)
static void C_fcall f_15671(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15678)
static void C_ccall f_15678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15967)
static void C_ccall f_15967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15681)
static void C_ccall f_15681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15952)
static void C_ccall f_15952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15944)
static void C_ccall f_15944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15936)
static void C_ccall f_15936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15939)
static void C_ccall f_15939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15907)
static void C_fcall f_15907(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15930)
static void C_ccall f_15930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15913)
static void C_fcall f_15913(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15917)
static void C_ccall f_15917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15684)
static void C_ccall f_15684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15690)
static void C_ccall f_15690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15782)
static void C_ccall f_15782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15894)
static void C_ccall f_15894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15901)
static void C_ccall f_15901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15805)
static void C_fcall f_15805(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15807)
static void C_fcall f_15807(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15856)
static void C_fcall f_15856(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15891)
static void C_ccall f_15891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15880)
static void C_ccall f_15880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16025)
static void C_ccall f_16025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16000)
static void C_ccall f_16000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16021)
static void C_ccall f_16021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16017)
static void C_ccall f_16017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16009)
static void C_ccall f_16009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15873)
static void C_ccall f_15873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15866)
static void C_ccall f_15866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15814)
static void C_ccall f_15814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15854)
static void C_ccall f_15854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15818)
static void C_ccall f_15818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15850)
static void C_ccall f_15850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15837)
static void C_ccall f_15837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15845)
static void C_ccall f_15845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15841)
static void C_ccall f_15841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15821)
static void C_fcall f_15821(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15824)
static void C_ccall f_15824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15798)
static void C_ccall f_15798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15785)
static void C_ccall f_15785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15794)
static void C_ccall f_15794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15789)
static void C_ccall f_15789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15696)
static void C_ccall f_15696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15776)
static void C_ccall f_15776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15756)
static void C_ccall f_15756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15762)
static void C_ccall f_15762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15773)
static void C_ccall f_15773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15753)
static void C_ccall f_15753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15741)
static void C_ccall f_15741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15744)
static void C_ccall f_15744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15699)
static void C_ccall f_15699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15735)
static void C_ccall f_15735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15730)
static void C_ccall f_15730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15702)
static void C_ccall f_15702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15715)
static void C_ccall f_15715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15705)
static void C_fcall f_15705(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15708)
static void C_ccall f_15708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15711)
static void C_ccall f_15711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15548)
static void C_ccall f_15548(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15548)
static void C_ccall f_15548r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15607)
static void C_ccall f_15607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15617)
static void C_ccall f_15617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15619)
static void C_fcall f_15619(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15648)
static void C_ccall f_15648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15653)
static void C_ccall f_15653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15638)
static void C_fcall f_15638(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15569)
static void C_fcall f_15569(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15601)
static void C_ccall f_15601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15529)
static void C_ccall f_15529(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15536)
static void C_ccall f_15536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15543)
static void C_ccall f_15543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15510)
static void C_ccall f_15510(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15517)
static void C_ccall f_15517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15524)
static void C_ccall f_15524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15330)
static void C_fcall f_15330(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9) C_noret;
C_noret_decl(f_15334)
static void C_ccall f_15334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15337)
static void C_ccall f_15337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15340)
static void C_ccall f_15340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15343)
static void C_ccall f_15343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15500)
static void C_ccall f_15500(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15507)
static void C_ccall f_15507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15346)
static void C_ccall f_15346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15349)
static void C_fcall f_15349(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15355)
static void C_ccall f_15355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15361)
static void C_ccall f_15361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15424)
static void C_ccall f_15424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15438)
static void C_ccall f_15438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15364)
static void C_fcall f_15364(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15367)
static void C_ccall f_15367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15373)
static void C_fcall f_15373(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15386)
static void C_ccall f_15386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15376)
static void C_ccall f_15376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15379)
static void C_ccall f_15379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15320)
static void C_fcall f_15320(C_word t0) C_noret;
C_noret_decl(f_15265)
static void C_fcall f_15265(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15256)
static void C_fcall f_15256(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15139)
static void C_fcall f_15139(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15130)
static void C_fcall f_15130(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15121)
static void C_ccall f_15121(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15112)
static void C_fcall f_15112(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15103)
static void C_fcall f_15103(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15085)
static void C_fcall f_15085(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15076)
static void C_fcall f_15076(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15067)
static void C_fcall f_15067(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15049)
static void C_fcall f_15049(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15040)
static void C_fcall f_15040(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15031)
static void C_fcall f_15031(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15016)
static void C_fcall f_15016(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14971)
static void C_fcall f_14971(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14953)
static void C_fcall f_14953(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14944)
static void C_fcall f_14944(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14917)
static void C_fcall f_14917(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14899)
static void C_fcall f_14899(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14881)
static void C_fcall f_14881(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14872)
static void C_fcall f_14872(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14860)
static void C_fcall f_14860(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_14734)
static void C_ccall f_14734(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14740)
static void C_ccall f_14740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14744)
static void C_ccall f_14744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14762)
static void C_ccall f_14762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14765)
static void C_ccall f_14765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14769)
static void C_ccall f_14769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14772)
static void C_ccall f_14772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14824)
static void C_fcall f_14824(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14835)
static void C_ccall f_14835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14775)
static void C_ccall f_14775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14785)
static void C_ccall f_14785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14787)
static void C_fcall f_14787(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14631)
static void C_ccall f_14631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14655)
static void C_ccall f_14655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14659)
static void C_ccall f_14659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14685)
static void C_fcall f_14685(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14695)
static void C_ccall f_14695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14732)
static void C_ccall f_14732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14724)
static void C_ccall f_14724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14662)
static void C_ccall f_14662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14632)
static void C_fcall f_14632(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14636)
static void C_ccall f_14636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14639)
static void C_ccall f_14639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14801)
static void C_ccall f_14801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14804)
static void C_fcall f_14804(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14811)
static void C_ccall f_14811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14745)
static void C_fcall f_14745(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14749)
static void C_ccall f_14749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14752)
static void C_ccall f_14752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14221)
static void C_ccall f_14221(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_14221)
static void C_ccall f_14221r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_14600)
static void C_fcall f_14600(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14594)
static void C_ccall f_14594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14225)
static void C_ccall f_14225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14578)
static void C_ccall f_14578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14228)
static void C_ccall f_14228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14564)
static void C_ccall f_14564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14560)
static void C_ccall f_14560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14231)
static void C_fcall f_14231(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14553)
static void C_ccall f_14553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14549)
static void C_ccall f_14549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14234)
static void C_fcall f_14234(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14237)
static void C_fcall f_14237(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14537)
static void C_ccall f_14537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14529)
static void C_ccall f_14529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14533)
static void C_ccall f_14533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14521)
static void C_ccall f_14521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14525)
static void C_ccall f_14525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14395)
static void C_fcall f_14395(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14510)
static void C_ccall f_14510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14514)
static void C_ccall f_14514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14502)
static void C_ccall f_14502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14506)
static void C_ccall f_14506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14398)
static void C_fcall f_14398(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14402)
static void C_ccall f_14402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14407)
static void C_fcall f_14407(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14417)
static void C_fcall f_14417(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14420)
static void C_ccall f_14420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14301)
static void C_ccall f_14301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14364)
static void C_fcall f_14364(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14385)
static void C_ccall f_14385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14326)
static void C_fcall f_14326(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14355)
static void C_ccall f_14355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14304)
static void C_ccall f_14304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14321)
static void C_ccall f_14321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14317)
static void C_ccall f_14317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13767)
static void C_ccall f_13767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13771)
static void C_ccall f_13771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13759)
static void C_ccall f_13759(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13684)
static void C_ccall f_13684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13745)
static void C_ccall f_13745(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13688)
static void C_ccall f_13688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13696)
static void C_fcall f_13696(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13729)
static void C_ccall f_13729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13706)
static void C_ccall f_13706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13709)
static void C_ccall f_13709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14281)
static void C_fcall f_14281(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14251)
static void C_fcall f_14251(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14240)
static void C_ccall f_14240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14164)
static void C_ccall f_14164(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14172)
static void C_ccall f_14172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14176)
static void C_ccall f_14176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14180)
static void C_ccall f_14180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14186)
static void C_fcall f_14186(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_14196)
static void C_ccall f_14196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13952)
static void C_ccall f_13952(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14020)
static void C_ccall f_14020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14023)
static void C_ccall f_14023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14026)
static void C_ccall f_14026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14029)
static void C_ccall f_14029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14032)
static void C_ccall f_14032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14130)
static void C_fcall f_14130(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14140)
static void C_ccall f_14140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14098)
static void C_fcall f_14098(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14108)
static void C_ccall f_14108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14049)
static void C_fcall f_14049(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14068)
static void C_fcall f_14068(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14078)
static void C_ccall f_14078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14059)
static void C_ccall f_14059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14035)
static void C_ccall f_14035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13988)
static void C_fcall f_13988(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13998)
static void C_ccall f_13998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13971)
static void C_fcall f_13971(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13978)
static void C_ccall f_13978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13954)
static void C_fcall f_13954(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13961)
static void C_ccall f_13961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13773)
static void C_ccall f_13773(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13781)
static void C_ccall f_13781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13785)
static void C_ccall f_13785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13787)
static void C_fcall f_13787(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_13797)
static void C_fcall f_13797(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13928)
static void C_ccall f_13928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13877)
static void C_ccall f_13877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13880)
static void C_ccall f_13880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13891)
static void C_ccall f_13891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13843)
static void C_ccall f_13843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13812)
static void C_ccall f_13812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13815)
static void C_ccall f_13815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13800)
static void C_ccall f_13800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13361)
static void C_ccall f_13361(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13678)
static void C_ccall f_13678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13607)
static void C_ccall f_13607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13609)
static void C_fcall f_13609(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8154)
static void C_ccall f_8154(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13628)
static void C_ccall f_13628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13631)
static void C_fcall f_13631(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13374)
static void C_ccall f_13374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13450)
static void C_fcall f_13450(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13603)
static void C_ccall f_13603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13587)
static void C_ccall f_13587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13539)
static void C_fcall f_13539(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13553)
static void C_fcall f_13553(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13506)
static void C_ccall f_13506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13481)
static void C_fcall f_13481(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13377)
static void C_ccall f_13377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13385)
static void C_fcall f_13385(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13418)
static void C_ccall f_13418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11888)
static void C_ccall f_11888(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11888)
static void C_ccall f_11888r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13338)
static void C_ccall f_13338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13353)
static void C_ccall f_13353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13345)
static void C_ccall f_13345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13309)
static void C_ccall f_13309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13313)
static void C_ccall f_13313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13274)
static void C_ccall f_13274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13278)
static void C_ccall f_13278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13239)
static void C_ccall f_13239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13243)
static void C_ccall f_13243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13204)
static void C_ccall f_13204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13208)
static void C_ccall f_13208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13169)
static void C_ccall f_13169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13173)
static void C_ccall f_13173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13134)
static void C_ccall f_13134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13138)
static void C_ccall f_13138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11892)
static void C_fcall f_11892(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13098)
static void C_ccall f_13098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13113)
static void C_ccall f_13113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13105)
static void C_ccall f_13105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13069)
static void C_ccall f_13069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13073)
static void C_ccall f_13073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13034)
static void C_ccall f_13034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13038)
static void C_ccall f_13038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12999)
static void C_ccall f_12999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13003)
static void C_ccall f_13003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12964)
static void C_ccall f_12964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12968)
static void C_ccall f_12968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12929)
static void C_ccall f_12929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12933)
static void C_ccall f_12933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12894)
static void C_ccall f_12894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12898)
static void C_ccall f_12898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11895)
static void C_fcall f_11895(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12858)
static void C_ccall f_12858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12873)
static void C_ccall f_12873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12865)
static void C_ccall f_12865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12829)
static void C_ccall f_12829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12833)
static void C_ccall f_12833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12794)
static void C_ccall f_12794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12798)
static void C_ccall f_12798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12759)
static void C_ccall f_12759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12763)
static void C_ccall f_12763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12724)
static void C_ccall f_12724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12728)
static void C_ccall f_12728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12689)
static void C_ccall f_12689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12693)
static void C_ccall f_12693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12654)
static void C_ccall f_12654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12658)
static void C_ccall f_12658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11898)
static void C_fcall f_11898(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12618)
static void C_ccall f_12618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12633)
static void C_ccall f_12633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12625)
static void C_ccall f_12625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12589)
static void C_ccall f_12589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12593)
static void C_ccall f_12593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12554)
static void C_ccall f_12554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12558)
static void C_ccall f_12558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12519)
static void C_ccall f_12519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12523)
static void C_ccall f_12523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12484)
static void C_ccall f_12484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12488)
static void C_ccall f_12488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12449)
static void C_ccall f_12449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12453)
static void C_ccall f_12453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12414)
static void C_ccall f_12414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12418)
static void C_ccall f_12418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11901)
static void C_fcall f_11901(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12378)
static void C_ccall f_12378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12393)
static void C_ccall f_12393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12385)
static void C_ccall f_12385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12349)
static void C_ccall f_12349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12353)
static void C_ccall f_12353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12314)
static void C_ccall f_12314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12318)
static void C_ccall f_12318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12279)
static void C_ccall f_12279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12283)
static void C_ccall f_12283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12244)
static void C_ccall f_12244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12248)
static void C_ccall f_12248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12209)
static void C_ccall f_12209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12213)
static void C_ccall f_12213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12174)
static void C_ccall f_12174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12178)
static void C_ccall f_12178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11904)
static void C_fcall f_11904(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12138)
static void C_ccall f_12138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12153)
static void C_ccall f_12153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12145)
static void C_ccall f_12145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12109)
static void C_ccall f_12109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12113)
static void C_ccall f_12113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12074)
static void C_ccall f_12074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12078)
static void C_ccall f_12078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12039)
static void C_ccall f_12039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12043)
static void C_ccall f_12043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12004)
static void C_ccall f_12004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12008)
static void C_ccall f_12008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11969)
static void C_ccall f_11969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11973)
static void C_ccall f_11973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11934)
static void C_ccall f_11934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11938)
static void C_ccall f_11938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11907)
static void C_fcall f_11907(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11910)
static void C_ccall f_11910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11669)
static void C_fcall f_11669(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11678)
static void C_ccall f_11678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11682)
static void C_ccall f_11682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11869)
static void C_ccall f_11869(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11854)
static void C_ccall f_11854(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11819)
static void C_ccall f_11819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11799)
static void C_ccall f_11799(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11803)
static void C_ccall f_11803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11789)
static void C_ccall f_11789(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11797)
static void C_ccall f_11797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11756)
static void C_ccall f_11756(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11684)
static void C_ccall f_11684(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11751)
static void C_ccall f_11751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11688)
static void C_ccall f_11688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11724)
static void C_fcall f_11724(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11699)
static void C_fcall f_11699(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11640)
static void C_ccall f_11640(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11644)
static void C_ccall f_11644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11655)
static void C_ccall f_11655(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11653)
static void C_ccall f_11653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11609)
static void C_ccall f_11609(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11613)
static void C_ccall f_11613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11624)
static void C_ccall f_11624(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11622)
static void C_ccall f_11622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11591)
static void C_ccall f_11591(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11599)
static void C_ccall f_11599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11607)
static void C_ccall f_11607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11581)
static void C_ccall f_11581(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11589)
static void C_ccall f_11589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11522)
static void C_ccall f_11522(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11529)
static void C_ccall f_11529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11532)
static void C_ccall f_11532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11535)
static void C_ccall f_11535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11540)
static void C_fcall f_11540(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11484)
static void C_ccall f_11484(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11492)
static void C_ccall f_11492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11496)
static void C_ccall f_11496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11516)
static void C_ccall f_11516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11500)
static void C_ccall f_11500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11508)
static void C_ccall f_11508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11504)
static void C_ccall f_11504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11472)
static void C_ccall f_11472(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11463)
static void C_fcall f_11463(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11454)
static void C_ccall f_11454(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11445)
static void C_fcall f_11445(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11436)
static void C_ccall f_11436(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11427)
static void C_fcall f_11427(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11418)
static void C_ccall f_11418(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11403)
static void C_fcall f_11403(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11397)
static void C_fcall f_11397(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11255)
static void C_ccall f_11255(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11255)
static void C_ccall f_11255r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11259)
static void C_fcall f_11259(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11328)
static void C_ccall f_11328(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11371)
static void C_ccall f_11371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11375)
static void C_ccall f_11375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11364)
static void C_ccall f_11364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11351)
static void C_ccall f_11351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11270)
static void C_ccall f_11270(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11313)
static void C_ccall f_11313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11317)
static void C_ccall f_11317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11306)
static void C_ccall f_11306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11293)
static void C_ccall f_11293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11089)
static void C_ccall f_11089(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11190)
static void C_ccall f_11190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11239)
static void C_ccall f_11239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11235)
static void C_ccall f_11235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11207)
static void C_ccall f_11207(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11142)
static void C_fcall f_11142(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11151)
static void C_fcall f_11151(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11135)
static void C_ccall f_11135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10954)
static void C_ccall f_10954(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11080)
static void C_ccall f_11080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11076)
static void C_ccall f_11076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11054)
static void C_ccall f_11054(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10984)
static void C_fcall f_10984(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11000)
static void C_fcall f_11000(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10909)
static void C_ccall f_10909(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10952)
static void C_ccall f_10952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10941)
static void C_ccall f_10941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10793)
static void C_ccall f_10793(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10907)
static void C_ccall f_10907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10808)
static void C_fcall f_10808(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_10838)
static void C_fcall f_10838(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10857)
static void C_ccall f_10857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10842)
static void C_ccall f_10842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10821)
static void C_fcall f_10821(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10671)
static void C_ccall f_10671(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10791)
static void C_ccall f_10791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10686)
static void C_fcall f_10686(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_10716)
static void C_fcall f_10716(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10735)
static void C_ccall f_10735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10720)
static void C_ccall f_10720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10699)
static void C_fcall f_10699(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10574)
static void C_ccall f_10574(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10669)
static void C_ccall f_10669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10589)
static void C_fcall f_10589(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_10635)
static void C_ccall f_10635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10620)
static void C_ccall f_10620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10602)
static void C_fcall f_10602(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10521)
static void C_fcall f_10521(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10559)
static void C_ccall f_10559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10566)
static void C_ccall f_10566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10544)
static void C_ccall f_10544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10519)
static void C_ccall f_10519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10491)
static void C_fcall f_10491(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10493)
static void C_ccall f_10493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10471)
static void C_ccall f_10471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10419)
static void C_fcall f_10419(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10456)
static void C_ccall f_10456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10423)
static void C_ccall f_10423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10439)
static void C_ccall f_10439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10441)
static void C_ccall f_10441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10205)
static void C_ccall f_10205(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_10205)
static void C_ccall f_10205r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_10218)
static void C_fcall f_10218(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10300)
static void C_fcall f_10300(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10303)
static void C_ccall f_10303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10311)
static void C_fcall f_10311(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10323)
static void C_fcall f_10323(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10344)
static void C_ccall f_10344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10352)
static void C_ccall f_10352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10239)
static void C_ccall f_10239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10244)
static void C_fcall f_10244(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10276)
static void C_ccall f_10276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10184)
static void C_ccall f_10184(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_10184)
static void C_ccall f_10184r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_10165)
static void C_ccall f_10165(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_10165)
static void C_ccall f_10165r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_10124)
static void C_ccall f_10124(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_10124)
static void C_ccall f_10124r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_10105)
static void C_ccall f_10105(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_10105)
static void C_ccall f_10105r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9877)
static void C_ccall f_9877(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9877)
static void C_ccall f_9877r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_10082)
static void C_ccall f_10082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10097)
static void C_ccall f_10097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10089)
static void C_ccall f_10089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10053)
static void C_ccall f_10053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10057)
static void C_ccall f_10057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10018)
static void C_ccall f_10018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10022)
static void C_ccall f_10022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9881)
static void C_fcall f_9881(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9982)
static void C_ccall f_9982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9997)
static void C_ccall f_9997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9989)
static void C_ccall f_9989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9953)
static void C_ccall f_9953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9957)
static void C_ccall f_9957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9918)
static void C_ccall f_9918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9922)
static void C_ccall f_9922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9884)
static void C_fcall f_9884(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9887)
static void C_ccall f_9887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9890)
static void C_fcall f_9890(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9835)
static void C_ccall f_9835(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9835)
static void C_ccall f_9835r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9864)
static void C_ccall f_9864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9849)
static void C_ccall f_9849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9780)
static void C_ccall f_9780(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9791)
static void C_ccall f_9791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9793)
static void C_fcall f_9793(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9821)
static void C_ccall f_9821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9681)
static void C_ccall f_9681(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_9681)
static void C_ccall f_9681r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_9685)
static void C_fcall f_9685(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9688)
static void C_ccall f_9688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9753)
static void C_ccall f_9753(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9690)
static void C_fcall f_9690(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9706)
static void C_ccall f_9706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9453)
static void C_ccall f_9453(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_9453)
static void C_ccall f_9453r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_9658)
static void C_ccall f_9658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9673)
static void C_ccall f_9673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9665)
static void C_ccall f_9665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9629)
static void C_ccall f_9629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9633)
static void C_ccall f_9633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9594)
static void C_ccall f_9594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9598)
static void C_ccall f_9598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9457)
static void C_fcall f_9457(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9558)
static void C_ccall f_9558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9573)
static void C_ccall f_9573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9565)
static void C_ccall f_9565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9529)
static void C_ccall f_9529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9533)
static void C_ccall f_9533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9494)
static void C_ccall f_9494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9498)
static void C_ccall f_9498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9460)
static void C_fcall f_9460(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9463)
static void C_ccall f_9463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9473)
static void C_ccall f_9473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9410)
static void C_ccall f_9410(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9410)
static void C_ccall f_9410r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9443)
static void C_ccall f_9443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9428)
static void C_ccall f_9428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9389)
static void C_ccall f_9389(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9354)
static void C_ccall f_9354(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9354)
static void C_ccall f_9354r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9358)
static void C_fcall f_9358(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9246)
static void C_ccall f_9246(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_9246)
static void C_ccall f_9246r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_9333)
static void C_ccall f_9333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9253)
static void C_fcall f_9253(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9262)
static void C_fcall f_9262(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_9309)
static void C_ccall f_9309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9275)
static void C_fcall f_9275(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9301)
static void C_ccall f_9301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9113)
static void C_ccall f_9113(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_9113)
static void C_ccall f_9113r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_9117)
static void C_fcall f_9117(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9120)
static void C_fcall f_9120(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9224)
static void C_ccall f_9224(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9122)
static void C_fcall f_9122(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9129)
static void C_ccall f_9129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9171)
static void C_ccall f_9171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9178)
static void C_ccall f_9178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9152)
static void C_ccall f_9152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9046)
static void C_ccall f_9046(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_9046)
static void C_ccall f_9046r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_9050)
static void C_fcall f_9050(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9096)
static void C_ccall f_9096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9053)
static void C_fcall f_9053(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9089)
static void C_ccall f_9089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9056)
static void C_fcall f_9056(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9069)
static void C_ccall f_9069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9000)
static void C_ccall f_9000(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_9000)
static void C_ccall f_9000r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_9004)
static void C_ccall f_9004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8914)
static void C_fcall f_8914(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8918)
static void C_ccall f_8918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8921)
static void C_ccall f_8921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8930)
static void C_fcall f_8930(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8952)
static void C_ccall f_8952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8899)
static void C_ccall f_8899(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8884)
static void C_ccall f_8884(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8648)
static void C_ccall f_8648(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8648)
static void C_ccall f_8648r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8861)
static void C_ccall f_8861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8876)
static void C_ccall f_8876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8868)
static void C_ccall f_8868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8832)
static void C_ccall f_8832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8836)
static void C_ccall f_8836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8797)
static void C_ccall f_8797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8801)
static void C_ccall f_8801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8652)
static void C_fcall f_8652(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8761)
static void C_ccall f_8761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8776)
static void C_ccall f_8776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8768)
static void C_ccall f_8768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8732)
static void C_ccall f_8732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8736)
static void C_ccall f_8736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8697)
static void C_ccall f_8697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8701)
static void C_ccall f_8701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8655)
static void C_fcall f_8655(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8658)
static void C_ccall f_8658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8669)
static void C_ccall f_8669(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8608)
static void C_ccall f_8608(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8612)
static void C_ccall f_8612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8642)
static void C_ccall f_8642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8623)
static void C_ccall f_8623(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8631)
static void C_ccall f_8631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8587)
static void C_ccall f_8587(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8599)
static void C_ccall f_8599(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8544)
static void C_ccall f_8544(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8544)
static void C_ccall f_8544r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8574)
static void C_ccall f_8574(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8501)
static void C_ccall f_8501(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8501)
static void C_ccall f_8501r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8531)
static void C_ccall f_8531(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8432)
static void C_ccall f_8432(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8432)
static void C_ccall f_8432r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8476)
static void C_ccall f_8476(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8363)
static void C_ccall f_8363(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8363)
static void C_ccall f_8363r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8407)
static void C_ccall f_8407(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8339)
static void C_ccall f_8339(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8351)
static void C_ccall f_8351(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8324)
static void C_ccall f_8324(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8213)
static void C_ccall f_8213(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_8213)
static void C_ccall f_8213r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_8288)
static void C_ccall f_8288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8217)
static void C_fcall f_8217(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8257)
static void C_ccall f_8257(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8246)
static void C_ccall f_8246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8231)
static void C_ccall f_8231(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8239)
static void C_ccall f_8239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8179)
static void C_ccall f_8179(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_8179)
static void C_ccall f_8179r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_8191)
static void C_ccall f_8191(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8172)
static void C_ccall f_8172(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8165)
static void C_ccall f_8165(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8146)
static void C_ccall f_8146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8143)
static void C_ccall f_8143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8136)
static void C_fcall f_8136(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8133)
static void C_ccall f_8133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8126)
static void C_fcall f_8126(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8108)
static void C_fcall f_8108(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8097)
static void C_fcall f_8097(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8094)
static void C_ccall f_8094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8091)
static void C_ccall f_8091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8088)
static void C_ccall f_8088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8059)
static void C_fcall f_8059(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8052)
static void C_fcall f_8052(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8049)
static void C_ccall f_8049(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8028)
static void C_fcall f_8028(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8009)
static void C_ccall f_8009(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7990)
static void C_ccall f_7990(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7983)
static void C_ccall f_7983(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7976)
static void C_ccall f_7976(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7961)
static void C_fcall f_7961(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7950)
static void C_fcall f_7950(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7943)
static void C_ccall f_7943(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7916)
static void C_fcall f_7916(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_7889)
static void C_fcall f_7889(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_7848)
static void C_fcall f_7848(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7854)
static void C_fcall f_7854(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7864)
static void C_fcall f_7864(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7762)
static void C_ccall f_7762(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_7762)
static void C_ccall f_7762r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_7723)
static void C_ccall f_7723(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7729)
static void C_fcall f_7729(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7752)
static void C_ccall f_7752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7742)
static void C_fcall f_7742(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7684)
static void C_ccall f_7684(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7690)
static void C_fcall f_7690(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7710)
static void C_ccall f_7710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7700)
static void C_fcall f_7700(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7644)
static void C_ccall f_7644(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7650)
static void C_fcall f_7650(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7674)
static void C_ccall f_7674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7660)
static void C_fcall f_7660(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7545)
static void C_ccall f_7545(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7545)
static void C_ccall f_7545r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7549)
static void C_ccall f_7549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7574)
static void C_fcall f_7574(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7591)
static void C_ccall f_7591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7595)
static void C_ccall f_7595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7551)
static void C_fcall f_7551(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7568)
static void C_ccall f_7568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7484)
static void C_ccall f_7484(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7497)
static void C_fcall f_7497(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7474)
static void C_ccall f_7474(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7434)
static void C_ccall f_7434(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7434)
static void C_ccall f_7434r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7464)
static void C_ccall f_7464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7344)
static void C_ccall f_7344(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7296)
static void C_ccall f_7296(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7330)
static void C_ccall f_7330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7273)
static void C_ccall f_7273(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7267)
static void C_ccall f_7267(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7252)
static void C_ccall f_7252(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7238)
static void C_ccall f_7238(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7228)
static void C_ccall f_7228(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7218)
static void C_ccall f_7218(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7208)
static void C_ccall f_7208(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7198)
static void C_ccall f_7198(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7165)
static void C_ccall f_7165(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7165)
static void C_ccall f_7165r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7174)
static void C_ccall f_7174(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7179)
static void C_ccall f_7179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7154)
static void C_ccall f_7154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7159)
static void C_ccall f_7159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6861)
static void C_ccall f_6861(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6871)
static void C_ccall f_6871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7122)
static void C_ccall f_7122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6874)
static void C_ccall f_6874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6877)
static void C_ccall f_6877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6892)
static void C_fcall f_6892(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6902)
static void C_ccall f_6902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6904)
static void C_fcall f_6904(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_6963)
static void C_ccall f_6963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6973)
static void C_ccall f_6973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7090)
static void C_ccall f_7090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7078)
static void C_ccall f_7078(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7076)
static void C_ccall f_7076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7063)
static void C_ccall f_7063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7017)
static void C_ccall f_7017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7044)
static void C_ccall f_7044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7023)
static void C_ccall f_7023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6957)
static void C_fcall f_6957(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6916)
static void C_fcall f_6916(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6929)
static void C_fcall f_6929(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7139)
static void C_ccall f_7139(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7130)
static void C_ccall f_7130(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7138)
static void C_ccall f_7138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7141)
static void C_ccall f_7141(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7141)
static void C_ccall f_7141r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7149)
static void C_ccall f_7149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6563)
static void C_ccall f_6563(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6816)
static void C_ccall f_6816(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6849)
static void C_ccall f_6849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6845)
static void C_ccall f_6845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6834)
static void C_ccall f_6834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6830)
static void C_ccall f_6830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6724)
static void C_ccall f_6724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6727)
static void C_ccall f_6727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6730)
static void C_ccall f_6730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6810)
static void C_ccall f_6810(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6635)
static void C_ccall f_6635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6576)
static void C_ccall f_6576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6733)
static void C_ccall f_6733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6740)
static void C_ccall f_6740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6800)
static void C_ccall f_6800(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6786)
static void C_ccall f_6786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6752)
static void C_ccall f_6752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6778)
static void C_ccall f_6778(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6713)
static void C_ccall f_6713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6760)
static void C_ccall f_6760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6756)
static void C_ccall f_6756(C_word c,C_word t0,C_word t1) C_noret;

C_noret_decl(trf_41346)
static void C_fcall trf_41346(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41346(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_41346(t0,t1,t2);}

C_noret_decl(trf_41406)
static void C_fcall trf_41406(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41406(void *dummy){
C_word t13=C_pick(0);
C_word t12=C_pick(1);
C_word t11=C_pick(2);
C_word t10=C_pick(3);
C_word t9=C_pick(4);
C_word t8=C_pick(5);
C_word t7=C_pick(6);
C_word t6=C_pick(7);
C_word t5=C_pick(8);
C_word t4=C_pick(9);
C_word t3=C_pick(10);
C_word t2=C_pick(11);
C_word t1=C_pick(12);
C_word t0=C_pick(13);
C_adjust_stack(-14);
f_41406(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}

C_noret_decl(trf_41426)
static void C_fcall trf_41426(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41426(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41426(t0,t1);}

C_noret_decl(trf_41429)
static void C_fcall trf_41429(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41429(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41429(t0,t1);}

C_noret_decl(trf_41290)
static void C_fcall trf_41290(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41290(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41290(t0,t1);}

C_noret_decl(trf_41212)
static void C_fcall trf_41212(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41212(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_41212(t0,t1,t2);}

C_noret_decl(trf_41024)
static void C_fcall trf_41024(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41024(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41024(t0,t1);}

C_noret_decl(trf_39906)
static void C_fcall trf_39906(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39906(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39906(t0,t1);}

C_noret_decl(trf_39779)
static void C_fcall trf_39779(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39779(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39779(t0,t1,t2);}

C_noret_decl(trf_39463)
static void C_fcall trf_39463(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39463(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39463(t0,t1);}

C_noret_decl(trf_38558)
static void C_fcall trf_38558(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38558(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_38558(t0,t1,t2);}

C_noret_decl(trf_38593)
static void C_fcall trf_38593(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38593(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38593(t0,t1);}

C_noret_decl(trf_38617)
static void C_fcall trf_38617(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38617(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38617(t0,t1);}

C_noret_decl(trf_38596)
static void C_fcall trf_38596(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38596(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38596(t0,t1);}

C_noret_decl(trf_38399)
static void C_fcall trf_38399(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38399(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38399(t0,t1);}

C_noret_decl(trf_38155)
static void C_fcall trf_38155(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38155(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38155(t0,t1);}

C_noret_decl(trf_38162)
static void C_fcall trf_38162(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38162(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38162(t0,t1);}

C_noret_decl(trf_38143)
static void C_fcall trf_38143(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38143(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38143(t0,t1);}

C_noret_decl(trf_25138)
static void C_fcall trf_25138(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25138(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25138(t0,t1);}

C_noret_decl(trf_25145)
static void C_fcall trf_25145(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25145(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25145(t0,t1);}

C_noret_decl(trf_25520)
static void C_fcall trf_25520(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25520(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25520(t0,t1,t2);}

C_noret_decl(trf_25543)
static void C_fcall trf_25543(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25543(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25543(t0,t1,t2);}

C_noret_decl(trf_25560)
static void C_fcall trf_25560(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25560(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25560(t0,t1);}

C_noret_decl(trf_25563)
static void C_fcall trf_25563(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25563(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25563(t0,t1);}

C_noret_decl(trf_25566)
static void C_fcall trf_25566(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25566(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25566(t0,t1);}

C_noret_decl(trf_25484)
static void C_fcall trf_25484(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25484(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25484(t0,t1,t2);}

C_noret_decl(trf_25412)
static void C_fcall trf_25412(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25412(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25412(t0,t1,t2);}

C_noret_decl(trf_25428)
static void C_fcall trf_25428(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25428(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25428(t0,t1);}

C_noret_decl(trf_25375)
static void C_fcall trf_25375(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25375(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25375(t0,t1);}

C_noret_decl(trf_25161)
static void C_fcall trf_25161(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25161(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25161(t0,t1);}

C_noret_decl(trf_25168)
static void C_fcall trf_25168(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25168(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25168(t0,t1);}

C_noret_decl(trf_25171)
static void C_fcall trf_25171(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25171(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25171(t0,t1);}

C_noret_decl(trf_37652)
static void C_fcall trf_37652(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37652(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37652(t0,t1);}

C_noret_decl(trf_37655)
static void C_fcall trf_37655(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37655(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37655(t0,t1);}

C_noret_decl(trf_37498)
static void C_fcall trf_37498(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37498(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37498(t0,t1);}

C_noret_decl(trf_37306)
static void C_fcall trf_37306(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37306(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37306(t0,t1);}

C_noret_decl(trf_37156)
static void C_fcall trf_37156(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37156(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37156(t0,t1);}

C_noret_decl(trf_37245)
static void C_fcall trf_37245(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37245(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37245(t0,t1);}

C_noret_decl(trf_37159)
static void C_fcall trf_37159(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37159(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37159(t0,t1);}

C_noret_decl(trf_37175)
static void C_fcall trf_37175(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37175(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_37175(t0,t1,t2,t3);}

C_noret_decl(trf_37197)
static void C_fcall trf_37197(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37197(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37197(t0,t1);}

C_noret_decl(trf_37092)
static void C_fcall trf_37092(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37092(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_37092(t0,t1,t2);}

C_noret_decl(trf_37039)
static void C_fcall trf_37039(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37039(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37039(t0,t1);}

C_noret_decl(trf_29642)
static void C_fcall trf_29642(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29642(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29642(t0,t1);}

C_noret_decl(trf_29504)
static void C_fcall trf_29504(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29504(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29504(t0,t1);}

C_noret_decl(trf_29718)
static void C_fcall trf_29718(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29718(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29718(t0,t1);}

C_noret_decl(trf_36643)
static void C_fcall trf_36643(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36643(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_36643(t0,t1,t2);}

C_noret_decl(trf_36671)
static void C_fcall trf_36671(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36671(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36671(t0,t1);}

C_noret_decl(trf_36374)
static void C_fcall trf_36374(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36374(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36374(t0,t1);}

C_noret_decl(trf_36538)
static void C_fcall trf_36538(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36538(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36538(t0,t1);}

C_noret_decl(trf_36387)
static void C_fcall trf_36387(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36387(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36387(t0,t1);}

C_noret_decl(trf_36622)
static void C_fcall trf_36622(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36622(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36622(t0,t1);}

C_noret_decl(trf_36312)
static void C_fcall trf_36312(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36312(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_36312(t0,t1,t2);}

C_noret_decl(trf_36253)
static void C_fcall trf_36253(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36253(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36253(t0,t1);}

C_noret_decl(trf_36189)
static void C_fcall trf_36189(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36189(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_36189(t0,t1,t2);}

C_noret_decl(trf_36096)
static void C_fcall trf_36096(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36096(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36096(t0,t1);}

C_noret_decl(trf_36091)
static void C_fcall trf_36091(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36091(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_36091(t0,t1,t2);}

C_noret_decl(trf_35934)
static void C_fcall trf_35934(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35934(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_35934(t0,t1,t2,t3);}

C_noret_decl(trf_36039)
static void C_fcall trf_36039(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36039(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_36039(t0,t1,t2);}

C_noret_decl(trf_36008)
static void C_fcall trf_36008(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36008(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_36008(t0,t1,t2);}

C_noret_decl(trf_35964)
static void C_fcall trf_35964(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35964(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35964(t0,t1);}

C_noret_decl(trf_35936)
static void C_fcall trf_35936(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35936(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35936(t0,t1);}

C_noret_decl(trf_35891)
static void C_fcall trf_35891(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35891(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35891(t0,t1);}

C_noret_decl(trf_35847)
static void C_fcall trf_35847(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35847(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_35847(t0,t1,t2,t3);}

C_noret_decl(trf_35692)
static void C_fcall trf_35692(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35692(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_35692(t0,t1,t2,t3,t4);}

C_noret_decl(trf_35721)
static void C_fcall trf_35721(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35721(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_35721(t0,t1,t2);}

C_noret_decl(trf_35758)
static void C_fcall trf_35758(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35758(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35758(t0,t1);}

C_noret_decl(trf_35159)
static void C_fcall trf_35159(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35159(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35159(t0,t1);}

C_noret_decl(trf_35162)
static void C_fcall trf_35162(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35162(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35162(t0,t1);}

C_noret_decl(trf_35165)
static void C_fcall trf_35165(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35165(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35165(t0,t1);}

C_noret_decl(trf_35171)
static void C_fcall trf_35171(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35171(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35171(t0,t1);}

C_noret_decl(trf_34921)
static void C_fcall trf_34921(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34921(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34921(t0,t1);}

C_noret_decl(trf_34924)
static void C_fcall trf_34924(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34924(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34924(t0,t1);}

C_noret_decl(trf_34930)
static void C_fcall trf_34930(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34930(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34930(t0,t1);}

C_noret_decl(trf_34893)
static void C_fcall trf_34893(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34893(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34893(t0,t1);}

C_noret_decl(trf_34873)
static void C_fcall trf_34873(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34873(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34873(t0,t1);}

C_noret_decl(trf_34836)
static void C_fcall trf_34836(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34836(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34836(t0,t1);}

C_noret_decl(trf_34816)
static void C_fcall trf_34816(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34816(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34816(t0,t1);}

C_noret_decl(trf_33465)
static void C_fcall trf_33465(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33465(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33465(t0,t1);}

C_noret_decl(trf_33468)
static void C_fcall trf_33468(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33468(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33468(t0,t1);}

C_noret_decl(trf_33471)
static void C_fcall trf_33471(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33471(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33471(t0,t1);}

C_noret_decl(trf_32995)
static void C_fcall trf_32995(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32995(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32995(t0,t1);}

C_noret_decl(trf_32998)
static void C_fcall trf_32998(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32998(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32998(t0,t1);}

C_noret_decl(trf_33001)
static void C_fcall trf_33001(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33001(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33001(t0,t1);}

C_noret_decl(trf_32525)
static void C_fcall trf_32525(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32525(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32525(t0,t1);}

C_noret_decl(trf_32528)
static void C_fcall trf_32528(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32528(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32528(t0,t1);}

C_noret_decl(trf_32531)
static void C_fcall trf_32531(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32531(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32531(t0,t1);}

C_noret_decl(trf_31777)
static void C_fcall trf_31777(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31777(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31777(t0,t1);}

C_noret_decl(trf_31780)
static void C_fcall trf_31780(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31780(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31780(t0,t1);}

C_noret_decl(trf_31783)
static void C_fcall trf_31783(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31783(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31783(t0,t1);}

C_noret_decl(trf_31786)
static void C_fcall trf_31786(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31786(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31786(t0,t1);}

C_noret_decl(trf_31029)
static void C_fcall trf_31029(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31029(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31029(t0,t1);}

C_noret_decl(trf_31032)
static void C_fcall trf_31032(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31032(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31032(t0,t1);}

C_noret_decl(trf_31035)
static void C_fcall trf_31035(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31035(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31035(t0,t1);}

C_noret_decl(trf_31038)
static void C_fcall trf_31038(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31038(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31038(t0,t1);}

C_noret_decl(trf_30559)
static void C_fcall trf_30559(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30559(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30559(t0,t1);}

C_noret_decl(trf_30562)
static void C_fcall trf_30562(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30562(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30562(t0,t1);}

C_noret_decl(trf_30565)
static void C_fcall trf_30565(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30565(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30565(t0,t1);}

C_noret_decl(trf_29811)
static void C_fcall trf_29811(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29811(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29811(t0,t1);}

C_noret_decl(trf_29814)
static void C_fcall trf_29814(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29814(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29814(t0,t1);}

C_noret_decl(trf_29817)
static void C_fcall trf_29817(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29817(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29817(t0,t1);}

C_noret_decl(trf_29820)
static void C_fcall trf_29820(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29820(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29820(t0,t1);}

C_noret_decl(trf_29469)
static void C_fcall trf_29469(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29469(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29469(t0,t1,t2,t3);}

C_noret_decl(trf_29309)
static void C_fcall trf_29309(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29309(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29309(t0,t1);}

C_noret_decl(trf_29344)
static void C_fcall trf_29344(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29344(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_29344(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_29354)
static void C_fcall trf_29354(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29354(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29354(t0,t1);}

C_noret_decl(trf_29317)
static void C_fcall trf_29317(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29317(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29317(t0,t1,t2);}

C_noret_decl(trf_29477)
static void C_fcall trf_29477(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29477(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29477(t0,t1);}

C_noret_decl(trf_29095)
static void C_fcall trf_29095(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29095(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29095(t0,t1);}

C_noret_decl(trf_29101)
static void C_fcall trf_29101(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29101(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29101(t0,t1);}

C_noret_decl(trf_29124)
static void C_fcall trf_29124(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29124(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29124(t0,t1);}

C_noret_decl(trf_29137)
static void C_fcall trf_29137(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29137(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29137(t0,t1);}

C_noret_decl(trf_29111)
static void C_fcall trf_29111(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29111(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29111(t0,t1);}

C_noret_decl(trf_28924)
static void C_fcall trf_28924(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28924(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28924(t0,t1,t2,t3);}

C_noret_decl(trf_28933)
static void C_fcall trf_28933(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28933(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_28933(t0,t1,t2,t3,t4);}

C_noret_decl(trf_28887)
static void C_fcall trf_28887(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28887(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28887(t0,t1);}

C_noret_decl(trf_28750)
static void C_fcall trf_28750(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28750(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28750(t0,t1);}

C_noret_decl(trf_28680)
static void C_fcall trf_28680(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28680(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28680(t0,t1);}

C_noret_decl(trf_28041)
static void C_fcall trf_28041(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28041(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28041(t0,t1,t2);}

C_noret_decl(trf_28001)
static void C_fcall trf_28001(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28001(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28001(t0,t1,t2);}

C_noret_decl(trf_28014)
static void C_fcall trf_28014(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28014(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28014(t0,t1);}

C_noret_decl(trf_28593)
static void C_fcall trf_28593(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28593(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28593(t0,t1);}

C_noret_decl(trf_28383)
static void C_fcall trf_28383(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28383(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28383(t0,t1);}

C_noret_decl(trf_28499)
static void C_fcall trf_28499(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28499(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28499(t0,t1);}

C_noret_decl(trf_28386)
static void C_fcall trf_28386(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28386(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28386(t0,t1);}

C_noret_decl(trf_28389)
static void C_fcall trf_28389(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28389(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28389(t0,t1);}

C_noret_decl(trf_28294)
static void C_fcall trf_28294(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28294(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28294(t0,t1);}

C_noret_decl(trf_28209)
static void C_fcall trf_28209(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28209(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28209(t0,t1);}

C_noret_decl(trf_28166)
static void C_fcall trf_28166(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28166(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28166(t0,t1);}

C_noret_decl(trf_28133)
static void C_fcall trf_28133(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28133(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28133(t0,t1);}

C_noret_decl(trf_28128)
static void C_fcall trf_28128(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28128(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28128(t0,t1);}

C_noret_decl(trf_28123)
static void C_fcall trf_28123(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28123(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_28123(t0,t1,t2,t3,t4);}

C_noret_decl(trf_27870)
static void C_fcall trf_27870(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27870(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27870(t0,t1);}

C_noret_decl(trf_27717)
static void C_fcall trf_27717(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27717(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27717(t0,t1,t2,t3);}

C_noret_decl(trf_27563)
static void C_fcall trf_27563(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27563(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27563(t0,t1,t2);}

C_noret_decl(trf_27405)
static void C_fcall trf_27405(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27405(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27405(t0,t1,t2);}

C_noret_decl(trf_27438)
static void C_fcall trf_27438(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27438(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27438(t0,t1);}

C_noret_decl(trf_27345)
static void C_fcall trf_27345(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27345(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27345(t0,t1);}

C_noret_decl(trf_27310)
static void C_fcall trf_27310(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27310(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27310(t0,t1);}

C_noret_decl(trf_27326)
static void C_fcall trf_27326(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27326(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27326(t0,t1);}

C_noret_decl(trf_27281)
static void C_fcall trf_27281(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27281(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27281(t0,t1);}

C_noret_decl(trf_27188)
static void C_fcall trf_27188(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27188(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27188(t0,t1);}

C_noret_decl(trf_26944)
static void C_fcall trf_26944(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26944(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26944(t0,t1,t2);}

C_noret_decl(trf_26748)
static void C_fcall trf_26748(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26748(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26748(t0,t1);}

C_noret_decl(trf_26911)
static void C_fcall trf_26911(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26911(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26911(t0,t1);}

C_noret_decl(trf_26751)
static void C_fcall trf_26751(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26751(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26751(t0,t1);}

C_noret_decl(trf_26754)
static void C_fcall trf_26754(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26754(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26754(t0,t1);}

C_noret_decl(trf_26757)
static void C_fcall trf_26757(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26757(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26757(t0,t1);}

C_noret_decl(trf_26799)
static void C_fcall trf_26799(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26799(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26799(t0,t1);}

C_noret_decl(trf_26764)
static void C_fcall trf_26764(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26764(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26764(t0,t1);}

C_noret_decl(trf_26493)
static void C_fcall trf_26493(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26493(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26493(t0,t1,t2,t3);}

C_noret_decl(trf_26501)
static void C_fcall trf_26501(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26501(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26501(t0,t1,t2,t3);}

C_noret_decl(trf_26630)
static void C_fcall trf_26630(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26630(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26630(t0,t1,t2);}

C_noret_decl(trf_26584)
static void C_fcall trf_26584(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26584(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26584(t0,t1,t2);}

C_noret_decl(trf_26487)
static void C_fcall trf_26487(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26487(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26487(t0,t1,t2);}

C_noret_decl(trf_26481)
static void C_fcall trf_26481(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26481(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26481(t0,t1);}

C_noret_decl(trf_26475)
static void C_fcall trf_26475(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26475(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26475(t0,t1,t2);}

C_noret_decl(trf_26404)
static void C_fcall trf_26404(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26404(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26404(t0,t1,t2);}

C_noret_decl(trf_26406)
static void C_fcall trf_26406(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26406(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26406(t0,t1,t2);}

C_noret_decl(trf_26412)
static void C_fcall trf_26412(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26412(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26412(t0,t1,t2);}

C_noret_decl(trf_26253)
static void C_fcall trf_26253(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26253(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26253(t0,t1);}

C_noret_decl(trf_26268)
static void C_fcall trf_26268(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26268(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26268(t0,t1,t2);}

C_noret_decl(trf_26211)
static void C_fcall trf_26211(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26211(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26211(t0,t1,t2);}

C_noret_decl(trf_26151)
static void C_fcall trf_26151(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26151(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26151(t0,t1,t2);}

C_noret_decl(trf_26020)
static void C_fcall trf_26020(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26020(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26020(t0,t1,t2);}

C_noret_decl(trf_25896)
static void C_fcall trf_25896(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25896(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_25896(t0,t1,t2,t3);}

C_noret_decl(trf_25932)
static void C_fcall trf_25932(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25932(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25932(t0,t1,t2);}

C_noret_decl(trf_25728)
static void C_fcall trf_25728(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25728(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25728(t0,t1);}

C_noret_decl(trf_23483)
static void C_fcall trf_23483(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23483(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23483(t0,t1);}

C_noret_decl(trf_25862)
static void C_fcall trf_25862(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25862(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25862(t0,t1,t2);}

C_noret_decl(trf_25872)
static void C_fcall trf_25872(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25872(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25872(t0,t1);}

C_noret_decl(trf_25832)
static void C_fcall trf_25832(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25832(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25832(t0,t1,t2);}

C_noret_decl(trf_25842)
static void C_fcall trf_25842(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25842(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25842(t0,t1);}

C_noret_decl(trf_24825)
static void C_fcall trf_24825(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24825(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24825(t0,t1);}

C_noret_decl(trf_24828)
static void C_fcall trf_24828(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24828(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24828(t0,t1);}

C_noret_decl(trf_24831)
static void C_fcall trf_24831(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24831(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24831(t0,t1);}

C_noret_decl(trf_24834)
static void C_fcall trf_24834(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24834(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24834(t0,t1);}

C_noret_decl(trf_24837)
static void C_fcall trf_24837(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24837(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24837(t0,t1);}

C_noret_decl(trf_24840)
static void C_fcall trf_24840(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24840(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24840(t0,t1);}

C_noret_decl(trf_24668)
static void C_fcall trf_24668(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24668(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24668(t0,t1);}

C_noret_decl(trf_24597)
static void C_fcall trf_24597(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24597(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24597(t0,t1);}

C_noret_decl(trf_24412)
static void C_fcall trf_24412(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24412(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24412(t0,t1);}

C_noret_decl(trf_24424)
static void C_fcall trf_24424(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24424(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24424(t0,t1);}

C_noret_decl(trf_24461)
static void C_fcall trf_24461(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24461(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_24461(t0,t1,t2,t3,t4);}

C_noret_decl(trf_24496)
static void C_fcall trf_24496(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24496(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24496(t0,t1);}

C_noret_decl(trf_24391)
static void C_fcall trf_24391(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24391(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24391(t0,t1);}

C_noret_decl(trf_24326)
static void C_fcall trf_24326(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24326(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24326(t0,t1,t2);}

C_noret_decl(trf_24335)
static void C_fcall trf_24335(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24335(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24335(t0,t1,t2);}

C_noret_decl(trf_24348)
static void C_fcall trf_24348(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24348(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24348(t0,t1);}

C_noret_decl(trf_24282)
static void C_fcall trf_24282(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24282(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24282(t0,t1,t2);}

C_noret_decl(trf_24270)
static void C_fcall trf_24270(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24270(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24270(t0,t1);}

C_noret_decl(trf_24168)
static void C_fcall trf_24168(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24168(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24168(t0,t1);}

C_noret_decl(trf_24120)
static void C_fcall trf_24120(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24120(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24120(t0,t1);}

C_noret_decl(trf_23501)
static void C_fcall trf_23501(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23501(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_23501(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_23511)
static void C_fcall trf_23511(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23511(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23511(t0,t1);}

C_noret_decl(trf_23640)
static void C_fcall trf_23640(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23640(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23640(t0,t1);}

C_noret_decl(trf_23728)
static void C_fcall trf_23728(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23728(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23728(t0,t1);}

C_noret_decl(trf_23801)
static void C_fcall trf_23801(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23801(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23801(t0,t1);}

C_noret_decl(trf_23879)
static void C_fcall trf_23879(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23879(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23879(t0,t1);}

C_noret_decl(trf_23830)
static void C_fcall trf_23830(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23830(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23830(t0,t1);}

C_noret_decl(trf_23846)
static void C_fcall trf_23846(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23846(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23846(t0,t1);}

C_noret_decl(trf_23810)
static void C_fcall trf_23810(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23810(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23810(t0,t1);}

C_noret_decl(trf_23752)
static void C_fcall trf_23752(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23752(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23752(t0,t1,t2);}

C_noret_decl(trf_23671)
static void C_fcall trf_23671(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23671(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23671(t0,t1,t2);}

C_noret_decl(trf_23687)
static void C_fcall trf_23687(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23687(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23687(t0,t1);}

C_noret_decl(trf_23655)
static void C_fcall trf_23655(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23655(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23655(t0,t1);}

C_noret_decl(trf_23397)
static void C_fcall trf_23397(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23397(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23397(t0,t1);}

C_noret_decl(trf_23406)
static void C_fcall trf_23406(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23406(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23406(t0,t1);}

C_noret_decl(trf_23411)
static void C_fcall trf_23411(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23411(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23411(t0,t1,t2);}

C_noret_decl(trf_23389)
static void C_fcall trf_23389(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23389(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23389(t0,t1);}

C_noret_decl(trf_23181)
static void C_fcall trf_23181(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23181(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23181(t0,t1,t2,t3);}

C_noret_decl(trf_23148)
static void C_fcall trf_23148(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23148(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23148(t0,t1,t2,t3);}

C_noret_decl(trf_23130)
static void C_fcall trf_23130(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23130(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23130(t0,t1,t2,t3);}

C_noret_decl(trf_23120)
static void C_fcall trf_23120(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23120(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23120(t0,t1,t2,t3);}

C_noret_decl(trf_23108)
static void C_fcall trf_23108(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23108(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23108(t0,t1,t2);}

C_noret_decl(trf_23076)
static void C_fcall trf_23076(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23076(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23076(t0,t1,t2);}

C_noret_decl(trf_23060)
static void C_fcall trf_23060(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23060(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23060(t0,t1);}

C_noret_decl(trf_23048)
static void C_fcall trf_23048(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23048(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23048(t0,t1);}

C_noret_decl(trf_23030)
static void C_fcall trf_23030(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23030(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23030(t0,t1);}

C_noret_decl(trf_23012)
static void C_fcall trf_23012(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23012(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23012(t0,t1);}

C_noret_decl(trf_22997)
static void C_fcall trf_22997(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22997(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22997(t0,t1);}

C_noret_decl(trf_22991)
static void C_fcall trf_22991(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22991(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22991(t0,t1,t2,t3);}

C_noret_decl(trf_22979)
static void C_fcall trf_22979(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22979(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22979(t0,t1);}

C_noret_decl(trf_22961)
static void C_fcall trf_22961(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22961(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22961(t0,t1);}

C_noret_decl(trf_22940)
static void C_fcall trf_22940(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22940(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22940(t0,t1,t2);}

C_noret_decl(trf_22908)
static void C_fcall trf_22908(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22908(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22908(t0,t1);}

C_noret_decl(trf_22850)
static void C_fcall trf_22850(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22850(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22850(t0,t1,t2);}

C_noret_decl(trf_22840)
static void C_fcall trf_22840(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22840(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22840(t0,t1);}

C_noret_decl(trf_22834)
static void C_fcall trf_22834(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22834(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22834(t0,t1);}

C_noret_decl(trf_22822)
static void C_fcall trf_22822(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22822(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22822(t0,t1);}

C_noret_decl(trf_22798)
static void C_fcall trf_22798(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22798(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22798(t0,t1,t2);}

C_noret_decl(trf_22711)
static void C_fcall trf_22711(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22711(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22711(t0,t1);}

C_noret_decl(trf_22690)
static void C_fcall trf_22690(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22690(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_22690(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_22680)
static void C_fcall trf_22680(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22680(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22680(t0,t1);}

C_noret_decl(trf_22668)
static void C_fcall trf_22668(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22668(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22668(t0,t1);}

C_noret_decl(trf_22627)
static void C_fcall trf_22627(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22627(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22627(t0,t1);}

C_noret_decl(trf_22609)
static void C_fcall trf_22609(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22609(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22609(t0,t1);}

C_noret_decl(trf_22591)
static void C_fcall trf_22591(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22591(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22591(t0,t1);}

C_noret_decl(trf_21558)
static void C_fcall trf_21558(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21558(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21558(t0,t1);}

C_noret_decl(trf_21561)
static void C_fcall trf_21561(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21561(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21561(t0,t1);}

C_noret_decl(trf_22276)
static void C_fcall trf_22276(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22276(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22276(t0,t1,t2);}

C_noret_decl(trf_22299)
static void C_fcall trf_22299(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22299(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_22299(t0,t1,t2,t3,t4);}

C_noret_decl(trf_22334)
static void C_fcall trf_22334(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22334(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22334(t0,t1);}

C_noret_decl(trf_22238)
static void C_fcall trf_22238(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22238(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22238(t0,t1);}

C_noret_decl(trf_21766)
static void C_fcall trf_21766(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21766(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21766(t0,t1);}

C_noret_decl(trf_22109)
static void C_fcall trf_22109(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22109(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22109(t0,t1,t2,t3);}

C_noret_decl(trf_22195)
static void C_fcall trf_22195(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22195(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22195(t0,t1,t2,t3);}

C_noret_decl(trf_22152)
static void C_fcall trf_22152(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22152(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22152(t0,t1,t2);}

C_noret_decl(trf_22076)
static void C_fcall trf_22076(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22076(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22076(t0,t1,t2);}

C_noret_decl(trf_22014)
static void C_fcall trf_22014(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22014(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22014(t0,t1,t2);}

C_noret_decl(trf_22049)
static void C_fcall trf_22049(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22049(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22049(t0,t1,t2,t3);}

C_noret_decl(trf_21834)
static void C_fcall trf_21834(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21834(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21834(t0,t1,t2);}

C_noret_decl(trf_21730)
static void C_fcall trf_21730(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21730(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21730(t0,t1,t2);}

C_noret_decl(trf_21987)
static void C_fcall trf_21987(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21987(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21987(t0,t1,t2,t3);}

C_noret_decl(trf_21960)
static void C_fcall trf_21960(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21960(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21960(t0,t1,t2,t3);}

C_noret_decl(trf_21871)
static void C_fcall trf_21871(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21871(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21871(t0,t1,t2);}

C_noret_decl(trf_21921)
static void C_fcall trf_21921(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21921(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21921(t0,t1,t2,t3);}

C_noret_decl(trf_21653)
static void C_fcall trf_21653(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21653(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21653(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21571)
static void C_fcall trf_21571(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21571(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21571(t0,t1,t2,t3);}

C_noret_decl(trf_21492)
static void C_fcall trf_21492(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21492(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21492(t0,t1,t2);}

C_noret_decl(trf_21517)
static void C_fcall trf_21517(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21517(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21517(t0,t1);}

C_noret_decl(trf_21220)
static void C_fcall trf_21220(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21220(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21220(t0,t1);}

C_noret_decl(trf_21223)
static void C_fcall trf_21223(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21223(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21223(t0,t1);}

C_noret_decl(trf_21229)
static void C_fcall trf_21229(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21229(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21229(t0,t1);}

C_noret_decl(trf_20943)
static void C_fcall trf_20943(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20943(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20943(t0,t1);}

C_noret_decl(trf_20946)
static void C_fcall trf_20946(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20946(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20946(t0,t1);}

C_noret_decl(trf_20873)
static void C_fcall trf_20873(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20873(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20873(t0,t1);}

C_noret_decl(trf_20721)
static void C_fcall trf_20721(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20721(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20721(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20646)
static void C_fcall trf_20646(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20646(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20646(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20656)
static void C_fcall trf_20656(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20656(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20656(t0,t1);}

C_noret_decl(trf_20663)
static void C_fcall trf_20663(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20663(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20663(t0,t1);}

C_noret_decl(trf_20758)
static void C_fcall trf_20758(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20758(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20758(t0,t1,t2);}

C_noret_decl(trf_20536)
static void C_fcall trf_20536(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20536(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20536(t0,t1,t2,t3);}

C_noret_decl(trf_20548)
static void C_fcall trf_20548(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20548(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20548(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20609)
static void C_fcall trf_20609(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20609(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20609(t0,t1,t2);}

C_noret_decl(trf_19973)
static void C_fcall trf_19973(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19973(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_19973(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_19909)
static void C_fcall trf_19909(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19909(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19909(t0,t1);}

C_noret_decl(trf_19856)
static void C_fcall trf_19856(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19856(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19856(t0,t1);}

C_noret_decl(trf_19859)
static void C_fcall trf_19859(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19859(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19859(t0,t1);}

C_noret_decl(trf_20053)
static void C_fcall trf_20053(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20053(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20053(t0,t1);}

C_noret_decl(trf_20056)
static void C_fcall trf_20056(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20056(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20056(t0,t1);}

C_noret_decl(trf_20059)
static void C_fcall trf_20059(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20059(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20059(t0,t1);}

C_noret_decl(trf_20074)
static void C_fcall trf_20074(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20074(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20074(t0,t1);}

C_noret_decl(trf_19635)
static void C_fcall trf_19635(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19635(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19635(t0,t1);}

C_noret_decl(trf_19727)
static void C_fcall trf_19727(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19727(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19727(t0,t1,t2);}

C_noret_decl(trf_19746)
static void C_fcall trf_19746(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19746(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19746(t0,t1);}

C_noret_decl(trf_19700)
static void C_fcall trf_19700(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19700(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19700(t0,t1,t2);}

C_noret_decl(trf_19645)
static void C_fcall trf_19645(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19645(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19645(t0,t1,t2);}

C_noret_decl(trf_19655)
static void C_fcall trf_19655(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19655(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19655(t0,t1,t2,t3);}

C_noret_decl(trf_19501)
static void C_fcall trf_19501(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19501(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19501(t0,t1,t2);}

C_noret_decl(trf_19570)
static void C_fcall trf_19570(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19570(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19570(t0,t1,t2);}

C_noret_decl(trf_19516)
static void C_fcall trf_19516(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19516(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_19516(t0,t1,t2,t3,t4);}

C_noret_decl(trf_19058)
static void C_fcall trf_19058(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19058(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19058(t0,t1);}

C_noret_decl(trf_19061)
static void C_fcall trf_19061(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19061(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19061(t0,t1);}

C_noret_decl(trf_19064)
static void C_fcall trf_19064(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19064(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19064(t0,t1);}

C_noret_decl(trf_19067)
static void C_fcall trf_19067(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19067(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19067(t0,t1);}

C_noret_decl(trf_19031)
static void C_fcall trf_19031(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19031(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19031(t0,t1);}

C_noret_decl(trf_18754)
static void C_fcall trf_18754(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18754(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18754(t0,t1);}

C_noret_decl(trf_18757)
static void C_fcall trf_18757(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18757(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18757(t0,t1);}

C_noret_decl(trf_18760)
static void C_fcall trf_18760(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18760(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18760(t0,t1);}

C_noret_decl(trf_18651)
static void C_fcall trf_18651(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18651(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18651(t0,t1);}

C_noret_decl(trf_18642)
static void C_fcall trf_18642(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18642(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18642(t0,t1,t2);}

C_noret_decl(trf_18633)
static void C_fcall trf_18633(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18633(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18633(t0,t1);}

C_noret_decl(trf_18615)
static void C_fcall trf_18615(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18615(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18615(t0,t1);}

C_noret_decl(trf_18597)
static void C_fcall trf_18597(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18597(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18597(t0,t1);}

C_noret_decl(trf_18579)
static void C_fcall trf_18579(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18579(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18579(t0,t1);}

C_noret_decl(trf_18570)
static void C_fcall trf_18570(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18570(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18570(t0,t1,t2);}

C_noret_decl(trf_18561)
static void C_fcall trf_18561(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18561(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18561(t0,t1);}

C_noret_decl(trf_18392)
static void C_fcall trf_18392(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18392(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18392(t0,t1);}

C_noret_decl(trf_18348)
static void C_fcall trf_18348(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18348(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18348(t0,t1,t2);}

C_noret_decl(trf_17869)
static void C_fcall trf_17869(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17869(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17869(t0,t1);}

C_noret_decl(trf_17872)
static void C_fcall trf_17872(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17872(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17872(t0,t1);}

C_noret_decl(trf_17875)
static void C_fcall trf_17875(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17875(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17875(t0,t1);}

C_noret_decl(trf_17878)
static void C_fcall trf_17878(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17878(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17878(t0,t1);}

C_noret_decl(trf_17824)
static void C_fcall trf_17824(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17824(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17824(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17530)
static void C_fcall trf_17530(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17530(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17530(t0,t1);}

C_noret_decl(trf_17533)
static void C_fcall trf_17533(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17533(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17533(t0,t1);}

C_noret_decl(trf_17536)
static void C_fcall trf_17536(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17536(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17536(t0,t1);}

C_noret_decl(trf_17247)
static void C_fcall trf_17247(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17247(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17247(t0,t1);}

C_noret_decl(trf_17250)
static void C_fcall trf_17250(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17250(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17250(t0,t1);}

C_noret_decl(trf_17253)
static void C_fcall trf_17253(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17253(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17253(t0,t1);}

C_noret_decl(trf_17206)
static void C_fcall trf_17206(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17206(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17206(t0,t1);}

C_noret_decl(trf_17162)
static void C_fcall trf_17162(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17162(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17162(t0,t1);}

C_noret_decl(trf_17077)
static void C_fcall trf_17077(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17077(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17077(t0,t1);}

C_noret_decl(trf_16562)
static void C_fcall trf_16562(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16562(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16562(t0,t1);}

C_noret_decl(trf_16565)
static void C_fcall trf_16565(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16565(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16565(t0,t1);}

C_noret_decl(trf_16568)
static void C_fcall trf_16568(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16568(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16568(t0,t1);}

C_noret_decl(trf_16571)
static void C_fcall trf_16571(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16571(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16571(t0,t1);}

C_noret_decl(trf_16478)
static void C_fcall trf_16478(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16478(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16478(t0,t1,t2);}

C_noret_decl(trf_16469)
static void C_fcall trf_16469(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16469(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16469(t0,t1);}

C_noret_decl(trf_16404)
static void C_fcall trf_16404(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16404(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16404(t0,t1);}

C_noret_decl(trf_16146)
static void C_fcall trf_16146(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16146(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16146(t0,t1);}

C_noret_decl(trf_16149)
static void C_fcall trf_16149(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16149(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16149(t0,t1);}

C_noret_decl(trf_16152)
static void C_fcall trf_16152(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16152(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16152(t0,t1);}

C_noret_decl(trf_16027)
static void C_fcall trf_16027(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16027(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16027(t0,t1);}

C_noret_decl(trf_16051)
static void C_fcall trf_16051(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16051(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16051(t0,t1);}

C_noret_decl(trf_15981)
static void C_fcall trf_15981(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15981(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15981(t0,t1,t2);}

C_noret_decl(trf_15972)
static void C_fcall trf_15972(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15972(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15972(t0,t1);}

C_noret_decl(trf_15671)
static void C_fcall trf_15671(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15671(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15671(t0,t1);}

C_noret_decl(trf_15907)
static void C_fcall trf_15907(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15907(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15907(t0,t1);}

C_noret_decl(trf_15913)
static void C_fcall trf_15913(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15913(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15913(t0,t1);}

C_noret_decl(trf_15805)
static void C_fcall trf_15805(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15805(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15805(t0,t1);}

C_noret_decl(trf_15807)
static void C_fcall trf_15807(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15807(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15807(t0,t1,t2,t3);}

C_noret_decl(trf_15856)
static void C_fcall trf_15856(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15856(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15856(t0,t1);}

C_noret_decl(trf_15821)
static void C_fcall trf_15821(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15821(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15821(t0,t1);}

C_noret_decl(trf_15705)
static void C_fcall trf_15705(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15705(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15705(t0,t1);}

C_noret_decl(trf_15619)
static void C_fcall trf_15619(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15619(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_15619(t0,t1,t2,t3,t4);}

C_noret_decl(trf_15638)
static void C_fcall trf_15638(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15638(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15638(t0,t1);}

C_noret_decl(trf_15569)
static void C_fcall trf_15569(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15569(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15569(t0,t1,t2,t3);}

C_noret_decl(trf_15330)
static void C_fcall trf_15330(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15330(void *dummy){
C_word t9=C_pick(0);
C_word t8=C_pick(1);
C_word t7=C_pick(2);
C_word t6=C_pick(3);
C_word t5=C_pick(4);
C_word t4=C_pick(5);
C_word t3=C_pick(6);
C_word t2=C_pick(7);
C_word t1=C_pick(8);
C_word t0=C_pick(9);
C_adjust_stack(-10);
f_15330(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9);}

C_noret_decl(trf_15349)
static void C_fcall trf_15349(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15349(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15349(t0,t1);}

C_noret_decl(trf_15364)
static void C_fcall trf_15364(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15364(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15364(t0,t1);}

C_noret_decl(trf_15373)
static void C_fcall trf_15373(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15373(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15373(t0,t1);}

C_noret_decl(trf_15320)
static void C_fcall trf_15320(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15320(void *dummy){
C_word t0=C_pick(0);
C_adjust_stack(-1);
f_15320(t0);}

C_noret_decl(trf_15265)
static void C_fcall trf_15265(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15265(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15265(t0,t1);}

C_noret_decl(trf_15256)
static void C_fcall trf_15256(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15256(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15256(t0,t1,t2);}

C_noret_decl(trf_15139)
static void C_fcall trf_15139(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15139(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15139(t0,t1);}

C_noret_decl(trf_15130)
static void C_fcall trf_15130(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15130(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15130(t0,t1,t2);}

C_noret_decl(trf_15112)
static void C_fcall trf_15112(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15112(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15112(t0,t1,t2);}

C_noret_decl(trf_15103)
static void C_fcall trf_15103(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15103(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15103(t0,t1);}

C_noret_decl(trf_15085)
static void C_fcall trf_15085(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15085(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15085(t0,t1);}

C_noret_decl(trf_15076)
static void C_fcall trf_15076(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15076(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15076(t0,t1,t2);}

C_noret_decl(trf_15067)
static void C_fcall trf_15067(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15067(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15067(t0,t1);}

C_noret_decl(trf_15049)
static void C_fcall trf_15049(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15049(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15049(t0,t1);}

C_noret_decl(trf_15040)
static void C_fcall trf_15040(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15040(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15040(t0,t1,t2);}

C_noret_decl(trf_15031)
static void C_fcall trf_15031(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15031(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15031(t0,t1);}

C_noret_decl(trf_15016)
static void C_fcall trf_15016(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15016(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15016(t0,t1);}

C_noret_decl(trf_14971)
static void C_fcall trf_14971(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14971(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14971(t0,t1);}

C_noret_decl(trf_14953)
static void C_fcall trf_14953(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14953(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14953(t0,t1);}

C_noret_decl(trf_14944)
static void C_fcall trf_14944(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14944(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14944(t0,t1,t2);}

C_noret_decl(trf_14917)
static void C_fcall trf_14917(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14917(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14917(t0,t1);}

C_noret_decl(trf_14899)
static void C_fcall trf_14899(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14899(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14899(t0,t1);}

C_noret_decl(trf_14881)
static void C_fcall trf_14881(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14881(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14881(t0,t1);}

C_noret_decl(trf_14872)
static void C_fcall trf_14872(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14872(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14872(t0,t1,t2);}

C_noret_decl(trf_14860)
static void C_fcall trf_14860(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14860(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_14860(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_14824)
static void C_fcall trf_14824(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14824(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14824(t0,t1);}

C_noret_decl(trf_14787)
static void C_fcall trf_14787(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14787(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14787(t0,t1,t2,t3);}

C_noret_decl(trf_14685)
static void C_fcall trf_14685(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14685(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_14685(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14632)
static void C_fcall trf_14632(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14632(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14632(t0,t1,t2);}

C_noret_decl(trf_14804)
static void C_fcall trf_14804(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14804(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14804(t0,t1);}

C_noret_decl(trf_14745)
static void C_fcall trf_14745(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14745(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14745(t0,t1);}

C_noret_decl(trf_14600)
static void C_fcall trf_14600(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14600(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14600(t0,t1);}

C_noret_decl(trf_14231)
static void C_fcall trf_14231(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14231(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14231(t0,t1);}

C_noret_decl(trf_14234)
static void C_fcall trf_14234(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14234(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14234(t0,t1);}

C_noret_decl(trf_14237)
static void C_fcall trf_14237(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14237(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14237(t0,t1);}

C_noret_decl(trf_14395)
static void C_fcall trf_14395(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14395(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14395(t0,t1);}

C_noret_decl(trf_14398)
static void C_fcall trf_14398(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14398(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14398(t0,t1);}

C_noret_decl(trf_14407)
static void C_fcall trf_14407(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14407(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14407(t0,t1,t2);}

C_noret_decl(trf_14417)
static void C_fcall trf_14417(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14417(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14417(t0,t1);}

C_noret_decl(trf_14364)
static void C_fcall trf_14364(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14364(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14364(t0,t1,t2);}

C_noret_decl(trf_14326)
static void C_fcall trf_14326(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14326(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14326(t0,t1,t2);}

C_noret_decl(trf_13696)
static void C_fcall trf_13696(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13696(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13696(t0,t1,t2,t3);}

C_noret_decl(trf_14281)
static void C_fcall trf_14281(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14281(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14281(t0,t1,t2);}

C_noret_decl(trf_14251)
static void C_fcall trf_14251(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14251(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14251(t0,t1,t2);}

C_noret_decl(trf_14186)
static void C_fcall trf_14186(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14186(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_14186(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_14130)
static void C_fcall trf_14130(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14130(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14130(t0,t1,t2);}

C_noret_decl(trf_14098)
static void C_fcall trf_14098(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14098(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14098(t0,t1,t2);}

C_noret_decl(trf_14049)
static void C_fcall trf_14049(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14049(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14049(t0,t1,t2);}

C_noret_decl(trf_14068)
static void C_fcall trf_14068(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14068(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14068(t0,t1,t2);}

C_noret_decl(trf_13988)
static void C_fcall trf_13988(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13988(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13988(t0,t1,t2,t3);}

C_noret_decl(trf_13971)
static void C_fcall trf_13971(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13971(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13971(t0,t1);}

C_noret_decl(trf_13954)
static void C_fcall trf_13954(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13954(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13954(t0,t1);}

C_noret_decl(trf_13787)
static void C_fcall trf_13787(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13787(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_13787(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_13797)
static void C_fcall trf_13797(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13797(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13797(t0,t1);}

C_noret_decl(trf_13609)
static void C_fcall trf_13609(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13609(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13609(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13631)
static void C_fcall trf_13631(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13631(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13631(t0,t1);}

C_noret_decl(trf_13450)
static void C_fcall trf_13450(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13450(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13450(t0,t1,t2,t3);}

C_noret_decl(trf_13539)
static void C_fcall trf_13539(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13539(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13539(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13553)
static void C_fcall trf_13553(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13553(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13553(t0,t1);}

C_noret_decl(trf_13481)
static void C_fcall trf_13481(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13481(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13481(t0,t1);}

C_noret_decl(trf_13385)
static void C_fcall trf_13385(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13385(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13385(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11892)
static void C_fcall trf_11892(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11892(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11892(t0,t1);}

C_noret_decl(trf_11895)
static void C_fcall trf_11895(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11895(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11895(t0,t1);}

C_noret_decl(trf_11898)
static void C_fcall trf_11898(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11898(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11898(t0,t1);}

C_noret_decl(trf_11901)
static void C_fcall trf_11901(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11901(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11901(t0,t1);}

C_noret_decl(trf_11904)
static void C_fcall trf_11904(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11904(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11904(t0,t1);}

C_noret_decl(trf_11907)
static void C_fcall trf_11907(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11907(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11907(t0,t1);}

C_noret_decl(trf_11669)
static void C_fcall trf_11669(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11669(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11669(t0,t1);}

C_noret_decl(trf_11724)
static void C_fcall trf_11724(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11724(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11724(t0,t1);}

C_noret_decl(trf_11699)
static void C_fcall trf_11699(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11699(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11699(t0,t1);}

C_noret_decl(trf_11540)
static void C_fcall trf_11540(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11540(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11540(t0,t1,t2);}

C_noret_decl(trf_11463)
static void C_fcall trf_11463(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11463(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11463(t0,t1,t2);}

C_noret_decl(trf_11445)
static void C_fcall trf_11445(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11445(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11445(t0,t1,t2);}

C_noret_decl(trf_11427)
static void C_fcall trf_11427(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11427(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11427(t0,t1,t2);}

C_noret_decl(trf_11403)
static void C_fcall trf_11403(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11403(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11403(t0,t1);}

C_noret_decl(trf_11397)
static void C_fcall trf_11397(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11397(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_11397(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11259)
static void C_fcall trf_11259(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11259(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11259(t0,t1);}

C_noret_decl(trf_11142)
static void C_fcall trf_11142(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11142(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11142(t0,t1,t2);}

C_noret_decl(trf_11151)
static void C_fcall trf_11151(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11151(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_11151(t0,t1,t2,t3);}

C_noret_decl(trf_10984)
static void C_fcall trf_10984(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10984(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10984(t0,t1);}

C_noret_decl(trf_11000)
static void C_fcall trf_11000(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11000(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_11000(t0,t1,t2,t3);}

C_noret_decl(trf_10808)
static void C_fcall trf_10808(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10808(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_10808(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_10838)
static void C_fcall trf_10838(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10838(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10838(t0,t1);}

C_noret_decl(trf_10821)
static void C_fcall trf_10821(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10821(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10821(t0,t1);}

C_noret_decl(trf_10686)
static void C_fcall trf_10686(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10686(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_10686(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_10716)
static void C_fcall trf_10716(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10716(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10716(t0,t1);}

C_noret_decl(trf_10699)
static void C_fcall trf_10699(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10699(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10699(t0,t1);}

C_noret_decl(trf_10589)
static void C_fcall trf_10589(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10589(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_10589(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_10602)
static void C_fcall trf_10602(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10602(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10602(t0,t1);}

C_noret_decl(trf_10521)
static void C_fcall trf_10521(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10521(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10521(t0,t1,t2,t3);}

C_noret_decl(trf_10491)
static void C_fcall trf_10491(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10491(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10491(t0,t1);}

C_noret_decl(trf_10419)
static void C_fcall trf_10419(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10419(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10419(t0,t1,t2,t3);}

C_noret_decl(trf_10218)
static void C_fcall trf_10218(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10218(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10218(t0,t1);}

C_noret_decl(trf_10300)
static void C_fcall trf_10300(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10300(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10300(t0,t1);}

C_noret_decl(trf_10311)
static void C_fcall trf_10311(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10311(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10311(t0,t1,t2,t3);}

C_noret_decl(trf_10323)
static void C_fcall trf_10323(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10323(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10323(t0,t1,t2);}

C_noret_decl(trf_10244)
static void C_fcall trf_10244(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10244(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10244(t0,t1,t2);}

C_noret_decl(trf_9881)
static void C_fcall trf_9881(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9881(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9881(t0,t1);}

C_noret_decl(trf_9884)
static void C_fcall trf_9884(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9884(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9884(t0,t1);}

C_noret_decl(trf_9890)
static void C_fcall trf_9890(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9890(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9890(t0,t1);}

C_noret_decl(trf_9793)
static void C_fcall trf_9793(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9793(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_9793(t0,t1,t2,t3,t4);}

C_noret_decl(trf_9685)
static void C_fcall trf_9685(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9685(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9685(t0,t1);}

C_noret_decl(trf_9690)
static void C_fcall trf_9690(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9690(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9690(t0,t1,t2,t3);}

C_noret_decl(trf_9457)
static void C_fcall trf_9457(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9457(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9457(t0,t1);}

C_noret_decl(trf_9460)
static void C_fcall trf_9460(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9460(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9460(t0,t1);}

C_noret_decl(trf_9358)
static void C_fcall trf_9358(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9358(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9358(t0,t1);}

C_noret_decl(trf_9253)
static void C_fcall trf_9253(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9253(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9253(t0,t1);}

C_noret_decl(trf_9262)
static void C_fcall trf_9262(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9262(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_9262(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_9275)
static void C_fcall trf_9275(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9275(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9275(t0,t1);}

C_noret_decl(trf_9117)
static void C_fcall trf_9117(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9117(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9117(t0,t1);}

C_noret_decl(trf_9120)
static void C_fcall trf_9120(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9120(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9120(t0,t1);}

C_noret_decl(trf_9122)
static void C_fcall trf_9122(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9122(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_9122(t0,t1,t2,t3,t4);}

C_noret_decl(trf_9050)
static void C_fcall trf_9050(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9050(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9050(t0,t1);}

C_noret_decl(trf_9053)
static void C_fcall trf_9053(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9053(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9053(t0,t1);}

C_noret_decl(trf_9056)
static void C_fcall trf_9056(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9056(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9056(t0,t1);}

C_noret_decl(trf_8914)
static void C_fcall trf_8914(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8914(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8914(t0,t1,t2,t3);}

C_noret_decl(trf_8930)
static void C_fcall trf_8930(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8930(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8930(t0,t1,t2);}

C_noret_decl(trf_8652)
static void C_fcall trf_8652(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8652(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8652(t0,t1);}

C_noret_decl(trf_8655)
static void C_fcall trf_8655(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8655(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8655(t0,t1);}

C_noret_decl(trf_8217)
static void C_fcall trf_8217(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8217(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8217(t0,t1);}

C_noret_decl(trf_8136)
static void C_fcall trf_8136(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8136(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8136(t0,t1);}

C_noret_decl(trf_8126)
static void C_fcall trf_8126(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8126(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8126(t0,t1);}

C_noret_decl(trf_8108)
static void C_fcall trf_8108(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8108(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8108(t0,t1);}

C_noret_decl(trf_8097)
static void C_fcall trf_8097(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8097(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8097(t0,t1,t2);}

C_noret_decl(trf_8059)
static void C_fcall trf_8059(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8059(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8059(t0,t1);}

C_noret_decl(trf_8052)
static void C_fcall trf_8052(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8052(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8052(t0,t1);}

C_noret_decl(trf_8028)
static void C_fcall trf_8028(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8028(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8028(t0,t1);}

C_noret_decl(trf_7961)
static void C_fcall trf_7961(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7961(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7961(t0,t1,t2,t3);}

C_noret_decl(trf_7950)
static void C_fcall trf_7950(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7950(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7950(t0,t1,t2);}

C_noret_decl(trf_7916)
static void C_fcall trf_7916(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7916(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_7916(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_7889)
static void C_fcall trf_7889(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7889(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_7889(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_7848)
static void C_fcall trf_7848(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7848(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7848(t0,t1,t2);}

C_noret_decl(trf_7854)
static void C_fcall trf_7854(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7854(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7854(t0,t1,t2);}

C_noret_decl(trf_7864)
static void C_fcall trf_7864(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7864(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7864(t0,t1);}

C_noret_decl(trf_7729)
static void C_fcall trf_7729(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7729(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7729(t0,t1,t2,t3);}

C_noret_decl(trf_7742)
static void C_fcall trf_7742(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7742(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7742(t0,t1);}

C_noret_decl(trf_7690)
static void C_fcall trf_7690(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7690(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7690(t0,t1,t2,t3,t4);}

C_noret_decl(trf_7700)
static void C_fcall trf_7700(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7700(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7700(t0,t1);}

C_noret_decl(trf_7650)
static void C_fcall trf_7650(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7650(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7650(t0,t1,t2,t3,t4);}

C_noret_decl(trf_7660)
static void C_fcall trf_7660(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7660(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7660(t0,t1);}

C_noret_decl(trf_7574)
static void C_fcall trf_7574(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7574(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7574(t0,t1,t2,t3);}

C_noret_decl(trf_7551)
static void C_fcall trf_7551(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7551(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7551(t0,t1,t2,t3);}

C_noret_decl(trf_7497)
static void C_fcall trf_7497(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7497(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7497(t0,t1,t2,t3,t4);}

C_noret_decl(trf_6892)
static void C_fcall trf_6892(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6892(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6892(t0,t1);}

C_noret_decl(trf_6904)
static void C_fcall trf_6904(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6904(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_6904(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_6957)
static void C_fcall trf_6957(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6957(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6957(t0,t1);}

C_noret_decl(trf_6916)
static void C_fcall trf_6916(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6916(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6916(t0,t1,t2);}

C_noret_decl(trf_6929)
static void C_fcall trf_6929(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6929(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6929(t0,t1);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr7r)
static void C_fcall tr7r(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7r(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n*3);
t7=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr5r)
static void C_fcall tr5r(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5r(C_proc5 k){
int n;
C_word *a,t5;
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
n=C_rest_count(0);
a=C_alloc(n*3);
t5=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_grace_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("grace_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(5978)){
C_save(t1);
C_rereclaim2(5978*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,992);
lf[0]=C_h_intern(&lf[0],14,"expand-optkeys");
lf[1]=C_h_intern(&lf[1],3,"let");
lf[2]=C_h_intern(&lf[2],4,"let*");
lf[3]=C_h_intern(&lf[3],5,"null\077");
lf[4]=C_h_intern(&lf[4],5,"error");
lf[5]=C_decode_literal(C_heaptop,"\376B\000\000\022Too many arguments");
lf[6]=C_h_intern(&lf[6],6,"unless");
lf[7]=C_h_intern(&lf[7],10,"\003sysappend");
lf[8]=C_h_intern(&lf[8],3,"car");
lf[9]=C_h_intern(&lf[9],4,"case");
lf[10]=C_decode_literal(C_heaptop,"\376B\000\000\031Positional after keywords");
lf[11]=C_h_intern(&lf[11],4,"when");
lf[12]=C_h_intern(&lf[12],4,"set!");
lf[13]=C_h_intern(&lf[13],8,"keyword\077");
lf[14]=C_decode_literal(C_heaptop,"\376B\000\000\017Unknown keyword");
lf[15]=C_h_intern(&lf[15],3,"cdr");
lf[16]=C_h_intern(&lf[16],4,"else");
lf[17]=C_h_intern(&lf[17],7,"\003sysmap");
lf[18]=C_h_intern(&lf[18],6,"append");
lf[19]=C_decode_literal(C_heaptop,"\376B\000\000\021Redundant keyword");
lf[20]=C_h_intern(&lf[20],2,"if");
lf[21]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing keyword value in");
lf[22]=C_h_intern(&lf[22],4,"cadr");
lf[23]=C_h_intern(&lf[23],4,"cddr");
lf[24]=C_h_intern(&lf[24],15,"string->keyword");
lf[25]=C_h_intern(&lf[25],14,"symbol->string");
lf[26]=C_h_intern(&lf[26],6,"gensym");
lf[27]=C_decode_literal(C_heaptop,"\376B\000\000\004keyp");
lf[28]=C_decode_literal(C_heaptop,"\376B\000\000\004args");
lf[29]=C_h_intern(&lf[29],10,"*messages*");
lf[30]=C_h_intern(&lf[30],11,"expand-send");
lf[31]=C_h_intern(&lf[31],7,"sprintf");
lf[32]=C_decode_literal(C_heaptop,"\376B\000\000\003~A:");
lf[33]=C_h_intern(&lf[33],15,"keyword->string");
lf[34]=C_decode_literal(C_heaptop,"\376B\000\000\031~S duplicate keyword \047~S\047");
lf[35]=C_decode_literal(C_heaptop,"\376B\000\000!~S missing value for keyword \047~A\047");
lf[36]=C_decode_literal(C_heaptop,"\376B\000\000/~S invalid keyword \047~A\047~%Available keywords: ~A");
lf[37]=C_decode_literal(C_heaptop,"\376B\000\000 ~S expected keyword but got \047~S\047");
lf[38]=C_decode_literal(C_heaptop,"\376B\000\000#~S expected ~A arguments but got ~A");
lf[39]=C_h_intern(&lf[39],5,"&rest");
lf[40]=C_decode_literal(C_heaptop,"\376B\000\000\030~S is an invalid message");
lf[41]=C_h_intern(&lf[41],14,"hash-table-ref");
lf[42]=C_h_intern(&lf[42],3,"cwd");
lf[43]=C_h_intern(&lf[43],17,"\003syspeek-c-string");
lf[44]=C_h_intern(&lf[44],5,"chdir");
lf[45]=C_decode_literal(C_heaptop,"\376B\000\000\002~/");
lf[46]=C_h_intern(&lf[46],17,"\003sysmake-c-string");
lf[47]=C_h_intern(&lf[47],5,"first");
lf[48]=C_h_intern(&lf[48],6,"second");
lf[49]=C_h_intern(&lf[49],5,"third");
lf[50]=C_h_intern(&lf[50],5,"caddr");
lf[51]=C_h_intern(&lf[51],6,"fourth");
lf[52]=C_h_intern(&lf[52],6,"cadddr");
lf[53]=C_h_intern(&lf[53],5,"fifth");
lf[54]=C_h_intern(&lf[54],5,"sixth");
lf[55]=C_h_intern(&lf[55],7,"seventh");
lf[56]=C_h_intern(&lf[56],6,"eighth");
lf[57]=C_h_intern(&lf[57],5,"ninth");
lf[58]=C_h_intern(&lf[58],5,"tenth");
lf[59]=C_h_intern(&lf[59],3,"nth");
lf[60]=C_h_intern(&lf[60],8,"list-ref");
lf[61]=C_h_intern(&lf[61],4,"rest");
lf[62]=C_h_intern(&lf[62],4,"last");
lf[63]=C_h_intern(&lf[63],7,"butlast");
lf[64]=C_h_intern(&lf[64],4,"tail");
lf[65]=C_h_intern(&lf[65],5,"list*");
lf[66]=C_decode_literal(C_heaptop,"\376B\000\000&>>> Error: too few arguments to list*.");
lf[67]=C_h_intern(&lf[67],9,"list-set!");
lf[68]=C_h_intern(&lf[68],8,"reverse!");
lf[69]=C_h_intern(&lf[69],9,"make-list");
lf[70]=C_decode_literal(C_heaptop,"\376B\000\000\034Negative length to make-list");
lf[71]=C_h_intern(&lf[71],10,"list-index");
lf[72]=C_h_intern(&lf[72],9,"list-find");
lf[73]=C_h_intern(&lf[73],6,"every\077");
lf[99]=C_h_intern(&lf[99],5,"log10");
lf[100]=C_h_intern(&lf[100],4,"log2");
lf[101]=C_h_intern(&lf[101],7,"rescale");
lf[102]=C_h_intern(&lf[102],8,"discrete");
lf[103]=C_h_intern(&lf[103],4,"not\077");
lf[104]=C_h_intern(&lf[104],3,"int");
lf[105]=C_h_intern(&lf[105],5,"float");
lf[106]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[107]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[108]=C_h_intern(&lf[108],2,"pi");
lf[109]=C_decode_literal(C_heaptop,"\376U3.14159265358979\000");
lf[110]=C_h_intern(&lf[110],20,"most-positive-fixnum");
lf[111]=C_h_intern(&lf[111],20,"most-negative-fixnum");
lf[112]=C_h_intern(&lf[112],4,"plus");
lf[113]=C_h_intern(&lf[113],1,"+");
lf[114]=C_h_intern(&lf[114],5,"times");
lf[115]=C_h_intern(&lf[115],1,"*");
lf[116]=C_h_intern(&lf[116],5,"minus");
lf[117]=C_h_intern(&lf[117],1,"-");
lf[118]=C_h_intern(&lf[118],6,"divide");
lf[119]=C_h_intern(&lf[119],1,"/");
lf[120]=C_h_intern(&lf[120],8,"quantize");
lf[121]=C_h_intern(&lf[121],8,"decimals");
lf[122]=C_h_intern(&lf[122],5,"round");
lf[123]=C_h_intern(&lf[123],4,"expt");
lf[124]=C_decode_literal(C_heaptop,"\376U10.0\000");
lf[125]=C_h_intern(&lf[125],15,"rhythm->seconds");
lf[126]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[127]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[128]=C_h_intern(&lf[128],6,"\000tempo");
lf[129]=C_h_intern(&lf[129],5,"\000beat");
lf[130]=C_h_intern(&lf[130],12,"cents->ratio");
lf[131]=C_h_intern(&lf[131],12,"ratio->cents");
lf[133]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[134]=C_h_intern(&lf[134],3,"err");
lf[135]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[136]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[137]=C_h_intern(&lf[137],6,"interp");
lf[138]=C_decode_literal(C_heaptop,"\376B\000\000\027missing x y coordinates");
lf[139]=C_h_intern(&lf[139],8,"tendency");
lf[140]=C_h_intern(&lf[140],3,"ran");
lf[141]=C_h_intern(&lf[141],3,"fit");
lf[142]=C_h_intern(&lf[142],9,"remainder");
lf[143]=C_decode_literal(C_heaptop,"\376B\000\000\021mode not 1 2 or 3");
lf[144]=C_h_intern(&lf[144],5,"scale");
lf[145]=C_h_intern(&lf[145],6,"modulo");
lf[146]=C_decode_literal(C_heaptop,"\376B\000\000\023limit same as start");
lf[147]=C_h_intern(&lf[147],8,"ran-set!");
lf[148]=C_h_intern(&lf[148],7,"between");
lf[149]=C_h_intern(&lf[149],4,"pick");
lf[150]=C_h_intern(&lf[150],4,"odds");
lf[151]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[152]=C_h_intern(&lf[152],5,"\000true");
lf[153]=C_h_intern(&lf[153],6,"\000false");
lf[154]=C_h_intern(&lf[154],4,"vary");
lf[155]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[156]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[157]=C_h_intern(&lf[157],8,"shuffle!");
lf[158]=C_h_intern(&lf[158],7,"shuffle");
lf[159]=C_h_intern(&lf[159],6,"ranlow");
lf[160]=C_h_intern(&lf[160],7,"ranhigh");
lf[161]=C_h_intern(&lf[161],9,"ranmiddle");
lf[162]=C_h_intern(&lf[162],7,"ranbeta");
lf[163]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[164]=C_h_intern(&lf[164],2,"\000a");
lf[165]=C_h_intern(&lf[165],2,"\000b");
lf[166]=C_h_intern(&lf[166],6,"ranexp");
lf[167]=C_h_intern(&lf[167],8,"rangauss");
lf[168]=C_h_intern(&lf[168],9,"rancauchy");
lf[169]=C_h_intern(&lf[169],10,"ranpoisson");
lf[170]=C_h_intern(&lf[170],3,"arg");
lf[171]=C_h_intern(&lf[171],8,"rangamma");
lf[172]=C_h_intern(&lf[172],8,"ranbrown");
lf[173]=C_h_intern(&lf[173],7,"ranpink");
lf[174]=C_h_intern(&lf[174],4,"segs");
lf[175]=C_decode_literal(C_heaptop,"\376B\000\000\014Illegal base");
lf[176]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[179]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[180]=C_h_intern(&lf[180],13,"string-append");
lf[181]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[183]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[184]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[185]=C_decode_literal(C_heaptop,"\376U0.333333333333333\000");
lf[186]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[187]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[188]=C_h_intern(&lf[188],5,"floor");
lf[189]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[190]=C_h_intern(&lf[190],4,"note");
lf[191]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[192]=C_h_intern(&lf[192],3,"key");
lf[193]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[194]=C_h_intern(&lf[194],2,"hz");
lf[195]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[196]=C_h_intern(&lf[196],2,"pc");
lf[197]=C_h_intern(&lf[197],6,"invert");
lf[198]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[199]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[200]=C_h_intern(&lf[200],9,"transpose");
lf[201]=C_decode_literal(C_heaptop,"\376B\000\000\022No transposion for");
lf[202]=C_h_intern(&lf[202],10,"retrograde");
lf[203]=C_h_intern(&lf[203],7,"reverse");
lf[204]=C_h_intern(&lf[204],11,"scale-order");
lf[205]=C_h_intern(&lf[205],4,"sort");
lf[206]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[208]=C_h_intern(&lf[208],8,"spectrum");
lf[210]=C_h_intern(&lf[210],13,"spectrum-time");
lf[212]=C_h_intern(&lf[212],14,"\003sysblock-set!");
lf[213]=C_h_intern(&lf[213],13,"spectrum-size");
lf[215]=C_h_intern(&lf[215],14,"spectrum-freqs");
lf[217]=C_h_intern(&lf[217],13,"spectrum-amps");
lf[218]=C_h_intern(&lf[218],13,"spectrum-copy");
lf[219]=C_h_intern(&lf[219],14,"spectrum-pairs");
lf[220]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[221]=C_h_intern(&lf[221],16,"spectrum-minfreq");
lf[222]=C_h_intern(&lf[222],16,"spectrum-maxfreq");
lf[223]=C_h_intern(&lf[223],15,"spectrum-minamp");
lf[224]=C_h_intern(&lf[224],12,"\003sysfor-each");
lf[225]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[226]=C_h_intern(&lf[226],15,"spectrum-maxamp");
lf[227]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[228]=C_h_intern(&lf[228],13,"spectrum-keys");
lf[229]=C_h_intern(&lf[229],8,"for-each");
lf[230]=C_h_intern(&lf[230],6,"\000order");
lf[231]=C_h_intern(&lf[231],7,"\000thresh");
lf[232]=C_h_intern(&lf[232],6,"\000quant");
lf[233]=C_h_intern(&lf[233],7,"\000unique");
lf[234]=C_h_intern(&lf[234],4,"\000min");
lf[235]=C_h_intern(&lf[235],4,"\000max");
lf[236]=C_h_intern(&lf[236],11,"fm-spectrum");
lf[237]=C_h_intern(&lf[237],8,"set-car!");
lf[238]=C_h_intern(&lf[238],4,"caar");
lf[239]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[240]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[241]=C_h_intern(&lf[241],13,"spectrum-add!");
lf[242]=C_h_intern(&lf[242],11,"rm-spectrum");
lf[243]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[244]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[245]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[246]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[247]=C_h_intern(&lf[247],14,"spectrum-flip!");
lf[248]=C_h_intern(&lf[248],17,"spectrum-rescale!");
lf[249]=C_h_intern(&lf[249],5,"sort!");
lf[250]=C_h_intern(&lf[250],3,"map");
lf[251]=C_h_intern(&lf[251],2,"<=");
lf[252]=C_decode_literal(C_heaptop,"\376B\000\000\037Non-numerical y can\047t be scaler");
lf[253]=C_h_intern(&lf[253],7,"number\077");
lf[254]=C_decode_literal(C_heaptop,"\376B\000\000\014Mode not 1-8");
lf[255]=C_decode_literal(C_heaptop,"\376B\000\000%Need a scaler, envelope or x y values");
lf[256]=C_decode_literal(C_heaptop,"\376B\000\000\024Not a number or pair");
lf[257]=C_h_intern(&lf[257],19,"import-spear-frames");
lf[258]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[259]=C_h_intern(&lf[259],9,"read-line");
lf[260]=C_decode_literal(C_heaptop,"\376B\000\000\016Bad frame data");
lf[261]=C_h_intern(&lf[261],4,"read");
lf[262]=C_h_intern(&lf[262],17,"open-input-string");
lf[263]=C_decode_literal(C_heaptop,"\376B\000\000\012frame-data");
lf[264]=C_decode_literal(C_heaptop,"\376B\000\000$point-type index frequency amplitude");
lf[265]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[266]=C_decode_literal(C_heaptop,"\376B\000\000\025par-text-frame-format");
lf[267]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[268]=C_h_intern(&lf[268],18,"current-input-port");
lf[269]=C_h_intern(&lf[269],20,"with-input-from-file");
lf[271]=C_h_intern(&lf[271],6,"period");
lf[280]=C_h_intern(&lf[280],7,"pattern");
lf[295]=C_h_intern(&lf[295],4,"\000nad");
lf[296]=C_h_intern(&lf[296],8,"\000periods");
lf[297]=C_h_intern(&lf[297],12,"\000depth-first");
lf[299]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[300]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[301]=C_h_intern(&lf[301],14,"\000breadth-first");
lf[302]=C_decode_literal(C_heaptop,"\376B\000\000\026Illegal for traversing");
lf[303]=C_h_intern(&lf[303],7,"\000values");
lf[304]=C_decode_literal(C_heaptop,"\376B\000\000\024Illegal for counting");
lf[306]=C_h_intern(&lf[306],4,"eop\077");
lf[307]=C_h_intern(&lf[307],4,"\000eop");
lf[308]=C_h_intern(&lf[308],4,"eod\077");
lf[309]=C_h_intern(&lf[309],4,"\000eod");
lf[310]=C_h_intern(&lf[310],4,"next");
lf[314]=C_h_intern(&lf[314],5,"force");
lf[315]=C_h_intern(&lf[315],8,"promise\077");
lf[316]=C_h_intern(&lf[316],3,"max");
lf[317]=C_h_intern(&lf[317],10,"make-cycle");
lf[319]=C_h_intern(&lf[319],4,"\000for");
lf[320]=C_h_intern(&lf[320],7,"\000repeat");
lf[322]=C_h_intern(&lf[322],5,"palin");
lf[324]=C_h_intern(&lf[324],15,"make-palindrome");
lf[326]=C_h_intern(&lf[326],6,"\000elide");
lf[327]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\000\376\003\000\000\002\376\377\006\001\376\377\016");
lf[328]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\001\376\003\000\000\002\376\377\006\000\376\377\016");
lf[329]=C_h_intern(&lf[329],9,"make-line");
lf[331]=C_h_intern(&lf[331],9,"make-heap");
lf[333]=C_h_intern(&lf[333],13,"make-rotation");
lf[335]=C_h_intern(&lf[335],7,"\000rotate");
lf[337]=C_h_intern(&lf[337],11,"random-item");
lf[345]=C_h_intern(&lf[345],14,"make-weighting");
lf[348]=C_h_intern(&lf[348],7,"\000weight");
lf[349]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[350]=C_h_intern(&lf[350],11,"make-markov");
lf[352]=C_h_intern(&lf[352],5,"\000past");
lf[353]=C_h_intern(&lf[353],2,"->");
lf[354]=C_decode_literal(C_heaptop,"\376B\000\000.Left hand sides have different number of items");
lf[355]=C_h_intern(&lf[355],3,"\000->");
lf[356]=C_decode_literal(C_heaptop,"\376B\000\000\042Transition missing right hand side");
lf[357]=C_decode_literal(C_heaptop,"\376B\000\000\030Transition is not a list");
lf[358]=C_decode_literal(C_heaptop,"\376B\000\000 Not a list of Markov transitions");
lf[359]=C_decode_literal(C_heaptop,"\376B\000\000\032No transition matches past");
lf[361]=C_h_intern(&lf[361],10,"graph-node");
lf[362]=C_h_intern(&lf[362],10,"make-graph");
lf[364]=C_h_intern(&lf[364],3,"\000to");
lf[365]=C_h_intern(&lf[365],3,"\000id");
lf[366]=C_decode_literal(C_heaptop,"\376B\000\000\025Graph node not a list");
lf[367]=C_decode_literal(C_heaptop,"\376B\000\000\016Not graph data");
lf[368]=C_decode_literal(C_heaptop,"\376B\000\000\024No graph node for id");
lf[369]=C_h_intern(&lf[369],14,"markov-analyze");
lf[370]=C_h_intern(&lf[370],6,"format");
lf[371]=C_decode_literal(C_heaptop,"\376B\000\000\002~s");
lf[372]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002->\376\377\016");
lf[373]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[374]=C_h_intern(&lf[374],7,"newline");
lf[375]=C_h_intern(&lf[375],7,"display");
lf[376]=C_h_intern(&lf[376],19,"\003syswrite-char/port");
lf[377]=C_h_intern(&lf[377],19,"\003sysstandard-output");
lf[378]=C_h_intern(&lf[378],3,"min");
lf[379]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[380]=C_decode_literal(C_heaptop,"\376B\000\000\003 ~a");
lf[381]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[382]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[383]=C_h_intern(&lf[383],11,"make-string");
lf[384]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[385]=C_h_intern(&lf[385],1,"<");
lf[386]=C_h_intern(&lf[386],11,"string-ci<\077");
lf[387]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[388]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[389]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[390]=C_h_intern(&lf[390],5,"\000mode");
lf[392]=C_h_intern(&lf[392],5,"token");
lf[397]=C_h_intern(&lf[397],1,"t");
lf[402]=C_h_intern(&lf[402],4,"rule");
lf[405]=C_h_intern(&lf[405],22,"hash-table-ref/default");
lf[412]=C_h_intern(&lf[412],11,"parse-error");
lf[416]=C_h_intern(&lf[416],10,"parse-unit");
lf[428]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[430]=C_h_intern(&lf[430],14,"string->symbol");
lf[431]=C_h_intern(&lf[431],6,"equal\077");
lf[432]=C_h_intern(&lf[432],3,"and");
lf[433]=C_h_intern(&lf[433],2,"or");
lf[434]=C_h_intern(&lf[434],3,"not");
lf[435]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[436]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[439]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[441]=C_h_intern(&lf[441],2,"!=");
lf[442]=C_h_intern(&lf[442],1,"=");
lf[447]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[448]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[449]=C_h_intern(&lf[449],1,"@");
lf[450]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[451]=C_h_intern(&lf[451],6,"printf");
lf[452]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[457]=C_h_intern(&lf[457],2,">=");
lf[458]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[459]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[460]=C_h_intern(&lf[460],5,"begin");
lf[461]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[462]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[463]=C_h_intern(&lf[463],1,">");
lf[464]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[465]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[466]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[470]=C_h_intern(&lf[470],17,"*sal-trace-input*");
lf[471]=C_h_intern(&lf[471],3,"sal");
lf[472]=C_h_intern(&lf[472],11,"print-error");
lf[473]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[474]=C_h_intern(&lf[474],9,"substring");
lf[475]=C_h_intern(&lf[475],2,"pp");
lf[476]=C_h_intern(&lf[476],4,"eval");
lf[477]=C_h_intern(&lf[477],7,"\000syntax");
lf[478]=C_h_intern(&lf[478],7,"\000scheme");
lf[479]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[480]=C_h_intern(&lf[480],7,"call/cc");
lf[481]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[482]=C_h_intern(&lf[482],9,"sal:print");
lf[483]=C_h_intern(&lf[483],13,"print-message");
lf[484]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[485]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[486]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[487]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[488]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[489]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[490]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[491]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[492]=C_h_intern(&lf[492],9,"sal:chdir");
lf[493]=C_h_intern(&lf[493],8,"sal:load");
lf[494]=C_h_intern(&lf[494],13,"load-sal-file");
lf[495]=C_h_intern(&lf[495],4,"load");
lf[496]=C_h_intern(&lf[496],15,"\003syssubstring=\077");
lf[497]=C_decode_literal(C_heaptop,"\376B\000\000\004.sal");
lf[498]=C_decode_literal(C_heaptop,"\376B\000\000\010Loading ");
lf[499]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[500]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[501]=C_decode_literal(C_heaptop,"\376B\000\000\020\042does not exist\012");
lf[502]=C_h_intern(&lf[502],12,"file-exists\077");
lf[503]=C_h_intern(&lf[503],8,"sal:open");
lf[504]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[505]=C_h_intern(&lf[505],10,"sal:output");
lf[506]=C_decode_literal(C_heaptop,"\376B\000\000+>>> Error: output command not implemented.\012");
lf[518]=C_h_intern(&lf[518],8,"operator");
lf[519]=C_h_intern(&lf[519],8,"bindings");
lf[520]=C_h_intern(&lf[520],10,"collectors");
lf[521]=C_h_intern(&lf[521],9,"initially");
lf[522]=C_h_intern(&lf[522],9,"end-tests");
lf[523]=C_h_intern(&lf[523],7,"looping");
lf[524]=C_h_intern(&lf[524],8,"stepping");
lf[525]=C_h_intern(&lf[525],7,"finally");
lf[526]=C_h_intern(&lf[526],9,"returning");
lf[532]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[533]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[534]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[535]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[536]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[537]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[538]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[540]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[541]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[542]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[543]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[544]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[545]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[546]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[548]=C_h_intern(&lf[548],3,"for");
lf[549]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[550]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[551]=C_h_intern(&lf[551],8,"downfrom");
lf[552]=C_h_intern(&lf[552],5,"above");
lf[553]=C_h_intern(&lf[553],5,"below");
lf[554]=C_h_intern(&lf[554],6,"downto");
lf[555]=C_h_intern(&lf[555],4,"from");
lf[556]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[557]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[558]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[559]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[560]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[561]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[562]=C_h_intern(&lf[562],2,"to");
lf[563]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[564]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[565]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[566]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[567]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[568]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[569]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[570]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[571]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[572]=C_h_intern(&lf[572],2,"by");
lf[573]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[574]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[575]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[576]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[578]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[579]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[581]=C_h_intern(&lf[581],6,"across");
lf[582]=C_h_intern(&lf[582],13,"vector-length");
lf[583]=C_h_intern(&lf[583],10,"vector-ref");
lf[584]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[585]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[586]=C_h_intern(&lf[586],4,"over");
lf[587]=C_h_intern(&lf[587],2,"in");
lf[588]=C_h_intern(&lf[588],5,"quote");
lf[589]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[590]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[591]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[592]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[593]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[594]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[595]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[596]=C_h_intern(&lf[596],2,"on");
lf[597]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[598]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[600]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[601]=C_h_intern(&lf[601],4,"then");
lf[602]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[603]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[604]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[605]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[607]=C_h_intern(&lf[607],4,"with");
lf[608]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[609]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[610]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[611]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[612]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[613]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[614]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[615]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[616]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[617]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[618]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[619]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[621]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[622]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[624]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[625]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[627]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[628]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[630]=C_h_intern(&lf[630],3,"sum");
lf[631]=C_h_intern(&lf[631],5,"count");
lf[632]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[633]=C_h_intern(&lf[633],8,"minimize");
lf[634]=C_h_intern(&lf[634],8,"maximize");
lf[635]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[636]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[637]=C_h_intern(&lf[637],4,"list");
lf[638]=C_h_intern(&lf[638],8,"set-cdr!");
lf[639]=C_h_intern(&lf[639],9,"last-pair");
lf[640]=C_h_intern(&lf[640],7,"collect");
lf[641]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[642]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[643]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[644]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[645]=C_h_intern(&lf[645],5,"nconc");
lf[646]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[647]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[648]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[649]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[650]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[651]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[652]=C_h_intern(&lf[652],4,"into");
lf[653]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[654]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[655]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[656]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[657]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[659]=C_h_intern(&lf[659],6,"return");
lf[661]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[662]=C_h_intern(&lf[662],5,"until");
lf[663]=C_h_intern(&lf[663],5,"while");
lf[664]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[665]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[667]=C_h_intern(&lf[667],7,"thereis");
lf[668]=C_h_intern(&lf[668],6,"always");
lf[669]=C_h_intern(&lf[669],5,"never");
lf[670]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[671]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[673]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[674]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[676]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[677]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[678]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[679]=C_h_intern(&lf[679],4,"task");
lf[680]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[682]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[683]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[684]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[685]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[686]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[688]=C_h_intern(&lf[688],2,"do");
lf[689]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[690]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[691]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[692]=C_h_intern(&lf[692],4,"iter");
lf[693]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[694]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[695]=C_h_intern(&lf[695],6,"repeat");
lf[696]=C_h_intern(&lf[696],2,"as");
lf[698]=C_h_intern(&lf[698],10,"mm:make-on");
lf[699]=C_h_intern(&lf[699],5,"\000time");
lf[700]=C_h_intern(&lf[700],4,"\000key");
lf[701]=C_h_intern(&lf[701],4,"\000vel");
lf[702]=C_h_intern(&lf[702],5,"\000chan");
lf[703]=C_h_intern(&lf[703],6,"mm:on\077");
lf[704]=C_h_intern(&lf[704],11,"mm:make-off");
lf[705]=C_h_intern(&lf[705],7,"mm:off\077");
lf[706]=C_h_intern(&lf[706],13,"mm:make-touch");
lf[707]=C_h_intern(&lf[707],4,"\000val");
lf[708]=C_h_intern(&lf[708],9,"mm:touch\077");
lf[709]=C_h_intern(&lf[709],12,"mm:make-ctrl");
lf[710]=C_h_intern(&lf[710],4,"\000num");
lf[711]=C_h_intern(&lf[711],8,"mm:ctrl\077");
lf[712]=C_h_intern(&lf[712],12,"mm:make-prog");
lf[713]=C_h_intern(&lf[713],8,"mm:prog\077");
lf[714]=C_h_intern(&lf[714],13,"mm:make-press");
lf[715]=C_h_intern(&lf[715],9,"mm:press\077");
lf[716]=C_h_intern(&lf[716],12,"mm:make-bend");
lf[717]=C_h_intern(&lf[717],7,"mm:free");
lf[718]=C_h_intern(&lf[718],7,"mm:copy");
lf[719]=C_h_intern(&lf[719],7,"mm:time");
lf[720]=C_h_intern(&lf[720],12,"mm:time-set!");
lf[721]=C_h_intern(&lf[721],7,"mm:chan");
lf[722]=C_h_intern(&lf[722],12,"mm:chan-set!");
lf[723]=C_h_intern(&lf[723],6,"mm:key");
lf[724]=C_h_intern(&lf[724],11,"mm:key-set!");
lf[725]=C_h_intern(&lf[725],6,"mm:vel");
lf[726]=C_h_intern(&lf[726],11,"mm:vel-set!");
lf[727]=C_h_intern(&lf[727],6,"mm:val");
lf[728]=C_h_intern(&lf[728],11,"mm:val-set!");
lf[729]=C_h_intern(&lf[729],1,"k");
lf[730]=C_h_intern(&lf[730],6,"mm:num");
lf[731]=C_h_intern(&lf[731],11,"mm:num-set!");
lf[732]=C_h_intern(&lf[732],7,"mp:note");
lf[733]=C_h_intern(&lf[733],7,"mp:midi");
lf[734]=C_h_intern(&lf[734],6,"mp:off");
lf[735]=C_h_intern(&lf[735],5,"mp:on");
lf[736]=C_h_intern(&lf[736],8,"mp:touch");
lf[737]=C_h_intern(&lf[737],7,"mp:ctrl");
lf[738]=C_h_intern(&lf[738],7,"mp:prog");
lf[739]=C_h_intern(&lf[739],8,"mp:press");
lf[740]=C_h_intern(&lf[740],7,"mp:bend");
lf[741]=C_h_intern(&lf[741],5,"mp:mm");
lf[742]=C_h_intern(&lf[742],9,"mp:inhook");
lf[743]=C_decode_literal(C_heaptop,"\376B\000\000*>>> Error: ~A~%    Aborting MIDI inhook.~%");
lf[744]=C_h_intern(&lf[744],27,"condition-property-accessor");
lf[745]=C_h_intern(&lf[745],3,"exn");
lf[746]=C_h_intern(&lf[746],7,"message");
lf[747]=C_h_intern(&lf[747],22,"with-exception-handler");
lf[748]=C_h_intern(&lf[748],30,"call-with-current-continuation");
lf[749]=C_h_intern(&lf[749],9,"mp:tuning");
lf[750]=C_decode_literal(C_heaptop,"\376B\000\000\032not a tuning division 1-16");
lf[751]=C_h_intern(&lf[751],10,"mp:playseq");
lf[752]=C_h_intern(&lf[752],10,"mp:saveseq");
lf[753]=C_h_intern(&lf[753],10,"mp:copyseq");
lf[754]=C_h_intern(&lf[754],10,"mp:plotseq");
lf[755]=C_h_intern(&lf[755],11,"mp:clearseq");
lf[756]=C_h_intern(&lf[756],12,"mp:recordseq");
lf[757]=C_h_intern(&lf[757],9,"cs:record");
lf[758]=C_decode_literal(C_heaptop,"\376B\000\000\037value not boolean or number > 0");
lf[759]=C_h_intern(&lf[759],8,"cs:clear");
lf[760]=C_h_intern(&lf[760],4,"cs:i");
lf[761]=C_h_intern(&lf[761],4,"cs:f");
lf[762]=C_h_intern(&lf[762],8,"cs:print");
lf[763]=C_h_intern(&lf[763],6,"\000start");
lf[764]=C_h_intern(&lf[764],4,"\000end");
lf[765]=C_h_intern(&lf[765],7,"cs:play");
lf[766]=C_h_intern(&lf[766],6,"\000shift");
lf[767]=C_h_intern(&lf[767],7,"cm-logo");
lf[768]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[769]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[770]=C_decode_literal(C_heaptop,"\376B\000\000\015Common Music ");
lf[771]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[772]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[773]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[774]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[776]=C_h_intern(&lf[776],6,"\003sysgc");
lf[778]=C_h_intern(&lf[778],6,"sprout");
lf[779]=C_decode_literal(C_heaptop,"\376B\000\000%sprout: list contains a non-procedure");
lf[780]=C_decode_literal(C_heaptop,"\376B\000\000\027sprout: not a procedure");
lf[781]=C_h_intern(&lf[781],9,"\003syserror");
lf[782]=C_decode_literal(C_heaptop,"\376B\000\000\033too many optional arguments");
lf[783]=C_h_intern(&lf[783],3,"now");
lf[784]=C_h_intern(&lf[784],5,"pause");
lf[785]=C_h_intern(&lf[785],7,"paused\077");
lf[786]=C_h_intern(&lf[786],4,"cont");
lf[787]=C_h_intern(&lf[787],4,"stop");
lf[788]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[789]=C_h_intern(&lf[789],4,"hush");
lf[791]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\014%%stopproc%%\376\003\000\000\002\376\377\001\377\377\377\377\376\377\016");
lf[793]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[794]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[797]=C_h_intern(&lf[797],14,"return-to-host");
lf[798]=C_h_intern(&lf[798],6,"define");
lf[799]=C_decode_literal(C_heaptop,"\376B\000\000\027Illegal process formals");
lf[800]=C_h_intern(&lf[800],18,"\003sysregister-macro");
lf[801]=C_h_intern(&lf[801],14,"define-process");
lf[802]=C_h_intern(&lf[802],6,"lambda");
lf[803]=C_h_intern(&lf[803],7,"elapsed");
lf[804]=C_h_intern(&lf[804],1,"x");
lf[805]=C_h_intern(&lf[805],4,"wait");
lf[806]=C_h_intern(&lf[806],18,"current-error-port");
lf[807]=C_h_intern(&lf[807],19,"print-error-message");
lf[808]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[809]=C_decode_literal(C_heaptop,"\376B\000\000*Warning: possible non-terminating process.");
lf[810]=C_decode_literal(C_heaptop,"\376B\000\000\003err");
lf[811]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[812]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[813]=C_h_intern(&lf[813],3,"run");
lf[814]=C_h_intern(&lf[814],20,"\003sysregister-macro-2");
lf[815]=C_h_intern(&lf[815],15,"hash-table-set!");
lf[816]=C_decode_literal(C_heaptop,"\376B\000\000\007cs:play");
lf[817]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007cs:play\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[818]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:print");
lf[819]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:print\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[820]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:clear");
lf[821]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:clear\376\377\016");
lf[822]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:trace");
lf[823]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:trace\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[824]=C_decode_literal(C_heaptop,"\376B\000\000\011cs:record");
lf[825]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011cs:record\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[826]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:score");
lf[827]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:score\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[828]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[829]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:f\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[830]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[831]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:i\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[832]=C_decode_literal(C_heaptop,"\376B\000\000\013mp:clearseq");
lf[833]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\013mp:clearseq\376\377\016");
lf[834]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:plotseq");
lf[835]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\012mp:plotseq\376\377\016");
lf[836]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:copyseq");
lf[837]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\012mp:copyseq\376\377\016");
lf[838]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:saveseq");
lf[839]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\012mp:saveseq\376\377\016");
lf[840]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:playseq");
lf[841]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\012mp:playseq\376\377\016");
lf[842]=C_decode_literal(C_heaptop,"\376B\000\000\014mp:recordseq");
lf[843]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\014mp:recordseq\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000rec\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[844]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:tuning");
lf[845]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011mp:tuning\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000div\376\003\000\000\002\376\377\001\000\000\000\001\376\377\016\376\377\016");
lf[846]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[847]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011mp:inhook\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000func\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[848]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[849]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:mm\376\003\000\000\002\376\003\000\000\002\376\001\000\000\003\000mm\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[850]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[851]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:bend\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000 \000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[852]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[853]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:press\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[854]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[855]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:prog\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[856]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[857]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:ctrl\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000num\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[858]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[859]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:touch\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[860]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[861]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:on\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000"
"<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000vel\376\003\000\000\002\376\377\001\000\000\000@\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[862]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[863]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006mp:off\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000"
"\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[864]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[865]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:midi\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[866]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:note");
lf[867]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:note\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[868]=C_h_intern(&lf[868],5,":loop");
lf[869]=C_h_intern(&lf[869],7,"tagbody");
lf[870]=C_h_intern(&lf[870],5,"block");
lf[871]=C_h_intern(&lf[871],3,"nil");
lf[872]=C_h_intern(&lf[872],2,"go");
lf[873]=C_h_intern(&lf[873],8,"function");
lf[874]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[875]=C_h_intern(&lf[875],3,"pop");
lf[876]=C_h_intern(&lf[876],4,"cons");
lf[877]=C_h_intern(&lf[877],4,"push");
lf[878]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[879]=C_h_intern(&lf[879],4,"loop");
lf[880]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[881]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[882]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[883]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[884]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[885]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[886]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[887]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[888]=C_h_intern(&lf[888],7,"\000return");
lf[889]=C_h_intern(&lf[889],9,"\000function");
lf[890]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[891]=C_h_intern(&lf[891],8,"\000process");
lf[892]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[893]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[894]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[895]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[896]=C_h_intern(&lf[896],4,"cond");
lf[897]=C_decode_literal(C_heaptop,"\376B\000\000\005abort");
lf[898]=C_decode_literal(C_heaptop,"\376B\000\000\005error");
lf[899]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[900]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[901]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[902]=C_decode_literal(C_heaptop,"\376B\000\000\004halt");
lf[903]=C_h_intern(&lf[903],5,"\000loop");
lf[904]=C_h_intern(&lf[904],4,"\000run");
lf[905]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[906]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[907]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[908]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[909]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[910]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[911]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[912]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[913]=C_h_intern(&lf[913],9,"list-tail");
lf[914]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[915]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[916]=C_h_intern(&lf[916],9,"\000bindings");
lf[917]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[918]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[919]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[920]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[921]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[922]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[923]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[924]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[925]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[926]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[927]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[928]=C_h_intern(&lf[928],10,"sal:system");
lf[929]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[930]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[931]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[932]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[933]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[934]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[935]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[936]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[937]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[938]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[939]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[940]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[941]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[942]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[943]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[944]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[945]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[946]=C_h_intern(&lf[946],7,"unquote");
lf[947]=C_h_intern(&lf[947],16,"unquote-splicing");
lf[948]=C_h_intern(&lf[948],5,"\000list");
lf[949]=C_h_intern(&lf[949],8,"\000unquote");
lf[950]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[951]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[952]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[953]=C_h_intern(&lf[953],10,"quasiquote");
lf[954]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[955]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[956]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[957]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[958]=C_h_intern(&lf[958],7,"fprintf");
lf[959]=C_decode_literal(C_heaptop,"\376B\000\000\007#<u ~A>");
lf[960]=C_decode_literal(C_heaptop,"\376B\000\000\010#<u x~X>");
lf[961]=C_h_intern(&lf[961],27,"\003sysregister-record-printer");
lf[962]=C_decode_literal(C_heaptop,"\376B\000\000\030#<parse-error ~S (@ ~S)>");
lf[963]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[964]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\001+\376\003\000\000\002\376\001\000\000\001*\376\003\000\000\002\376\001\000\000\001@\376\003\000\000\002\376\001\000\000\003and\376\003\000\000\002\376\001\000\000\002or\376\377\016");
lf[965]=C_h_intern(&lf[965],6,"ruleid");
lf[966]=C_h_intern(&lf[966],9,"make-rule");
lf[967]=C_h_intern(&lf[967],7,"*rules*");
lf[968]=C_h_intern(&lf[968],7,"defrule");
lf[969]=C_decode_literal(C_heaptop,"\376B\000\000\007#<r ~A>");
lf[970]=C_h_intern(&lf[970],15,"make-hash-table");
lf[971]=C_h_intern(&lf[971],3,"eq\077");
lf[972]=C_decode_literal(C_heaptop,"\376B\000\000\013#<t x~X ~S>");
lf[973]=C_decode_literal(C_heaptop,"\376B\000\000\016#<spectrum ~S>");
lf[974]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[975]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[976]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[977]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001c\376\003\000\000\002\376B\000\000\002bs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002df\376\003\000\000\002\376B\000\000\002cs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001d\376"
"\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002ef\376\003\000\000\002\376B\000\000\002ds\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001e\376\003\000\000\002\376B\000\000\002ff\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001"
"f\376\003\000\000\002\376B\000\000\002es\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002fs\376\003\000\000\002\376B\000\000\002gf\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001g\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000"
"\000\002af\376\003\000\000\002\376B\000\000\002gs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001a\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002bf\376\003\000\000\002\376B\000\000\002as\376\377\016\376\003\000\000\002\376\003\000\000\002"
"\376B\000\000\001b\376\003\000\000\002\376B\000\000\002cf\376\377\016\376\377\016");
lf[978]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[979]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[980]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376B\000\000\00200\376\003\000\000\002\376B\000\000\0010\376\003\000\000\002\376B\000\000\0011\376\003\000\000\002\376B\000\000\0012\376\003\000\000\002\376B\000\000\0013\376\003\000\000\002\376B\000\000\0014\376\003\000\000\002\376B\000\000\0015\376\003"
"\000\000\002\376B\000\000\0016\376\003\000\000\002\376B\000\000\0017\376\003\000\000\002\376B\000\000\0018\376\003\000\000\002\376B\000\000\0019\376\377\016");
lf[981]=C_decode_literal(C_heaptop,"\376B\000\000\001>");
lf[982]=C_decode_literal(C_heaptop,"\376B\000\000\001<");
lf[983]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[984]=C_decode_literal(C_heaptop,"\376B\000\000\002cf");
lf[985]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[986]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[987]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[988]=C_h_intern(&lf[988],4,"send");
lf[989]=C_decode_literal(C_heaptop,"\376B\000\0003message function not string, symbol or list of both");
lf[990]=C_h_intern(&lf[990],19,"define-send-message");
lf[991]=C_h_intern(&lf[991],12,"with-optkeys");
C_register_lf2(lf,992,create_ptable());
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6552,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6550 */
static void C_ccall f_6552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6552,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6555,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6553 in k6550 */
static void C_ccall f_6555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6555,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6558,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6556 in k6553 in k6550 */
static void C_ccall f_6558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6558,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6561,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6561,2,t0,t1);}
t2=C_mutate((C_word*)lf[0]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6563,a[2]=((C_word)li4),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6852,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41620,a[2]=((C_word)li681),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 234  ##sys#register-macro");
t5=C_retrieve(lf[800]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[991],t4);}

/* a41619 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41620(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_41620r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_41620r(t0,t1,t2,t3);}}

static void C_ccall f_41620r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 235  expand-optkeys");
t6=*((C_word*)lf[0]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t1,t4,t5,t3);}

/* k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6852,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6856,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 241  make-hash-table");
t3=C_retrieve(lf[970]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,*((C_word*)lf[431]+1));}

/* k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6856,2,t0,t1);}
t2=C_mutate((C_word*)lf[29]+1,t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6859,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41568,a[2]=((C_word)li680),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 243  ##sys#register-macro");
t5=C_retrieve(lf[800]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[990],t4);}

/* a41567 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41568(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[18],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41568,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41572,a[2]=t6,a[3]=t1,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t8=(C_word)C_i_car(((C_word*)t4)[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cadr(((C_word*)t4)[1]);
t11=C_set_block_item(t4,0,t10);
t12=t7;
f_41572(2,t12,t11);}
else{
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t8=C_set_block_item(t6,0,((C_word*)t4)[1]);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41605,a[2]=t7,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 250  string->symbol");
t10=*((C_word*)lf[430]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)t4)[1]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t4)[1]))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41615,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 252  symbol->string");
t9=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t4)[1]);}
else{
C_trace("ChickenBridge.scm: 254  error");
t8=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[989]);}}}}

/* k41613 in a41567 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_41572(2,t3,t2);}

/* k41603 in a41567 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_41572(2,t3,t2);}

/* k41570 in a41567 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41572,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,lf[588],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,4,lf[815],lf[29],((C_word*)((C_word*)t0)[2])[1],t3));}

/* k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6859,2,t0,t1);}
t2=C_mutate((C_word*)lf[30]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6861,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7152,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41562,a[2]=((C_word)li679),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 339  ##sys#register-macro");
t5=C_retrieve(lf[800]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[988],t4);}

/* a41561 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41562(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_41562r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_41562r(t0,t1,t2,t3);}}

static void C_ccall f_41562r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 340  expand-send");
t4=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word t81;
C_word t82;
C_word t83;
C_word t84;
C_word t85;
C_word t86;
C_word t87;
C_word t88;
C_word t89;
C_word t90;
C_word t91;
C_word t92;
C_word t93;
C_word t94;
C_word t95;
C_word ab[234],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7152,2,t0,t1);}
t2=C_mutate((C_word*)lf[42]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7154,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[44]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7165,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[47]+1,*((C_word*)lf[8]+1));
t5=C_mutate((C_word*)lf[48]+1,*((C_word*)lf[22]+1));
t6=C_mutate((C_word*)lf[49]+1,*((C_word*)lf[50]+1));
t7=C_mutate((C_word*)lf[51]+1,*((C_word*)lf[52]+1));
t8=C_mutate((C_word*)lf[53]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7198,a[2]=((C_word)li17),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[54]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7208,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[55]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7218,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[56]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7228,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[57]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7238,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[58]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7252,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[59]+1,*((C_word*)lf[60]+1));
t15=C_mutate((C_word*)lf[61]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7267,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[62]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7273,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[63]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7296,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[64]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7344,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[65]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7434,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[67]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7474,a[2]=((C_word)li28),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[68]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7484,a[2]=((C_word)li30),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[69]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7545,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[71]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7644,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[72]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7684,a[2]=((C_word)li37),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[73]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7723,a[2]=((C_word)li39),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[74],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7762,a[2]=((C_word)li40),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[75],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7848,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[76],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7889,a[2]=((C_word)li43),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[77],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7916,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[78],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7943,a[2]=((C_word)li45),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[79],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7950,a[2]=((C_word)li46),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[80],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7961,a[2]=((C_word)li47),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[81],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7976,a[2]=((C_word)li48),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[82],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7983,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[83],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7990,a[2]=((C_word)li50),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[84],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8009,a[2]=((C_word)li51),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[85],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8028,a[2]=((C_word)li52),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[86],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8049,a[2]=((C_word)li53),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[87],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8052,a[2]=((C_word)li54),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[88],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8059,a[2]=((C_word)li55),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate(&lf[89],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8088,a[2]=((C_word)li56),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate(&lf[90],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8091,a[2]=((C_word)li57),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[91],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8094,a[2]=((C_word)li58),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[92],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8097,a[2]=((C_word)li59),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[93],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8108,a[2]=((C_word)li60),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate(&lf[94],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8126,a[2]=((C_word)li61),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[95],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8133,a[2]=((C_word)li62),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate(&lf[96],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8136,a[2]=((C_word)li63),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate(&lf[97],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8143,a[2]=((C_word)li64),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate(&lf[98],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8146,a[2]=((C_word)li65),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[99]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8165,a[2]=((C_word)li66),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[100]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8172,a[2]=((C_word)li67),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[101]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8179,a[2]=((C_word)li69),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[102]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8213,a[2]=((C_word)li72),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[104]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8324,a[2]=((C_word)li73),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[105]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8339,a[2]=((C_word)li75),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate((C_word*)lf[108]+1,lf[109]);
t58=C_set_block_item(lf[110],0,C_fix(1073741823));
t59=C_set_block_item(lf[111],0,C_fix(-1073741823));
t60=C_mutate((C_word*)lf[112]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8363,a[2]=((C_word)li77),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate((C_word*)lf[114]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8432,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate((C_word*)lf[116]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8501,a[2]=((C_word)li81),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate((C_word*)lf[118]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8544,a[2]=((C_word)li83),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate((C_word*)lf[120]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8587,a[2]=((C_word)li85),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[121]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8608,a[2]=((C_word)li87),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate((C_word*)lf[125]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8648,a[2]=((C_word)li89),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate((C_word*)lf[130]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8884,a[2]=((C_word)li90),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[131]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8899,a[2]=((C_word)li91),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate(&lf[132],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8914,a[2]=((C_word)li93),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate((C_word*)lf[137]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9000,a[2]=((C_word)li94),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate((C_word*)lf[139]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9046,a[2]=((C_word)li95),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate((C_word*)lf[141]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9113,a[2]=((C_word)li98),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate((C_word*)lf[144]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9246,a[2]=((C_word)li100),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate((C_word*)lf[147]+1,C_retrieve2(lf[86],"tb:ran-set!"));
t75=C_mutate((C_word*)lf[140]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9354,a[2]=((C_word)li101),tmp=(C_word)a,a+=3,tmp));
t76=C_mutate((C_word*)lf[148]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9389,a[2]=((C_word)li102),tmp=(C_word)a,a+=3,tmp));
t77=C_mutate((C_word*)lf[149]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9410,a[2]=((C_word)li103),tmp=(C_word)a,a+=3,tmp));
t78=C_mutate((C_word*)lf[150]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9453,a[2]=((C_word)li104),tmp=(C_word)a,a+=3,tmp));
t79=C_mutate((C_word*)lf[154]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9681,a[2]=((C_word)li107),tmp=(C_word)a,a+=3,tmp));
t80=C_mutate((C_word*)lf[157]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9780,a[2]=((C_word)li109),tmp=(C_word)a,a+=3,tmp));
t81=C_mutate((C_word*)lf[158]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9835,a[2]=((C_word)li110),tmp=(C_word)a,a+=3,tmp));
t82=C_mutate((C_word*)lf[159]+1,C_retrieve2(lf[89],"tb:ranlow"));
t83=C_mutate((C_word*)lf[160]+1,C_retrieve2(lf[90],"tb:ranhigh"));
t84=C_mutate((C_word*)lf[161]+1,C_retrieve2(lf[91],"tb:ranmiddle"));
t85=C_mutate((C_word*)lf[162]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9877,a[2]=((C_word)li111),tmp=(C_word)a,a+=3,tmp));
t86=C_mutate((C_word*)lf[166]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10105,a[2]=((C_word)li112),tmp=(C_word)a,a+=3,tmp));
t87=C_mutate((C_word*)lf[167]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10124,a[2]=((C_word)li113),tmp=(C_word)a,a+=3,tmp));
t88=C_mutate((C_word*)lf[168]+1,C_retrieve2(lf[95],"tb:rancauchy"));
t89=C_mutate((C_word*)lf[169]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10165,a[2]=((C_word)li114),tmp=(C_word)a,a+=3,tmp));
t90=C_mutate((C_word*)lf[171]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10184,a[2]=((C_word)li115),tmp=(C_word)a,a+=3,tmp));
t91=C_mutate((C_word*)lf[172]+1,C_retrieve2(lf[98],"tb:ranbrown"));
t92=C_mutate((C_word*)lf[173]+1,C_retrieve2(lf[97],"tb:ranpink"));
t93=C_mutate((C_word*)lf[174]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10205,a[2]=((C_word)li119),tmp=(C_word)a,a+=3,tmp));
t94=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10414,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 354  make-hash-table");
t95=C_retrieve(lf[970]);
((C_proc3)C_retrieve_proc(t95))(3,t95,t94,*((C_word*)lf[431]+1));}

/* k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10414,2,t0,t1);}
t2=C_mutate(&lf[177],t1);
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10417,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41346,a[2]=t7,a[3]=t4,a[4]=((C_word)li678),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_41346(t9,t5,C_fix(0));}

/* do725 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_41346(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41346,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(128)))){
t3=(C_word)C_a_i_list(&a,5,lf[974],C_fix(-1),lf[975],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41359,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 354  hash-table-set!");
t5=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[177],"*notes*"),lf[976],t3);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41560,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 354  modulo");
t4=*((C_word*)lf[145]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(12));}}

/* k41558 in do725 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41560,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[977],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41369,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41380,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 354  modulo");
t6=*((C_word*)lf[145]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t0)[4],C_fix(12));}

/* k41378 in k41558 in do725 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41380,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],lf[978]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],lf[979]);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41392,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 354  tb:keynum->hertz");
f_8028(t4,((C_word*)t0)[4]);}

/* k41390 in k41378 in k41558 in do725 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41392,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41396,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],lf[987]);
C_trace("ChickenBridge.scm: 354  tb:keynum->hertz");
f_8028(t2,t3);}

/* k41394 in k41390 in k41378 in k41558 in do725 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41396,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_41400,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],lf[986]);
C_trace("ChickenBridge.scm: 354  tb:keynum->hertz");
f_8028(t2,t3);}

/* k41398 in k41394 in k41390 in k41378 in k41558 in do725 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41400,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_41544,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[7],C_fix(12));
C_trace("ChickenBridge.scm: 354  floor");
t4=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k41542 in k41398 in k41394 in k41390 in k41378 in k41558 in do725 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41544,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41406,a[2]=((C_word*)t0)[10],a[3]=t4,a[4]=((C_word)li677),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_41406(t6,((C_word*)t0)[9],((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do731 in k41542 in k41398 in k41394 in k41390 in k41378 in k41558 in do725 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_41406(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13){
C_word tmp;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[40],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41406,NULL,14,t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}
t14=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t18=t1;
((C_proc2)(void*)(*((C_word*)t18+1)))(2,t18,C_SCHEME_FALSE);}
else{
t18=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_41416,a[2]=t17,a[3]=t16,a[4]=t15,a[5]=t14,a[6]=t9,a[7]=t8,a[8]=t7,a[9]=t6,a[10]=t5,a[11]=t4,a[12]=t3,a[13]=t1,a[14]=((C_word*)t0)[3],a[15]=t2,tmp=(C_word)a,a+=16,tmp);
t19=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_41426,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t8,a[5]=t6,a[6]=t9,a[7]=t5,a[8]=t17,a[9]=t4,a[10]=t7,a[11]=t3,a[12]=t16,a[13]=t15,a[14]=t14,a[15]=t18,tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t20=(C_word)C_i_car(t2);
t21=t19;
f_41426(t21,(C_word)C_i_string_equal_p(t20,lf[985]));}
else{
t20=t19;
f_41426(t20,C_SCHEME_FALSE);}}}

/* k41424 in do731 in k41542 in k41398 in k41394 in k41390 in k41378 in k41558 in do725 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_41426(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41426,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[15];
f_41416(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_41429,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],tmp=(C_word)a,a+=16,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t3,lf[983]))){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[14])+1,t4);
t6=t2;
f_41429(t6,t5);}
else{
t4=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t4,lf[984]))){
t5=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t6=C_mutate(((C_word *)((C_word*)t0)[14])+1,t5);
t7=t2;
f_41429(t7,t6);}
else{
t5=t2;
f_41429(t5,C_SCHEME_UNDEFINED);}}}}

/* k41427 in k41424 in do731 in k41542 in k41398 in k41394 in k41390 in k41378 in k41558 in do725 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_41429(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41429,NULL,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[980],((C_word*)((C_word*)t0)[15])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[14])+1,t2);
t4=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_41437,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[14],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],tmp=(C_word)a,a+=15,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 354  string-append");
t6=*((C_word*)lf[180]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[14])[1]);}

/* k41435 in k41427 in k41424 in do731 in k41542 in k41398 in k41394 in k41390 in k41378 in k41558 in do725 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41437,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[14])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[14])[1],((C_word*)t0)[13],((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)((C_word*)t0)[10])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_41444,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 354  hash-table-set!");
t6=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[177],"*notes*"),((C_word*)((C_word*)t0)[14])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k41442 in k41435 in k41427 in k41424 in do731 in k41542 in k41398 in k41394 in k41390 in k41378 in k41558 in do725 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41444,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_41447,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 354  hash-table-set!");
t4=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[177],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}
else{
t4=t2;
f_41447(2,t4,C_SCHEME_UNDEFINED);}}

/* k41445 in k41442 in k41435 in k41427 in k41424 in do731 in k41542 in k41398 in k41394 in k41390 in k41378 in k41558 in do725 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41447,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_41451,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 354  string-append");
t4=*((C_word*)lf[180]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[982],((C_word*)((C_word*)t0)[8])[1]);}

/* k41449 in k41445 in k41442 in k41435 in k41427 in k41424 in do731 in k41542 in k41398 in k41394 in k41390 in k41378 in k41558 in do725 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41451,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10],((C_word*)t0)[9],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_41458,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 354  hash-table-set!");
t6=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[177],"*notes*"),((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k41456 in k41449 in k41445 in k41442 in k41435 in k41427 in k41424 in do731 in k41542 in k41398 in k41394 in k41390 in k41378 in k41558 in do725 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41458,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_41461,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 354  hash-table-set!");
t4=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[177],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=t2;
f_41461(2,t4,C_SCHEME_UNDEFINED);}}

/* k41459 in k41456 in k41449 in k41445 in k41442 in k41435 in k41427 in k41424 in do731 in k41542 in k41398 in k41394 in k41390 in k41378 in k41558 in do725 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41461,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_41465,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 354  string-append");
t4=*((C_word*)lf[180]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[981],((C_word*)((C_word*)t0)[6])[1]);}

/* k41463 in k41459 in k41456 in k41449 in k41445 in k41442 in k41435 in k41427 in k41424 in do731 in k41542 in k41398 in k41394 in k41390 in k41378 in k41558 in do725 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41465,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8],((C_word*)t0)[7],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41472,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 354  hash-table-set!");
t6=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[177],"*notes*"),((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[5])[1]);}

/* k41470 in k41463 in k41459 in k41456 in k41449 in k41445 in k41442 in k41435 in k41427 in k41424 in do731 in k41542 in k41398 in k41394 in k41390 in k41378 in k41558 in do725 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 354  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],C_retrieve2(lf[177],"*notes*"),((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=((C_word*)t0)[4];
f_41416(2,t3,C_SCHEME_UNDEFINED);}}

/* k41414 in do731 in k41542 in k41398 in k41394 in k41390 in k41378 in k41558 in do725 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[15]);
t3=((C_word*)((C_word*)t0)[14])[1];
f_41406(t3,((C_word*)t0)[13],t2,((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)t0)[10],((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k41367 in k41558 in do725 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41369,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_41346(t3,((C_word*)t0)[2],t2);}

/* k41357 in do725 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41359,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41362,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 354  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[177],"*notes*"),C_fix(-1),((C_word*)t0)[2]);}

/* k41360 in k41357 in do725 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}

/* k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[60],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10417,2,t0,t1);}
t2=C_mutate(&lf[178],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10419,a[2]=((C_word)li122),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[182],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10521,a[2]=((C_word)li125),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[190]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10574,a[2]=((C_word)li127),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[192]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10671,a[2]=((C_word)li129),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[194]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10793,a[2]=((C_word)li131),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[196]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10909,a[2]=((C_word)li132),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[197]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10954,a[2]=((C_word)li136),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[200]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11089,a[2]=((C_word)li140),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[202]+1,*((C_word*)lf[203]+1));
t11=C_mutate((C_word*)lf[204]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11255,a[2]=((C_word)li143),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[207],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11397,a[2]=((C_word)li144),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[209],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11403,a[2]=((C_word)li145),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[210]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11418,a[2]=((C_word)li146),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[211],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11427,a[2]=((C_word)li147),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[213]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11436,a[2]=((C_word)li148),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[214],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11445,a[2]=((C_word)li149),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[215]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11454,a[2]=((C_word)li150),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[216],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11463,a[2]=((C_word)li151),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[217]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11472,a[2]=((C_word)li152),tmp=(C_word)a,a+=3,tmp));
t21=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11482,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41336,a[2]=((C_word)li676),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 355  ##sys#register-record-printer");
t23=C_retrieve(lf[961]);
((C_proc4)C_retrieve_proc(t23))(4,t23,t21,lf[208],t22);}

/* a41335 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41336(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41336,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41344,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-freqs");
t5=C_retrieve(lf[215]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k41342 in a41335 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 355  fprintf");
t2=C_retrieve(lf[958]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[973],t1);}

/* k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word t81;
C_word ab[237],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11482,2,t0,t1);}
t2=C_mutate((C_word*)lf[218]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11484,a[2]=((C_word)li153),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[219]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11522,a[2]=((C_word)li155),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[221]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11581,a[2]=((C_word)li156),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[222]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11591,a[2]=((C_word)li157),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[223]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11609,a[2]=((C_word)li159),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[226]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11640,a[2]=((C_word)li161),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[228]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11888,a[2]=((C_word)li170),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[236]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13361,a[2]=((C_word)li176),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[241]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13773,a[2]=((C_word)li178),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[242]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13952,a[2]=((C_word)li186),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[247]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14164,a[2]=((C_word)li188),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[248]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14221,a[2]=((C_word)li197),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[257]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14734,a[2]=((C_word)li204),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[270],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14860,a[2]=((C_word)li205),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[272],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14872,a[2]=((C_word)li206),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[273],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14881,a[2]=((C_word)li207),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[274],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14899,a[2]=((C_word)li208),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[275],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14917,a[2]=((C_word)li209),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[276],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14944,a[2]=((C_word)li210),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[277],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14953,a[2]=((C_word)li211),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[278],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14971,a[2]=((C_word)li212),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[279],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15016,a[2]=((C_word)li213),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[281],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15031,a[2]=((C_word)li214),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[282],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15040,a[2]=((C_word)li215),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[283],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15049,a[2]=((C_word)li216),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[284],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15067,a[2]=((C_word)li217),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[285],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15076,a[2]=((C_word)li218),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[286],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15085,a[2]=((C_word)li219),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[287],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15103,a[2]=((C_word)li220),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[288],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15112,a[2]=((C_word)li221),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[289],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15121,a[2]=((C_word)li222),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[290],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15130,a[2]=((C_word)li223),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[291],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15139,a[2]=((C_word)li224),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[292],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15256,a[2]=((C_word)li225),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[293],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15265,a[2]=((C_word)li226),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[294],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15320,a[2]=((C_word)li227),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[298],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15330,a[2]=((C_word)li229),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[306]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15510,a[2]=((C_word)li230),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate((C_word*)lf[308]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15529,a[2]=((C_word)li231),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[310]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15548,a[2]=((C_word)li234),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate(&lf[311],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15671,a[2]=((C_word)li237),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[312],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15972,a[2]=((C_word)li238),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[305],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15981,a[2]=((C_word)li239),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[313],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16027,a[2]=((C_word)li241),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[317]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16142,a[2]=((C_word)li243),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[318],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16397,a[2]=((C_word)li244),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate(&lf[321],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16469,a[2]=((C_word)li245),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate(&lf[323],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16478,a[2]=((C_word)li246),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[324]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16558,a[2]=((C_word)li248),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate(&lf[325],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17028,a[2]=((C_word)li249),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[329]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17243,a[2]=((C_word)li251),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate(&lf[330],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17490,a[2]=((C_word)li252),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[331]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17526,a[2]=((C_word)li254),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate(&lf[332],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17789,a[2]=((C_word)li256),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[333]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17865,a[2]=((C_word)li258),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate(&lf[334],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18339,a[2]=((C_word)li261),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[336],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18561,a[2]=((C_word)li262),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[338],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18570,a[2]=((C_word)li263),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[339],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18579,a[2]=((C_word)li264),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate(&lf[340],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18597,a[2]=((C_word)li265),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate(&lf[341],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18615,a[2]=((C_word)li266),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate(&lf[342],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18633,a[2]=((C_word)li267),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate(&lf[343],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18642,a[2]=((C_word)li268),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate(&lf[344],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18651,a[2]=((C_word)li269),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate((C_word*)lf[345]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18734,a[2]=((C_word)li274),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate(&lf[346],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19501,a[2]=((C_word)li277),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate(&lf[347],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19613,a[2]=((C_word)li282),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate((C_word*)lf[350]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20046,a[2]=((C_word)li287),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate(&lf[351],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20533,a[2]=((C_word)li294),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate(&lf[360],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20873,a[2]=((C_word)li295),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate((C_word*)lf[362]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20936,a[2]=((C_word)li300),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate(&lf[363],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21454,a[2]=((C_word)li302),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate((C_word*)lf[369]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21548,a[2]=((C_word)li325),tmp=(C_word)a,a+=3,tmp));
t75=C_mutate(&lf[391],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22570,a[2]=((C_word)li326),tmp=(C_word)a,a+=3,tmp));
t76=C_mutate(&lf[393],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22591,a[2]=((C_word)li327),tmp=(C_word)a,a+=3,tmp));
t77=C_mutate(&lf[394],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22609,a[2]=((C_word)li328),tmp=(C_word)a,a+=3,tmp));
t78=C_mutate(&lf[395],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22627,a[2]=((C_word)li329),tmp=(C_word)a,a+=3,tmp));
t79=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22637,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t80=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41322,a[2]=((C_word)li675),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  ##sys#register-record-printer");
t81=C_retrieve(lf[961]);
((C_proc4)C_retrieve_proc(t81))(4,t81,t79,lf[392],t80);}

/* a41321 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41322(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41322,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41330,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  token-type");
f_22591(t4,t2);}

/* k41328 in a41321 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41330,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41334,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  token-string");
f_22609(t2,((C_word*)t0)[2]);}

/* k41332 in k41328 in a41321 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  fprintf");
t2=C_retrieve(lf[958]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[972],((C_word*)t0)[2],t1);}

/* k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22637,2,t0,t1);}
t2=C_mutate(&lf[396],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22639,a[2]=((C_word)li330),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[398],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22668,a[2]=((C_word)li331),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[399],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22680,a[2]=((C_word)li332),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22688,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-hash-table");
t6=C_retrieve(lf[970]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,*((C_word*)lf[971]+1));}

/* k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22688,2,t0,t1);}
t2=C_mutate(&lf[400],t1);
t3=C_mutate(&lf[401],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22690,a[2]=((C_word)li333),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[403],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22711,a[2]=((C_word)li334),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22793,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41312,a[2]=((C_word)li674),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  ##sys#register-record-printer");
t7=C_retrieve(lf[961]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[402],t6);}

/* a41311 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41312(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41312,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41320,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  rule-name");
f_22711(t4,t2);}

/* k41318 in a41311 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  fprintf");
t2=C_retrieve(lf[958]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[969],t1);}

/* k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22793,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22796,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41209,a[2]=((C_word)li673),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  ##sys#register-macro");
t4=C_retrieve(lf[800]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[968],t3);}

/* a41208 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41209(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr4r,(void*)f_41209r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_41209r(t0,t1,t2,t3,t4);}}

static void C_ccall f_41209r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(22);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41212,a[2]=t6,a[3]=((C_word)li672),tmp=(C_word)a,a+=4,tmp));
t8=(C_word)C_a_i_list(&a,2,lf[965],t2);
t9=(C_word)C_a_i_list(&a,1,t8);
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41272,a[2]=t3,a[3]=t6,a[4]=t9,a[5]=t1,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k41270 in a41208 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41272,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41276,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 357  ppat");
t3=((C_word*)((C_word*)t0)[3])[1];
f_41212(t3,t2,((C_word*)t0)[2]);}

/* k41274 in k41270 in a41208 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41276,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)t0)[5]);
t3=(C_truep(t2)?C_SCHEME_FALSE:(C_word)C_i_car(((C_word*)t0)[5]));
t4=(C_word)C_i_nullp(((C_word*)t0)[5]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41290,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_41290(t6,t4);}
else{
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=t5;
f_41290(t7,(C_word)C_i_nullp(t6));}}

/* k41288 in k41274 in k41270 in a41208 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_41290(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41290,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_SCHEME_FALSE:(C_word)C_i_cadr(((C_word*)t0)[7]));
t3=(C_word)C_a_i_list(&a,6,lf[966],((C_word*)t0)[6],lf[965],((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_list(&a,4,lf[815],lf[967],lf[965],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[1],((C_word*)t0)[2],t4));}

/* ppat in a41208 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_41212(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_41212,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[963]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41232,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 357  ppat");
t7=t3;
t8=t4;
t1=t7;
t2=t8;
goto loop;}
else{
t3=(C_word)C_i_member(t2,lf[964]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_list(&a,2,lf[588],t2):t2));}}}

/* k41230 in ppat in a41208 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41232,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41236,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 357  ppat");
t4=((C_word*)((C_word*)t0)[2])[1];
f_41212(t4,t2,t3);}

/* k41234 in k41230 in ppat in a41208 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41236,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[876],((C_word*)t0)[2],t1));}

/* k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22796,2,t0,t1);}
t2=C_mutate(&lf[404],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22798,a[2]=((C_word)li335),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[289],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22819,a[2]=((C_word)li336),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[406],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22822,a[2]=((C_word)li337),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[407],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22834,a[2]=((C_word)li338),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[408],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22840,a[2]=((C_word)li339),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[409],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22850,a[2]=((C_word)li340),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[410],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22908,a[2]=((C_word)li341),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[411],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22940,a[2]=((C_word)li342),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[413],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22961,a[2]=((C_word)li343),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[414],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22979,a[2]=((C_word)li344),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22989,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41195,a[2]=((C_word)li671),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  ##sys#register-record-printer");
t14=C_retrieve(lf[961]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[412],t13);}

/* a41194 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41195(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41195,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41203,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  parse-error-string");
f_22961(t4,t2);}

/* k41201 in a41194 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41203,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41207,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  parse-error-position");
f_22979(t2,((C_word*)t0)[2]);}

/* k41205 in k41201 in a41194 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  fprintf");
t2=C_retrieve(lf[958]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[962],((C_word*)t0)[2],t1);}

/* k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22989,2,t0,t1);}
t2=C_mutate(&lf[415],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22991,a[2]=((C_word)li345),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[417],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22997,a[2]=((C_word)li346),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[418],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23012,a[2]=((C_word)li347),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[419],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23030,a[2]=((C_word)li348),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[420],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23048,a[2]=((C_word)li349),tmp=(C_word)a,a+=3,tmp));
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23058,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41169,a[2]=((C_word)li670),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  ##sys#register-record-printer");
t9=C_retrieve(lf[961]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,lf[416],t8);}

/* a41168 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41169(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41169,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41173,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-type");
f_23012(t4,t2);}

/* k41171 in a41168 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41173,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41179,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  SalRuleType?");
f_24270(t2,t1);}

/* k41177 in k41171 in a41168 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41179,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41186,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41190,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  get-rule");
f_22798(t3,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 357  fprintf");
t2=C_retrieve(lf[958]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[960],((C_word*)t0)[2]);}}

/* k41188 in k41177 in k41171 in a41168 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  rule-name");
f_22711(((C_word*)t0)[2],t1);}

/* k41184 in k41177 in k41171 in a41168 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  fprintf");
t2=C_retrieve(lf[958]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[959],t1);}

/* k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23058,2,t0,t1);}
t2=C_mutate(&lf[421],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23060,a[2]=((C_word)li350),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[423],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23076,a[2]=((C_word)li351),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[425],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23108,a[2]=((C_word)li352),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[426],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23120,a[2]=((C_word)li353),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[427],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23130,a[2]=((C_word)li354),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[429],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23148,a[2]=((C_word)li355),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[438],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23181,a[2]=((C_word)li356),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[441]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23212,a[2]=((C_word)li357),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[443],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23389,a[2]=((C_word)li359),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[444],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23397,a[2]=((C_word)li362),tmp=(C_word)a,a+=3,tmp));
t12=lf[445]=C_SCHEME_FALSE;;
t13=C_mutate(&lf[446],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23501,a[2]=((C_word)li376),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[422],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24120,a[2]=((C_word)li377),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[437],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24168,a[2]=((C_word)li378),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[440],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24270,a[2]=((C_word)li379),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[424],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24282,a[2]=((C_word)li380),tmp=(C_word)a,a+=3,tmp));
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24303,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t19=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41147,a[2]=t18,tmp=(C_word)a,a+=3,tmp);
t20=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t21=(C_word)C_a_i_cons(&a,2,C_fix(3328),t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(2816),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[433],t22);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t19,lf[957],C_fix(25856),t23,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k41145 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(25856),t1);}

/* k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24303,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24306,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41127,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[433],t5);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[956],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k41125 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(26112),t1);}

/* k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24306,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24309,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41087,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[433],t10);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[955],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k41085 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(26368),t1);}

/* k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24309,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24312,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40977,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[115],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[432],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40983,a[2]=((C_word)li668),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40993,a[2]=((C_word)li669),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[954],C_fix(26624),t9,t10,t11);}

/* a40992 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40993(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40993,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40997,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 357  get-emit-info");
f_23108(t5,lf[948],t3);}

/* k40995 in a40992 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40997,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41000,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t2,((C_word*)t0)[2]);}

/* k40998 in k40995 in a40992 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41000,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 357  emit");
f_23148(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[637]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41018,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 357  add-emit-info");
f_23120(t3,lf[948],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k41016 in k40998 in k40995 in a40992 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41018,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41021,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k41019 in k41016 in k40998 in k40995 in a40992 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41021,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41024,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41052,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  get-emit-info");
f_23108(t5,lf[948],((C_word*)t0)[2]);}

/* k41050 in k41019 in k41016 in k40998 in k40995 in a40992 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41052,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[949]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[953],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_41024(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[588],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_41024(t5,t4);}}

/* k41022 in k41019 in k41016 in k40998 in k40995 in a40992 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_41024(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41024,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41030,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  get-emit-info");
f_23108(t2,lf[916],((C_word*)t0)[2]);}

/* k41028 in k41022 in k41019 in k41016 in k40998 in k40995 in a40992 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_41030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41030,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[637]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a40982 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40983(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40983,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k40975 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(26624),t1);}

/* k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24312,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24315,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40877,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[433],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[432],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40885,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  simple-unit-parser");
f_23389(t10,C_fix(27648));}

/* k40883 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40885,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40887,a[2]=((C_word)li667),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(((C_word*)t0)[3],lf[952],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a40886 in k40883 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40887(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40887,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40891,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t5,t2);}

/* k40889 in a40886 in k40883 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40891,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40894,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t2,t3,C_fix(5376));}

/* k40892 in k40889 in a40886 in k40883 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40894,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_40897,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  get-emit-info");
f_23108(t2,lf[948],((C_word*)t0)[4]);}

/* k40895 in k40892 in k40889 in a40886 in k40883 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40897,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_40900,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_40900(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40929,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[950]:lf[951]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40937,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 357  parse-unit-position");
f_23048(t5,t6);}}

/* k40935 in k40895 in k40892 in k40889 in a40886 in k40883 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  make-parse-error");
f_22940(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k40927 in k40895 in k40892 in k40889 in a40886 in k40883 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k40898 in k40895 in k40892 in k40889 in a40886 in k40883 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40900,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40903,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t2,t3,((C_word*)t0)[4],((C_word*)t0)[2]);}

/* k40901 in k40898 in k40895 in k40892 in k40889 in a40886 in k40883 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40903,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40906,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  set-emit-info!");
f_23130(t2,lf[948],lf[949],((C_word*)t0)[2]);}

/* k40904 in k40901 in k40898 in k40895 in k40892 in k40889 in a40886 in k40883 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40906,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[946],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[947],((C_word*)t0)[2])));}

/* k40875 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(27648),t1);}

/* k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24315,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24318,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40849,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[433],t7);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[945],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k40847 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(26880),t1);}

/* k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24318,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24321,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40789,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[432],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40795,a[2]=((C_word)li665),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40813,a[2]=((C_word)li666),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[944],C_fix(27136),t8,t9,t10);}

/* a40812 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40813(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40813,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40821,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40825,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t6,t2);}

/* k40823 in a40812 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  emit");
f_23148(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k40819 in a40812 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40821,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[60],t1));}

/* a40794 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40795(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40795,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k40787 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(27136),t1);}

/* k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24321,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24324,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40666,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[449],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[432],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40672,a[2]=((C_word)li663),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40703,a[2]=((C_word)li664),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[943],C_fix(27392),t14,t15,t16);}

/* a40702 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40703(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40703,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40707,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t5,t2);}

/* k40705 in a40702 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40707,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40710,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k40708 in k40705 in a40702 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40710,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_40713,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k40711 in k40708 in k40705 in a40702 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40713,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40726,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k40724 in k40711 in k40708 in k40705 in a40702 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40726,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a40671 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40672(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40672,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40676,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  sixth");
t5=C_retrieve(lf[54]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k40674 in a40671 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40676,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40691,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  fifth");
t4=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k40689 in k40674 in a40671 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40691,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k40664 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(27392),t1);}

/* k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24324,2,t0,t1);}
t2=C_mutate(&lf[453],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24326,a[2]=((C_word)li382),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24380,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40546,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[113],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[432],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[433],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40552,a[2]=((C_word)li662),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t4,lf[942],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a40551 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40552(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40552,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40568,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t4,t8,C_fix(256));}
else{
t7=t4;
f_40568(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_40568(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k40566 in a40551 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40568,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40579,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 357  remove-token-type");
f_24326(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k40577 in k40566 in a40551 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40579,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k40544 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(28416),t1);}

/* k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24380,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24383,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40407,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[113],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[432],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[432],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[433],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40413,a[2]=((C_word)li661),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[941],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a40412 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40413(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40413,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40433,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40436,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t7,t11,C_fix(256));}
else{
t10=t7;
f_40436(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_40436(2,t9,C_SCHEME_FALSE);}}

/* k40434 in a40412 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 357  remove-token-type");
f_24326(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_40433(2,t2,C_SCHEME_END_OF_LIST);}}

/* k40431 in a40412 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40433,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k40405 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(28672),t1);}

/* k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24383,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24386,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40255,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[432],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[432],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[432],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[432],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[433],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40261,a[2]=((C_word)li660),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[940],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a40260 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40261(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40261,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40279,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t10,t7,C_fix(768));}

/* k40277 in a40260 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40279,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40288,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t2,t3,C_fix(256));}}

/* k40286 in k40277 in a40260 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 357  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k40253 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(28160),t1);}

/* k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24386,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24389,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40184,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[432],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40190,a[2]=((C_word)li658),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40208,a[2]=((C_word)li659),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[939],C_fix(27904),t6,t7,t8);}

/* a40207 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40208(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40208,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40212,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t5,t2);}

/* k40210 in a40207 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40212,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40215,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k40213 in k40210 in a40207 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40215,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40231,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k40229 in k40213 in k40210 in a40207 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40231,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a40189 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40190(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40190,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k40182 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(27904),t1);}

/* k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24389,2,t0,t1);}
t2=C_mutate(&lf[454],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24391,a[2]=((C_word)li383),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[455],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24412,a[2]=((C_word)li386),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24528,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40108,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[433],t21);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t5,lf[938],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k40106 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(28928),t1);}

/* k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24528,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24531,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40028,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[115],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[432],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40034,a[2]=((C_word)li657),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[937],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a40033 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40034(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40034,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40041,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 357  is-op?");
f_24391(t4,t7);}
else{
t6=t4;
f_40041(2,t6,C_SCHEME_FALSE);}}

/* k40039 in a40033 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40041,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 357  inf->pre");
f_24412(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k40026 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_40028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(29184),t1);}

/* k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24531,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24534,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39892,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[432],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[432],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[432],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[433],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39898,a[2]=((C_word)li655),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39924,a[2]=((C_word)li656),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[936],C_fix(29440),t23,t24,t25);}

/* a39923 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39924(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39924,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39932,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t5,t2);}

/* k39930 in a39923 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  emit");
f_23148(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a39897 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39898(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39898,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39906,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39915,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t5,t6,C_fix(512));}
else{
t5=t4;
f_39906(t5,t2);}}

/* k39913 in a39897 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_39906(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k39904 in a39897 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_39906(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k39890 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(29440),t1);}

/* k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24534,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24537,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39848,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[433],t11);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[935],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k39846 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(29696),t1);}

/* k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24537,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24540,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39738,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[115],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[432],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39744,a[2]=((C_word)li652),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39766,a[2]=((C_word)li654),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[934],C_fix(33536),t10,t11,t12);}

/* a39765 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39766(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39766,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[482]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39777,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t8,t2);}

/* k39775 in a39765 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39777,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39779,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li653),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_39779(t5,((C_word*)t0)[2],t1);}

/* do3691 in k39775 in a39765 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_39779(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39779,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39808,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k39806 in do3691 in k39775 in a39765 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39808,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_39779(t7,((C_word*)t0)[2],t6);}

/* a39743 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39744(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39744,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39760,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 357  remove-token-type");
f_24326(t5,t6,C_fix(256));}

/* k39758 in a39743 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39760,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k39736 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(33536),t1);}

/* k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24540,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24543,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39663,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[115],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16896),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[432],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39669,a[2]=((C_word)li650),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39691,a[2]=((C_word)li651),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[933],C_fix(34560),t10,t11,t12);}

/* a39690 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39691(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39691,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39695,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t5,t2);}

/* k39693 in a39690 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39695,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39702,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39700 in k39693 in a39690 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39702,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[778],t1));}

/* a39668 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39669(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39669,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39685,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 357  remove-token-type");
f_24326(t5,t6,C_fix(256));}

/* k39683 in a39668 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39685,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k39661 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(34560),t1);}

/* k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24543,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24546,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39450,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[433],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[432],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[433],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[449],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[432],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39456,a[2]=((C_word)li647),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39531,a[2]=((C_word)li649),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[932],C_fix(34304),t21,t22,t23);}

/* a39530 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39531(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39531,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39535,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39571,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t6,t2);}

/* k39569 in a39530 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  emit");
f_23148(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39533 in a39530 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39535,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39551,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li648),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  expand-send");
t6=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t6))(5,t6,((C_word*)t0)[2],t3,t4,t5);}

/* a39550 in k39533 in a39530 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39551(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr3r,(void*)f_39551r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_39551r(t0,t1,t2,t3);}}

static void C_ccall f_39551r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(8);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39559,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39563,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[31]),t2,t3);}

/* k39561 in a39550 in k39533 in a39530 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39563,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39567,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-position");
f_23048(t2,((C_word*)t0)[2]);}

/* k39565 in k39561 in a39550 in k39533 in a39530 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  make-parse-error");
f_22940(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k39557 in a39550 in k39533 in a39530 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a39455 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39456(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39456,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39463,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39499,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=t11;
f_39499(2,t13,C_SCHEME_FALSE);}
else{
t13=(C_word)C_i_cadr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t11,t13,C_fix(256));}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_39463(t10,t9);}}

/* k39497 in a39455 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39499,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39503,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 357  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,t3,t4);}
else{
t2=((C_word*)t0)[2];
f_39463(t2,C_SCHEME_UNDEFINED);}}

/* k39501 in k39497 in a39455 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_39463(t3,t2);}

/* k39461 in a39455 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_39463(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39463,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39474,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 357  parse-unit-position");
f_23048(t4,t5);}

/* k39472 in k39461 in a39455 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k39448 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(34304),t1);}

/* k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24546,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24549,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39424,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[432],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39430,a[2]=((C_word)li646),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[931],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a39429 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39430(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39430,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k39422 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(33792),t1);}

/* k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24549,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24552,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39396,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[432],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39404,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  simple-unit-parser");
f_23389(t7,C_fix(35072));}

/* k39402 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39404,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39408,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  simple-unit-emitter");
f_23397(t2,lf[493]);}

/* k39406 in k39402 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(((C_word*)t0)[4],lf[930],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k39394 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(35072),t1);}

/* k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24552,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24555,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39368,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[432],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39376,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  simple-unit-parser");
f_23389(t7,C_fix(35584));}

/* k39374 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39376,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39380,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  simple-unit-emitter");
f_23397(t2,lf[492]);}

/* k39378 in k39374 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(((C_word*)t0)[4],lf[929],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k39366 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(35584),t1);}

/* k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24555,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24558,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39340,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[432],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39348,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  simple-unit-parser");
f_23389(t7,C_fix(35328));}

/* k39346 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39348,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39352,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  simple-unit-emitter");
f_23397(t2,lf[928]);}

/* k39350 in k39346 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(((C_word*)t0)[4],lf[927],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k39338 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(35328),t1);}

/* k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24558,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24561,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39312,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[432],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39320,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  simple-unit-parser");
f_23389(t7,C_fix(34816));}

/* k39318 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39320,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39324,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  simple-unit-emitter");
f_23397(t2,lf[505]);}

/* k39322 in k39318 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(((C_word*)t0)[4],lf[926],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k39310 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(34816),t1);}

/* k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24561,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24564,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39175,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[432],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[433],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[432],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[433],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[115],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[432],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39181,a[2]=((C_word)li644),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39211,a[2]=((C_word)li645),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[925],C_fix(36096),t22,t23,t24);}

/* a39210 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39211(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39211,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[924]);}

/* a39180 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39181(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39181,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39205,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 357  remove-token-type");
f_24326(t6,t7,C_fix(256));}

/* k39203 in a39180 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39205,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k39173 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(36096),t1);}

/* k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24564,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24567,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39117,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[432],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39125,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  simple-unit-parser");
f_23389(t7,C_fix(31744));}

/* k39123 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39125,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39127,a[2]=((C_word)li643),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(((C_word*)t0)[3],lf[923],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a39126 in k39123 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39127(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39127,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39131,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t5,t2);}

/* k39129 in a39126 in k39123 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39131,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39134,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39159,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  get-emit-info");
f_23108(t3,lf[904],((C_word*)t0)[3]);}

/* k39157 in k39129 in a39126 in k39123 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39159,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_39134(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39147,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39151,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 357  parse-unit-position");
f_23048(t3,t4);}}

/* k39149 in k39157 in k39129 in a39126 in k39123 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  make-parse-error");
f_22940(((C_word*)t0)[2],lf[922],t1);}

/* k39145 in k39157 in k39129 in a39126 in k39123 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39132 in k39129 in a39126 in k39123 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  emit");
f_23148(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39115 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(31744),t1);}

/* k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24567,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24570,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39056,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[432],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39064,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  simple-unit-parser");
f_23389(t7,C_fix(31488));}

/* k39062 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39064,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39066,a[2]=((C_word)li642),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(((C_word*)t0)[3],lf[921],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a39065 in k39062 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39066(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39066,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39070,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t5,t2);}

/* k39068 in a39065 in k39062 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39070,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39073,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39101,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  get-emit-info");
f_23108(t3,lf[889],((C_word*)t0)[3]);}

/* k39099 in k39068 in a39065 in k39062 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39101,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_39073(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39089,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39093,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 357  parse-unit-position");
f_23048(t3,t4);}}

/* k39091 in k39099 in k39068 in a39065 in k39062 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  make-parse-error");
f_22940(((C_word*)t0)[2],lf[920],t1);}

/* k39087 in k39099 in k39068 in a39065 in k39062 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39071 in k39068 in a39065 in k39062 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39073,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39076,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 357  set-emit-info!");
f_23130(t2,lf[889],lf[888],((C_word*)t0)[3]);}

/* k39074 in k39071 in k39068 in a39065 in k39062 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  emit");
f_23148(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39054 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(31488),t1);}

/* k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24570,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24573,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38965,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[432],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[433],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38971,a[2]=((C_word)li639),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39006,a[2]=((C_word)li641),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[919],C_fix(30208),t10,t11,t12);}

/* a39005 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39006,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39012,a[2]=t4,a[3]=t3,a[4]=((C_word)li640),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39020,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t6,t2);}

/* k39018 in a39005 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a39011 in a39005 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39012(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_39012,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a38970 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38971(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38971,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39004,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(t4,C_fix(4608),lf[918],C_SCHEME_FALSE);}}

/* k39002 in a38970 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_39004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39004,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k38963 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(30208),t1);}

/* k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24573,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24576,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38863,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[115],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[432],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38869,a[2]=((C_word)li636),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38912,a[2]=((C_word)li638),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[917],C_fix(29952),t10,t11,t12);}

/* a38911 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38912(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38912,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38916,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  add-emit-info");
f_23120(t5,lf[916],C_SCHEME_TRUE,t3);}

/* k38914 in a38911 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38916,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38921,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li637),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38929,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t3,((C_word*)t0)[2]);}

/* k38927 in k38914 in a38911 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a38920 in k38914 in a38911 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38921(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_38921,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a38868 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38869(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38869,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38902,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 357  remove-token-type");
f_24326(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k38900 in a38868 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38902,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k38861 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(29952),t1);}

/* k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24576,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24579,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38777,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[433],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[433],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[432],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38783,a[2]=((C_word)li635),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[915],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a38782 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38783(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38783,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k38775 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(30720),t1);}

/* k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24579,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24582,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38497,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[115],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[432],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38503,a[2]=((C_word)li632),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38546,a[2]=((C_word)li634),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[914],C_fix(30464),t10,t11,t12);}

/* a38545 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38546(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38546,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38550,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t5,t2);}

/* k38548 in a38545 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38550,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[460]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38558,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li633),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_38558(t8,((C_word*)t0)[2],t1);}

/* do3770 in k38548 in a38545 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_38558(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38558,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38581,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t3,t4);}}

/* k38579 in do3770 in k38548 in a38545 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38581,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_38584,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38582 in k38579 in do3770 in k38548 in a38545 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38584,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_38587,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 357  parse-unit-type");
f_23012(t2,t3);}

/* k38585 in k38582 in k38579 in do3770 in k38548 in a38545 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38587,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38590,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38588 in k38585 in k38582 in k38579 in do3770 in k38548 in a38545 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38590,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38593,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38650,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  SalType=?");
f_24282(t5,((C_word*)t0)[2],C_fix(10756));}

/* k38648 in k38588 in k38585 in k38582 in k38579 in do3770 in k38548 in a38545 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38650,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_38593(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38657,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  SalType=?");
f_24282(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k38655 in k38648 in k38588 in k38585 in k38582 in k38579 in do3770 in k38548 in a38545 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38657,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[113],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_38593(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38667,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  SalType=?");
f_24282(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k38665 in k38655 in k38648 in k38588 in k38585 in k38582 in k38579 in do3770 in k38548 in a38545 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38667,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[115],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_38593(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38677,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  SalType=?");
f_24282(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k38675 in k38665 in k38655 in k38648 in k38588 in k38585 in k38582 in k38579 in do3770 in k38548 in a38545 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38677,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[637],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_38593(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38691,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  SalType=?");
f_24282(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k38689 in k38675 in k38665 in k38655 in k38648 in k38588 in k38585 in k38582 in k38579 in do3770 in k38548 in a38545 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38691,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[876],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_38593(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38701,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  SalType=?");
f_24282(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k38699 in k38689 in k38675 in k38665 in k38655 in k38648 in k38588 in k38585 in k38582 in k38579 in do3770 in k38548 in a38545 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38701,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_38593(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38711,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  SalType=?");
f_24282(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k38709 in k38699 in k38689 in k38675 in k38665 in k38655 in k38648 in k38588 in k38585 in k38582 in k38579 in do3770 in k38548 in a38545 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38711,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[378],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_38593(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38721,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 357  SalType=?");
f_24282(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k38719 in k38709 in k38699 in k38689 in k38675 in k38665 in k38655 in k38648 in k38588 in k38585 in k38582 in k38579 in do3770 in k38548 in a38545 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38721,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[316],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_38593(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_38593(t2,C_SCHEME_UNDEFINED);}}

/* k38591 in k38588 in k38585 in k38582 in k38579 in do3770 in k38548 in a38545 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_38593(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38593,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38596,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38617,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_38617(t5,(C_word)C_eqp(t4,lf[60]));}
else{
t4=t3;
f_38617(t4,C_SCHEME_FALSE);}}

/* k38615 in k38591 in k38588 in k38585 in k38582 in k38579 in do3770 in k38548 in a38545 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_38617(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38617,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[913],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[237],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_38596(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_38596(t4,t3);}}

/* k38594 in k38591 in k38588 in k38585 in k38582 in k38579 in do3770 in k38548 in a38545 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_38596(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38596,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_38558(t7,((C_word*)t0)[2],t6);}

/* a38502 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38503(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38503,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38536,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 357  remove-token-type");
f_24326(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k38534 in a38502 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38536,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k38495 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(30464),t1);}

/* k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24582,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24585,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38383,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[449],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[115],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[432],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38389,a[2]=((C_word)li630),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38415,a[2]=((C_word)li631),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[912],C_fix(32000),t12,t13,t14);}

/* a38414 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38415(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38415,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38419,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t5,t2);}

/* k38417 in a38414 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38419,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38425,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38423 in k38417 in a38414 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38425,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38445,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[460],t1));}}

/* k38443 in k38423 in k38417 in a38414 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38445,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* a38388 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38389(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38389,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38399,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_38399(t12,t11);}
else{
t10=t8;
f_38399(t10,C_SCHEME_FALSE);}}

/* k38397 in a38388 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_38399(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38399,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k38381 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(32000),t1);}

/* k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24585,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24588,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38124,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[449],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[449],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[432],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[432],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[432],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[433],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38130,a[2]=((C_word)li628),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38198,a[2]=((C_word)li629),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[911],C_fix(32256),t26,t27,t28);}

/* a38197 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38198(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38198,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38202,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t5,t2);}

/* k38200 in a38197 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38202,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38208,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t2,t3,C_fix(14336));}

/* k38206 in k38200 in a38197 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38208,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 357  emit");
f_23148(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38217,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t2,t3,C_fix(19968));}}

/* k38215 in k38206 in k38200 in a38197 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38217,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38224,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38255,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k38253 in k38215 in k38206 in k38200 in a38197 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38255,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[434],t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38247,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38245 in k38253 in k38215 in k38206 in k38200 in a38197 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38247,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[2],t1));}

/* k38222 in k38215 in k38206 in k38200 in a38197 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38224,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38228,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38226 in k38222 in k38215 in k38206 in k38200 in a38197 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38228,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[2],t1));}

/* a38129 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38130(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38130,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38143,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38149,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t9,t4,C_fix(14336));}

/* k38147 in a38129 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38149,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_38155,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_38155(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38184,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(t11,C_fix(4608),lf[910],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_38143(t5,t4);}}

/* k38182 in k38147 in a38129 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38155(t3,t2);}

/* k38153 in k38147 in a38129 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_38155(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38155,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_38159,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 357  fifth");
t3=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k38157 in k38153 in k38147 in a38129 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38159,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38162,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_38162(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38173,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(t5,C_fix(4608),lf[909],C_SCHEME_FALSE);}}

/* k38171 in k38157 in k38153 in k38147 in a38129 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38162(t3,t2);}

/* k38160 in k38157 in k38153 in k38147 in a38129 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_38162(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38162,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_38143(t4,t3);}

/* k38141 in a38129 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_38143(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k38122 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_38124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(32256),t1);}

/* k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24588,2,t0,t1);}
t2=C_mutate(&lf[456],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24590,a[2]=((C_word)li387),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25111,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37852,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[432],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[449],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[432],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[432],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[433],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[449],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[449],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[432],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[433],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[449],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[432],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[433],t58);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t4,lf[908],C_fix(33024),t59,C_retrieve2(lf[456],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k37850 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(33024),t1);}

/* k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25111,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25114,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37796,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[432],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[432],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[433],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37804,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  simple-unit-parser");
f_23389(t13,C_fix(33280));}

/* k37802 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(((C_word*)t0)[3],lf[907],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k37794 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(33280),t1);}

/* k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25114,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25697,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37624,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[433],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[449],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[115],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[115],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[113],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[449],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[432],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37630,a[2]=((C_word)li622),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37676,a[2]=((C_word)li627),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[906],C_fix(32512),t25,t26,t27);}

/* a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37676(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37676,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25120,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t7,t2);}

/* k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25120,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25138,a[2]=t11,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t13,a[9]=t5,a[10]=t9,a[11]=t3,tmp=(C_word)a,a+=12,tmp);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25656,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t16,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t17,t18,C_fix(14864));}

/* k25654 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25656,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25660,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  add-emit-info");
f_23120(t2,lf[903],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25663,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25690,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  get-emit-info");
f_23108(t3,lf[891],((C_word*)((C_word*)t0)[6])[1]);}}

/* k25688 in k25654 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25690,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_25663(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25678,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25682,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 357  parse-unit-position");
f_23048(t3,t4);}}

/* k25680 in k25688 in k25654 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  make-parse-error");
f_22940(((C_word*)t0)[2],lf[905],t1);}

/* k25676 in k25688 in k25654 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k25661 in k25654 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25663,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25667,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  add-emit-info");
f_23120(t2,lf[904],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k25665 in k25661 in k25654 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_25138(t4,t3);}

/* k25658 in k25654 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25138(t3,t2);}

/* k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_25138(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25138,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25145,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25645,a[2]=t4,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25649,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t6,t7,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}
else{
t5=t4;
f_25145(t5,C_SCHEME_UNDEFINED);}}

/* k25647 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k25643 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25145(t3,t2);}

/* k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_25145(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25145,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25148,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25520,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=t5,a[7]=((C_word)li626),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_25520(t7,t2,t3);}

/* do3880 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_25520(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25520,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25530,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25541,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t4,t5);}}

/* k25539 in do3880 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25541,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25543,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li625),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_25543(t5,((C_word*)t0)[2],t1);}

/* do3883 in k25539 in do3880 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_25543(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25543,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25557,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 357  append");
t9=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k25555 in do3883 in k25539 in do3880 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25557,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25560,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25610,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 357  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_25560(t4,C_SCHEME_UNDEFINED);}}

/* k25608 in k25555 in do3883 in k25539 in do3880 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25560(t3,t2);}

/* k25558 in k25555 in do3883 in k25539 in do3880 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_25560(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25560,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25563,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25595,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 357  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_25563(t3,C_SCHEME_UNDEFINED);}}

/* k25593 in k25558 in k25555 in do3883 in k25539 in do3880 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25563(t3,t2);}

/* k25561 in k25558 in k25555 in do3883 in k25539 in do3880 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_25563(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25563,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25566,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25576,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  fifth");
t4=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k25574 in k25561 in k25558 in k25555 in do3883 in k25539 in do3880 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25576,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25580,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25588,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  fifth");
t4=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_25566(t2,C_SCHEME_UNDEFINED);}}

/* k25586 in k25574 in k25561 in k25558 in k25555 in do3883 in k25539 in do3880 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25588,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 357  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k25578 in k25574 in k25561 in k25558 in k25555 in do3883 in k25539 in do3880 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25566(t3,t2);}

/* k25564 in k25561 in k25558 in k25555 in do3883 in k25539 in do3880 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_25566(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_25543(t3,((C_word*)t0)[2],t2);}

/* k25528 in do3880 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_25520(t3,((C_word*)t0)[2],t2);}

/* k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25148,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_25154,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=t3,tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25484,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t7,a[5]=t3,a[6]=((C_word)li624),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_25484(t9,t4,t5);}

/* do3895 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_25484(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25484,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25495,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25510,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k25508 in do3895 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25510,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 357  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k25493 in do3895 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_25484(t4,((C_word*)t0)[2],t3);}

/* k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25154,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25158,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 357  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[12])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25158,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25161,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_pairp(t4))){
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25361,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t6,a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[5],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 357  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[902]);}
else{
t5=t3;
f_25161(t5,C_SCHEME_UNDEFINED);}}

/* k25359 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25361,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25365,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_list(&a,2,t1,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 357  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[9])[1],t4);}

/* k25363 in k25359 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25365,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25369,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 357  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,((C_word*)((C_word*)t0)[9])[1],t4);}

/* k25367 in k25363 in k25359 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25369,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25372,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25412,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t6,a[5]=((C_word*)t0)[6],a[6]=((C_word)li623),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_25412(t8,t3,t4);}

/* do3902 in k25367 in k25363 in k25359 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_25412(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25412,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25422,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t3,t4);}}

/* k25420 in do3902 in k25367 in k25363 in k25359 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25422,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25425,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k25423 in k25420 in do3902 in k25367 in k25363 in k25359 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25425,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25428,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25446,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t5,t6,C_fix(20224));}

/* k25444 in k25423 in k25420 in do3902 in k25367 in k25363 in k25359 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25446,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[434],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_25428(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_25428(t2,C_SCHEME_UNDEFINED);}}

/* k25426 in k25423 in k25420 in do3902 in k25367 in k25363 in k25359 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_25428(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25428,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25432,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 357  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k25430 in k25426 in k25423 in k25420 in do3902 in k25367 in k25363 in k25359 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_25412(t4,((C_word*)t0)[2],t3);}

/* k25370 in k25367 in k25363 in k25359 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25372,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25375,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_25375(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[433],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_25375(t6,t5);}}

/* k25373 in k25370 in k25367 in k25363 in k25359 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_25375(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25375,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],C_SCHEME_TRUE);
t3=(C_word)C_a_i_cons(&a,2,lf[460],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[3])[1],t2,t3);
t5=(C_word)C_a_i_list(&a,1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[2];
f_25161(t7,t6);}

/* k25159 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_25161(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25161,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25165,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 357  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k25163 in k25159 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25165,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25168,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[8])[1]))){
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=t3;
f_25168(t7,t6);}
else{
t5=(C_word)C_a_i_cons(&a,2,lf[433],((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=t3;
f_25168(t7,t6);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t5=t3;
f_25168(t5,t4);}}

/* k25166 in k25163 in k25159 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_25168(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25168,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25171,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25321,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  fifth");
t4=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k25319 in k25166 in k25163 in k25159 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25321,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25325,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25329,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  fifth");
t4=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_25171(t3,t2);}}

/* k25327 in k25319 in k25166 in k25163 in k25159 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  emit");
f_23148(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k25323 in k25319 in k25166 in k25163 in k25159 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25171(t3,t2);}

/* k25169 in k25166 in k25163 in k25159 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_25171(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25171,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25199,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[901]);}
else{
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t4);
t6=(C_word)C_a_i_cons(&a,2,lf[688],t5);
t7=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[3])[1],t6));}}

/* k25197 in k25169 in k25166 in k25163 in k25159 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25199,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25202,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 357  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[900]);}

/* k25200 in k25197 in k25169 in k25166 in k25163 in k25159 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25202,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25205,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 357  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[899]);}

/* k25203 in k25200 in k25197 in k25169 in k25166 in k25163 in k25159 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25205,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25208,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 357  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[898]);}

/* k25206 in k25203 in k25200 in k25197 in k25169 in k25166 in k25163 in k25159 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25208,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25211,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 357  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[897]);}

/* k25209 in k25206 in k25203 in k25200 in k25197 in k25169 in k25166 in k25163 in k25159 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25211,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[9],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[802],C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,2,lf[803],t4);
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],((C_word*)t0)[8]);
t8=(C_word)C_a_i_list(&a,3,lf[802],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[805],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,t1);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,1,lf[806]);
t14=(C_word)C_a_i_list(&a,4,lf[807],((C_word*)t0)[7],t13,lf[895]);
t15=(C_word)C_a_i_list(&a,2,t1,C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[802],t12,t14,t15);
t17=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t18=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25270,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t10,a[6]=t11,a[7]=t16,a[8]=t17,tmp=(C_word)a,a+=9,tmp);
t19=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
C_trace("##sys#append");
t20=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t20+1)))(4,t20,t18,((C_word*)((C_word*)t0)[2])[1],t19);}

/* k25268 in k25209 in k25206 in k25203 in k25200 in k25197 in k25169 in k25166 in k25163 in k25159 in k25156 in k25152 in k25146 in k25143 in k25136 in k25118 in a37675 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25270,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[16],t1);
t3=(C_word)C_a_i_list(&a,3,lf[896],((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_list(&a,3,lf[802],C_SCHEME_END_OF_LIST,t3);
t5=(C_word)C_a_i_list(&a,3,lf[747],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,3,lf[802],((C_word*)t0)[6],t5);
t7=(C_word)C_a_i_list(&a,2,lf[748],t6);
t8=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[5],t7);
t9=(C_word)C_a_i_list(&a,3,lf[802],((C_word*)t0)[4],t8);
t10=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[2])[1],t9));}

/* a37629 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37630(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37630,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37646,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 357  fifth");
t11=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k37644 in a37629 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37646,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37649,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 357  sixth");
t3=C_retrieve(lf[54]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k37647 in k37644 in a37629 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37649,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37652,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_37652(t7,t6);}
else{
t5=t4;
f_37652(t5,C_SCHEME_UNDEFINED);}}

/* k37650 in k37647 in k37644 in a37629 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_37652(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37652,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37655,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_37655(t5,t4);}
else{
t3=t2;
f_37655(t3,C_SCHEME_UNDEFINED);}}

/* k37653 in k37650 in k37647 in k37644 in a37629 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_37655(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37655,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37666,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-position");
f_23048(t3,((C_word*)t0)[8]);}

/* k37664 in k37653 in k37650 in k37647 in k37644 in a37629 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k37622 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(32512),t1);}

/* k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25697,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25700,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37479,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[432],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[115],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[432],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[433],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[432],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37485,a[2]=((C_word)li621),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[894],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a37484 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37485(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37485,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37498,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_37498(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37524,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 357  remove-token-type");
f_24326(t12,t13,C_fix(256));}}

/* k37522 in a37484 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37524,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_37498(t4,t3);}

/* k37496 in a37484 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_37498(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37498,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k37477 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(37632),t1);}

/* k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25700,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25703,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37022,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[115],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[432],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[432],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[432],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[433],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[432],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37028,a[2]=((C_word)li617),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37067,a[2]=((C_word)li620),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[893],C_fix(36352),t23,t24,t25);}

/* a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37067(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37067,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37071,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t6,t2);}

/* k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37071,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[460]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37080,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37083,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t7,t2,C_fix(24576));}

/* k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37083,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37092,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li618),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_37092(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37141,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t2,t3);}}

/* k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37141,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37144,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37144,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37147,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37147,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_37359,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 357  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37359,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_37156,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_37156(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37297,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 357  symbol->string");
t15=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k37295 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37297,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37306,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37331,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 357  substring");
t6=*((C_word*)lf[474]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_37306(t4,C_SCHEME_FALSE);}}

/* k37329 in k37295 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_37306(t2,(C_word)C_i_string_equal_p(t1,lf[892]));}

/* k37304 in k37295 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_37306(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37306,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37313,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37317,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 357  substring");
t5=*((C_word*)lf[474]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_37156(t2,C_SCHEME_UNDEFINED);}}

/* k37315 in k37304 in k37295 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  string->symbol");
t2=*((C_word*)lf[430]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k37311 in k37304 in k37295 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_37156(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k37154 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_37156(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37156,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37159,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_37234,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t3,((C_word*)t0)[2],C_fix(24064));}

/* k37232 in k37154 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37234,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37238,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 357  add-emit-info");
f_23120(t2,lf[889],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37275,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k37273 in k37232 in k37154 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37275,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37279,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 357  add-emit-info");
f_23120(t2,lf[891],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_37159(t2,C_SCHEME_UNDEFINED);}}

/* k37277 in k37273 in k37232 in k37154 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37279,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37283,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k37281 in k37277 in k37273 in k37232 in k37154 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37283,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[798],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[890]);
t6=((C_word*)t0)[2];
f_37159(t6,t5);}

/* k37236 in k37232 in k37154 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37238,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37242,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k37240 in k37236 in k37232 in k37154 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37242,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37245,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37269,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  get-emit-info");
f_23108(t4,lf[889],((C_word*)((C_word*)t0)[2])[1]);}

/* k37267 in k37240 in k37236 in k37232 in k37154 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37269,2,t0,t1);}
t2=(C_word)C_eqp(lf[888],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[659]);
t4=(C_word)C_a_i_list(&a,3,lf[802],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[748],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37245(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_37245(t3,C_SCHEME_UNDEFINED);}}

/* k37243 in k37240 in k37236 in k37232 in k37154 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_37245(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37245,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[798],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[887]);
t5=((C_word*)t0)[2];
f_37159(t5,t4);}

/* k37157 in k37154 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_37159(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37159,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37162,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37173,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37231,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k37229 in k37157 in k37154 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  string-append");
t2=*((C_word*)lf[180]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[886]);}

/* k37171 in k37157 in k37154 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37173,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37175,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li619),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_37175(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do3989 in k37171 in k37157 in k37154 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_37175(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37175,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37190,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  string-append");
t6=*((C_word*)lf[180]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[884]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37194,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37223,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 357  symbol->string");
t8=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k37221 in do3989 in k37171 in k37157 in k37154 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  string-append");
t2=*((C_word*)lf[180]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k37192 in do3989 in k37171 in k37157 in k37154 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37194,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37197,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_37197(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37211,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  string-append");
t6=*((C_word*)lf[180]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[885]);}}

/* k37209 in k37192 in do3989 in k37171 in k37157 in k37154 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_37197(t3,t2);}

/* k37195 in k37192 in do3989 in k37171 in k37157 in k37154 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_37197(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_37175(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k37188 in do3989 in k37171 in k37157 in k37154 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37190,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[483],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k37160 in k37157 in k37154 in k37357 in k37145 in k37142 in k37139 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37162,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_37080(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do3963 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_37092(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37092,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37102,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k37100 in do3963 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37102,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37108,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 357  sprintf");
t4=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[883],t2);}

/* k37106 in k37100 in do3963 in k37081 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37108,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[798],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[482],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_37092(t9,((C_word*)t0)[2],t8);}

/* k37078 in k37069 in a37066 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a37027 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37028(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37028,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37039,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37045,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t9,t7,C_fix(24576));}

/* k37043 in a37027 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37045,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37061,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 357  remove-token-type");
f_24326(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_37039(t2,C_SCHEME_UNDEFINED);}}

/* k37059 in k37043 in a37027 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37061,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37039(t5,t4);}

/* k37037 in a37027 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_37039(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k37020 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_37022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(36352),t1);}

/* k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25703,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25706,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36946,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[433],t19);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[882],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k36944 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(36608),t1);}

/* k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25706,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25709,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36902,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[113],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36908,a[2]=((C_word)li615),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36922,a[2]=((C_word)li616),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  make-rule");
f_22690(t3,lf[881],C_fix(36864),t5,t6,t7);}

/* a36921 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36922(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_36922,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36930,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36934,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t6,t2);}

/* k36932 in a36921 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  emit");
f_23148(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k36928 in a36921 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36930,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[460],t1));}

/* a36907 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36908(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36908,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36916,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 357  parse-unit-position");
f_23048(t4,t5);}

/* k36914 in a36907 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k36900 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  hash-table-set!");
t2=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[400],"*rules*"),C_fix(36864),t1);}

/* k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25709,2,t0,t1);}
t2=lf[467]=C_SCHEME_FALSE;;
t3=lf[468]=C_SCHEME_FALSE;;
t4=lf[469]=C_SCHEME_FALSE;;
t5=C_set_block_item(lf[470],0,C_SCHEME_FALSE);
t6=C_mutate((C_word*)lf[471]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25716,a[2]=((C_word)li393),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[482]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25893,a[2]=((C_word)li397),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[492]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26046,a[2]=((C_word)li398),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[493]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26055,a[2]=((C_word)li399),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[503]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26109,a[2]=((C_word)li400),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[505]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26115,a[2]=((C_word)li401),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26134,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36894,a[2]=((C_word)li614),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 358  ##sys#register-macro-2");
t14=C_retrieve(lf[814]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[879],t13);}

/* a36893 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36894(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_36894,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29487,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[880]);}

/* k29485 in a36893 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29487,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29490,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  parse-iteration");
f_29469(t2,lf[879],((C_word*)t0)[2],C_retrieve2(lf[697],"*loop-operators*"));}

/* k29488 in k29485 in a36893 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29490,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_assoc(lf[659],C_retrieve2(lf[697],"*loop-operators*"));
t7=(C_word)C_i_cadddr(t6);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29497,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29642,a[2]=t8,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29656,a[2]=t1,a[3]=t9,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  loop-returning");
t11=C_retrieve2(lf[516],"loop-returning");
f_26241(3,t11,t10,t1);}

/* k29654 in k29488 in k29485 in a36893 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29656,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[3];
f_29642(t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29652,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 358  loop-returning");
t3=C_retrieve2(lf[516],"loop-returning");
f_26241(3,t3,t2,((C_word*)t0)[2]);}}

/* k29650 in k29654 in k29488 in k29485 in a36893 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_29642(t2,(C_word)C_i_car(t1));}

/* k29640 in k29488 in k29485 in a36893 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_29642(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 358  returnfn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k29495 in k29488 in k29485 in a36893 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29497,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29501,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 358  loop-end-tests");
t4=C_retrieve2(lf[511],"loop-end-tests");
f_26193(3,t4,t3,((C_word*)t0)[2]);}

/* k29499 in k29495 in k29488 in k29485 in a36893 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29501,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29504,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(t1))){
t3=t2;
f_29504(t3,C_SCHEME_END_OF_LIST);}
else{
t3=(C_word)C_i_cdr(t1);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(t1):(C_word)C_a_i_cons(&a,2,lf[433],t1));
t6=(C_word)C_a_i_list(&a,4,lf[20],t5,lf[878],C_SCHEME_FALSE);
t7=t2;
f_29504(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k29502 in k29499 in k29495 in k29488 in k29485 in a36893 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_29504(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29504,NULL,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29515,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 358  loop-bindings");
t4=C_retrieve2(lf[508],"loop-bindings");
f_26157(3,t4,t3,((C_word*)t0)[2]);}

/* k29513 in k29502 in k29499 in k29495 in k29488 in k29485 in a36893 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29515,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29519,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29523,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 358  loop-initially");
t4=C_retrieve2(lf[510],"loop-initially");
f_26181(3,t4,t3,((C_word*)t0)[3]);}

/* k29521 in k29513 in k29502 in k29499 in k29495 in k29488 in k29485 in a36893 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29523,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[659]);
t3=(C_word)C_a_i_list(&a,1,lf[872]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29587,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t3,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29591,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29595,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 358  loop-looping");
t7=C_retrieve2(lf[512],"loop-looping");
f_26205(3,t7,t6,((C_word*)t0)[3]);}

/* k29593 in k29521 in k29513 in k29502 in k29499 in k29495 in k29488 in k29485 in a36893 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29595,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29599,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29603,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  loop-stepping");
t4=C_retrieve2(lf[514],"loop-stepping");
f_26217(3,t4,t3,((C_word*)t0)[2]);}

/* k29601 in k29593 in k29521 in k29513 in k29502 in k29499 in k29495 in k29488 in k29485 in a36893 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29603,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
C_trace("ChickenBridge.scm: 358  ##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t1,t3);}

/* k29597 in k29593 in k29521 in k29513 in k29502 in k29499 in k29495 in k29488 in k29485 in a36893 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 358  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k29589 in k29521 in k29513 in k29502 in k29499 in k29495 in k29488 in k29485 in a36893 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 358  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k29585 in k29521 in k29513 in k29502 in k29499 in k29495 in k29488 in k29485 in a36893 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29587,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[802],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[748],t5);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29555,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29559,a[2]=t7,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  loop-finally");
t9=C_retrieve2(lf[515],"loop-finally");
f_26229(3,t9,t8,((C_word*)t0)[2]);}

/* k29557 in k29585 in k29521 in k29513 in k29502 in k29499 in k29495 in k29488 in k29485 in a36893 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29559,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 358  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k29553 in k29585 in k29521 in k29513 in k29502 in k29499 in k29495 in k29488 in k29485 in a36893 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29555,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[802],t3);
t5=(C_word)C_a_i_list(&a,2,lf[748],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 358  ##sys#append");
t7=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],((C_word*)t0)[2],t6);}

/* k29517 in k29513 in k29502 in k29499 in k29495 in k29488 in k29485 in a36893 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29519,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26134,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26137,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36880,a[2]=((C_word)li613),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 358  ##sys#register-macro");
t4=C_retrieve(lf[800]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[877],t3);}

/* a36879 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36880(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36880,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,3,lf[876],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],t3,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,3,lf[460],t5,t3));}

/* k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26137,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26140,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36851,a[2]=((C_word)li612),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 358  ##sys#register-macro");
t4=C_retrieve(lf[800]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[875],t3);}

/* a36850 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36851(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_36851,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36855,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[874]);}

/* k36853 in a36850 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36855,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,2,t1,t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[3]);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,4,lf[1],t4,t6,t1));}

/* k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26140,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26143,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36848,a[2]=((C_word)li611),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 358  ##sys#register-macro");
t4=C_retrieve(lf[800]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[873],t3);}

/* a36847 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36848(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_36848,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[492],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26143,2,t0,t1);}
t2=C_mutate(&lf[507],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26151,a[2]=((C_word)li402),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[508],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26157,a[2]=((C_word)li403),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[509],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26169,a[2]=((C_word)li404),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[510],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26181,a[2]=((C_word)li405),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[511],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26193,a[2]=((C_word)li406),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[512],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26205,a[2]=((C_word)li407),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[513],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26211,a[2]=((C_word)li408),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[514],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26217,a[2]=((C_word)li409),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[515],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26229,a[2]=((C_word)li410),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[516],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26241,a[2]=((C_word)li411),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[517],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26253,a[2]=((C_word)li413),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[527],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26404,a[2]=((C_word)li416),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[528],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26475,a[2]=((C_word)li417),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[529],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26481,a[2]=((C_word)li418),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[530],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26487,a[2]=((C_word)li419),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[531],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26493,a[2]=((C_word)li423),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[539],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26653,a[2]=((C_word)li424),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[547],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26735,a[2]=((C_word)li426),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[577],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27117,a[2]=((C_word)li429),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[580],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27164,a[2]=((C_word)li431),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[599],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27515,a[2]=((C_word)li433),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[606],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27657,a[2]=((C_word)li435),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[620],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27850,a[2]=((C_word)li437),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[623],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27917,a[2]=((C_word)li438),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[626],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27955,a[2]=((C_word)li439),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[629],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28114,a[2]=((C_word)li445),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[658],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28660,a[2]=((C_word)li446),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[660],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28666,a[2]=((C_word)li447),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[666],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28732,a[2]=((C_word)li448),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[672],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28823,a[2]=((C_word)li449),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[675],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28924,a[2]=((C_word)li453),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[681],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29055,a[2]=((C_word)li458),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[687],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29469,a[2]=((C_word)li463),tmp=(C_word)a,a+=3,tmp));
t35=(C_word)C_a_i_list(&a,3,lf[607],C_retrieve2(lf[606],"parse-with"),C_SCHEME_FALSE);
t36=(C_word)C_a_i_list(&a,3,lf[521],C_retrieve2(lf[626],"parse-initially"),C_SCHEME_FALSE);
t37=(C_word)C_a_i_list(&a,3,lf[695],C_retrieve2(lf[577],"parse-repeat"),lf[692]);
t38=(C_word)C_a_i_list(&a,2,lf[555],C_retrieve2(lf[547],"parse-numerical-for"));
t39=(C_word)C_a_i_list(&a,2,lf[551],C_retrieve2(lf[547],"parse-numerical-for"));
t40=(C_word)C_a_i_list(&a,2,lf[553],C_retrieve2(lf[547],"parse-numerical-for"));
t41=(C_word)C_a_i_list(&a,2,lf[562],C_retrieve2(lf[547],"parse-numerical-for"));
t42=(C_word)C_a_i_list(&a,2,lf[552],C_retrieve2(lf[547],"parse-numerical-for"));
t43=(C_word)C_a_i_list(&a,2,lf[554],C_retrieve2(lf[547],"parse-numerical-for"));
t44=(C_word)C_a_i_list(&a,2,lf[587],C_retrieve2(lf[580],"parse-sequence-iteration"));
t45=(C_word)C_a_i_list(&a,2,lf[596],C_retrieve2(lf[580],"parse-sequence-iteration"));
t46=(C_word)C_a_i_list(&a,2,lf[581],C_retrieve2(lf[580],"parse-sequence-iteration"));
t47=(C_word)C_a_i_list(&a,2,lf[442],C_retrieve2(lf[599],"parse-general-iteration"));
t48=(C_word)C_a_i_list(&a,2,lf[586],C_retrieve2(lf[580],"parse-sequence-iteration"));
t49=(C_word)C_a_i_list(&a,14,lf[548],C_retrieve2(lf[539],"parse-for"),lf[692],t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48);
t50=(C_word)C_a_i_list(&a,3,lf[696],C_retrieve2(lf[539],"parse-for"),lf[692]);
t51=(C_word)C_a_i_list(&a,3,lf[688],C_retrieve2(lf[620],"parse-do"),lf[679]);
t52=(C_word)C_a_i_list(&a,3,lf[640],C_retrieve2(lf[629],"parse-accumulation"),lf[679]);
t53=(C_word)C_a_i_list(&a,3,lf[18],C_retrieve2(lf[629],"parse-accumulation"),lf[679]);
t54=(C_word)C_a_i_list(&a,3,lf[645],C_retrieve2(lf[629],"parse-accumulation"),lf[679]);
t55=(C_word)C_a_i_list(&a,3,lf[630],C_retrieve2(lf[629],"parse-accumulation"),lf[679]);
t56=(C_word)C_a_i_list(&a,3,lf[631],C_retrieve2(lf[629],"parse-accumulation"),lf[679]);
t57=(C_word)C_a_i_list(&a,3,lf[633],C_retrieve2(lf[629],"parse-accumulation"),lf[679]);
t58=(C_word)C_a_i_list(&a,3,lf[634],C_retrieve2(lf[629],"parse-accumulation"),lf[679]);
t59=(C_word)C_a_i_list(&a,4,lf[667],C_retrieve2(lf[666],"parse-thereis"),lf[679],C_retrieve2(lf[658],"loop-return"));
t60=(C_word)C_a_i_list(&a,4,lf[668],C_retrieve2(lf[666],"parse-thereis"),lf[679],C_retrieve2(lf[658],"loop-return"));
t61=(C_word)C_a_i_list(&a,4,lf[669],C_retrieve2(lf[666],"parse-thereis"),lf[679],C_retrieve2(lf[658],"loop-return"));
t62=(C_word)C_a_i_list(&a,4,lf[659],C_retrieve2(lf[672],"parse-return"),lf[679],C_retrieve2(lf[658],"loop-return"));
t63=(C_word)C_a_i_list(&a,3,lf[663],C_retrieve2(lf[660],"parse-while-until"),C_SCHEME_FALSE);
t64=(C_word)C_a_i_list(&a,3,lf[662],C_retrieve2(lf[660],"parse-while-until"),C_SCHEME_FALSE);
t65=(C_word)C_a_i_list(&a,3,lf[11],C_retrieve2(lf[681],"parse-conditional"),lf[679]);
t66=(C_word)C_a_i_list(&a,3,lf[6],C_retrieve2(lf[681],"parse-conditional"),lf[679]);
t67=(C_word)C_a_i_list(&a,3,lf[20],C_retrieve2(lf[681],"parse-conditional"),lf[679]);
t68=(C_word)C_a_i_list(&a,3,lf[525],C_retrieve2(lf[623],"parse-finally"),C_SCHEME_FALSE);
t69=(C_word)C_a_i_list(&a,23,t35,t36,t37,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68);
t70=C_mutate(&lf[697],t69);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29663,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36706,a[2]=((C_word)li610),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 358  ##sys#register-macro-2");
t73=C_retrieve(lf[814]);
((C_proc4)C_retrieve_proc(t73))(4,t73,t71,lf[692],t72);}

/* a36705 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36706(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_36706,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29669,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 358  parse-iteration");
f_29469(t3,lf[692],t2,C_retrieve2(lf[697],"*loop-operators*"));}

/* k29667 in a36705 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29669,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29672,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_assoc(lf[659],C_retrieve2(lf[697],"*loop-operators*"));
t4=(C_word)C_i_cadddr(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29801,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  loop-returning");
t6=C_retrieve2(lf[516],"loop-returning");
f_26241(3,t6,t5,t1);}

/* k29799 in k29667 in a36705 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29801,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,t2);
C_apply(4,0,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k29670 in k29667 in a36705 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29672,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29683,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 358  loop-bindings");
t3=C_retrieve2(lf[508],"loop-bindings");
f_26157(3,t3,t2,((C_word*)t0)[2]);}

/* k29681 in k29670 in k29667 in a36705 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29683,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29687,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29691,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 358  loop-initially");
t4=C_retrieve2(lf[510],"loop-initially");
f_26181(3,t4,t3,((C_word*)t0)[2]);}

/* k29689 in k29681 in k29670 in k29667 in a36705 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29691,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29711,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29715,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 358  loop-end-tests");
t4=C_retrieve2(lf[511],"loop-end-tests");
f_26193(3,t4,t3,((C_word*)t0)[2]);}

/* k29713 in k29689 in k29681 in k29670 in k29667 in a36705 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29715,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29718,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cdr(t1);
t4=(C_truep(t3)?(C_word)C_a_i_cons(&a,2,lf[433],t1):(C_word)C_i_car(t1));
t5=(C_word)C_a_i_list(&a,2,lf[872],lf[397]);
t6=(C_word)C_a_i_list(&a,3,lf[20],t4,t5);
t7=t2;
f_29718(t7,(C_word)C_a_i_list(&a,1,t6));}
else{
t3=t2;
f_29718(t3,C_SCHEME_END_OF_LIST);}}

/* k29716 in k29713 in k29689 in k29681 in k29670 in k29667 in a36705 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_29718(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29718,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29722,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29726,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 358  loop-looping");
t4=C_retrieve2(lf[512],"loop-looping");
f_26205(3,t4,t3,((C_word*)t0)[2]);}

/* k29724 in k29716 in k29713 in k29689 in k29681 in k29670 in k29667 in a36705 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29726,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29730,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29734,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 358  loop-stepping");
t4=C_retrieve2(lf[514],"loop-stepping");
f_26217(3,t4,t3,((C_word*)t0)[2]);}

/* k29732 in k29724 in k29716 in k29713 in k29689 in k29681 in k29670 in k29667 in a36705 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29734,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[872],lf[868]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29750,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29754,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  loop-finally");
t5=C_retrieve2(lf[515],"loop-finally");
f_26229(3,t5,t4,((C_word*)t0)[2]);}

/* k29752 in k29732 in k29724 in k29716 in k29713 in k29689 in k29681 in k29670 in k29667 in a36705 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29754,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k29748 in k29732 in k29724 in k29716 in k29713 in k29689 in k29681 in k29670 in k29667 in a36705 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29750,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[397],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
C_trace("##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k29728 in k29724 in k29716 in k29713 in k29689 in k29681 in k29670 in k29667 in a36705 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k29720 in k29716 in k29713 in k29689 in k29681 in k29670 in k29667 in a36705 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k29709 in k29689 in k29681 in k29670 in k29667 in a36705 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29711,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[868],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[869],t2);
t4=(C_word)C_a_i_list(&a,3,lf[870],lf[871],t3);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[3],((C_word*)t0)[2],t5);}

/* k29685 in k29681 in k29670 in k29667 in a36705 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29687,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word ab[138],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29663,2,t0,t1);}
t2=C_mutate((C_word*)lf[698]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29807,a[2]=((C_word)li465),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[703]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30536,a[2]=((C_word)li467),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[704]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30555,a[2]=((C_word)li469),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[705]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31006,a[2]=((C_word)li471),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[706]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31025,a[2]=((C_word)li473),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[708]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31754,a[2]=((C_word)li475),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[709]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31773,a[2]=((C_word)li477),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[711]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32502,a[2]=((C_word)li479),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[712]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32521,a[2]=((C_word)li481),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[713]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32972,a[2]=((C_word)li483),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[714]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32991,a[2]=((C_word)li485),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[715]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33442,a[2]=((C_word)li487),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[716]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33461,a[2]=((C_word)li489),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[717]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33931,a[2]=((C_word)li491),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[718]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33949,a[2]=((C_word)li493),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[719]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33964,a[2]=((C_word)li495),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[720]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33979,a[2]=((C_word)li497),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[721]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33998,a[2]=((C_word)li499),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[722]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34013,a[2]=((C_word)li501),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[723]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34032,a[2]=((C_word)li503),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[724]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34051,a[2]=((C_word)li505),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[725]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34074,a[2]=((C_word)li507),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[726]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34093,a[2]=((C_word)li509),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[727]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34116,a[2]=((C_word)li512),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[728]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34163,a[2]=((C_word)li515),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[730]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34218,a[2]=((C_word)li517),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[731]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34237,a[2]=((C_word)li519),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[732]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34260,a[2]=((C_word)li521),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[733]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34288,a[2]=((C_word)li523),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[734]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34316,a[2]=((C_word)li525),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[735]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34344,a[2]=((C_word)li527),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[736]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34372,a[2]=((C_word)li529),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[737]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34400,a[2]=((C_word)li531),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[738]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34428,a[2]=((C_word)li533),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[739]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34456,a[2]=((C_word)li535),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[740]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34484,a[2]=((C_word)li537),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[741]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34512,a[2]=((C_word)li539),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[742]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34527,a[2]=((C_word)li546),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate((C_word*)lf[749]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34584,a[2]=((C_word)li548),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[751]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34623,a[2]=((C_word)li550),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[752]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34634,a[2]=((C_word)li552),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[753]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34645,a[2]=((C_word)li554),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate((C_word*)lf[754]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34656,a[2]=((C_word)li556),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate((C_word*)lf[755]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34667,a[2]=((C_word)li558),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[756]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34678,a[2]=((C_word)li560),tmp=(C_word)a,a+=3,tmp));
t47=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34699,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 359  hash-table-set!");
t48=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t48))(5,t48,t47,C_retrieve(lf[29]),lf[866],lf[867]);}

/* k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34699,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34702,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 359  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[864],lf[865]);}

/* k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34702,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34705,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 359  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[862],lf[863]);}

/* k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34705,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34708,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 359  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[860],lf[861]);}

/* k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34708,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34711,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 359  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[858],lf[859]);}

/* k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34711,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34714,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 359  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[856],lf[857]);}

/* k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34714,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34717,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 359  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[854],lf[855]);}

/* k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34717,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34720,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 359  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[852],lf[853]);}

/* k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34720,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34723,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 359  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[850],lf[851]);}

/* k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34723,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34726,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 359  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[848],lf[849]);}

/* k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34726,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34729,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 359  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[846],lf[847]);}

/* k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34729,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34732,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 359  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[844],lf[845]);}

/* k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34732,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34735,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 359  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[842],lf[843]);}

/* k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34735,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34738,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 359  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[840],lf[841]);}

/* k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34738,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34741,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 359  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[838],lf[839]);}

/* k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34741,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34744,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 359  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[836],lf[837]);}

/* k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34744,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34747,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 359  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[834],lf[835]);}

/* k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34747,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34750,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 359  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[832],lf[833]);}

/* k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34750,2,t0,t1);}
t2=C_mutate((C_word*)lf[757]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34752,a[2]=((C_word)li564),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[759]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34795,a[2]=((C_word)li566),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[760]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34803,a[2]=((C_word)li568),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[761]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34860,a[2]=((C_word)li570),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[762]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34917,a[2]=((C_word)li572),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[765]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35155,a[2]=((C_word)li574),tmp=(C_word)a,a+=3,tmp));
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35606,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 360  hash-table-set!");
t9=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t9))(5,t9,t8,C_retrieve(lf[29]),lf[830],lf[831]);}

/* k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35606,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35609,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 360  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[828],lf[829]);}

/* k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35609,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35612,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 360  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[826],lf[827]);}

/* k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35612,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35615,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 360  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[824],lf[825]);}

/* k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35615,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35618,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 360  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[822],lf[823]);}

/* k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35618,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35621,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 360  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[820],lf[821]);}

/* k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35621,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35624,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 360  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[818],lf[819]);}

/* k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35624,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35627,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 360  hash-table-set!");
t3=C_retrieve(lf[815]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[816],lf[817]);}

/* k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[58],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35627,2,t0,t1);}
t2=C_mutate((C_word*)lf[767]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35629,a[2]=((C_word)li577),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[483]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35819,a[2]=((C_word)li578),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[472]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35833,a[2]=((C_word)li579),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[775],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35847,a[2]=((C_word)li581),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[777],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35891,a[2]=((C_word)li583),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[494]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35913,a[2]=((C_word)li585),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[778]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35932,a[2]=((C_word)li593),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[783]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36144,a[2]=((C_word)li594),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[784]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36147,a[2]=((C_word)li596),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[785]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36156,a[2]=((C_word)li598),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[786]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36162,a[2]=((C_word)li600),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[787]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36171,a[2]=((C_word)li602),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[789]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36229,a[2]=((C_word)li604),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[790],lf[791]);
t16=C_mutate(&lf[792],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36239,a[2]=((C_word)li605),tmp=(C_word)a,a+=3,tmp));
t17=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t18=t17;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36310,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t21=C_SCHEME_UNDEFINED;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_set_block_item(t22,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36643,a[2]=t22,a[3]=t17,a[4]=t19,a[5]=((C_word)li609),tmp=(C_word)a,a+=6,tmp));
t24=((C_word*)t22)[1];
f_36643(t24,t20,C_retrieve2(lf[697],"*loop-operators*"));}

/* do6469 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_36643(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36643,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_a_i_list(&a,3,lf[663],C_retrieve2(lf[792],"run-while-until"),C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[662],C_retrieve2(lf[792],"run-while-until"),C_SCHEME_FALSE);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36671,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t4);
if(C_truep((C_truep((C_word)C_i_equalp(t5,lf[640]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[18]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[645]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[630]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[631]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[633]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[634]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[667]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[668]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[669]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[659]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[663]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[662]))?C_SCHEME_TRUE:C_SCHEME_FALSE))))))))))))))){
t6=t3;
f_36671(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t3;
f_36671(t11,t10);}}}

/* k36669 in do6469 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_36671(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_36643(t3,((C_word*)t0)[2],t2);}

/* k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36310,2,t0,t1);}
t2=C_mutate(&lf[795],t1);
t3=C_mutate(&lf[796],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36312,a[2]=((C_word)li606),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36600,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36637,a[2]=((C_word)li608),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 608  ##sys#register-macro-2");
t6=C_retrieve(lf[814]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[813],t5);}

/* a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36637(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_36637,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36355,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 553  parse-iteration");
f_29469(t3,lf[813],t2,C_retrieve2(lf[795],"*run-operators*"));}

/* k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36355,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_retrieve2(lf[790],"*process-stop*");
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_car(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36361,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 561  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[812]);}

/* k36359 in k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36361,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36364,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 562  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[811]);}

/* k36362 in k36359 in k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_36367,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 563  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[810]);}

/* k36365 in k36362 in k36359 in k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36367,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_36371,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 565  loop-end-tests");
t3=C_retrieve2(lf[511],"loop-end-tests");
f_26193(3,t3,t2,((C_word*)t0)[3]);}

/* k36369 in k36365 in k36362 in k36359 in k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36371,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_36374,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36581,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 566  loop-finally");
t5=C_retrieve2(lf[515],"loop-finally");
f_26229(3,t5,t4,((C_word*)t0)[3]);}

/* k36579 in k36369 in k36365 in k36362 in k36359 in k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36581,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36589,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36593,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 567  loop-finally");
t4=C_retrieve2(lf[515],"loop-finally");
f_26229(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_36374(t2,C_SCHEME_UNDEFINED);}}

/* k36591 in k36579 in k36369 in k36365 in k36362 in k36359 in k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36593,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 552  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k36587 in k36579 in k36369 in k36365 in k36362 in k36359 in k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36589,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[460],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_36374(t4,t3);}

/* k36372 in k36369 in k36365 in k36362 in k36359 in k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_36374(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36374,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_36377,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36567,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36574,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 575  loop-looping");
t5=C_retrieve2(lf[512],"loop-looping");
f_26205(3,t5,t4,((C_word*)t0)[4]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36538,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_36538(t7,t6);}
else{
t5=(C_word)C_a_i_cons(&a,2,lf[433],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_36538(t7,t6);}}}

/* k36536 in k36372 in k36369 in k36365 in k36362 in k36359 in k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_36538(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36538,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_36377(2,t5,t4);}

/* k36572 in k36372 in k36369 in k36365 in k36362 in k36359 in k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 574  process-code-terminates?");
f_36312(((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k36565 in k36372 in k36369 in k36365 in k36362 in k36359 in k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[2];
f_36377(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 576  printf");
t2=C_retrieve(lf[451]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[809]);}}

/* k36375 in k36372 in k36369 in k36365 in k36362 in k36359 in k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36377,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[8],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[802],C_SCHEME_END_OF_LIST,((C_word*)t0)[9]);
t5=(C_word)C_a_i_list(&a,2,lf[803],t4);
t6=(C_word)C_a_i_list(&a,1,lf[804]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[8],lf[804]);
t8=(C_word)C_a_i_list(&a,3,lf[802],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[805],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t13=(C_word)C_a_i_list(&a,1,lf[806]);
t14=(C_word)C_a_i_list(&a,4,lf[807],((C_word*)t0)[6],t13,lf[808]);
t15=(C_word)C_a_i_list(&a,2,((C_word*)t0)[7],C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[802],t12,t14,t15);
t17=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36468,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=t10,a[7]=t11,a[8]=t16,tmp=(C_word)a,a+=9,tmp);
t18=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36472,a[2]=((C_word*)t0)[2],a[3]=t17,tmp=(C_word)a,a+=4,tmp);
t19=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36476,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=t18,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 595  loop-looping");
t20=C_retrieve2(lf[512],"loop-looping");
f_26205(3,t20,t19,((C_word*)t0)[3]);}

/* k36474 in k36375 in k36372 in k36369 in k36365 in k36362 in k36359 in k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36476,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36480,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36484,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 596  loop-stepping");
t4=C_retrieve2(lf[514],"loop-stepping");
f_26217(3,t4,t3,((C_word*)t0)[2]);}

/* k36482 in k36474 in k36375 in k36372 in k36369 in k36365 in k36362 in k36359 in k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36484,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 552  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k36478 in k36474 in k36375 in k36372 in k36369 in k36365 in k36362 in k36359 in k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 552  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k36470 in k36375 in k36372 in k36369 in k36365 in k36362 in k36359 in k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 552  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k36466 in k36375 in k36372 in k36369 in k36365 in k36362 in k36359 in k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36468,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,lf[802],t2);
t4=(C_word)C_a_i_list(&a,3,lf[747],((C_word*)t0)[8],t3);
t5=(C_word)C_a_i_list(&a,3,lf[802],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[748],t5);
t7=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[6],t6);
t8=(C_word)C_a_i_list(&a,3,lf[802],((C_word*)t0)[5],t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36387,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36424,a[2]=((C_word*)t0)[2],a[3]=t10,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 600  loop-bindings");
t12=C_retrieve2(lf[508],"loop-bindings");
f_26157(3,t12,t11,((C_word*)t0)[2]);}

/* k36422 in k36466 in k36375 in k36372 in k36369 in k36365 in k36362 in k36359 in k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36424,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36420,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 601  loop-initially");
t3=C_retrieve2(lf[510],"loop-initially");
f_26181(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_36387(t2,C_SCHEME_FALSE);}}

/* k36418 in k36422 in k36466 in k36375 in k36372 in k36369 in k36365 in k36362 in k36359 in k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_36387(t2,(C_word)C_i_nullp(t1));}

/* k36385 in k36466 in k36375 in k36372 in k36369 in k36365 in k36362 in k36359 in k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_36387(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36387,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36398,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 604  loop-bindings");
t3=C_retrieve2(lf[508],"loop-bindings");
f_26157(3,t3,t2,((C_word*)t0)[2]);}}

/* k36396 in k36385 in k36466 in k36375 in k36372 in k36369 in k36365 in k36362 in k36359 in k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36398,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36402,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36406,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 605  loop-initially");
t4=C_retrieve2(lf[510],"loop-initially");
f_26181(3,t4,t3,((C_word*)t0)[2]);}

/* k36404 in k36396 in k36385 in k36466 in k36375 in k36372 in k36369 in k36365 in k36362 in k36359 in k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36406,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 552  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k36400 in k36396 in k36385 in k36466 in k36375 in k36372 in k36369 in k36365 in k36362 in k36359 in k36353 in a36636 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36402,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* k36598 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36600,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36603,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36608,a[2]=((C_word)li607),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 611  ##sys#register-macro");
t4=C_retrieve(lf[800]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[801],t3);}

/* a36607 in k36598 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36608(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr3r,(void*)f_36608r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_36608r(t0,t1,t2,t3);}}

static void C_ccall f_36608r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36612,a[2]=t1,a[3]=t3,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36622,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t6=(C_word)C_i_car(t2);
t7=t5;
f_36622(t7,(C_word)C_i_symbolp(t6));}
else{
t6=t5;
f_36622(t6,C_SCHEME_FALSE);}}

/* k36620 in a36607 in k36598 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_36622(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_36612(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 613  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[799],((C_word*)t0)[2]);}}

/* k36610 in a36607 in k36598 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36612,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[798],t2));}

/* k36601 in k36598 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36603,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36606,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 720  return-to-host");
t3=C_retrieve(lf[797]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k36604 in k36601 in k36598 in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* process-code-terminates? in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_36312(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
loop:
a=C_alloc(5);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_36312,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36328,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 548  process-code-terminates?");
t8=t4;
t9=t5;
t10=t3;
t1=t8;
t2=t9;
t3=t10;
goto loop;}
else{
t4=(C_word)C_i_car(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_eqp(t2,t4));}}}

/* k36326 in process-code-terminates? in k36308 in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 549  process-code-terminates?");
f_36312(((C_word*)t0)[4],t2,((C_word*)t0)[2]);}}

/* run-while-until in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36239(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_36239,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36250,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 516  loop-error");
f_26493(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[793],t7,lf[794]));}
else{
t13=t12;
f_36250(2,t13,C_SCHEME_UNDEFINED);}}

/* k36248 in run-while-until in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36250,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36253,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[662]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_36253(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[663]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[434],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_36253(t10,t9);}
else{
t5=t2;
f_36253(t5,C_SCHEME_UNDEFINED);}}}

/* k36251 in k36248 in run-while-until in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_36253(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36253,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36260,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],C_retrieve2(lf[790],"*process-stop*"));
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 520  make-loop-clause");
f_26253(t2,(C_word)C_a_i_list(&a,4,lf[518],((C_word*)t0)[2],lf[523],t4));}

/* k36258 in k36251 in k36248 in run-while-until in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 520  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* hush in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36229,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36233,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35908,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[776]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k35906 in hush in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35908,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6383,a[2]=((C_word)li603),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k36231 in hush in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 501  values");
C_values(2,0,((C_word*)t0)[2]);}

/* stop in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36171(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_36171r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_36171r(t0,t1,t2);}}

static void C_ccall f_36171r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36175,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 491  scheduler-stop");
f_35891(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36189,a[2]=t5,a[3]=((C_word)li601),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_36189(t7,t3,t2);}}

/* do6439 in stop in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_36189(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36189,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36199,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 495  scheduler-stop");
f_35891(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 496  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[788],t5);}}}

/* k36197 in do6439 in stop in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_36189(t3,((C_word*)t0)[2],t2);}

/* k36173 in stop in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 497  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cont in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36162,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36166,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35886,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[776]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k35884 in cont in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35886,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6373,a[2]=((C_word)li599),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k36164 in cont in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 487  values");
C_values(2,0,((C_word*)t0)[2]);}

/* paused? in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36156,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35868,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t3=C_retrieve(lf[776]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k35866 in paused? in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35868,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6365,a[2]=((C_word)li597),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* pause in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36147,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36151,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35877,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[776]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k35875 in pause in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35877,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6369,a[2]=((C_word)li595),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k36149 in pause in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 480  values");
C_values(2,0,((C_word*)t0)[2]);}

/* now in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36144,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6433(t2));}

/* sprout in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35932(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_35932r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_35932r(t0,t1,t2,t3);}}

static void C_ccall f_35932r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35934,a[2]=t2,a[3]=((C_word)li590),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36091,a[2]=t4,a[3]=((C_word)li591),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36096,a[2]=t5,a[3]=((C_word)li592),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-start64006427");
t7=t6;
f_36096(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-id64016425");
t9=t5;
f_36091(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body63986403");
t11=t4;
f_35934(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[781]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[782],t10);}}}}

/* def-start6400 in sprout in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_36096(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36096,NULL,2,t0,t1);}
C_trace("def-id64016425");
t2=((C_word*)t0)[2];
f_36091(t2,t1,C_fix(0));}

/* def-id6401 in sprout in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_36091(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36091,NULL,3,t0,t1,t2);}
C_trace("body63986403");
t3=((C_word*)t0)[2];
f_35934(t3,t1,t2,C_fix(-1));}

/* body6398 in sprout in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_35934(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35934,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35936,a[2]=t4,a[3]=((C_word)li586),tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35964,a[2]=t5,a[3]=((C_word)li587),tmp=(C_word)a,a+=4,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35994,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36003,a[2]=t8,a[3]=t6,a[4]=t7,a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36039,a[2]=((C_word*)t0)[2],a[3]=t11,a[4]=((C_word)li589),tmp=(C_word)a,a+=5,tmp));
t13=((C_word*)t11)[1];
f_36039(t13,t9,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36079,a[2]=((C_word*)t0)[2],a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36083,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t9,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 465  nextstart");
t11=t6;
f_35936(t11,t10);}
else{
C_trace("ChickenBridge.scm: 468  error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[780],((C_word*)t0)[2]);}}}

/* k36081 in body6398 in sprout in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36083,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36087,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 465  nextid");
t3=((C_word*)t0)[2];
f_35964(t3,t2);}

/* k36085 in k36081 in body6398 in sprout in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 465  scheduler-sprout");
f_35847(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k36077 in body6398 in sprout in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_35994(2,t2,((C_word*)t0)[2]);}

/* do6412 in body6398 in sprout in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_36039(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36039,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36049,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_closurep(t4))){
t5=t3;
f_36049(2,t5,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 459  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[779],((C_word*)t0)[2]);}}}

/* k36047 in do6412 in body6398 in sprout in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_36039(t3,((C_word*)t0)[2],t2);}

/* k36001 in body6398 in sprout in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36003,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36008,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li588),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_36008(t5,((C_word*)t0)[2],((C_word*)t0)[5]);}

/* do6417 in k36001 in body6398 in sprout in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_36008(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36008,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36018,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36033,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 462  nextstart");
t6=((C_word*)t0)[2];
f_35936(t6,t5);}}

/* k36031 in do6417 in k36001 in body6398 in sprout in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36033,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36037,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 463  nextid");
t3=((C_word*)t0)[2];
f_35964(t3,t2);}

/* k36035 in k36031 in do6417 in k36001 in body6398 in sprout in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 462  scheduler-sprout");
f_35847(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k36016 in do6417 in k36001 in body6398 in sprout in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_36018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_36008(t3,((C_word*)t0)[2],t2);}

/* k35992 in body6398 in sprout in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 472  values");
C_values(2,0,((C_word*)t0)[2]);}

/* nextid in body6398 in sprout in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_35964(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35964,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in body6398 in sprout in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_35936(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35936,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* load-sal-file in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35913(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35913,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35918,a[2]=((C_word)li584),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_35918 in load-sal-file in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35918(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35918,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35923,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_35923(2,t4,C_SCHEME_FALSE);}}

/* k35921 */
static void C_ccall f_35923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6389(C_SCHEME_UNDEFINED,t1));}

/* scheduler-stop in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_35891(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35891,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35895,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[776]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k35893 in scheduler-stop in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35895,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6378,a[2]=((C_word)li582),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],t2,t3);}

/* scheduler-sprout in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_35847(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35847,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35851,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("##sys#gc");
t6=C_retrieve(lf[776]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,C_SCHEME_FALSE);}

/* k35849 in scheduler-sprout in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35851,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_flonum_argumentp(((C_word*)t0)[5]);
t4=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6358,a[2]=((C_word)li580),tmp=(C_word)a,a+=3,tmp);
((C_proc6)C_retrieve_proc(t5))(6,t5,((C_word*)t0)[3],t2,((C_word*)t0)[2],t3,t4);}

/* print-error in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35833(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35833,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35838,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_35838(2,t4,C_SCHEME_FALSE);}}

/* k35836 in print-error in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6350(C_SCHEME_UNDEFINED,t1));}

/* print-message in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35819(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35819,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35824,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_35824(2,t4,C_SCHEME_FALSE);}}

/* k35822 in print-message in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6344(C_SCHEME_UNDEFINED,t1));}

/* cm-logo in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35629(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35629,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35683,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35690,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  make-string");
t5=*((C_word*)lf[383]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_fix(15));}

/* k35688 in cm-logo in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35690,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35692,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li576),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_35692(t5,((C_word*)t0)[2],lf[774],t1,C_fix(0));}

/* do6318 in k35688 in cm-logo in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_35692(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35692,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t4,C_fix(7)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35702,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t1,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nequalp(t4,C_fix(0)))){
C_trace("ChickenBridge.scm: 379  printf");
t6=C_retrieve(lf[451]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
t6=t5;
f_35702(2,t6,C_SCHEME_UNDEFINED);}}}

/* k35700 in do6318 in k35688 in cm-logo in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35702,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35705,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35719,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35721,a[2]=t5,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[7],a[6]=((C_word)li575),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_35721(t7,t3,C_fix(0));}

/* do6332 in k35700 in do6318 in k35688 in cm-logo in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_35721(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35721,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(15)))){
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[5],C_fix(3)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35741,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[3];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(0);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35676,a[2]=t3,a[3]=t11,a[4]=t9,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
t13=(C_word)C_a_i_divide(&a,2,((C_word*)t5)[1],C_fix(10000));
C_trace("ChickenBridge.scm: 368  floor");
t14=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t14))(3,t14,t12,t13);}
else{
C_trace("ChickenBridge.scm: 384  string-append");
t3=*((C_word*)lf[180]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,((C_word*)t0)[4],lf[773]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35758,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35761,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 386  <=");
C_less_or_equal_p(5,0,t4,C_fix(2),t5,C_fix(4));}}

/* k35759 in do6332 in k35700 in do6318 in k35688 in cm-logo in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35761,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_35758(t2,C_make_character(92));}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35803,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_plus(&a,2,C_fix(13),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 387  modulo");
t4=*((C_word*)lf[145]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(15));}}

/* k35801 in k35759 in do6332 in k35700 in do6318 in k35688 in cm-logo in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35803,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,C_fix(4),t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(1)))){
t4=((C_word*)t0)[3];
f_35758(t4,C_make_character(47));}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35773,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 389  <=");
C_less_or_equal_p(5,0,t4,C_fix(1),((C_word*)t0)[2],C_fix(5));}}

/* k35771 in k35801 in k35759 in do6332 in k35700 in do6318 in k35688 in cm-logo in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35773,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_35758(t2,C_make_character(45));}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(6));
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[2],C_fix(3));
t4=(C_word)C_a_i_times(&a,2,t2,t3);
t5=(C_word)C_i_nequalp(t4,C_fix(15));
t6=((C_word*)t0)[4];
f_35758(t6,(C_truep(t5)?C_make_character(47):C_make_character(32)));}}

/* k35756 in do6332 in k35700 in do6318 in k35688 in cm-logo in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_35758(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35758,NULL,2,t0,t1);}
t2=(C_word)C_i_string_set(((C_word*)t0)[5],((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_35721(t4,((C_word*)t0)[2],t3);}

/* k35674 in do6332 in k35700 in do6318 in k35688 in cm-logo in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35676,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35641,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  modulo");
t5=*((C_word*)lf[145]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[5])[1],C_fix(10000));}

/* k35639 in k35674 in do6332 in k35700 in do6318 in k35688 in cm-logo in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35641,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35668,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_divide(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(100));
C_trace("ChickenBridge.scm: 370  floor");
t5=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k35666 in k35639 in k35674 in do6332 in k35700 in do6318 in k35688 in cm-logo in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35668,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35649,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 371  modulo");
t5=*((C_word*)lf[145]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[2])[1],C_fix(100));}

/* k35647 in k35666 in k35639 in k35674 in do6332 in k35700 in do6318 in k35688 in cm-logo in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35649,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35656,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 372  number->string");
C_number_to_string(3,0,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k35654 in k35647 in k35666 in k35639 in k35674 in do6332 in k35700 in do6318 in k35688 in cm-logo in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35656,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35660,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 373  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k35658 in k35654 in k35647 in k35666 in k35639 in k35674 in do6332 in k35700 in do6318 in k35688 in cm-logo in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35660,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35664,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k35662 in k35658 in k35654 in k35647 in k35666 in k35639 in k35674 in do6332 in k35700 in do6318 in k35688 in cm-logo in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 372  string-append");
t2=*((C_word*)lf[180]+1);
((C_proc8)C_retrieve_proc(t2))(8,t2,((C_word*)t0)[4],lf[770],((C_word*)t0)[3],lf[771],((C_word*)t0)[2],lf[772],t1);}

/* k35739 in do6332 in k35700 in do6318 in k35688 in cm-logo in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 383  string-append");
t2=*((C_word*)lf[180]+1);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[768],t1,lf[769]);}

/* k35717 in k35700 in do6318 in k35688 in cm-logo in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  printf");
t2=C_retrieve(lf[451]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k35703 in k35700 in do6318 in k35688 in cm-logo in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35705,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35708,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 392  printf");
t3=C_retrieve(lf[451]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k35706 in k35703 in k35700 in do6318 in k35688 in cm-logo in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35708,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_35692(t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k35681 in cm-logo in k35625 in k35622 in k35619 in k35616 in k35613 in k35610 in k35607 in k35604 in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 393  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35155(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_35155r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_35155r(t0,t1,t2);}}

static void C_ccall f_35155r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_35159,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t8,a[9]=t6,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_35159(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[763]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35483,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[763]);}
else{
t23=t22;
f_35483(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[764]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35518,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[764]);}
else{
t24=t23;
f_35518(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[766]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35553,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[766]);}
else{
t25=t24;
f_35553(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35582,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_35582(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k35580 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35582,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35589,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35597,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35595 in k35580 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35589(2,t2,C_SCHEME_UNDEFINED);}}

/* k35587 in k35580 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35159(t5,t4);}

/* k35551 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35553,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35557,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35557(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35555 in k35551 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35159(t7,t6);}

/* k35516 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35518,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35522,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35522(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35520 in k35516 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35159(t7,t6);}

/* k35481 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35483,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35487,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35487(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35485 in k35481 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35159(t7,t6);}

/* k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_35159(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35159,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_35162,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_35162(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35348,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[763]);}
else{
t6=t5;
f_35348(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[764]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35383,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[764]);}
else{
t7=t6;
f_35383(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[766]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35418,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[766]);}
else{
t8=t7;
f_35418(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35447,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_35447(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k35445 in k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35447,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35454,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35462,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35460 in k35445 in k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35454(2,t2,C_SCHEME_UNDEFINED);}}

/* k35452 in k35445 in k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35162(t5,t4);}

/* k35416 in k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35418,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35422,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35422(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35420 in k35416 in k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35162(t7,t6);}

/* k35381 in k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35383,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35387,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35387(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35385 in k35381 in k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35162(t7,t6);}

/* k35346 in k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35348,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35352,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35352(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35350 in k35346 in k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35162(t7,t6);}

/* k35160 in k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_35162(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35162,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35165,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_35165(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35213,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[763]);}
else{
t6=t5;
f_35213(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[764]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35248,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[764]);}
else{
t7=t6;
f_35248(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[766]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35283,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[766]);}
else{
t8=t7;
f_35283(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35312,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_35312(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k35310 in k35160 in k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35312,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35319,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35327,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35325 in k35310 in k35160 in k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35319(2,t2,C_SCHEME_UNDEFINED);}}

/* k35317 in k35310 in k35160 in k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35165(t5,t4);}

/* k35281 in k35160 in k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35283,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35287,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35287(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35285 in k35281 in k35160 in k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35165(t7,t6);}

/* k35246 in k35160 in k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35248,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35252,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35252(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35250 in k35246 in k35160 in k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35165(t7,t6);}

/* k35211 in k35160 in k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35213,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35217,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35217(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35215 in k35211 in k35160 in k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35165(t7,t6);}

/* k35163 in k35160 in k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_35165(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35165,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35168,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_35168(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k35166 in k35163 in k35160 in k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35168,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35171,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_35171(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_set_block_item(((C_word*)t0)[3],0,C_fix(-1));
t5=t2;
f_35171(t5,t4);}}

/* k35169 in k35166 in k35163 in k35160 in k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_35171(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35171,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35175,a[2]=((C_word)li573),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_35175 in k35169 in k35166 in k35163 in k35160 in k35157 in cs:play in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35175(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35175,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub6294(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* cs:print in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34917(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_34917r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34917r(t0,t1,t2);}}

static void C_ccall f_34917r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_34921,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_34921(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[763]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35068,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[763]);}
else{
t19=t18;
f_35068(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[764]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35103,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[764]);}
else{
t20=t19;
f_35103(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35132,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[10],t2);}
else{
t20=t19;
f_35132(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k35130 in cs:print in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35132,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35139,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35147,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35145 in k35130 in cs:print in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35139(2,t2,C_SCHEME_UNDEFINED);}}

/* k35137 in k35130 in cs:print in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34921(t5,t4);}

/* k35101 in cs:print in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35103,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35107,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35107(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35105 in k35101 in cs:print in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34921(t7,t6);}

/* k35066 in cs:print in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35068,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35072,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35072(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35070 in k35066 in cs:print in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34921(t7,t6);}

/* k34919 in cs:print in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_34921(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34921,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34924,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_34924(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34968,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[763]);}
else{
t6=t5;
f_34968(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[764]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35003,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[764]);}
else{
t7=t6;
f_35003(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35032,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_35032(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k35030 in k34919 in cs:print in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35032,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35039,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35047,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35045 in k35030 in k34919 in cs:print in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35039(2,t2,C_SCHEME_UNDEFINED);}}

/* k35037 in k35030 in k34919 in cs:print in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34924(t5,t4);}

/* k35001 in k34919 in cs:print in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35003,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35007,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35007(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35005 in k35001 in k34919 in cs:print in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_35007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34924(t7,t6);}

/* k34966 in k34919 in cs:print in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34968,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34972,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34972(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34970 in k34966 in k34919 in cs:print in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34924(t7,t6);}

/* k34922 in k34919 in cs:print in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_34924(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34924,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34927,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_34927(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k34925 in k34922 in k34919 in cs:print in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34927,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34930,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_34930(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(-1));
t5=t2;
f_34930(t5,t4);}}

/* k34928 in k34925 in k34922 in k34919 in cs:print in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_34930(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34930,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34934,a[2]=((C_word)li571),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_34934 in k34928 in k34925 in k34922 in k34919 in cs:print in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34934(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34934,4,t0,t1,t2,t3);}
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub6215(C_SCHEME_UNDEFINED,t4,t5));}

/* cs:f in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34860(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_34860r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34860r(t0,t1,t2);}}

static void C_ccall f_34860r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34864,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_34864(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34873,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34893,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_34893(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_34893(t8,C_SCHEME_FALSE);}}}

/* k34891 in cs:f in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_34893(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_34873(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_34873(t2,C_SCHEME_UNDEFINED);}}

/* k34871 in cs:f in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_34873(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34873,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34881,a[2]=((C_word)li569),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(2),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_34881 in k34871 in cs:f in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34881(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34881,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub6167(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k34862 in cs:f in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 360  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:i in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34803(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_34803r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34803r(t0,t1,t2);}}

static void C_ccall f_34803r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34807,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_34807(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34816,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34836,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_34836(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_34836(t8,C_SCHEME_FALSE);}}}

/* k34834 in cs:i in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_34836(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_34816(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_34816(t2,C_SCHEME_UNDEFINED);}}

/* k34814 in cs:i in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_34816(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34816,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34824,a[2]=((C_word)li567),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(1),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_34824 in k34814 in cs:i in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34824(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34824,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub6156(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k34805 in cs:i in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 360  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:clear in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34795,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34800,a[2]=((C_word)li565),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_34800 in cs:clear in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34800,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6150(C_SCHEME_UNDEFINED));}

/* cs:record in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34752(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34752,3,t0,t1,t2);}
if(C_truep((C_word)C_booleanp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34763,a[2]=((C_word)li561),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}
else{
t3=(C_word)C_i_numberp(t2);
t4=(C_truep(t3)?(C_word)C_i_greater_or_equalp(t2,C_fix(0)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34773,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34779,a[2]=((C_word)li563),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t6+1)))(3,t6,t5,t2);}
else{
C_trace("ChickenBridge.scm: 360  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,lf[758],t2);}}}

/* f_34779 in cs:record in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34779(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34779,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub6142(C_SCHEME_UNDEFINED,t3));}

/* k34771 in cs:record in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34773,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34777,a[2]=((C_word)li562),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t2+1)))(3,t2,((C_word*)t0)[2],C_SCHEME_TRUE);}

/* f_34777 in k34771 in cs:record in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34777(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34777,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6146(C_SCHEME_UNDEFINED,t2));}

/* f_34763 in cs:record in k34748 in k34745 in k34742 in k34739 in k34736 in k34733 in k34730 in k34727 in k34724 in k34721 in k34718 in k34715 in k34712 in k34709 in k34706 in k34703 in k34700 in k34697 in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34763(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34763,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6138(C_SCHEME_UNDEFINED,t2));}

/* mp:recordseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34678(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2rv,(void*)f_34678r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_34678r(t0,t1,t2);}}

static void C_ccall f_34678r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(6);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34685,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34689,a[2]=((C_word)li559),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t6+1)))(3,t6,t5,t4);}

/* f_34689 in mp:recordseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34689(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34689,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6069(C_SCHEME_UNDEFINED,t2));}

/* k34683 in mp:recordseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 359  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:clearseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34667,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34671,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34675,a[2]=((C_word)li557),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_34675 in mp:clearseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34675,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6063(C_SCHEME_UNDEFINED));}

/* k34669 in mp:clearseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 359  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:plotseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34656,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34660,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34664,a[2]=((C_word)li555),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_34664 in mp:plotseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34664,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6060(C_SCHEME_UNDEFINED));}

/* k34658 in mp:plotseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 359  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:copyseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34645,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34649,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34653,a[2]=((C_word)li553),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_34653 in mp:copyseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34653,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6057(C_SCHEME_UNDEFINED));}

/* k34647 in mp:copyseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 359  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:saveseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34634,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34638,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34642,a[2]=((C_word)li551),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_34642 in mp:saveseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34642,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6054(C_SCHEME_UNDEFINED));}

/* k34636 in mp:saveseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 359  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:playseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34623,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34627,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34631,a[2]=((C_word)li549),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_34631 in mp:playseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34631,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6051(C_SCHEME_UNDEFINED));}

/* k34625 in mp:playseq in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 359  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:tuning in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34584(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr2rv,(void*)f_34584r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_34584r(t0,t1,t2);}}

static void C_ccall f_34584r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(7);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?C_fix(1):(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34591,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34597,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_integerp(t4))){
C_trace("ChickenBridge.scm: 359  <");
C_lessp(5,0,t6,C_fix(0),t4,C_fix(17));}
else{
t7=t6;
f_34597(2,t7,C_SCHEME_FALSE);}}

/* k34595 in mp:tuning in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34597,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34601,a[2]=((C_word)li547),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t2+1)))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 359  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[750],((C_word*)t0)[2]);}}

/* f_34601 in k34595 in mp:tuning in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34601(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34601,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub6047(C_SCHEME_UNDEFINED,t3));}

/* k34589 in mp:tuning in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 359  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:inhook in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34527(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34527,3,t0,t1,t2);}
if(C_truep((C_word)C_i_closurep(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34539,a[2]=t2,a[3]=((C_word)li543),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34576,a[2]=((C_word)li544),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t1,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34581,a[2]=((C_word)li545),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,C_SCHEME_FALSE);}}

/* f_34581 in mp:inhook in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34581(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34581,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6041(C_SCHEME_UNDEFINED,t2));}

/* f_34576 in mp:inhook in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34576(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34576,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6032(C_SCHEME_UNDEFINED,t2));}

/* a34538 in mp:inhook in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34539(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34539,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34545,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word)li542),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 359  call-with-current-continuation");
t4=*((C_word*)lf[748]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* a34544 in a34538 in mp:inhook in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34545(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34545,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34551,a[2]=t2,a[3]=((C_word)li540),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34571,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word)li541),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 359  with-exception-handler");
t5=C_retrieve(lf[747]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t3,t4);}

/* a34570 in a34544 in a34538 in mp:inhook in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34571,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34575,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 359  %hook");
t3=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k34573 in a34570 in a34544 in a34538 in mp:inhook in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* a34550 in a34544 in a34538 in mp:inhook in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34551(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34551,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34555,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34562,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34566,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34569,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 359  condition-property-accessor");
t7=C_retrieve(lf[744]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[745],lf[746]);}

/* k34567 in a34550 in a34544 in a34538 in mp:inhook in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=t1;
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k34564 in a34550 in a34544 in a34538 in mp:inhook in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 359  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[743],t1);}

/* k34560 in a34550 in a34544 in a34538 in mp:inhook in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 359  print-error");
t2=C_retrieve(lf[472]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k34553 in a34550 in a34544 in a34538 in mp:inhook in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 359  %cont");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],C_fix(-1));}

/* mp:mm in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34512(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34512,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34517,a[2]=((C_word)li538),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_34517 in mp:mm in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34517(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34517,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub6025(C_SCHEME_UNDEFINED,t3));}

/* mp:bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34484(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34484,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34489,a[2]=((C_word)li536),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(14),t2,t4,t3,C_fix(0));}

/* f_34489 in mp:bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34489(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34489,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub6016(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34456(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34456,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34461,a[2]=((C_word)li534),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(13),t2,t4,t3,C_fix(0));}

/* f_34461 in mp:press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34461(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34461,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub6001(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34428(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34428,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34433,a[2]=((C_word)li532),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(12),t2,t4,t3,C_fix(0));}

/* f_34433 in mp:prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34433(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34433,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5986(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34400(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_34400,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34405,a[2]=((C_word)li530),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(11),t2,t5,t3,t4);}

/* f_34405 in mp:ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34405(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34405,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5971(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34372(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_34372,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34377,a[2]=((C_word)li528),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(10),t2,t5,t3,t4);}

/* f_34377 in mp:touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34377(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34377,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5955(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34344(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_34344,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34349,a[2]=((C_word)li526),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(9),t2,t5,t3,t4);}

/* f_34349 in mp:on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34349(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34349,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5939(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34316(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34316,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34321,a[2]=((C_word)li524),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(8),t2,t4,t3,C_fix(0));}

/* f_34321 in mp:off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34321(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34321,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5923(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:midi in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34288(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34288,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34293,a[2]=((C_word)li522),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_34293 in mp:midi in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34293(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34293,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5908(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:note in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34260(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34260,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34265,a[2]=((C_word)li520),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_34265 in mp:note in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34265(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34265,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5891(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mm:num-set! in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34237(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34237,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34241,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34242,a[2]=((C_word)li518),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_34242 in mm:num-set! in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34242(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34242,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5873(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k34239 in mm:num-set! in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:num in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34218(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34218,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34223,a[2]=((C_word)li516),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_34223 in mm:num in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34223(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34223,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5862(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:val-set! in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34163(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34163,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34167,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34170,a[2]=t3,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 359  mm:ctrl?");
t6=C_retrieve(lf[711]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k34168 in mm:val-set! in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34170,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34173,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_34173(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 359  mm:touch?");
t3=C_retrieve(lf[708]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}}

/* k34171 in k34168 in mm:val-set! in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34173,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34177,a[2]=((C_word)li513),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(2),((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34197,a[2]=((C_word)li514),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(1),C_retrieve(lf[729]));}}

/* f_34197 in k34171 in k34168 in mm:val-set! in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34197(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34197,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5851(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* f_34177 in k34171 in k34168 in mm:val-set! in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34177(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34177,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5841(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k34165 in mm:val-set! in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:val in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34116(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34116,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34123,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 359  mm:ctrl?");
t4=C_retrieve(lf[711]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k34121 in mm:val in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34123,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34126,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t1)){
t3=t2;
f_34126(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 359  mm:touch?");
t3=C_retrieve(lf[708]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}

/* k34124 in k34121 in mm:val in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34126,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34130,a[2]=((C_word)li510),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(2));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34146,a[2]=((C_word)li511),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}}

/* f_34146 in k34124 in k34121 in mm:val in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34146(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34146,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5828(C_SCHEME_UNDEFINED,t4,t5));}

/* f_34130 in k34124 in k34121 in mm:val in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34130(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34130,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5820(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:vel-set! in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34093(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34093,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34097,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34098,a[2]=((C_word)li508),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(2),t3);}

/* f_34098 in mm:vel-set! in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34098(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34098,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5807(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k34095 in mm:vel-set! in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:vel in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34074(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34074,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34079,a[2]=((C_word)li506),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(2));}

/* f_34079 in mm:vel in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34079(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34079,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5796(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:key-set! in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34051(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34051,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34055,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34056,a[2]=((C_word)li504),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_34056 in mm:key-set! in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34056(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34056,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5785(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k34053 in mm:key-set! in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:key in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34032(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34032,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34037,a[2]=((C_word)li502),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_34037 in mm:key in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34037(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34037,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5774(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:chan-set! in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34013(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34013,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34017,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34018,a[2]=((C_word)li500),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_34018 in mm:chan-set! in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34018(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34018,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5764(C_SCHEME_UNDEFINED,t4,t5));}

/* k34015 in mm:chan-set! in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:chan in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33998(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33998,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34003,a[2]=((C_word)li498),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_34003 in mm:chan in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_34003(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34003,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5755(C_SCHEME_UNDEFINED,t3));}

/* mm:time-set! in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33979(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33979,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33983,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33984,a[2]=((C_word)li496),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_33984 in mm:time-set! in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33984(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33984,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5746(C_SCHEME_UNDEFINED,t4,t5));}

/* k33981 in mm:time-set! in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:time in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33964(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33964,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33969,a[2]=((C_word)li494),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_33969 in mm:time in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33969(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33969,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub5736(t3,t4));}

/* mm:copy in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33949(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33949,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33954,a[2]=((C_word)li492),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_33954 in mm:copy in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33954(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33954,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub5728(t3,t4));}

/* mm:free in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33931(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33931,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33935,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33939,a[2]=((C_word)li490),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t3,t2);}

/* f_33939 in mm:free in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33939(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33939,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5720(C_SCHEME_UNDEFINED,t3));}

/* k33933 in mm:free in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 359  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33461(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_33461r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_33461r(t0,t1,t2);}}

static void C_ccall f_33461r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(8192);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33465,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_33465(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[699]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33790,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[699]);}
else{
t23=t22;
f_33790(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[707]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33825,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[707]);}
else{
t24=t23;
f_33825(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[702]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33860,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[702]);}
else{
t25=t24;
f_33860(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33889,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_33889(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k33887 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33889,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33896,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33904,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33902 in k33887 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33896(2,t2,C_SCHEME_UNDEFINED);}}

/* k33894 in k33887 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33465(t5,t4);}

/* k33858 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33860,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33864,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33864(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33862 in k33858 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33465(t7,t6);}

/* k33823 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33825,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33829,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33829(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33827 in k33823 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33465(t7,t6);}

/* k33788 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33790,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33794,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33794(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33792 in k33788 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33465(t7,t6);}

/* k33463 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_33465(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33465,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33468,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_33468(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[699]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33655,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[699]);}
else{
t6=t5;
f_33655(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[707]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33690,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[707]);}
else{
t7=t6;
f_33690(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[702]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33725,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[702]);}
else{
t8=t7;
f_33725(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33754,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_33754(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33752 in k33463 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33754,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33761,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33769,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33767 in k33752 in k33463 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33761(2,t2,C_SCHEME_UNDEFINED);}}

/* k33759 in k33752 in k33463 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33468(t5,t4);}

/* k33723 in k33463 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33725,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33729,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33729(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33727 in k33723 in k33463 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33468(t7,t6);}

/* k33688 in k33463 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33690,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33694,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33694(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33692 in k33688 in k33463 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33468(t7,t6);}

/* k33653 in k33463 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33655,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33659,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33659(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33657 in k33653 in k33463 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33468(t7,t6);}

/* k33466 in k33463 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_33468(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33468,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33471,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_33471(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[699]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33520,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[699]);}
else{
t6=t5;
f_33520(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[707]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33555,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[707]);}
else{
t7=t6;
f_33555(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[702]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33590,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[702]);}
else{
t8=t7;
f_33590(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33619,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_33619(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33617 in k33466 in k33463 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33619,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33626,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33634,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33632 in k33617 in k33466 in k33463 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33626(2,t2,C_SCHEME_UNDEFINED);}}

/* k33624 in k33617 in k33466 in k33463 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33471(t5,t4);}

/* k33588 in k33466 in k33463 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33590,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33594,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33594(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33592 in k33588 in k33466 in k33463 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33471(t7,t6);}

/* k33553 in k33466 in k33463 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33555,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33559,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33559(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33557 in k33553 in k33466 in k33463 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33471(t7,t6);}

/* k33518 in k33466 in k33463 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33520,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33524,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33524(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33522 in k33518 in k33466 in k33463 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33471(t7,t6);}

/* k33469 in k33466 in k33463 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_33471(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33471,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33474,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_33474(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k33472 in k33469 in k33466 in k33463 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33474,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33478,a[2]=((C_word)li488),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(14),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_33478 in k33472 in k33469 in k33466 in k33463 in mm:make-bend in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33478(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33478,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5697(t7,t8,t9,t10,t11,t12));}

/* mm:press? in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33442(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33442,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33447,a[2]=((C_word)li486),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(13));}

/* f_33447 in mm:press? in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33447(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33447,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5618(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32991(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_32991r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32991r(t0,t1,t2);}}

static void C_ccall f_32991r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32995,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_32995(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[699]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33320,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[699]);}
else{
t23=t22;
f_33320(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[707]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33355,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[707]);}
else{
t24=t23;
f_33355(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[702]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33390,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[702]);}
else{
t25=t24;
f_33390(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33419,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_33419(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k33417 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33419,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33426,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33434,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33432 in k33417 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33426(2,t2,C_SCHEME_UNDEFINED);}}

/* k33424 in k33417 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32995(t5,t4);}

/* k33388 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33390,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33394,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33394(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33392 in k33388 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32995(t7,t6);}

/* k33353 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33355,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33359,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33359(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33357 in k33353 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32995(t7,t6);}

/* k33318 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33320,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33324,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33324(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33322 in k33318 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32995(t7,t6);}

/* k32993 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_32995(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32995,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32998,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32998(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[699]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33185,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[699]);}
else{
t6=t5;
f_33185(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[707]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33220,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[707]);}
else{
t7=t6;
f_33220(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[702]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33255,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[702]);}
else{
t8=t7;
f_33255(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33284,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_33284(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33282 in k32993 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33284,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33291,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33299,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33297 in k33282 in k32993 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33291(2,t2,C_SCHEME_UNDEFINED);}}

/* k33289 in k33282 in k32993 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32998(t5,t4);}

/* k33253 in k32993 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33255,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33259,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33259(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33257 in k33253 in k32993 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32998(t7,t6);}

/* k33218 in k32993 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33220,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33224,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33224(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33222 in k33218 in k32993 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32998(t7,t6);}

/* k33183 in k32993 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33185,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33189,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33189(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33187 in k33183 in k32993 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32998(t7,t6);}

/* k32996 in k32993 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_32998(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32998,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33001,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_33001(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[699]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33050,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[699]);}
else{
t6=t5;
f_33050(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[707]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33085,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[707]);}
else{
t7=t6;
f_33085(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[702]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33120,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[702]);}
else{
t8=t7;
f_33120(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33149,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_33149(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33147 in k32996 in k32993 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33149,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33156,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33164,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33162 in k33147 in k32996 in k32993 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33156(2,t2,C_SCHEME_UNDEFINED);}}

/* k33154 in k33147 in k32996 in k32993 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33001(t5,t4);}

/* k33118 in k32996 in k32993 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33120,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33124,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33124(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33122 in k33118 in k32996 in k32993 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33001(t7,t6);}

/* k33083 in k32996 in k32993 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33085,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33089,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33089(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33087 in k33083 in k32996 in k32993 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33001(t7,t6);}

/* k33048 in k32996 in k32993 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33050,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33054,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33054(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33052 in k33048 in k32996 in k32993 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33001(t7,t6);}

/* k32999 in k32996 in k32993 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_33001(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33001,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33004,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_33004(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k33002 in k32999 in k32996 in k32993 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33004,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33008,a[2]=((C_word)li484),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(13),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_33008 in k33002 in k32999 in k32996 in k32993 in mm:make-press in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_33008(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33008,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5603(t7,t8,t9,t10,t11,t12));}

/* mm:prog? in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32972(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32972,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32977,a[2]=((C_word)li482),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(12));}

/* f_32977 in mm:prog? in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32977(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32977,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5524(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32521(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_32521r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32521r(t0,t1,t2);}}

static void C_ccall f_32521r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32525,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_32525(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[699]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32850,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[699]);}
else{
t23=t22;
f_32850(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[707]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32885,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[707]);}
else{
t24=t23;
f_32885(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[702]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32920,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[702]);}
else{
t25=t24;
f_32920(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32949,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_32949(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k32947 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32949,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32956,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32964,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32962 in k32947 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32956(2,t2,C_SCHEME_UNDEFINED);}}

/* k32954 in k32947 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32525(t5,t4);}

/* k32918 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32920,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32924,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32924(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32922 in k32918 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32525(t7,t6);}

/* k32883 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32885,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32889,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32889(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32887 in k32883 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32525(t7,t6);}

/* k32848 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32850,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32854,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32854(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32852 in k32848 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32525(t7,t6);}

/* k32523 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_32525(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32525,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32528,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32528(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[699]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32715,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[699]);}
else{
t6=t5;
f_32715(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[707]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32750,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[707]);}
else{
t7=t6;
f_32750(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[702]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32785,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[702]);}
else{
t8=t7;
f_32785(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32814,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_32814(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k32812 in k32523 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32814,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32821,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32829,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32827 in k32812 in k32523 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32821(2,t2,C_SCHEME_UNDEFINED);}}

/* k32819 in k32812 in k32523 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32528(t5,t4);}

/* k32783 in k32523 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32785,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32789,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32789(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32787 in k32783 in k32523 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32528(t7,t6);}

/* k32748 in k32523 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32750,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32754,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32754(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32752 in k32748 in k32523 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32528(t7,t6);}

/* k32713 in k32523 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32715,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32719,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32719(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32717 in k32713 in k32523 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32528(t7,t6);}

/* k32526 in k32523 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_32528(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32528,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32531,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32531(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[699]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32580,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[699]);}
else{
t6=t5;
f_32580(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[707]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32615,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[707]);}
else{
t7=t6;
f_32615(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[702]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32650,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[702]);}
else{
t8=t7;
f_32650(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32679,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_32679(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k32677 in k32526 in k32523 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32679,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32686,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32694,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32692 in k32677 in k32526 in k32523 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32686(2,t2,C_SCHEME_UNDEFINED);}}

/* k32684 in k32677 in k32526 in k32523 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32531(t5,t4);}

/* k32648 in k32526 in k32523 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32650,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32654,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32654(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32652 in k32648 in k32526 in k32523 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32531(t7,t6);}

/* k32613 in k32526 in k32523 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32615,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32619,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32619(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32617 in k32613 in k32526 in k32523 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32531(t7,t6);}

/* k32578 in k32526 in k32523 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32580,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32584,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32584(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32582 in k32578 in k32526 in k32523 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32531(t7,t6);}

/* k32529 in k32526 in k32523 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_32531(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32531,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32534,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_32534(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k32532 in k32529 in k32526 in k32523 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32534,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32538,a[2]=((C_word)li480),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(12),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_32538 in k32532 in k32529 in k32526 in k32523 in mm:make-prog in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32538(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_32538,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5509(t7,t8,t9,t10,t11,t12));}

/* mm:ctrl? in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32502(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32502,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32507,a[2]=((C_word)li478),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(11));}

/* f_32507 in mm:ctrl? in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32507(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32507,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5430(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31773(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_31773r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_31773r(t0,t1,t2);}}

static void C_ccall f_31773r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31777,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_31777(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[699]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32345,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[699]);}
else{
t27=t26;
f_32345(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[710]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32380,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[710]);}
else{
t28=t27;
f_32380(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[707]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32415,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[707]);}
else{
t29=t28;
f_32415(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[702]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32450,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[702]);}
else{
t30=t29;
f_32450(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32479,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_32479(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k32477 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32479,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32486,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32494,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32492 in k32477 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32486(2,t2,C_SCHEME_UNDEFINED);}}

/* k32484 in k32477 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31777(t5,t4);}

/* k32448 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32450,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32454,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32454(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32452 in k32448 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31777(t7,t6);}

/* k32413 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32415,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32419,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32419(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32417 in k32413 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31777(t7,t6);}

/* k32378 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32380,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32384,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32384(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32382 in k32378 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31777(t7,t6);}

/* k32343 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32345,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32349,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32349(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32347 in k32343 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31777(t7,t6);}

/* k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_31777(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31777,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31780,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_31780(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[699]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32175,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[699]);}
else{
t6=t5;
f_32175(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[710]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32210,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[710]);}
else{
t7=t6;
f_32210(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[707]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32245,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[707]);}
else{
t8=t7;
f_32245(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[702]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32280,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[702]);}
else{
t9=t8;
f_32280(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32309,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_32309(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k32307 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32309,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32316,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32324,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32322 in k32307 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32316(2,t2,C_SCHEME_UNDEFINED);}}

/* k32314 in k32307 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31780(t5,t4);}

/* k32278 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32280,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32284,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32284(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32282 in k32278 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31780(t7,t6);}

/* k32243 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32245,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32249,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32249(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32247 in k32243 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31780(t7,t6);}

/* k32208 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32210,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32214,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32214(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32212 in k32208 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31780(t7,t6);}

/* k32173 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32175,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32179,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32179(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32177 in k32173 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31780(t7,t6);}

/* k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_31780(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31780,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31783,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_31783(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[699]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32005,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[699]);}
else{
t6=t5;
f_32005(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[710]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32040,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[710]);}
else{
t7=t6;
f_32040(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[707]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32075,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[707]);}
else{
t8=t7;
f_32075(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[702]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32110,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[702]);}
else{
t9=t8;
f_32110(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32139,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_32139(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k32137 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32139,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32146,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32154,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32152 in k32137 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32146(2,t2,C_SCHEME_UNDEFINED);}}

/* k32144 in k32137 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31783(t5,t4);}

/* k32108 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32110,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32114,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32114(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32112 in k32108 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31783(t7,t6);}

/* k32073 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32075,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32079,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32079(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32077 in k32073 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31783(t7,t6);}

/* k32038 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32040,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32044,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32044(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32042 in k32038 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31783(t7,t6);}

/* k32003 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32005,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32009,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32009(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32007 in k32003 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_32009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31783(t7,t6);}

/* k31781 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_31783(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31783,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31786,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_31786(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[699]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31835,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[699]);}
else{
t6=t5;
f_31835(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[710]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31870,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[710]);}
else{
t7=t6;
f_31870(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[707]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31905,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[707]);}
else{
t8=t7;
f_31905(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[702]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31940,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[702]);}
else{
t9=t8;
f_31940(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31969,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_31969(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k31967 in k31781 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31969,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31976,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31984,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31982 in k31967 in k31781 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31976(2,t2,C_SCHEME_UNDEFINED);}}

/* k31974 in k31967 in k31781 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31786(t5,t4);}

/* k31938 in k31781 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31940,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31944,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31944(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31942 in k31938 in k31781 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31786(t7,t6);}

/* k31903 in k31781 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31905,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31909,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31909(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31907 in k31903 in k31781 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31786(t7,t6);}

/* k31868 in k31781 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31870,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31874,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31874(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31872 in k31868 in k31781 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31786(t7,t6);}

/* k31833 in k31781 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31835,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31839,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31839(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31837 in k31833 in k31781 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31786(t7,t6);}

/* k31784 in k31781 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_31786(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31786,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31789,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_31789(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k31787 in k31784 in k31781 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31789,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31793,a[2]=((C_word)li476),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(11),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_31793 in k31787 in k31784 in k31781 in k31778 in k31775 in mm:make-ctrl in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31793(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31793,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5414(t7,t8,t9,t10,t11,t12));}

/* mm:touch? in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31754(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31754,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31759,a[2]=((C_word)li474),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(10));}

/* f_31759 in mm:touch? in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31759(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31759,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5298(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31025(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_31025r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_31025r(t0,t1,t2);}}

static void C_ccall f_31025r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31029,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_31029(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[699]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31597,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[699]);}
else{
t27=t26;
f_31597(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[700]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31632,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[700]);}
else{
t28=t27;
f_31632(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[707]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31667,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[707]);}
else{
t29=t28;
f_31667(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[702]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31702,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[702]);}
else{
t30=t29;
f_31702(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31731,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_31731(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k31729 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31731,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31738,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31746,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31744 in k31729 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31738(2,t2,C_SCHEME_UNDEFINED);}}

/* k31736 in k31729 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31029(t5,t4);}

/* k31700 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31702,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31706,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31706(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31704 in k31700 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31029(t7,t6);}

/* k31665 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31667,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31671,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31671(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31669 in k31665 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31029(t7,t6);}

/* k31630 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31632,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31636,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31636(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31634 in k31630 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31029(t7,t6);}

/* k31595 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31597,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31601,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31601(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31599 in k31595 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31029(t7,t6);}

/* k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_31029(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31029,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31032,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_31032(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[699]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31427,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[699]);}
else{
t6=t5;
f_31427(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[700]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31462,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[700]);}
else{
t7=t6;
f_31462(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[707]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31497,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[707]);}
else{
t8=t7;
f_31497(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[702]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31532,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[702]);}
else{
t9=t8;
f_31532(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31561,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_31561(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k31559 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31561,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31568,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31576,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31574 in k31559 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31568(2,t2,C_SCHEME_UNDEFINED);}}

/* k31566 in k31559 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31032(t5,t4);}

/* k31530 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31532,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31536,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31536(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31534 in k31530 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31032(t7,t6);}

/* k31495 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31497,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31501,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31501(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31499 in k31495 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31032(t7,t6);}

/* k31460 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31462,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31466,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31466(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31464 in k31460 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31032(t7,t6);}

/* k31425 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31427,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31431,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31431(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31429 in k31425 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31032(t7,t6);}

/* k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_31032(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31032,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31035,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_31035(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[699]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31257,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[699]);}
else{
t6=t5;
f_31257(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[700]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31292,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[700]);}
else{
t7=t6;
f_31292(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[707]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31327,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[707]);}
else{
t8=t7;
f_31327(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[702]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31362,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[702]);}
else{
t9=t8;
f_31362(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31391,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_31391(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k31389 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31391,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31398,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31406,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31404 in k31389 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31398(2,t2,C_SCHEME_UNDEFINED);}}

/* k31396 in k31389 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31035(t5,t4);}

/* k31360 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31362,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31366,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31366(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31364 in k31360 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31035(t7,t6);}

/* k31325 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31327,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31331,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31331(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31329 in k31325 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31035(t7,t6);}

/* k31290 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31292,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31296,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31296(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31294 in k31290 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31035(t7,t6);}

/* k31255 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31257,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31261,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31261(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31259 in k31255 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31035(t7,t6);}

/* k31033 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_31035(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31035,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31038,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_31038(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[699]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31087,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[699]);}
else{
t6=t5;
f_31087(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[700]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31122,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[700]);}
else{
t7=t6;
f_31122(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[707]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31157,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[707]);}
else{
t8=t7;
f_31157(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[702]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31192,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[702]);}
else{
t9=t8;
f_31192(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31221,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_31221(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k31219 in k31033 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31221,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31228,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31236,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31234 in k31219 in k31033 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31228(2,t2,C_SCHEME_UNDEFINED);}}

/* k31226 in k31219 in k31033 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31038(t5,t4);}

/* k31190 in k31033 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31192,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31196,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31196(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31194 in k31190 in k31033 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31038(t7,t6);}

/* k31155 in k31033 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31157,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31161,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31161(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31159 in k31155 in k31033 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31038(t7,t6);}

/* k31120 in k31033 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31122,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31126,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31126(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31124 in k31120 in k31033 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31038(t7,t6);}

/* k31085 in k31033 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31087,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31091,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31091(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31089 in k31085 in k31033 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31038(t7,t6);}

/* k31036 in k31033 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_31038(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31038,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31041,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_31041(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k31039 in k31036 in k31033 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31041,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31045,a[2]=((C_word)li472),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(10),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_31045 in k31039 in k31036 in k31033 in k31030 in k31027 in mm:make-touch in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31045(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31045,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5282(t7,t8,t9,t10,t11,t12));}

/* mm:off? in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31006(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31006,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31011,a[2]=((C_word)li470),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(8));}

/* f_31011 in mm:off? in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_31011(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31011,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5166(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30555(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_30555r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_30555r(t0,t1,t2);}}

static void C_ccall f_30555r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_30559,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_30559(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[699]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30884,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[699]);}
else{
t23=t22;
f_30884(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[700]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30919,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[700]);}
else{
t24=t23;
f_30919(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[702]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30954,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[702]);}
else{
t25=t24;
f_30954(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30983,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_30983(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k30981 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30983,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30990,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30998,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30996 in k30981 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30990(2,t2,C_SCHEME_UNDEFINED);}}

/* k30988 in k30981 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30559(t5,t4);}

/* k30952 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30954,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30958,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30958(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30956 in k30952 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30559(t7,t6);}

/* k30917 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30919,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30923,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30923(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30921 in k30917 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30559(t7,t6);}

/* k30882 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30884,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30888,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30888(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30886 in k30882 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30559(t7,t6);}

/* k30557 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_30559(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30559,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_30562,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_30562(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[699]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30749,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[699]);}
else{
t6=t5;
f_30749(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[700]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30784,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[700]);}
else{
t7=t6;
f_30784(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[702]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30819,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[702]);}
else{
t8=t7;
f_30819(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30848,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_30848(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k30846 in k30557 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30848,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30855,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30863,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30861 in k30846 in k30557 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30855(2,t2,C_SCHEME_UNDEFINED);}}

/* k30853 in k30846 in k30557 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30562(t5,t4);}

/* k30817 in k30557 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30819,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30823,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30823(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30821 in k30817 in k30557 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30562(t7,t6);}

/* k30782 in k30557 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30784,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30788,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30788(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30786 in k30782 in k30557 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30562(t7,t6);}

/* k30747 in k30557 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30749,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30753,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30753(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30751 in k30747 in k30557 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30562(t7,t6);}

/* k30560 in k30557 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_30562(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30562,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30565,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_30565(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[699]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30614,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[699]);}
else{
t6=t5;
f_30614(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[700]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30649,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[700]);}
else{
t7=t6;
f_30649(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[702]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30684,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[702]);}
else{
t8=t7;
f_30684(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30713,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_30713(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k30711 in k30560 in k30557 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30713,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30720,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30728,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30726 in k30711 in k30560 in k30557 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30720(2,t2,C_SCHEME_UNDEFINED);}}

/* k30718 in k30711 in k30560 in k30557 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30565(t5,t4);}

/* k30682 in k30560 in k30557 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30684,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30688,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30688(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30686 in k30682 in k30560 in k30557 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30565(t7,t6);}

/* k30647 in k30560 in k30557 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30649,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30653,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30653(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30651 in k30647 in k30560 in k30557 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30565(t7,t6);}

/* k30612 in k30560 in k30557 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30614,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30618,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30618(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30616 in k30612 in k30560 in k30557 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30565(t7,t6);}

/* k30563 in k30560 in k30557 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_30565(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30565,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30568,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_30568(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k30566 in k30563 in k30560 in k30557 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30568,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30572,a[2]=((C_word)li468),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(8),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_30572 in k30566 in k30563 in k30560 in k30557 in mm:make-off in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30572(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_30572,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5151(t7,t8,t9,t10,t11,t12));}

/* mm:on? in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30536(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30536,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30541,a[2]=((C_word)li466),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(9));}

/* f_30541 in mm:on? in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30541(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30541,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5072(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29807(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_29807r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_29807r(t0,t1,t2);}}

static void C_ccall f_29807r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(64);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_29811,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_29811(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[699]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30379,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[699]);}
else{
t27=t26;
f_30379(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[700]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30414,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[700]);}
else{
t28=t27;
f_30414(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[701]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30449,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[701]);}
else{
t29=t28;
f_30449(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[702]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30484,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[702]);}
else{
t30=t29;
f_30484(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30513,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_30513(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k30511 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30513,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30520,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30528,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30526 in k30511 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30520(2,t2,C_SCHEME_UNDEFINED);}}

/* k30518 in k30511 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29811(t5,t4);}

/* k30482 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30484,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30488,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30488(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30486 in k30482 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29811(t7,t6);}

/* k30447 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30449,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30453,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30453(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30451 in k30447 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29811(t7,t6);}

/* k30412 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30414,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30418,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30418(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30416 in k30412 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29811(t7,t6);}

/* k30377 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30379,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30383,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30383(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30381 in k30377 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29811(t7,t6);}

/* k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_29811(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29811,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_29814,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_29814(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[699]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30209,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[699]);}
else{
t6=t5;
f_30209(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[700]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30244,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[700]);}
else{
t7=t6;
f_30244(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[701]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30279,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[701]);}
else{
t8=t7;
f_30279(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[702]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30314,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[702]);}
else{
t9=t8;
f_30314(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30343,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_30343(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k30341 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30343,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30350,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30358,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30356 in k30341 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30350(2,t2,C_SCHEME_UNDEFINED);}}

/* k30348 in k30341 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29814(t5,t4);}

/* k30312 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30314,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30318,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30318(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30316 in k30312 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29814(t7,t6);}

/* k30277 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30279,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30283,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30283(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30281 in k30277 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29814(t7,t6);}

/* k30242 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30244,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30248,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30248(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30246 in k30242 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29814(t7,t6);}

/* k30207 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30209,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30213,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30213(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30211 in k30207 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29814(t7,t6);}

/* k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_29814(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29814,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_29817,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_29817(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[699]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30039,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[699]);}
else{
t6=t5;
f_30039(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[700]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30074,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[700]);}
else{
t7=t6;
f_30074(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[701]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30109,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[701]);}
else{
t8=t7;
f_30109(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[702]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30144,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[702]);}
else{
t9=t8;
f_30144(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30173,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_30173(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k30171 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30173,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30180,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30188,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30186 in k30171 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30180(2,t2,C_SCHEME_UNDEFINED);}}

/* k30178 in k30171 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29817(t5,t4);}

/* k30142 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30144,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30148,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30148(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30146 in k30142 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29817(t7,t6);}

/* k30107 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30109,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30113,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30113(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30111 in k30107 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29817(t7,t6);}

/* k30072 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30074,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30078,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30078(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30076 in k30072 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29817(t7,t6);}

/* k30037 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30039,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30043,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30043(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30041 in k30037 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29817(t7,t6);}

/* k29815 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_29817(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29817,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29820,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_29820(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[699]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29869,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[699]);}
else{
t6=t5;
f_29869(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[700]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29904,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[700]);}
else{
t7=t6;
f_29904(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[701]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29939,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[701]);}
else{
t8=t7;
f_29939(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[702]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29974,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[702]);}
else{
t9=t8;
f_29974(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30003,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_30003(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k30001 in k29815 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30003,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30010,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30018,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30016 in k30001 in k29815 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30010(2,t2,C_SCHEME_UNDEFINED);}}

/* k30008 in k30001 in k29815 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_30010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29820(t5,t4);}

/* k29972 in k29815 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29974,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29978,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29978(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29976 in k29972 in k29815 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29820(t7,t6);}

/* k29937 in k29815 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29939,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29943,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29943(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29941 in k29937 in k29815 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29820(t7,t6);}

/* k29902 in k29815 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29904,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29908,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29908(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29906 in k29902 in k29815 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29820(t7,t6);}

/* k29867 in k29815 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29869,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29873,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29873(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29871 in k29867 in k29815 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29820(t7,t6);}

/* k29818 in k29815 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_29820(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29820,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29823,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_29823(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k29821 in k29818 in k29815 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29823,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29827,a[2]=((C_word)li464),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(9),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_29827 in k29821 in k29818 in k29815 in k29812 in k29809 in mm:make-on in k29661 in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29827(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_29827,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5056(t7,t8,t9,t10,t11,t12));}

/* parse-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_29469(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29469,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29477,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29309,a[2]=t4,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t8)){
t10=t9;
f_29309(t10,t8);}
else{
t10=(C_word)C_i_car(((C_word*)t7)[1]);
t11=(C_word)C_i_symbolp(t10);
t12=t9;
f_29309(t12,(C_word)C_i_not(t11));}}

/* k29307 in parse-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_29309(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29309,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29316,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 358  make-loop-clause");
f_26253(t2,(C_word)C_a_i_list(&a,4,lf[518],lf[688],lf[523],((C_word*)((C_word*)t0)[3])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29317,a[2]=((C_word)li459),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29342,a[2]=t6,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29344,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t9,a[5]=t6,a[6]=t4,a[7]=((C_word*)t0)[3],a[8]=((C_word)li462),tmp=(C_word)a,a+=9,tmp));
t11=((C_word*)t9)[1];
f_29344(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do4854 in k29307 in parse-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_29344(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29344,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29354,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t9,a[5]=t7,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t8,a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[6],a[12]=t6,tmp=(C_word)a,a+=13,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t12=(C_word)C_eqp(t11,lf[432]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[7])+1,t14);
t16=t10;
f_29354(t16,t13);}
else{
t13=t10;
f_29354(t13,C_SCHEME_UNDEFINED);}}}

/* k29352 in do4854 in k29307 in parse-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_29354(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29354,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29358,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 358  loop-op?");
f_26475(t2,t3,((C_word*)t0)[3]);}

/* k29356 in k29352 in do4854 in k29307 in parse-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29358,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29361,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t4=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t4)){
t5=t3;
f_29361(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,3,lf[693],t5,lf[694]));}}

/* k29359 in k29356 in k29352 in do4854 in k29307 in parse-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29361,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29364,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29413,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[6],a[6]=((C_word)li460),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29422,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[5],a[4]=((C_word)li461),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 358  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a29421 in k29359 in k29356 in k29352 in do4854 in k29307 in parse-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29422(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29422,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a29412 in k29359 in k29356 in k29352 in do4854 in k29307 in parse-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29413,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k29362 in k29359 in k29356 in k29352 in do4854 in k29307 in parse-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_29367,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29383,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 358  op-type?");
f_29317(t3,((C_word*)((C_word*)t0)[6])[1],lf[679]);}

/* k29381 in k29362 in k29359 in k29356 in k29352 in do4854 in k29307 in parse-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29383,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=((C_word*)t0)[5];
f_29367(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29390,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 358  op-type?");
f_29317(t2,((C_word*)((C_word*)t0)[6])[1],lf[692]);}}

/* k29388 in k29381 in k29362 in k29359 in k29356 in k29352 in do4854 in k29307 in parse-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29390,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t2=((C_word*)t0)[5];
f_29367(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[689],t2,lf[690],t3,lf[691]));}}
else{
t2=((C_word*)t0)[5];
f_29367(2,t2,C_SCHEME_UNDEFINED);}}

/* k29365 in k29362 in k29359 in k29356 in k29352 in do4854 in k29307 in parse-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29367,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29373,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 358  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k29371 in k29365 in k29362 in k29359 in k29356 in k29352 in do4854 in k29307 in parse-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_29344(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k29340 in k29307 in parse-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_29477(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k29307 in parse-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_29317(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29317,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k29314 in k29307 in parse-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29316,2,t0,t1);}
t2=((C_word*)t0)[2];
f_29477(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k29475 in parse-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_29477(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 358  gather-clauses");
f_26404(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29055(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29055,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[682],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29077,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[685],t8,lf[686]));}
else{
t19=t17;
f_29077(2,t19,C_SCHEME_UNDEFINED);}}

/* k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29077,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29092,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[684]));}
else{
t9=t8;
f_29092(2,t9,C_SCHEME_UNDEFINED);}}

/* k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29092,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_29095,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[6]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[434],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_29095(t6,t5);}
else{
t4=t2;
f_29095(t4,C_SCHEME_UNDEFINED);}}

/* k29093 in k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_29095(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29095,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_29098,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29265,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li456),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29271,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li457),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 358  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a29270 in k29093 in k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29271(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29271,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a29264 in k29093 in k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29265,2,t0,t1);}
C_trace("ChickenBridge.scm: 358  parse-then-else-dependents");
f_28924(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29096 in k29093 in k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29098,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_29101,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_29101(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29247,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  gather-clauses");
f_26404(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k29245 in k29096 in k29093 in k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_29101(t3,t2);}

/* k29099 in k29096 in k29093 in k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_29101(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29101,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_29104,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 358  loop-operator-set!");
f_26151(t2,((C_word*)((C_word*)t0)[7])[1],lf[20]);}

/* k29102 in k29099 in k29096 in k29093 in k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29104,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_29228,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29240,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 358  loop-looping");
t4=C_retrieve2(lf[512],"loop-looping");
f_26205(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k29238 in k29102 in k29099 in k29096 in k29093 in k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29240,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[460],t1);
C_trace("ChickenBridge.scm: 358  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k29226 in k29102 in k29099 in k29096 in k29093 in k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29228,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29111,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_29124,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_29124(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_29124(t7,(C_word)C_eqp(t6,lf[16]));}}

/* k29122 in k29226 in k29102 in k29099 in k29096 in k29093 in k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_29124(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29124,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29131,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[683]));}
else{
t5=t4;
f_29131(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_29111(t2,C_SCHEME_UNDEFINED);}}

/* k29129 in k29122 in k29226 in k29102 in k29099 in k29096 in k29093 in k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29131,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29134,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29187,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li454),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29201,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li455),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 358  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a29200 in k29129 in k29122 in k29226 in k29102 in k29099 in k29096 in k29093 in k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29201(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29201,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a29186 in k29129 in k29122 in k29226 in k29102 in k29099 in k29096 in k29093 in k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29187,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29195,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 358  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k29193 in a29186 in k29129 in k29122 in k29226 in k29102 in k29099 in k29096 in k29093 in k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 358  parse-then-else-dependents");
f_28924(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k29132 in k29129 in k29122 in k29226 in k29102 in k29099 in k29096 in k29093 in k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29134,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29137,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_29137(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29173,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  gather-clauses");
f_26404(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k29171 in k29132 in k29129 in k29122 in k29226 in k29102 in k29099 in k29096 in k29093 in k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_29137(t3,t2);}

/* k29135 in k29132 in k29129 in k29122 in k29226 in k29102 in k29099 in k29096 in k29093 in k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_29137(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29137,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29166,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 358  loop-looping");
t4=C_retrieve2(lf[512],"loop-looping");
f_26205(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k29164 in k29135 in k29132 in k29129 in k29122 in k29226 in k29102 in k29099 in k29096 in k29093 in k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29166,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[460],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29143,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 358  loop-looping-set!");
f_26211(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k29141 in k29164 in k29135 in k29132 in k29129 in k29122 in k29226 in k29102 in k29099 in k29096 in k29093 in k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29143,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29146,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 358  loop-looping-set!");
f_26211(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k29144 in k29141 in k29164 in k29135 in k29132 in k29129 in k29122 in k29226 in k29102 in k29099 in k29096 in k29093 in k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29146,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29150,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 358  gather-clauses");
f_26404(t2,lf[20],t3);}

/* k29148 in k29144 in k29141 in k29164 in k29135 in k29132 in k29129 in k29122 in k29226 in k29102 in k29099 in k29096 in k29093 in k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_29111(t3,t2);}

/* k29109 in k29226 in k29102 in k29099 in k29096 in k29093 in k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_29111(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29111,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29114,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 358  loop-looping-set!");
f_26211(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k29112 in k29109 in k29226 in k29102 in k29099 in k29096 in k29093 in k29090 in k29075 in parse-conditional in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 358  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_28924(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28924,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28928,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28933,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li452),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_28933(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do4787 in parse-then-else-dependents in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_28933(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28933,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28881,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 358  loop-op?");
f_26475(t12,t10,t11);}}

/* k28879 in do4787 in parse-then-else-dependents in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28881,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28887,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_28887(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[679]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[680]);
t8=t2;
f_28887(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_28887(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_28887(t3,C_SCHEME_FALSE);}}

/* k28885 in k28879 in do4787 in parse-then-else-dependents in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_28887(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28887,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28950,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_28950(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[677],t6,lf[678]));}}

/* k28948 in k28885 in k28879 in do4787 in parse-then-else-dependents in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28950,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28953,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29023,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li450),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29036,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li451),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 358  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a29035 in k28948 in k28885 in k28879 in do4787 in parse-then-else-dependents in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29036(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29036,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a29022 in k28948 in k28885 in k28879 in do4787 in parse-then-else-dependents in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29023,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29031,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 358  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k29029 in a29022 in k28948 in k28885 in k28879 in do4787 in parse-then-else-dependents in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k28951 in k28948 in k28885 in k28879 in do4787 in parse-then-else-dependents in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28953,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28957,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 358  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k28955 in k28951 in k28948 in k28885 in k28879 in do4787 in parse-then-else-dependents in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28957,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28962,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_28962(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[432]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[676]));}
else{
t10=t5;
f_28962(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[16]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_28962(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29000,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 358  loop-op?");
f_26475(t10,t11,((C_word*)t0)[3]);}}}}

/* k28998 in k28955 in k28951 in k28948 in k28885 in k28879 in do4787 in parse-then-else-dependents in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_29000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_28962(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_28962(2,t2,C_SCHEME_UNDEFINED);}}

/* k28960 in k28955 in k28951 in k28948 in k28885 in k28879 in do4787 in parse-then-else-dependents in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_28933(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k28926 in parse-then-else-dependents in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 358  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28823(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28823,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28830,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[673],t13,lf[674]));}
else{
t13=t11;
f_28830(2,t13,C_SCHEME_UNDEFINED);}}

/* k28828 in parse-return in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28830,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28861,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 358  loop-op?");
f_26475(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k28859 in k28828 in parse-return in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28861,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28849,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28857,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 358  func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k28855 in k28859 in k28828 in parse-return in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28857,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 358  make-loop-clause");
f_26253(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[518],lf[659],lf[523],t2));}

/* k28847 in k28859 in k28828 in parse-return in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 358  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28732(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28732,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28739,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[670],t15,lf[671]));}
else{
t15=t13;
f_28739(2,t15,C_SCHEME_UNDEFINED);}}

/* k28737 in parse-thereis in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28739,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28807,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 358  loop-op?");
f_26475(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k28805 in k28737 in parse-thereis in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28807,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28750,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[667]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_28750(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[668]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[434],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_28750(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[669]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_28750(t9,t8);}
else{
t8=t4;
f_28750(t8,C_SCHEME_UNDEFINED);}}}}

/* k28748 in k28805 in k28737 in parse-thereis in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_28750(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28750,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28761,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28777,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 358  func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k28775 in k28748 in k28805 in k28737 in parse-thereis in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28777,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 358  make-loop-clause");
f_26253(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[518],lf[667],lf[523],t3,lf[526],t4));}

/* k28759 in k28748 in k28805 in k28737 in parse-thereis in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 358  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28666(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28666,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28677,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[664],t7,lf[665]));}
else{
t13=t12;
f_28677(2,t13,C_SCHEME_UNDEFINED);}}

/* k28675 in parse-while-until in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28677,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28680,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[662]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_28680(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[663]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[434],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_28680(t10,t9);}
else{
t5=t2;
f_28680(t5,C_SCHEME_UNDEFINED);}}}

/* k28678 in k28675 in parse-while-until in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_28680(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28680,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28687,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],lf[661]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 358  make-loop-clause");
f_26253(t2,(C_word)C_a_i_list(&a,4,lf[518],((C_word*)t0)[2],lf[523],t4));}

/* k28685 in k28678 in k28675 in parse-while-until in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 358  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28660(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28660,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[659],t2));}

/* parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28114(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28114,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28123,a[2]=((C_word)li440),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28128,a[2]=((C_word)li441),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28133,a[2]=((C_word)li442),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_28145,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[656],t7,lf[657]));}
else{
t30=t29;
f_28145(2,t30,C_SCHEME_UNDEFINED);}}

/* k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28145,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_28156,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_28156(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[652]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28609,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[655]));}
else{
t11=t9;
f_28609(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_28156(2,t9,C_SCHEME_UNDEFINED);}}}

/* k28607 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28609,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28615,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 358  loop-variable?");
f_26481(t2,t3);}

/* k28613 in k28607 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28615,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_28156(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[653],t2,lf[654]));}}

/* k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28156,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_28160,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28041,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li444),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_28041(t9,t2,C_SCHEME_FALSE);}

/* do4609 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_28041(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28041,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28055,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28066,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 358  loop-collectors");
t9=C_retrieve2(lf[509],"loop-collectors");
f_26169(3,t9,t7,t8);}}

/* k28064 in do4609 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28066,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28001,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li443),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_28001(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do4601 in k28064 in do4609 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_28001(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28001,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28014,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_28014(t12,t11);}
else{
t10=t6;
f_28014(t10,C_SCHEME_UNDEFINED);}}}

/* k28012 in do4601 in k28064 in do4609 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_28014(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_28001(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k28053 in do4609 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_28041(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28160,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_28163,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28593,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28597,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  collector-type");
f_28128(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_28163(2,t6,t5);}}

/* k28595 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[649];
t3=lf[650];
t4=lf[651];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_28593(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_28593(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_28593(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_28593(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k28591 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_28593(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28593,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_28163(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28589,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 358  collector-type");
f_28128(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28587 in k28591 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28589,2,t0,t1);}
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[646],t1,lf[647],((C_word*)t0)[2],lf[648]));}

/* k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28163,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28166,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[630]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[631]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28209,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28247,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_28247(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 358  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[632]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28276,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  collector-acc");
f_28133(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[633]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[634]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28288,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 358  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[636]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[18]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28383,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_28383(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[640]);
t10=t8;
f_28383(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[645])));}}}}

/* k28381 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_28383(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28383,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28386,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28499,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28557,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  make-binding");
f_26487(t9,((C_word*)((C_word*)t0)[13])[1],lf[644]);}
else{
t9=t8;
f_28499(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28492,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 358  collector-acc");
f_28133(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_28166(t2,C_SCHEME_UNDEFINED);}}

/* k28490 in k28381 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_28386(t6,t5);}

/* k28555 in k28381 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28557,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_28499(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k28497 in k28381 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_28499(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28499,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28503,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 358  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[643]);}

/* k28501 in k28497 in k28381 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28503,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28507,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 358  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[642]);}

/* k28505 in k28501 in k28497 in k28381 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28507,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28549,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 358  make-binding");
f_26487(t3,((C_word*)((C_word*)t0)[11])[1],lf[641]);}

/* k28547 in k28505 in k28501 in k28497 in k28381 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28549,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28545,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 358  make-binding");
f_26487(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k28543 in k28547 in k28505 in k28501 in k28497 in k28381 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28545,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28523,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 358  make-collector");
f_28123(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k28521 in k28543 in k28547 in k28505 in k28501 in k28497 in k28381 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28523,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_28386(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_28386(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28384 in k28381 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_28386(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28386,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28389,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[18]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[637]);
t5=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[638],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[639],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_28389(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[640]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[637],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[638],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_28389(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[638],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[639],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_28389(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k28387 in k28384 in k28381 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_28389(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28389,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_28166(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_28166(t2,C_SCHEME_UNDEFINED);}}

/* k28286 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28288,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[633]);
t3=(C_truep(t2)?lf[385]:lf[463]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28294,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28338,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_28338(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 358  gensym");
t9=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[635]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28371,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  collector-acc");
f_28133(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k28369 in k28286 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28294(t3,t2);}

/* k28336 in k28286 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28338,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28364,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 358  make-binding");
f_26487(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k28362 in k28336 in k28286 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28364,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28346,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 358  make-collector");
f_28123(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k28344 in k28362 in k28336 in k28286 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28346,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_28294(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[433],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_28294(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28292 in k28286 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_28294(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28294,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28334,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 358  make-binding");
f_26487(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k28332 in k28292 in k28286 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28334,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[434],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[433],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[20],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[460],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_28166(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k28274 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28209(t3,t2);}

/* k28245 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28247,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28269,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 358  make-binding");
f_26487(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k28267 in k28245 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28269,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28255,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 358  make-collector");
f_28123(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k28253 in k28267 in k28245 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28255,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_28209(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_28209(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28207 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_28209(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28209,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[630]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[113],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28166(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[113],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_28166(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k28164 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_28166(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28166,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28173,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28177,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 358  reverse");
t4=*((C_word*)lf[203]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k28175 in k28164 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28177,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28181,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 358  reverse");
t3=*((C_word*)lf[203]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k28179 in k28175 in k28164 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28181,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28185,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 358  reverse");
t3=*((C_word*)lf[203]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k28183 in k28179 in k28175 in k28164 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28185,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28189,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 358  reverse");
t3=*((C_word*)lf[203]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k28187 in k28183 in k28179 in k28175 in k28164 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28189,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 358  make-loop-clause");
f_26253(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[518],((C_word*)t0)[5],lf[519],((C_word*)t0)[4],lf[521],((C_word*)t0)[3],lf[523],((C_word*)t0)[2],lf[526],t1,lf[520],t2,lf[522],C_SCHEME_END_OF_LIST));}

/* k28171 in k28164 in k28161 in k28158 in k28154 in k28143 in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_28173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 358  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_28133(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28133,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_28128(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28128,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_28123(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28123,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27955(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27955,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27966,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[627],t6,lf[628]));}
else{
t12=t11;
f_27966(2,t12,C_SCHEME_UNDEFINED);}}

/* k27964 in parse-initially in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27966,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27981,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 358  make-loop-clause");
f_26253(t6,(C_word)C_a_i_list(&a,4,lf[518],((C_word*)t0)[2],lf[521],t7));}

/* k27979 in k27964 in parse-initially in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 358  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27917(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27917,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27928,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[624],t6,lf[625]));}
else{
t12=t11;
f_27928(2,t12,C_SCHEME_UNDEFINED);}}

/* k27926 in parse-finally in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27928,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27943,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 358  make-loop-clause");
f_26253(t6,(C_word)C_a_i_list(&a,4,lf[518],((C_word*)t0)[2],lf[525],t7));}

/* k27941 in k27926 in parse-finally in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 358  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27850(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27850,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27861,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27870,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li436),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_27870(t16,t12);}

/* do4558 in parse-do in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_27870(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27870,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27880,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_27880(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 358  loop-op?");
f_26475(t3,t4,((C_word*)t0)[5]);}}

/* k27878 in do4558 in parse-do in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27880,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[621],((C_word*)t0)[4],lf[622]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27893,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  reverse");
t3=*((C_word*)lf[203]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_27870(t7,((C_word*)t0)[7]);}}

/* k27891 in k27878 in do4558 in parse-do in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k27859 in parse-do in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27861,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27868,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  make-loop-clause");
f_26253(t2,(C_word)C_a_i_list(&a,4,lf[518],((C_word*)t0)[3],lf[523],((C_word*)((C_word*)t0)[2])[1]));}

/* k27866 in k27859 in parse-do in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 358  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27657(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27657,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27664,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27717,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li434),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_27717(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do4514 in parse-with in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_27717(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27717,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27727,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_27727(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 358  loop-op?");
f_26475(t7,t8,((C_word*)t0)[5]);}}

/* k27725 in do4514 in parse-with in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27727,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27738,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27841,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 358  loop-variable?");
f_26481(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k27839 in k27725 in do4514 in parse-with in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27841,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27747,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[611],((C_word*)((C_word*)t0)[10])[1],lf[612]));}
else{
t4=t3;
f_27747(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[432]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27769,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[613]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27798,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 358  make-binding");
f_26487(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27806,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  make-binding");
f_26487(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[614]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[442]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[615]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_27738(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[616],((C_word*)((C_word*)t0)[10])[1],lf[617]));}
else{
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[618],((C_word*)((C_word*)t0)[10])[1],lf[619]));}}}}}

/* k27804 in k27839 in k27725 in do4514 in parse-with in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27806,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27769(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k27796 in k27839 in k27725 in do4514 in parse-with in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27798,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27769(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k27767 in k27839 in k27725 in do4514 in parse-with in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_27738(2,t6,t5);}

/* k27745 in k27839 in k27725 in do4514 in parse-with in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27747,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27750,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[609],((C_word*)((C_word*)t0)[8])[1],lf[610]));}
else{
t3=t2;
f_27750(2,t3,C_SCHEME_UNDEFINED);}}

/* k27748 in k27745 in k27839 in k27725 in do4514 in parse-with in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_27738(2,t6,t5);}

/* k27736 in k27725 in do4514 in parse-with in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_27717(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k27662 in parse-with in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27664,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27667,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[608]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27707,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 358  make-binding");
f_26487(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27715,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  make-binding");
f_26487(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_27667(2,t3,C_SCHEME_UNDEFINED);}}}

/* k27713 in k27662 in parse-with in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27715,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27667(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k27705 in k27662 in parse-with in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27707,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27667(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k27665 in k27662 in parse-with in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27667,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27674,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27678,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  reverse");
t4=*((C_word*)lf[203]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k27676 in k27665 in k27662 in parse-with in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27678,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27682,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  reverse");
t3=*((C_word*)lf[203]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27680 in k27676 in k27665 in k27662 in parse-with in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27682,2,t0,t1);}
C_trace("ChickenBridge.scm: 358  make-loop-clause");
f_26253(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[518],lf[607],lf[519],((C_word*)t0)[2],lf[521],t1));}

/* k27672 in k27665 in k27662 in parse-with in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 358  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27515(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27515,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27525,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27563,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li432),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_27563(t22,t18,C_SCHEME_FALSE);}

/* do4476 in parse-general-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_27563(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27563,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27573,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_27573(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 358  loop-op?");
f_26475(t5,t6,((C_word*)t0)[5]);}}

/* k27571 in do4476 in parse-general-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27573,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27584,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[605]));}
else{
t7=t6;
f_27584(2,t7,C_SCHEME_UNDEFINED);}}}

/* k27582 in k27571 in do4476 in parse-general-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27584,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27587,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[442]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27596,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[600]));}
else{
t6=t5;
f_27596(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[601]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27621,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[602]));}
else{
t7=t6;
f_27621(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[603],((C_word*)((C_word*)t0)[12])[1],lf[604]));}}}

/* k27619 in k27582 in k27571 in do4476 in parse-general-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27621,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_27587(2,t10,t9);}

/* k27594 in k27582 in k27571 in do4476 in parse-general-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27596,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_27587(2,t8,t7);}

/* k27585 in k27582 in k27571 in do4476 in parse-general-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_27563(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k27523 in parse-general-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27525,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27532,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27561,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 358  make-binding");
f_26487(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k27559 in k27523 in parse-general-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27561,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 358  make-loop-clause");
f_26253(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[518],lf[548],lf[519],t2,lf[521],t3,lf[523],t4,lf[524],t5));}

/* k27530 in k27523 in parse-general-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 358  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27164(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27164,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27171,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 358  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[598]);}

/* k27169 in parse-sequence-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27171,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27177,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27405,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li430),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_27405(t25,t21,C_SCHEME_FALSE);}

/* do4409 in k27169 in parse-sequence-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_27405(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27405,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27415,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_27415(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 358  loop-op?");
f_26475(t5,t6,((C_word*)t0)[4]);}}

/* k27413 in do4409 in k27169 in parse-sequence-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27415,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27426,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[597]));}
else{
t7=t6;
f_27426(2,t7,C_SCHEME_UNDEFINED);}}}

/* k27424 in k27413 in do4409 in k27169 in parse-sequence-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27426,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27429,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[587]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27438,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_27438(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[596]);
if(C_truep(t6)){
t7=t5;
f_27438(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[581]);
t8=t5;
f_27438(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[586])));}}}

/* k27436 in k27424 in k27413 in do4409 in k27169 in parse-sequence-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_27438(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27438,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27441,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[589],((C_word*)((C_word*)t0)[9])[1],lf[590],((C_word*)((C_word*)t0)[10])[1],lf[591]));}
else{
t3=t2;
f_27441(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[572]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[592]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[581]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[593]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_27429(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[594],((C_word*)((C_word*)t0)[9])[1],lf[595]));}}}

/* k27439 in k27436 in k27424 in k27413 in do4409 in k27169 in parse-sequence-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_27429(2,t7,t6);}

/* k27427 in k27424 in k27413 in do4409 in k27169 in parse-sequence-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_27405(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k27175 in k27169 in parse-sequence-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27177,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27403,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 358  make-binding");
f_26487(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k27401 in k27175 in k27169 in parse-sequence-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27403,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27399,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 358  make-binding");
f_26487(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k27397 in k27401 in k27175 in k27169 in parse-sequence-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27399,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27188,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[581]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27205,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 358  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[585]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[586]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27281,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[310],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_27281(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[310],((C_word*)t0)[4]);
t9=t7;
f_27281(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27310,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27345,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_27345(t10,(C_word)C_eqp(t9,lf[588]));}
else{
t9=t8;
f_27345(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_27310(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k27343 in k27397 in k27401 in k27175 in k27169 in parse-sequence-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_27345(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27345,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27310(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_27310(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k27308 in k27397 in k27401 in k27175 in k27169 in parse-sequence-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_27310(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27310,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27326,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[587]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[6]);
t5=t2;
f_27326(t5,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_27326(t4,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k27324 in k27308 in k27397 in k27401 in k27175 in k27169 in parse-sequence-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_27326(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27326,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27188(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k27279 in k27397 in k27401 in k27175 in k27169 in parse-sequence-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_27281(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27281,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[308],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[460],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_27188(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k27203 in k27397 in k27401 in k27175 in k27169 in parse-sequence-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27205,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27208,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 358  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[584]);}

/* k27206 in k27203 in k27397 in k27401 in k27175 in k27169 in parse-sequence-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27208,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27272,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 358  make-binding");
f_26487(t2,((C_word*)t0)[7],C_fix(0));}

/* k27270 in k27206 in k27203 in k27397 in k27401 in k27175 in k27169 in parse-sequence-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27272,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27268,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 358  make-binding");
f_26487(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k27266 in k27270 in k27206 in k27203 in k27397 in k27401 in k27175 in k27169 in parse-sequence-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27268,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[582],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[113],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[583],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[385],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[434],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_27188(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k27186 in k27397 in k27401 in k27175 in k27169 in parse-sequence-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_27188(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27188,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27195,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27199,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 358  reverse");
t4=*((C_word*)lf[203]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k27197 in k27186 in k27397 in k27401 in k27175 in k27169 in parse-sequence-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27199,2,t0,t1);}
C_trace("ChickenBridge.scm: 358  make-loop-clause");
f_26253(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[518],lf[548],lf[519],t1,lf[522],((C_word*)((C_word*)t0)[5])[1],lf[521],((C_word*)((C_word*)t0)[4])[1],lf[523],((C_word*)((C_word*)t0)[3])[1],lf[524],((C_word*)((C_word*)t0)[2])[1]));}

/* k27193 in k27186 in k27397 in k27401 in k27175 in k27169 in parse-sequence-iteration in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 358  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27117(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27117,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[578]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27132,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li427),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27150,a[2]=t2,a[3]=((C_word)li428),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a27149 in parse-repeat in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27150(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27150,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 358  values");
C_values(4,0,t1,t2,t4);}

/* a27131 in parse-repeat in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27132,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27144,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 358  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[579]);}

/* k27142 in a27131 in parse-repeat in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27144,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[548],t1,lf[553],t2);
C_trace("ChickenBridge.scm: 358  parse-numerical-for");
t4=C_retrieve2(lf[547],"parse-numerical-for");
f_26735(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26735(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26735,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26745,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26944,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li425),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_26944(t31,t27,C_SCHEME_FALSE);}

/* do4310 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_26944(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26944,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26954,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_26954(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 358  loop-op?");
f_26475(t5,t6,((C_word*)t0)[6]);}}

/* k26952 in do4310 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26954,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26965,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[576]));}
else{
t7=t6;
f_26965(2,t7,C_SCHEME_UNDEFINED);}}}

/* k26963 in k26952 in do4310 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26965,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26968,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[555]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[551]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26980,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[556],((C_word*)((C_word*)t0)[12])[1],lf[557],((C_word*)((C_word*)t0)[9])[1],lf[558]));}
else{
t7=t6;
f_26980(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[553]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27001,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[559],((C_word*)((C_word*)t0)[12])[1],lf[560],((C_word*)((C_word*)t0)[3])[1],lf[561]));}
else{
t8=t7;
f_27001(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[562]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27022,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[563],((C_word*)((C_word*)t0)[12])[1],lf[564],((C_word*)((C_word*)t0)[3])[1],lf[565]));}
else{
t9=t8;
f_27022(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[552]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27043,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[566],((C_word*)((C_word*)t0)[12])[1],lf[567],((C_word*)((C_word*)t0)[3])[1],lf[568]));}
else{
t10=t9;
f_27043(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[554]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27064,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[569],((C_word*)((C_word*)t0)[12])[1],lf[570],((C_word*)((C_word*)t0)[3])[1],lf[571]));}
else{
t11=t10;
f_27064(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[572]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27085,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[573]));}
else{
t12=t11;
f_27085(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[574],((C_word*)((C_word*)t0)[12])[1],lf[575]));}}}}}}}

/* k27083 in k26963 in k26952 in do4310 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_26968(2,t6,t5);}

/* k27062 in k26963 in k26952 in do4310 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_26968(2,t7,t6);}

/* k27041 in k26963 in k26952 in do4310 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_26968(2,t7,t6);}

/* k27020 in k26963 in k26952 in do4310 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_26968(2,t7,t6);}

/* k26999 in k26963 in k26952 in do4310 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_27001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_26968(2,t7,t6);}

/* k26978 in k26963 in k26952 in do4310 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_26968(2,t7,t6);}

/* k26966 in k26963 in k26952 in do4310 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_26944(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k26743 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26745,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26748,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_26748(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[555]);
t5=t2;
f_26748(t5,t4);}}

/* k26746 in k26743 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_26748(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26748,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26751,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[551]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26911,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_26911(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[554]);
t6=t4;
f_26911(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[552])));}}

/* k26909 in k26746 in k26743 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_26911(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[117]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[552]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[251]);
t5=((C_word*)t0)[2];
f_26751(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[385]);
t5=((C_word*)t0)[2];
f_26751(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[113]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[553]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[457]);
t5=((C_word*)t0)[2];
f_26751(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[463]);
t5=((C_word*)t0)[2];
f_26751(t5,t4);}}}

/* k26749 in k26746 in k26743 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_26751(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26751,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26754,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26882,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 358  make-binding");
f_26487(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26902,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 358  make-binding");
f_26487(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k26900 in k26749 in k26746 in k26743 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26902,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26754(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k26880 in k26749 in k26746 in k26743 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26882,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_26754(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k26752 in k26749 in k26746 in k26743 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_26754(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26754,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26757,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_26757(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26847,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 358  gensym");
t5=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[550]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_26757(t5,t4);}}

/* k26845 in k26752 in k26749 in k26746 in k26743 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26847,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26864,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 358  make-binding");
f_26487(t2,t1,C_SCHEME_FALSE);}

/* k26862 in k26845 in k26752 in k26749 in k26746 in k26743 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26864,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_26757(t8,t7);}

/* k26755 in k26752 in k26749 in k26746 in k26743 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_26757(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26757,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26764,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26796,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 358  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[549]);}
else{
t6=t5;
f_26764(t6,C_SCHEME_UNDEFINED);}}

/* k26794 in k26755 in k26752 in k26749 in k26746 in k26743 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26796,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26799,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26814,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  make-binding");
f_26487(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26830,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 358  make-binding");
f_26487(t3,t1,C_SCHEME_FALSE);}}

/* k26828 in k26794 in k26755 in k26752 in k26749 in k26746 in k26743 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26830,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26799(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k26812 in k26794 in k26755 in k26752 in k26749 in k26746 in k26743 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26814,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_26799(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k26797 in k26794 in k26755 in k26752 in k26749 in k26746 in k26743 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_26799(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26799,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_26764(t4,t3);}

/* k26762 in k26755 in k26752 in k26749 in k26746 in k26743 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_26764(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26764,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26771,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26775,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 358  reverse");
t4=*((C_word*)lf[203]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k26773 in k26762 in k26755 in k26752 in k26749 in k26746 in k26743 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26775,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26779,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 358  reverse");
t3=*((C_word*)lf[203]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k26777 in k26773 in k26762 in k26755 in k26752 in k26749 in k26746 in k26743 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26779,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 358  make-loop-clause");
f_26253(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[518],lf[548],lf[519],((C_word*)t0)[2],lf[521],t1,lf[524],t2,lf[522],t4));}

/* k26769 in k26762 in k26755 in k26752 in k26749 in k26746 in k26743 in parse-numerical-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 358  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26653(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26653,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26657,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 358  loop-op?");
f_26475(t5,t6,t4);}

/* k26655 in parse-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26657,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[540]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26675,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 358  loop-variable?");
f_26481(t4,t3);}}

/* k26673 in k26655 in parse-for in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26675,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[541]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[542],t6,lf[543],lf[544]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 358  loop-error");
f_26493(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[545],t2,lf[546]));}}

/* loop-error in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_26493(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26493,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26549,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26501,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li422),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_26501(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do4261 in loop-error in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_26501(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26501,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26511,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_26511(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_26511(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 358  loop-op?");
f_26475(t6,t8,((C_word*)t0)[2]);}}}

/* k26509 in do4261 in loop-error in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26511,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 358  reverse");
t2=*((C_word*)lf[203]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_26501(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k26547 in loop-error in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26549,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26552,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 358  newline");
t3=*((C_word*)lf[374]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k26550 in k26547 in loop-error in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26552,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26555,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 358  display");
t3=*((C_word*)lf[375]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[538]);}

/* k26553 in k26550 in k26547 in loop-error in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26555,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26558,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26630,a[2]=t4,a[3]=((C_word)li421),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_26630(t6,t2,((C_word*)t0)[2]);}

/* do4271 in k26553 in k26550 in k26547 in loop-error in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_26630(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26630,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26640,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 358  display");
t5=*((C_word*)lf[375]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k26638 in do4271 in k26553 in k26550 in k26547 in loop-error in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26630(t3,((C_word*)t0)[2],t2);}

/* k26556 in k26553 in k26550 in k26547 in loop-error in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26558,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26561,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  newline");
t3=*((C_word*)lf[374]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k26559 in k26556 in k26553 in k26550 in k26547 in loop-error in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26561,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26564,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 358  display");
t3=*((C_word*)lf[375]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[537]);}

/* k26562 in k26559 in k26556 in k26553 in k26550 in k26547 in loop-error in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26564,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26567,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 358  display");
t3=*((C_word*)lf[375]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[533]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26584,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li420),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_26584(t6,t2,((C_word*)t0)[2]);}}

/* do4276 in k26562 in k26559 in k26556 in k26553 in k26550 in k26547 in loop-error in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_26584(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26584,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26594,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 358  display");
t5=*((C_word*)lf[375]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[536]);}
else{
t5=t3;
f_26594(2,t5,C_SCHEME_UNDEFINED);}}}

/* k26592 in do4276 in k26562 in k26559 in k26556 in k26553 in k26550 in k26547 in loop-error in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26594,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26597,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 358  display");
t4=*((C_word*)lf[375]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k26595 in k26592 in do4276 in k26562 in k26559 in k26556 in k26553 in k26550 in k26547 in loop-error in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26597,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26600,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[534]:lf[535]);
C_trace("ChickenBridge.scm: 358  display");
t6=*((C_word*)lf[375]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k26598 in k26595 in k26592 in do4276 in k26562 in k26559 in k26556 in k26553 in k26550 in k26547 in loop-error in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26584(t3,((C_word*)t0)[2],t2);}

/* k26565 in k26562 in k26559 in k26556 in k26553 in k26550 in k26547 in loop-error in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26567,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26570,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 358  newline");
t3=*((C_word*)lf[374]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k26568 in k26565 in k26562 in k26559 in k26556 in k26553 in k26550 in k26547 in loop-error in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 358  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[532]);}

/* make-binding in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_26487(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26487,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_26481(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26481,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_26475(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26475,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_26404(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26404,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26406,a[2]=((C_word)li415),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26445,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 358  gather-clause");
f_26406(t5,t3,C_retrieve2(lf[508],"loop-bindings"));}

/* k26443 in gather-clauses in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26445,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26449,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 358  gather-clause");
f_26406(t2,((C_word*)t0)[2],C_retrieve2(lf[509],"loop-collectors"));}

/* k26447 in k26443 in gather-clauses in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26449,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26453,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 358  gather-clause");
f_26406(t2,((C_word*)t0)[2],C_retrieve2(lf[510],"loop-initially"));}

/* k26451 in k26447 in k26443 in gather-clauses in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26453,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26457,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 358  gather-clause");
f_26406(t2,((C_word*)t0)[2],C_retrieve2(lf[511],"loop-end-tests"));}

/* k26455 in k26451 in k26447 in k26443 in gather-clauses in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26457,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_26461,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 358  gather-clause");
f_26406(t2,((C_word*)t0)[2],C_retrieve2(lf[512],"loop-looping"));}

/* k26459 in k26455 in k26451 in k26447 in k26443 in gather-clauses in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26461,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26465,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 358  gather-clause");
f_26406(t2,((C_word*)t0)[2],C_retrieve2(lf[514],"loop-stepping"));}

/* k26463 in k26459 in k26455 in k26451 in k26447 in k26443 in gather-clauses in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26465,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26469,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 358  gather-clause");
f_26406(t2,((C_word*)t0)[2],C_retrieve2(lf[515],"loop-finally"));}

/* k26467 in k26463 in k26459 in k26455 in k26451 in k26447 in k26443 in gather-clauses in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26469,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26473,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 358  gather-clause");
f_26406(t2,((C_word*)t0)[2],C_retrieve2(lf[516],"loop-returning"));}

/* k26471 in k26467 in k26463 in k26459 in k26455 in k26451 in k26447 in k26443 in gather-clauses in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26473,2,t0,t1);}
C_trace("ChickenBridge.scm: 358  make-loop-clause");
f_26253(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[518],((C_word*)t0)[9],lf[519],((C_word*)t0)[8],lf[520],((C_word*)t0)[7],lf[521],((C_word*)t0)[6],lf[522],((C_word*)t0)[5],lf[523],((C_word*)t0)[4],lf[524],((C_word*)t0)[3],lf[525],((C_word*)t0)[2],lf[526],t1));}

/* gather-clause in gather-clauses in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_26406(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26406,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26412,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li414),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_26412(t8,t1,C_SCHEME_END_OF_LIST);}

/* do4244 in gather-clause in gather-clauses in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_26412(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26412,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26423,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26434,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 358  accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k26432 in do4244 in gather-clause in gather-clauses in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 358  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k26421 in do4244 in gather-clause in gather-clauses in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_26412(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_26253(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26253,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26268,a[2]=t5,a[3]=t3,a[4]=((C_word)li412),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_26268(t7,t1,t2);}}

/* do4232 in make-loop-clause in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_26268(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26268,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26281,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[518]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 358  loop-operator-set!");
f_26151(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[519]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_26281(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[520]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_26281(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[521]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_26281(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[522]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_26281(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[523]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 358  loop-looping-set!");
f_26211(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[524]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_26281(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[525]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_26281(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[526]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_26281(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_26281(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k26279 in do4232 in make-loop-clause in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26268(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26241(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26241,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26229(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26229,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26217(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26217,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_26211(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26211,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26205(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26205,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26193(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26193,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26181(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26181,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26169(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26169,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26157(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26157,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k26141 in k26138 in k26135 in k26132 in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_26151(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26151,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* sal:output in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26115(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26115,2,t0,t1);}
C_trace("ChickenBridge.scm: 357  print-error");
t2=C_retrieve(lf[472]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[506]);}

/* sal:open in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26109(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26109,2,t0,t1);}
C_trace("ChickenBridge.scm: 357  print-error");
t2=C_retrieve(lf[472]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[504]);}

/* sal:load in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26055(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26055,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26059,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  file-exists?");
t4=C_retrieve(lf[502]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k26057 in sal:load in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26059,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26062,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_string_length(((C_word*)t0)[2]);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26081,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26107,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  string-append");
t6=*((C_word*)lf[180]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,lf[498],((C_word*)t0)[2],lf[499]);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26075,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  string-append");
t4=*((C_word*)lf[180]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[500],((C_word*)t0)[2],lf[501]);}}

/* k26073 in k26057 in sal:load in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  print-error");
t2=C_retrieve(lf[472]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k26105 in k26057 in sal:load in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  print-message");
t2=C_retrieve(lf[483]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k26079 in k26057 in sal:load in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26081,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26087,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(4)))){
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[2],C_fix(4));
C_trace("substring=?");
t4=C_retrieve(lf[496]);
((C_proc7)(void*)(*((C_word*)t4+1)))(7,t4,t2,((C_word*)t0)[3],lf[497],t3,C_fix(0),C_SCHEME_FALSE);}
else{
t3=t2;
f_26087(2,t3,C_SCHEME_FALSE);}}

/* k26085 in k26079 in k26057 in sal:load in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 357  load-sal-file");
t2=C_retrieve(lf[494]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 357  load");
t2=C_retrieve(lf[495]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k26060 in k26057 in sal:load in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26046(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26046,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26050,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  chdir");
t4=C_retrieve(lf[44]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k26048 in sal:chdir in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25893(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_25893r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_25893r(t0,t1,t2);}}

static void C_ccall f_25893r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25896,a[2]=t4,a[3]=((C_word)li395),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26015,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26020,a[2]=t4,a[3]=t8,a[4]=((C_word)li396),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_26020(t10,t6,t2);}

/* do4058 in sal:print in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_26020(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26020,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 357  print-message");
t3=C_retrieve(lf[483]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[491]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26033,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 357  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_25896(t5,t3,t4,C_fix(0));}}

/* k26031 in do4058 in sal:print in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26020(t3,((C_word*)t0)[2],t2);}

/* k26013 in sal:print in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_25896(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25896,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 357  print-message");
t5=C_retrieve(lf[483]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[484]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25924,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 357  print-message");
t6=C_retrieve(lf[483]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[487]);}
else{
t5=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 357  print-message");
t6=C_retrieve(lf[483]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[488]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25996,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  number->string");
C_number_to_string(3,0,t6,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 357  print-message");
t6=C_retrieve(lf[483]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}
else{
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26012,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  sprintf");
t7=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[489],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 357  print-message");
t5=C_retrieve(lf[483]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[490]);}}

/* k26010 in printer in sal:print in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_26012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  print-message");
t2=C_retrieve(lf[483]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k25994 in printer in sal:print in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  print-message");
t2=C_retrieve(lf[483]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k25922 in printer in sal:print in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25924,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25927,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25932,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word)li394),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_25932(t6,t2,((C_word*)t0)[2]);}

/* do4050 in k25922 in printer in sal:print in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_25932(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25932,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25942,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],C_fix(1));
C_trace("ChickenBridge.scm: 357  printer");
t6=((C_word*)((C_word*)t0)[2])[1];
f_25896(t6,t3,t4,t5);}}

/* k25940 in do4050 in k25922 in printer in sal:print in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25945,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_25945(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 357  print-message");
t4=C_retrieve(lf[483]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[486]);}}

/* k25943 in k25940 in do4050 in k25922 in printer in sal:print in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_25932(t3,((C_word*)t0)[2],t2);}

/* k25925 in k25922 in printer in sal:print in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  print-message");
t2=C_retrieve(lf[483]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[485]);}

/* sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25716(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_25716,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25720,a[2]=t4,a[3]=t6,a[4]=t5,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep(C_retrieve(lf[470]))){
C_trace("ChickenBridge.scm: 357  printf");
t8=C_retrieve(lf[451]);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[481],t4);}
else{
t8=t7;
f_25720(2,t8,C_SCHEME_UNDEFINED);}}

/* k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25720,2,t0,t1);}
t2=C_mutate(&lf[467],((C_word*)t0)[6]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25725,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=((C_word*)t0)[2];
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,C_retrieve2(lf[396],"list->token"),t4);}

/* k25723 in k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25725,2,t0,t1);}
t2=C_mutate(&lf[468],t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25728,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(36608));
t5=t3;
f_25728(t5,t4);}
else{
t4=t3;
f_25728(t4,C_SCHEME_FALSE);}}

/* k25726 in k25723 in k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_25728(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25728,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25732,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
t4=C_retrieve2(lf[468],"*sal-tokens*");
t5=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23463,a[2]=t4,a[3]=t3,a[4]=((C_word)li392),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  call/cc");
t7=*((C_word*)lf[480]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t2,t6);}

/* a23462 in k25726 in k25723 in k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23463(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23463,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23469,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li390),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23476,a[2]=t2,a[3]=((C_word)li391),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a23475 in a23462 in k25726 in k25723 in k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23476(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23476,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23483,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_23483(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_23483(t6,C_SCHEME_FALSE);}}

/* k23481 in a23475 in a23462 in k25726 in k25723 in k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23483(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23483,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23490,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  add-emit-info");
f_23120(t2,lf[477],lf[478],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 357  make-parse-error");
f_22940(((C_word*)t0)[4],lf[479],C_retrieve2(lf[445],"*maxtokpos*"));}}

/* k23488 in k23481 in a23475 in a23462 in k25726 in k25723 in k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  emit");
f_23148(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a23468 in a23462 in k25726 in k25723 in k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23469,2,t0,t1);}
t2=lf[445]=C_fix(0);;
C_trace("ChickenBridge.scm: 357  parser");
f_23501(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k25730 in k25726 in k25723 in k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25732,2,t0,t1);}
t2=C_mutate(&lf[469],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25735,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=C_retrieve2(lf[469],"*sal-output*");
if(C_truep((C_word)C_i_structurep(t4,lf[412]))){
t5=C_retrieve2(lf[467],"*sal-string*");
t6=C_retrieve2(lf[469],"*sal-output*");
t7=(C_word)C_i_string_length(t5);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25769,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 357  parse-error-position");
f_22979(t8,t6);}
else{
if(C_truep(((C_word*)t0)[2])){
C_trace("ChickenBridge.scm: 357  pp");
t5=C_retrieve(lf[475]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[469],"*sal-output*"));}
else{
C_trace("ChickenBridge.scm: 357  eval");
t5=C_retrieve(lf[476]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[469],"*sal-output*"));}}}

/* k25767 in k25730 in k25726 in k25723 in k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25769,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25775,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25862,a[2]=((C_word*)t0)[4],a[3]=t9,a[4]=t4,a[5]=((C_word)li389),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_25862(t11,t7,C_SCHEME_FALSE);}

/* do4023 in k25767 in k25730 in k25726 in k25723 in k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_25862(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25862,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25872,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_25872(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_25872(t11,t10);}}}

/* k25870 in do4023 in k25767 in k25730 in k25726 in k25723 in k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_25872(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_25862(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k25773 in k25767 in k25730 in k25726 in k25723 in k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25775,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25783,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25832,a[2]=((C_word*)t0)[4],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li388),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_25832(t9,t5,C_SCHEME_FALSE);}

/* do4030 in k25773 in k25767 in k25730 in k25726 in k25723 in k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_25832(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25832,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25842,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_25842(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_25842(t11,t10);}}}

/* k25840 in do4030 in k25773 in k25767 in k25730 in k25726 in k25723 in k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_25842(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_25832(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k25781 in k25773 in k25767 in k25730 in k25726 in k25723 in k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25783,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25786,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25793,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25797,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  parse-error-string");
f_22961(t4,((C_word*)t0)[2]);}

/* k25795 in k25781 in k25773 in k25767 in k25730 in k25726 in k25723 in k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25797,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25801,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 357  make-string");
t3=*((C_word*)lf[383]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k25799 in k25795 in k25781 in k25773 in k25767 in k25730 in k25726 in k25723 in k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25801,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25805,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  substring");
t3=*((C_word*)lf[474]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k25803 in k25799 in k25795 in k25781 in k25773 in k25767 in k25730 in k25726 in k25723 in k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25805,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25809,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 357  make-string");
t3=*((C_word*)lf[383]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k25807 in k25803 in k25799 in k25795 in k25781 in k25773 in k25767 in k25730 in k25726 in k25723 in k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25809,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25816,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 357  make-string");
t5=*((C_word*)lf[383]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k25814 in k25807 in k25803 in k25799 in k25795 in k25781 in k25773 in k25767 in k25730 in k25726 in k25723 in k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25816,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 357  string-append");
t5=*((C_word*)lf[180]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[473],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k25791 in k25781 in k25773 in k25767 in k25730 in k25726 in k25723 in k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  print-error");
t2=C_retrieve(lf[472]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k25784 in k25781 in k25773 in k25767 in k25730 in k25726 in k25723 in k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  values");
C_values(2,0,((C_word*)t0)[2]);}

/* k25733 in k25730 in k25726 in k25723 in k25718 in sal in k25707 in k25704 in k25701 in k25698 in k25695 in k25112 in k25109 in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24590(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24590,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24597,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_24603,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t33,t34,C_fix(23296));}

/* k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24603,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24607,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_24653,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t2,t3,C_fix(10756));}}

/* k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24653,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24657,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_24750,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t2,t3,C_fix(22784));}}

/* k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24750,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24754,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24818,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24818,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24825,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25075,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_24825(t8,t7);}}

/* k25073 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24825(t3,t2);}

/* k24823 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_24825(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24825,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24828,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25014,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25063,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k25061 in k24823 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24828(t3,t2);}

/* k25012 in k24823 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25014,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25020,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  fifth");
t4=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k25018 in k25012 in k24823 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25020,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25044,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  fifth");
t3=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_24828(t4,t3);}}

/* k25042 in k25018 in k25012 in k24823 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25044,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25028,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25040,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  fifth");
t6=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k25038 in k25042 in k25018 in k25012 in k24823 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k25026 in k25042 in k25018 in k25012 in k24823 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_25028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24828(t3,t2);}

/* k24826 in k24823 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_24828(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24828,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24831,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_24831(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24990,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[466]);}}

/* k24988 in k24826 in k24823 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24990,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24994,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 357  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k24992 in k24988 in k24826 in k24823 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_24831(t4,t3);}

/* k24829 in k24826 in k24823 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_24831(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24831,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24834,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_24834(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24967,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[465]);}}

/* k24965 in k24829 in k24826 in k24823 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24967,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24971,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 357  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k24969 in k24965 in k24829 in k24826 in k24823 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_24834(t4,t3);}

/* k24832 in k24829 in k24826 in k24823 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_24834(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24834,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24837,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_24837(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24944,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[464]);}}
else{
t3=t2;
f_24837(t3,C_SCHEME_UNDEFINED);}}

/* k24942 in k24832 in k24829 in k24826 in k24823 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24948,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 357  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k24946 in k24942 in k24832 in k24829 in k24826 in k24823 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_24837(t4,t3);}

/* k24835 in k24832 in k24829 in k24826 in k24823 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_24837(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24837,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24840,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24869,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[113],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_24840(t7,t6);}}

/* k24867 in k24835 in k24832 in k24829 in k24826 in k24823 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24869,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[457],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[113],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_24840(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24887,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k24885 in k24867 in k24835 in k24832 in k24829 in k24826 in k24823 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24887,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[463],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[113],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_24840(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24905,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k24903 in k24885 in k24867 in k24835 in k24832 in k24829 in k24826 in k24823 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24905,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[251],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[117],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_24840(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24923,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k24921 in k24903 in k24885 in k24867 in k24835 in k24832 in k24829 in k24826 in k24823 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24923,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[385],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[117],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24840(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_24840(t2,C_SCHEME_UNDEFINED);}}

/* k24838 in k24835 in k24832 in k24829 in k24826 in k24823 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_24840(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24840,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24844,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 357  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k24842 in k24838 in k24835 in k24832 in k24829 in k24826 in k24823 in k24816 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24597(t3,t2);}

/* k24752 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24754,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24758,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k24756 in k24752 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24758,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24762,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[462]);}

/* k24760 in k24756 in k24752 in k24748 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24762,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_24597(t12,t11);}

/* k24655 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24657,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24661,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k24659 in k24655 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24661,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24665,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 357  fifth");
t4=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k24663 in k24659 in k24655 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24665,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24668,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24684,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_24668(t6,t5);}}

/* k24682 in k24663 in k24659 in k24655 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24684,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24688,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 357  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[461]);}

/* k24686 in k24682 in k24663 in k24659 in k24655 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24688,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[460],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_24668(t12,t11);}

/* k24666 in k24663 in k24659 in k24655 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_24668(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24668,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24672,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 357  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k24670 in k24666 in k24663 in k24659 in k24655 in k24651 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24597(t3,t2);}

/* k24605 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24607,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24611,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[459]);}

/* k24609 in k24605 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24611,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24615,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[458]);}

/* k24613 in k24609 in k24605 in k24601 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24615,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[113],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[457],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_24597(t10,t9);}

/* k24595 in sal-parse-stepping in k24586 in k24583 in k24580 in k24577 in k24574 in k24571 in k24568 in k24565 in k24562 in k24559 in k24556 in k24553 in k24550 in k24547 in k24544 in k24541 in k24538 in k24535 in k24532 in k24529 in k24526 in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_24597(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_24412(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24412,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24424,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li385),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_24424(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do3651 in inf->pre in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_24424(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24424,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24443,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 357  is-op?");
f_24391(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k24441 in do3651 in inf->pre in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24443,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24446,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24461,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li384),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_24461(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_24446(2,t5,t4);}}

/* do3653 in k24441 in do3651 in inf->pre in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_24461(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24461,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24475,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24489,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  reverse");
t12=*((C_word*)lf[203]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24493,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 357  is-op?");
f_24391(t10,t11);}}

/* k24491 in do3653 in k24441 in do3651 in inf->pre in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24493,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24496,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_24496(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_24496(t10,t9);}}

/* k24494 in k24491 in do3653 in k24441 in do3651 in inf->pre in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_24496(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_24461(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k24487 in do3653 in k24441 in do3651 in inf->pre in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  inf->pre");
f_24412(((C_word*)t0)[2],t1);}

/* k24473 in do3653 in k24441 in do3651 in inf->pre in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24475,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k24444 in k24441 in do3651 in inf->pre in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_24424(t2,((C_word*)t0)[2]);}

/* is-op? in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_24391(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24391,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24398,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  token-unit?");
f_23060(t3,t2);}

/* k24396 in is-op? in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24398,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24401,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-type");
f_23012(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k24399 in k24396 in is-op? in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24401,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24407,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  SalOpType?");
f_24168(t2,t1);}

/* k24405 in k24399 in k24396 in is-op? in k24387 in k24384 in k24381 in k24378 in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24407,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_bitwise_and(&a,2,t3,C_fix(255)));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_24326(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24326,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24335,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li381),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_24335(t10,t1,t2);}

/* do3617 in remove-token-type in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_24335(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24335,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24348,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24358,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 357  token-unit-type=?");
f_23076(t4,t5,((C_word*)t0)[2]);}}

/* k24356 in do3617 in remove-token-type in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_24358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24358,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_24348(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_24348(t7,t6);}}

/* k24346 in do3617 in remove-token-type in k24322 in k24319 in k24316 in k24313 in k24310 in k24307 in k24304 in k24301 in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_24348(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_24335(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_24282(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24282,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_arithmetic_shift(&a,2,t2,C_fix(-8));
t5=(C_word)C_a_i_arithmetic_shift(&a,2,t3,C_fix(-8));
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_nequalp(t4,t5));}

/* SalRuleType? in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_24270(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24270,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_24168(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24168,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_24120(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24120,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23501(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23501,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23505,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 357  printf");
t10=C_retrieve(lf[451]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,lf[452],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_23505(2,t10,C_SCHEME_UNDEFINED);}}

/* k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23505,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23508,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 357  null-tokens?");
f_22680(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23508,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23511,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_23511(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23926,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23930,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23934,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  first-token");
f_22668(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k23932 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  token-position");
f_22627(((C_word*)t0)[2],t1);}

/* k23928 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  max");
t2=*((C_word*)lf[316]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[445],"*maxtokpos*"),t1);}

/* k23924 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[445],t1);
t3=((C_word*)t0)[2];
f_23511(t3,t2);}

/* k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23511(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23511,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23520,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  pattern-value");
t4=C_retrieve2(lf[289],"pattern-value");
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[8]);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23634,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 357  pattern-clause?");
f_22822(t3,((C_word*)t0)[8]);}}

/* k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23634,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23640,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22867,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  pattern-clause?");
f_22822(t4,t3);}
else{
C_trace("ChickenBridge.scm: 357  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[450],((C_word*)t0)[2]);}}

/* k22865 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_23640(t3,(C_word)C_eqp(t2,lf[432]));}
else{
t2=((C_word*)t0)[2];
f_23640(t2,C_SCHEME_FALSE);}}

/* k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23640(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23640,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23649,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 357  pattern-nsubs");
f_22840(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23728,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22883,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  pattern-clause?");
f_22822(t5,t4);}}

/* k22881 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_23728(t3,(C_word)C_eqp(t2,lf[433]));}
else{
t2=((C_word*)t0)[2];
f_23728(t2,C_SCHEME_FALSE);}}

/* k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23728(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23728,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23734,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 357  pattern-nsubs");
f_22840(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23798,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 357  pattern-zero-or-more?");
f_22908(t2,((C_word*)t0)[2]);}}

/* k23796 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23798,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23801,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_23801(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22899,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  pattern-clause?");
f_22822(t4,t3);}}

/* k22897 in k23796 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_23801(t3,(C_word)C_eqp(t2,lf[113]));}
else{
t2=((C_word*)t0)[2];
f_23801(t2,C_SCHEME_FALSE);}}

/* k23799 in k23796 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23801(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23801,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23807,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23830,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li373),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_23830(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23879,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22931,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  pattern-clause?");
f_22822(t4,t3);}}

/* k22929 in k23799 in k23796 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_23879(t3,(C_word)C_eqp(t2,lf[449]));}
else{
t2=((C_word*)t0)[2];
f_23879(t2,C_SCHEME_FALSE);}}

/* k23877 in k23799 in k23796 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23879(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23879,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23888,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23899,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li374),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23905,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li375),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 357  call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 357  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[448],t3);}}

/* a23904 in k23877 in k23799 in k23796 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23905(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23905,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a23898 in k23877 in k23799 in k23796 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23899,2,t0,t1);}
C_trace("ChickenBridge.scm: 357  parser");
f_23501(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23886 in k23877 in k23799 in k23796 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 357  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 357  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do3354 in k23799 in k23796 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23830(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23830,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23840,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_23840(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 357  null-tokens?");
f_22680(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k23838 in do3354 in k23799 in k23796 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23840,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_23843,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23860,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li371),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23866,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li372),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 357  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a23865 in k23838 in do3354 in k23799 in k23796 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23866(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23866,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a23859 in k23838 in do3354 in k23799 in k23796 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23860,2,t0,t1);}
C_trace("ChickenBridge.scm: 357  parser");
f_23501(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23841 in k23838 in do3354 in k23799 in k23796 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23843,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23846,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23853,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_23846(t3,C_SCHEME_UNDEFINED);}}

/* k23851 in k23841 in k23838 in do3354 in k23799 in k23796 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23853,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_23846(t6,t5);}

/* k23844 in k23841 in k23838 in do3354 in k23799 in k23796 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23846(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_23830(t2,((C_word*)t0)[2]);}

/* k23805 in k23799 in k23796 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23807,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23810,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23816,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 357  pattern-zero-or-more?");
f_22908(t3,((C_word*)t0)[2]);}

/* k23814 in k23805 in k23799 in k23796 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_23810(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_23810(t5,t4);}}

/* k23808 in k23805 in k23799 in k23796 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23810(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k23732 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23734,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23737,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_23752,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li370),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_23752(t6,t2,C_fix(0));}

/* do3334 in k23732 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23752(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23752,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23762,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23771,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li368),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23785,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li369),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 357  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a23784 in do3334 in k23732 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23785(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23785,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a23770 in do3334 in k23732 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23771,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23779,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  pattern-sub");
f_22850(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23777 in a23770 in do3334 in k23732 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23779,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 357  parser");
f_23501(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23760 in do3334 in k23732 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23762,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_23752(t3,((C_word*)t0)[2],t2);}

/* k23735 in k23732 in k23726 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 357  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 357  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k23647 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23649,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23652,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23671,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li367),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_23671(t8,t4,C_fix(0));}

/* do3312 in k23647 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23671(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23671,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23684,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23704,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li365),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23718,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li366),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 357  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a23717 in do3312 in k23647 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23718(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23718,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a23703 in do3312 in k23647 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23704,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23712,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  pattern-sub");
f_22850(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23710 in a23703 in do3312 in k23647 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23712,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 357  parser");
f_23501(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23682 in do3312 in k23647 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23684,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23687,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_23687(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_23687(t5,t4);}}

/* k23685 in k23682 in do3312 in k23647 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23687(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23687,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_23671(t3,((C_word*)t0)[2],t2);}

/* k23650 in k23647 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23652,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23655,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_23655(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23669,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  reverse");
t5=*((C_word*)lf[203]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k23667 in k23650 in k23647 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_23655(t3,t2);}

/* k23653 in k23650 in k23647 in k23638 in k23632 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23655(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k23518 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23520,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23526,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 357  SalTokenType?");
f_24120(t2,t1);}

/* k23524 in k23518 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23526,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23532,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  null-tokens?");
f_22680(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23584,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 357  SalRuleType?");
f_24270(t2,((C_word*)t0)[5]);}}

/* k23582 in k23524 in k23518 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23584,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23587,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 357  get-rule");
f_22798(t2,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 357  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[447],((C_word*)t0)[2]);}}

/* k23585 in k23582 in k23524 in k23518 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23587,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[402]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[402]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23598,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li363),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23608,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li364),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a23607 in k23585 in k23582 in k23524 in k23518 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23608(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23608,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23619,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 357  func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_23619(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 357  values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k23617 in a23607 in k23585 in k23582 in k23524 in k23518 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a23597 in k23585 in k23582 in k23524 in k23518 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23598,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 357  parser");
f_23501(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23530 in k23524 in k23518 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23532,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 357  values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23542,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  first-token");
f_22668(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k23540 in k23530 in k23524 in k23518 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23542,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23548,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23578,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  token-type");
f_22591(t3,t1);}

/* k23576 in k23540 in k23530 in k23524 in k23518 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  SalType=?");
f_24282(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k23546 in k23540 in k23530 in k23524 in k23518 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23548,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23555,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23563,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  token-type");
f_22591(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 357  values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k23561 in k23546 in k23540 in k23530 in k23524 in k23518 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23563,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23567,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  token-string");
f_22609(t2,((C_word*)t0)[2]);}

/* k23565 in k23561 in k23546 in k23540 in k23530 in k23524 in k23518 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23567,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23571,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  token-position");
f_22627(t2,((C_word*)t0)[2]);}

/* k23569 in k23565 in k23561 in k23546 in k23540 in k23530 in k23524 in k23518 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k23553 in k23546 in k23540 in k23530 in k23524 in k23518 in k23509 in k23506 in k23503 in parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 357  values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23397(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23397,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23399,a[2]=t2,a[3]=((C_word)li361),tmp=(C_word)a,a+=4,tmp));}

/* f_23399 in simple-unit-emitter in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23399(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23399,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23403,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23447,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t6,t2);}

/* k23445 */
static void C_ccall f_23447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k23401 */
static void C_ccall f_23403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23403,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23406,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_23406(t9,t8);}
else{
t6=t5;
f_23406(t6,C_SCHEME_UNDEFINED);}}

/* k23404 in k23401 */
static void C_fcall f_23406(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23406,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23411,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li360),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_23411(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do3269 in k23404 in k23401 */
static void C_fcall f_23411(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23411,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23432,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k23430 in do3269 in k23404 in k23401 */
static void C_ccall f_23432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_23411(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23389(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23389,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23391,a[2]=t2,a[3]=((C_word)li358),tmp=(C_word)a,a+=4,tmp));}

/* f_23391 in simple-unit-parser in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23391(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23391,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 357  make-parse-unit");
f_22991(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* != in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23212(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2r,(void*)f_23212r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_23212r(t0,t1,t2);}}

static void C_ccall f_23212r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a=C_alloc(3);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23220,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(4,0,t3,*((C_word*)lf[442]+1),t2);}

/* k23218 in != in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_not(t1));}

/* emit-list in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23181(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23181,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23198,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 357  emit");
f_23148(t5,t6,t3,t4);}}

/* k23196 in emit-list in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23198,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23202,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 357  emit-list");
f_23181(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23200 in k23196 in emit-list in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23202,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23148(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23148,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23155,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 357  token-unit?");
f_23060(t5,t2);}

/* k23153 in emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23155,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23226,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-type");
f_23012(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23164,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23099,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit?");
f_22997(t4,t3);}}

/* k23097 in k23153 in emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23099,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23106,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-type");
f_23012(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_23164(2,t2,C_SCHEME_FALSE);}}

/* k23104 in k23097 in k23153 in emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  SalRuleType?");
f_24270(((C_word*)t0)[2],t1);}

/* k23162 in k23153 in emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23164,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23364,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23387,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-type");
f_23012(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 357  emit-list");
f_23181(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 357  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[439],((C_word*)t0)[4]);}}}

/* k23385 in k23162 in k23153 in emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  get-rule");
f_22798(((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k23362 in k23162 in k23153 in emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23364,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[402]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 357  meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23380,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t4,((C_word*)t0)[4]);}}

/* k23378 in k23362 in k23162 in k23153 in emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  emit");
f_23148(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23224 in k23153 in emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23226,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23229,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-parsed");
f_23030(t2,((C_word*)t0)[2]);}

/* k23227 in k23224 in k23153 in emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23229,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 357  string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 357  string->symbol");
t8=*((C_word*)lf[430]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23253,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 357  SalOpType?");
f_24168(t8,((C_word*)t0)[4]);}}}

/* k23251 in k23227 in k23224 in k23153 in emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23253,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23259,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  SalType=?");
f_24282(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23304,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  SalType=?");
f_24282(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23310,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 357  SalType=?");
f_24282(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k23308 in k23251 in k23227 in k23224 in k23153 in emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23310,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23316,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 357  SalType=?");
f_24282(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k23314 in k23308 in k23251 in k23227 in k23224 in k23153 in emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23316,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 357  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23325,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 357  SalType=?");
f_24282(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k23323 in k23314 in k23308 in k23251 in k23227 in k23224 in k23153 in emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23325,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 357  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23334,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 357  SalType=?");
f_24282(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k23332 in k23323 in k23314 in k23308 in k23251 in k23227 in k23224 in k23153 in emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23334,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 357  string->symbol");
t2=*((C_word*)lf[430]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23343,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 357  SalType=?");
f_24282(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k23341 in k23332 in k23323 in k23314 in k23308 in k23251 in k23227 in k23224 in k23153 in emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23343,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 357  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[435],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23352,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  SalType=?");
f_24282(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k23350 in k23341 in k23332 in k23323 in k23314 in k23308 in k23251 in k23227 in k23224 in k23153 in emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 357  string->symbol");
t2=*((C_word*)lf[430]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 357  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[436],((C_word*)t0)[2]);}}

/* k23302 in k23251 in k23227 in k23224 in k23153 in emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k23257 in k23251 in k23227 in k23224 in k23153 in emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23259,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[145]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23265,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  SalType=?");
f_24282(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k23263 in k23257 in k23251 in k23227 in k23224 in k23153 in emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23265,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[123]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23271,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  SalType=?");
f_24282(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k23269 in k23263 in k23257 in k23251 in k23227 in k23224 in k23153 in emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23271,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[431]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23277,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  SalType=?");
f_24282(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k23275 in k23269 in k23263 in k23257 in k23251 in k23227 in k23224 in k23153 in emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23277,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[432]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23283,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  SalType=?");
f_24282(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k23281 in k23275 in k23269 in k23263 in k23257 in k23251 in k23227 in k23224 in k23153 in emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23283,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[433]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23289,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  SalType=?");
f_24282(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k23287 in k23281 in k23275 in k23269 in k23263 in k23257 in k23251 in k23227 in k23224 in k23153 in emit in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[434]);}
else{
C_trace("ChickenBridge.scm: 357  string->symbol");
t2=*((C_word*)lf[430]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23130(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23130,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23137,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_23137(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 357  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[428],t2);}}

/* k23135 in set-emit-info! in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23120(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23120,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23108(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23108,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23076(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23076,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23083,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 357  token-unit?");
f_23060(t4,t2);}

/* k23081 in token-unit-type=? in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23083,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23090,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-type");
f_23012(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k23088 in k23081 in token-unit-type=? in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  SalType=?");
f_24282(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23060(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23060,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23067,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit?");
f_22997(t3,t2);}

/* k23065 in token-unit? in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23067,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23074,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  parse-unit-type");
f_23012(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k23072 in k23065 in token-unit? in k23056 in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_23074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  SalTokenType?");
f_24120(((C_word*)t0)[2],t1);}

/* parse-unit-position in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23048(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23048,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[416]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23030(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23030,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[416]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_23012(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23012,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[416]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22997(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22997,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[416]));}

/* make-parse-unit in k22987 in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22991(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22991,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[416],t2,t3,t4));}

/* parse-error-position in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22979(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22979,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[412]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-error-string in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22961(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22961,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[412]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-parse-error in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22940(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22940,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[412],t2,t3));}

/* pattern-zero-or-more? in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22908(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22908,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22915,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  pattern-clause?");
f_22822(t3,t2);}

/* k22913 in pattern-zero-or-more? in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[115]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22850(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22850,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22858,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 357  pattern-subs");
f_22834(t4,t2);}

/* k22856 in pattern-sub in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22840(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22840,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22848,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 357  pattern-subs");
f_22834(t3,t2);}

/* k22846 in pattern-nsubs in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22834(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22834,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22822(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22822,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* pattern-value in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22819(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22819,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* get-rule in k22794 in k22791 in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22798(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22798,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 357  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[400],"*rules*"),t2);}
else{
C_trace("ChickenBridge.scm: 357  hash-table-ref/default");
t4=C_retrieve(lf[405]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[400],"*rules*"),t3);}}

/* rule-name in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22711(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22711,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[402]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-rule in k22686 in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22690(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22690,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[402],t2,t3,t4,t5,t6));}

/* null-tokens? in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22680(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22680,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22668(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22668,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k22635 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22639(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22639,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[397]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[391],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[391],"make-token"),t2);}}

/* token-position in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22627(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22627,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[392]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-string in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22609(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22609,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[392]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* token-type in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22591(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22591,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[392]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22570(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22570,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[392],t2,t3,t4));}

/* markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21548(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+61)){
C_save_and_reclaim((void*)tr3r,(void*)f_21548r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_21548r(t0,t1,t2,t3);}}

static void C_ccall f_21548r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(61);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_length(t2);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_fix(8);
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_fix(1);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_fix(1);
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=t3;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_21558,a[2]=t22,a[3]=t26,a[4]=t20,a[5]=t3,a[6]=t24,a[7]=t2,a[8]=t8,a[9]=t14,a[10]=t10,a[11]=t1,a[12]=t12,a[13]=t18,a[14]=t7,a[15]=t16,a[16]=t5,tmp=(C_word)a,a+=17,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t24)[1]))){
t28=t27;
f_21558(t28,C_SCHEME_UNDEFINED);}
else{
t28=(C_word)C_i_car(((C_word*)t24)[1]);
t29=(C_word)C_eqp(t28,lf[230]);
if(C_truep(t29)){
t30=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22483,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t20,a[7]=t16,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t20)[1])){
C_trace("error");
t31=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[19],lf[230]);}
else{
t31=t30;
f_22483(2,t31,C_SCHEME_UNDEFINED);}}
else{
t30=(C_word)C_eqp(t28,lf[390]);
if(C_truep(t30)){
t31=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22518,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t22,a[7]=t18,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t32=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[19],lf[390]);}
else{
t32=t31;
f_22518(2,t32,C_SCHEME_UNDEFINED);}}
else{
t31=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22547,a[2]=t27,a[3]=t20,a[4]=t16,a[5]=t24,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t26)[1])){
C_trace("error");
t32=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[10],t3);}
else{
t32=t31;
f_22547(2,t32,C_SCHEME_UNDEFINED);}}}}}

/* k22545 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22547,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22554,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22562,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22560 in k22545 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22554(2,t2,C_SCHEME_UNDEFINED);}}

/* k22552 in k22545 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21558(t5,t4);}

/* k22516 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22518,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22522,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22522(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22520 in k22516 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21558(t7,t6);}

/* k22481 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22483,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22487,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22487(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22485 in k22481 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21558(t7,t6);}

/* k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_21558(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21558,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21561,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],a[13]=((C_word*)t0)[16],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_21561(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[230]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22383,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[230]);}
else{
t6=t5;
f_22383(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[390]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22418,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[390]);}
else{
t7=t6;
f_22418(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22447,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_22447(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k22445 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22447,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22454,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22462,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22460 in k22445 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22454(2,t2,C_SCHEME_UNDEFINED);}}

/* k22452 in k22445 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21561(t5,t4);}

/* k22416 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22418,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22422,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22422(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22420 in k22416 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21561(t7,t6);}

/* k22381 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22383,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22387,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22387(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22385 in k22381 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21561(t7,t6);}

/* k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_21561(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21561,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21564,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_21564(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21564,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,((C_word*)((C_word*)t0)[10])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21569,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
t5=((C_word*)((C_word*)t0)[9])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t5,C_fix(1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(2)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(3)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t6=t4;
f_21569(2,t6,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 356  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[389],((C_word*)((C_word*)t0)[9])[1]);}}

/* k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21569,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21571,a[2]=((C_word*)t0)[9],a[3]=((C_word)li304),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21653,a[2]=t4,a[3]=((C_word)li307),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21763,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22276,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=t8,a[7]=((C_word*)t0)[4],a[8]=((C_word)li324),tmp=(C_word)a,a+=9,tmp));
t10=((C_word*)t8)[1];
f_22276(t10,t6,C_fix(0));}

/* do2918 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22276(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22276,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22286,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22299,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=t5,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=((C_word)li323),tmp=(C_word)a,a+=10,tmp));
t7=((C_word*)t5)[1];
f_22299(t7,t3,C_SCHEME_END_OF_LIST,C_fix(0),C_SCHEME_FALSE);}}

/* do2921 in do2918 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22299(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22299,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)((C_word*)t0)[8])[1]))){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22309,a[2]=t1,a[3]=((C_word*)t0)[7],a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22327,a[2]=t6,a[3]=t7,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  reverse");
t9=*((C_word*)lf[203]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t5)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22352,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t6,a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 356  modulo");
t9=*((C_word*)lf[145]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,((C_word*)t0)[2]);}}

/* k22350 in do2921 in do2918 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22352,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)t0)[8],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22334,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[2])[1]))){
t5=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t4;
f_22334(t7,t6);}
else{
t5=t4;
f_22334(t5,C_SCHEME_UNDEFINED);}}

/* k22332 in k22350 in do2921 in do2918 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22334(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22334,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_22299(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k22325 in do2921 in do2918 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  add-outcome");
t2=((C_word*)t0)[4];
f_21571(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k22307 in do2921 in do2918 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22309,2,t0,t1);}
if(C_truep((C_word)C_i_member(((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]))){
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}}

/* k22284 in do2918 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22286,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_22276(t3,((C_word*)t0)[2],t2);}

/* k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21763,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21766,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22232,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  sort");
t5=C_retrieve(lf[205]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[4])[1],*((C_word*)lf[385]+1));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22238,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=t4;
f_22238(t6,(C_word)C_i_symbolp(t5));}
else{
t5=t4;
f_22238(t5,C_SCHEME_FALSE);}}}

/* k22236 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22238(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22238,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22242,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22244,a[2]=((C_word)li322),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  sort");
t4=C_retrieve(lf[205]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[3])[1],t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22260,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  reverse");
t3=*((C_word*)lf[203]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k22258 in k22236 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21766(t3,t2);}

/* a22243 in k22236 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22244(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22244,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22252,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  format");
t5=C_retrieve(lf[370]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_SCHEME_FALSE,lf[388],t2);}

/* k22250 in a22243 in k22236 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22252,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22256,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  format");
t3=C_retrieve(lf[370]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[387],((C_word*)t0)[2]);}

/* k22254 in k22250 in a22243 in k22236 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  string-ci<?");
t2=*((C_word*)lf[386]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k22240 in k22236 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21766(t3,t2);}

/* k22230 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21766(t3,t2);}

/* k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_21766(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21766,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21769,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22109,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li321),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_22109(t6,t2,((C_word*)((C_word*)t0)[7])[1],C_fix(0));}

/* do2934 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22109(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22109,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22120,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  max");
t6=*((C_word*)lf[316]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=(C_word)C_i_cddr(t5);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22133,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t9=(C_word)C_i_string_length(t6);
C_trace("ChickenBridge.scm: 356  max");
t10=*((C_word*)lf[316]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t8,((C_word*)t4)[1],t9);}}

/* k22131 in do2934 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22133,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22136,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22195,a[2]=t5,a[3]=((C_word)li320),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_22195(t7,t3,((C_word*)t0)[2],C_fix(0));}

/* do2942 in k22131 in do2934 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22195(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_22195,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t4);
t6=(C_word)C_a_i_plus(&a,2,t3,t5);
t7=t3=t6;
t8=(C_word)C_i_cdr(t2);
t10=t1;
t11=t8;
t12=t3;
t1=t10;
t2=t11;
t3=t12;
goto loop;}}

/* k22134 in k22131 in do2934 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22136,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_times(&a,2,((C_word*)t3)[1],lf[384]);
t5=C_set_block_item(t3,0,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22143,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22152,a[2]=t3,a[3]=t8,a[4]=((C_word)li319),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_22152(t10,t6,((C_word*)t0)[2]);}

/* do2948 in k22134 in k22131 in do2934 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22152(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22152,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cdr(t3);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22177,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t6);
t8=(C_word)C_a_i_divide(&a,2,t7,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 356  decimals");
t9=C_retrieve(lf[121]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,t8,C_fix(3));}}

/* k22175 in do2948 in k22134 in k22131 in do2934 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[5],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_22152(t4,((C_word*)t0)[2],t3);}

/* k22141 in k22134 in k22131 in do2934 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_22109(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k22118 in do2934 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21769,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21773,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22095,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word)li318),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  sort");
t4=C_retrieve(lf[205]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[7])[1],t3);}

/* a22094 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22095(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22095,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 356  before?");
t6=((C_word*)((C_word*)t0)[3])[1];
f_21653(t6,t1,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21773,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21776,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],C_fix(1));
if(C_truep(t4)){
t5=lf[373];
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21817,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 356  make-string");
t7=*((C_word*)lf[383]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,C_fix(5),C_make_character(45));}
else{
t5=t3;
f_21776(2,t5,C_SCHEME_UNDEFINED);}}

/* k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21817,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21820,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 356  newline");
t3=*((C_word*)lf[374]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21820,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21823,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22076,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li317),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_22076(t6,t2,C_fix(0));}

/* do2961 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22076(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22076,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[3])[1]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22086,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("write-char/port");
t4=C_retrieve(lf[376]);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t3,C_make_character(42),*((C_word*)lf[377]+1));}}

/* k22084 in do2961 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22086,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_22076(t3,((C_word*)t0)[2],t2);}

/* k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21823,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21826,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22014,a[2]=((C_word*)t0)[6],a[3]=t4,a[4]=((C_word)li316),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_22014(t6,t2,((C_word*)((C_word*)t0)[4])[1]);}

/* do2966 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22014(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22014,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22024,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  display");
t4=*((C_word*)lf[375]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k22022 in do2966 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22024,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22027,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 356  format");
t4=C_retrieve(lf[370]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_SCHEME_FALSE,lf[382],t3);}

/* k22025 in k22022 in do2966 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22027,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22033,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22047,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,C_fix(5),t2);
C_trace("ChickenBridge.scm: 356  max");
t6=*((C_word*)lf[316]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k22045 in k22025 in k22022 in do2966 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22047,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22049,a[2]=t3,a[3]=((C_word)li315),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_22049(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2971 in k22045 in k22025 in k22022 in do2966 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_22049(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22049,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22059,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[376]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[377]+1));}}

/* k22057 in do2971 in k22045 in k22025 in k22022 in do2966 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22059,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_22049(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k22031 in k22025 in k22022 in do2966 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22033,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22036,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  display");
t3=*((C_word*)lf[375]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k22034 in k22031 in k22025 in k22022 in do2966 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_22036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_22014(t3,((C_word*)t0)[2],t2);}

/* k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21826,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21829,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21834,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t4,a[7]=((C_word)li314),tmp=(C_word)a,a+=8,tmp));
t6=((C_word*)t4)[1];
f_21834(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_21834(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21834,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21847,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,a[7]=t1,a[8]=((C_word*)t0)[6],a[9]=t2,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 356  newline");
t5=*((C_word*)lf[374]+1);
((C_proc2)C_retrieve_proc(t5))(2,t5,t4);}}

/* k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21847,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21850,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_21850(2,t4,lf[379]);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21721,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 356  format");
t6=C_retrieve(lf[370]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[381],t5);}}

/* k21719 in k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21721,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21730,a[2]=t6,a[3]=t3,a[4]=((C_word)li313),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_21730(t8,((C_word*)t0)[2],t4);}

/* do2913 in k21719 in k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_21730(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21730,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21741,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21752,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 356  format");
t6=C_retrieve(lf[370]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[380],t5);}}

/* k21750 in do2913 in k21719 in k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  string-append");
t2=*((C_word*)lf[180]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k21739 in do2913 in k21719 in k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_21730(t4,((C_word*)t0)[2],t3);}

/* k21848 in k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21850,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21856,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21985,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[2])[1],t2);
C_trace("ChickenBridge.scm: 356  max");
t6=*((C_word*)lf[316]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k21983 in k21848 in k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21985,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21987,a[2]=t3,a[3]=((C_word)li312),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_21987(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2987 in k21983 in k21848 in k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_21987(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21987,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21997,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[376]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[377]+1));}}

/* k21995 in do2987 in k21983 in k21848 in k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21997,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_21987(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k21854 in k21848 in k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21856,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21859,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21958,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  min");
t4=*((C_word*)lf[378]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k21956 in k21854 in k21848 in k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21958,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21960,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li311),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_21960(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2993 in k21956 in k21854 in k21848 in k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_21960(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21960,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21970,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_string_ref(((C_word*)t0)[2],t2);
C_trace("write-char/port");
t6=C_retrieve(lf[376]);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,*((C_word*)lf[377]+1));}}

/* k21968 in do2993 in k21956 in k21854 in k21848 in k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21970,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_21960(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k21857 in k21854 in k21848 in k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21859,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21862,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21871,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word*)t0)[5],a[6]=((C_word)li310),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_21871(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do3000 in k21857 in k21854 in k21848 in k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_21871(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21871,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[5]);
t5=(C_word)C_i_assoc(t3,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21884,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21903,a[2]=((C_word*)t0)[3],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(t5);
C_trace("ChickenBridge.scm: 356  number->string");
C_number_to_string(3,0,t7,t8);}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21897,a[2]=((C_word*)t0)[2],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  display");
t8=*((C_word*)lf[375]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[3]);}}}

/* k21895 in do3000 in k21857 in k21854 in k21848 in k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  display");
t2=*((C_word*)lf[375]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21901 in do3000 in k21857 in k21854 in k21848 in k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21903,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21909,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  display");
t4=*((C_word*)lf[375]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k21907 in k21901 in do3000 in k21857 in k21854 in k21848 in k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21909,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21912,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21919,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,C_fix(5),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 356  max");
t5=*((C_word*)lf[316]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_fix(0));}

/* k21917 in k21907 in k21901 in do3000 in k21857 in k21854 in k21848 in k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21919,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21921,a[2]=t3,a[3]=((C_word)li309),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_21921(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do3007 in k21917 in k21907 in k21901 in do3000 in k21857 in k21854 in k21848 in k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_21921(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21921,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21931,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[376]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[377]+1));}}

/* k21929 in do3007 in k21917 in k21907 in k21901 in do3000 in k21857 in k21854 in k21848 in k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21931,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_21921(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k21910 in k21907 in k21901 in do3000 in k21857 in k21854 in k21848 in k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  display");
t2=*((C_word*)lf[375]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21882 in do3000 in k21857 in k21854 in k21848 in k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21871(t3,((C_word*)t0)[2],t2);}

/* k21860 in k21857 in k21854 in k21848 in k21845 in do2981 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21834(t3,((C_word*)t0)[2],t2);}

/* k21827 in k21824 in k21821 in k21818 in k21815 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  newline");
t2=*((C_word*)lf[374]+1);
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[2]);}

/* k21774 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21776,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(1)))){
C_trace("ChickenBridge.scm: 356  values");
C_values(2,0,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21788,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21799,a[2]=((C_word)li308),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a21798 in k21774 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21799(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21799,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(t2);
C_trace("ChickenBridge.scm: 356  append");
t5=*((C_word*)lf[18]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t1,t3,lf[372],t4);}

/* k21786 in k21774 in k21771 in k21767 in k21764 in k21761 in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
C_trace("ChickenBridge.scm: 356  make-markov");
t2=C_retrieve(lf[350]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}}

/* before? in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_21653(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21653,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_TRUE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21663,a[2]=t4,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21701,a[2]=t2,a[3]=((C_word)li306),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  list-index");
t7=C_retrieve(lf[71]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,t6,t4);}}

/* a21700 in before? in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21701(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21701,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k21661 in before? in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21663,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21666,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21691,a[2]=((C_word*)t0)[4],a[3]=((C_word)li305),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  list-index");
t4=C_retrieve(lf[71]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a21690 in k21661 in before? in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21691(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21691,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k21664 in k21661 in before? in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[7],t1))){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}
else{
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[7],t1))){
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 356  before?");
t4=((C_word*)((C_word*)t0)[3])[1];
f_21653(t4,((C_word*)t0)[6],t2,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* add-outcome in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_21571(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21571,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21575,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21643,a[2]=t2,a[3]=((C_word)li303),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  list-find");
t6=C_retrieve(lf[72]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* a21642 in add-outcome in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21643(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21643,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(((C_word*)t0)[2],t3));}

/* k21573 in add-outcome in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21575,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_cddr(t1);
t4=(C_word)C_i_assoc(((C_word*)t0)[5],t3);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t4);
t6=(C_word)C_i_cadr(t4);
t7=(C_word)C_a_i_plus(&a,2,C_fix(1),t6);
t8=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_set_car(t5,t7));}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21625,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 356  tail");
t7=C_retrieve(lf[64]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21593,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 356  format");
t4=C_retrieve(lf[370]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,C_SCHEME_FALSE,lf[371],((C_word*)t0)[3]);}}

/* k21591 in k21573 in add-outcome in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21593,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],C_fix(1));
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* k21623 in k21573 in add-outcome in k21567 in k21562 in k21559 in k21556 in markov-analyze in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21625,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(1));
t3=(C_word)C_a_i_list(&a,1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_set_cdr(t1,t3));}

/* next-in-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21454(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21454,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21458,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  pattern-data");
f_15049(t3,t2);}

/* k21456 in next-in-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21458,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
t3=(C_word)C_i_car(t1);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21487,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_check_structure(t3,lf[361]);
t6=(C_word)C_i_block_ref(t3,C_fix(2));
C_trace("ChickenBridge.scm: 356  next-1");
f_15671(t4,t6);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_set_car(t1,t4);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 356  graph-node-datum");
f_20873(((C_word*)t0)[2],t6);}}

/* k21485 in k21456 in next-in-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21487,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21492,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=t3,a[6]=((C_word)li301),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_21492(t7,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2836 in k21485 in k21456 in next-in-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_21492(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21492,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[5])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nullp(t2));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21502,a[2]=((C_word*)t0)[5],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t6)){
t7=t5;
f_21502(2,t7,(C_word)C_i_set_car(((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]));}
else{
C_trace("ChickenBridge.scm: 356  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[368],((C_word*)t0)[3]);}}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21517,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_check_structure(t6,lf[361]);
t8=(C_word)C_i_block_ref(t6,C_fix(3));
t9=(C_word)C_eqp(((C_word*)t0)[3],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(t2);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t5;
f_21517(t12,t11);}
else{
t10=t5;
f_21517(t10,C_SCHEME_UNDEFINED);}}}

/* k21515 in do2836 in k21485 in k21456 in next-in-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_21517(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21492(t3,((C_word*)t0)[2],t2);}

/* k21500 in do2836 in k21485 in k21456 in next-in-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  graph-node-datum");
f_20873(((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20936(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr3r,(void*)f_20936r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_20936r(t0,t1,t2,t3);}}

static void C_ccall f_20936r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(17);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20940,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21198,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=C_fix(1);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21207,a[2]=t9,a[3]=((C_word)li299),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t11=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t6,t10,t7);}
else{
C_trace("ChickenBridge.scm: 356  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[367],((C_word*)t4)[1]);}}

/* parse-graph-item in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21207(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21207,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21211,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=t3;
f_21211(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[366],t2);}}

/* k21209 in parse-graph-item in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21211,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21216,a[2]=((C_word*)t0)[4],a[3]=((C_word)li298),tmp=(C_word)a,a+=4,tmp);
C_apply(4,0,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* a21215 in k21209 in parse-graph-item in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21216(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+46)){
C_save_and_reclaim((void*)tr3r,(void*)f_21216r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_21216r(t0,t1,t2,t3);}}

static void C_ccall f_21216r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(46);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21220,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t2,a[10]=t1,a[11]=((C_word*)t0)[2],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_21220(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[364]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21358,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[364]);}
else{
t20=t19;
f_21358(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[365]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21393,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[365]);}
else{
t21=t20;
f_21393(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21422,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_21422(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k21420 in a21215 in k21209 in parse-graph-item in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21422,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21429,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21437,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21435 in k21420 in a21215 in k21209 in parse-graph-item in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21429(2,t2,C_SCHEME_UNDEFINED);}}

/* k21427 in k21420 in a21215 in k21209 in parse-graph-item in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21220(t5,t4);}

/* k21391 in a21215 in k21209 in parse-graph-item in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21393,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21397,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21397(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21395 in k21391 in a21215 in k21209 in parse-graph-item in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21220(t7,t6);}

/* k21356 in a21215 in k21209 in parse-graph-item in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21358,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21362,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21362(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21360 in k21356 in a21215 in k21209 in parse-graph-item in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21220(t7,t6);}

/* k21218 in a21215 in k21209 in parse-graph-item in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_21220(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21220,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21223,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_21223(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[364]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21258,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[364]);}
else{
t6=t5;
f_21258(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[365]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21293,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[365]);}
else{
t7=t6;
f_21293(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21322,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_21322(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k21320 in k21218 in a21215 in k21209 in parse-graph-item in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21322,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21329,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21337,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21335 in k21320 in k21218 in a21215 in k21209 in parse-graph-item in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21329(2,t2,C_SCHEME_UNDEFINED);}}

/* k21327 in k21320 in k21218 in a21215 in k21209 in parse-graph-item in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21223(t5,t4);}

/* k21291 in k21218 in a21215 in k21209 in parse-graph-item in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21293,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21297,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21297(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21295 in k21291 in k21218 in a21215 in k21209 in parse-graph-item in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21223(t7,t6);}

/* k21256 in k21218 in a21215 in k21209 in parse-graph-item in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21258,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21262,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21262(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21260 in k21256 in k21218 in a21215 in k21209 in parse-graph-item in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21223(t7,t6);}

/* k21221 in k21218 in a21215 in k21209 in parse-graph-item in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_21223(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21223,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21226,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_21226(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k21224 in k21221 in k21218 in a21215 in k21209 in parse-graph-item in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21226,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21229,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=t2;
f_21229(t3,C_SCHEME_UNDEFINED);}
else{
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[6])[1]);
t4=t2;
f_21229(t4,t3);}}

/* k21227 in k21224 in k21221 in k21218 in a21215 in k21209 in parse-graph-item in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_21229(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21229,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=((C_word*)t0)[5];
t5=((C_word*)t0)[4];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,4,lf[361],t5,t6,t7));}

/* k21196 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20940(2,t3,t2);}

/* k20938 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20940,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20943,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_20943(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[319]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21103,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 356  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[319]);}
else{
t18=t17;
f_21103(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[320]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21138,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 356  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[320]);}
else{
t19=t18;
f_21138(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21167,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 356  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_21167(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k21165 in k20938 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21167,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21174,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21182,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21180 in k21165 in k20938 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21174(2,t2,C_SCHEME_UNDEFINED);}}

/* k21172 in k21165 in k20938 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20943(t5,t4);}

/* k21136 in k20938 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21138,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21142,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21142(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21140 in k21136 in k20938 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20943(t7,t6);}

/* k21101 in k20938 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21103,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21107,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21107(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21105 in k21101 in k20938 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20943(t7,t6);}

/* k20941 in k20938 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_20943(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20943,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20946,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_20946(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[319]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21003,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 356  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[319]);}
else{
t6=t5;
f_21003(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[320]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21038,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 356  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[320]);}
else{
t7=t6;
f_21038(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21067,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 356  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_21067(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k21065 in k20941 in k20938 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21067,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21074,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21082,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21080 in k21065 in k20941 in k20938 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21074(2,t2,C_SCHEME_UNDEFINED);}}

/* k21072 in k21065 in k20941 in k20938 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20946(t5,t4);}

/* k21036 in k20941 in k20938 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21038,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21042,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21042(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21040 in k21036 in k20941 in k20938 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20946(t7,t6);}

/* k21001 in k20941 in k20938 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21003,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21007,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21007(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21005 in k21001 in k20941 in k20938 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_21007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20946(t7,t6);}

/* k20944 in k20941 in k20938 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_20946(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20946,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20949,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_20949(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 356  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k20947 in k20944 in k20941 in k20938 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20949,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20952,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 356  %alloc-pattern");
f_15320(t2);}

/* k20950 in k20947 in k20944 in k20941 in k20938 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20952,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20958,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20964,a[2]=((C_word)li297),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  initialize-pattern");
f_15330(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[363],"next-in-graph"),t5);}

/* a20963 in k20950 in k20947 in k20944 in k20941 in k20938 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20964(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20964,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20970,a[2]=((C_word)li296),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20982,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-data");
f_15049(t5,t3);}

/* k20980 in a20963 in k20950 in k20947 in k20944 in k20941 in k20938 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(t1);
C_trace("for-each");
t3=*((C_word*)lf[224]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a20969 in a20963 in k20950 in k20947 in k20944 in k20941 in k20938 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20970(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20970,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 356  graph-node-datum");
f_20873(t1,t2);}

/* k20956 in k20950 in k20947 in k20944 in k20941 in k20938 in make-graph in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* graph-node-datum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_20873(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20873,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[361]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20533(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20533,3,t0,t1,t2);}
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20536,a[2]=t4,a[3]=((C_word)li290),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20715,a[2]=t1,a[3]=t4,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  pattern-data");
f_15049(t6,t2);}

/* k20713 in next-in-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20715,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20719,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 356  pattern-cache");
f_15265(t2,((C_word*)t0)[4]);}

/* k20717 in k20713 in next-in-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20719,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20721,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li293),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_20721(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do2677 in k20717 in k20713 in next-in-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_20721(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20721,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20731,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t1,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
t8=t7;
f_20731(2,t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
if(C_truep(t8)){
t9=t7;
f_20731(2,t9,t8);}
else{
t9=(C_word)C_i_car(t2);
t10=(C_word)C_i_car(t9);
t11=t3;
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20646,a[2]=t13,a[3]=((C_word)li292),tmp=(C_word)a,a+=4,tmp));
t15=((C_word*)t13)[1];
f_20646(t15,t7,t10,t11,C_SCHEME_TRUE);}}}

/* do2662 in do2677 in k20717 in k20713 in next-in-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_20646(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20646,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20656,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t6)){
t8=t7;
f_20656(t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
t9=t7;
f_20656(t9,(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t5)[1])));}}

/* k20654 in do2662 in do2677 in k20717 in k20713 in next-in-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_20656(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20656,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_eqp(t2,lf[115]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20663,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t3)){
t5=t4;
f_20663(t5,t3);}
else{
t5=(C_word)C_i_car(((C_word*)t0)[4]);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
t7=(C_word)C_i_equalp(t5,t6);
if(C_truep(t7)){
t8=t4;
f_20663(t8,t7);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[3]);
t9=t4;
f_20663(t9,(C_word)C_eqp(t8,lf[115]));}}}}

/* k20661 in k20654 in do2662 in do2677 in k20717 in k20713 in next-in-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_20663(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_20646(t5,((C_word*)t0)[2],t3,t4,((C_word*)((C_word*)t0)[6])[1]);}

/* k20729 in do2677 in k20717 in k20713 in next-in-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20731,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20734,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 356  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[359],((C_word*)t0)[6]);}
else{
t3=t2;
f_20734(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_20721(t3,((C_word*)t0)[7],t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[8])[1]);}}

/* k20732 in k20729 in do2677 in k20717 in k20713 in next-in-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20734,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20738,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_i_cadr(t3);
t5=(C_word)C_i_car(((C_word*)t0)[3]);
t6=(C_word)C_i_cddr(t5);
C_trace("ChickenBridge.scm: 356  select-output");
t7=((C_word*)((C_word*)t0)[2])[1];
f_20536(t7,t2,t4,t6);}

/* k20736 in k20732 in k20729 in do2677 in k20717 in k20713 in next-in-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20738,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20741,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[3]))){
t4=t3;
f_20741(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_20741(2,t5,(C_word)C_i_set_car(((C_word*)t0)[3],((C_word*)((C_word*)t0)[5])[1]));}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20758,a[2]=t6,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word)li291),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_20758(t8,t3,((C_word*)t0)[3]);}}}

/* do2686 in k20736 in k20732 in k20729 in do2677 in k20717 in k20713 in next-in-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_20758(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_20758,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_set_car(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_set_cdr(t2,((C_word*)t0)[5]);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20774,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 356  pattern-cache-set!");
f_15256(t6,((C_word*)t0)[3],t7);}
else{
t4=(C_word)C_i_cdr(t2);
t10=t1;
t11=t4;
t1=t10;
t2=t11;
goto loop;}}

/* k20772 in do2686 in k20736 in k20732 in k20729 in do2677 in k20717 in k20713 in next-in-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_set_cdr(t2,C_SCHEME_END_OF_LIST));}

/* k20739 in k20736 in k20732 in k20729 in do2677 in k20717 in k20713 in next-in-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* select-output in next-in-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_20536(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20536,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20604,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  tb:ranf");
f_8059(t5,t2);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20548,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word)li289),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_20548(t8,t1,t3,C_SCHEME_FALSE,C_fix(0));}}

/* do2646 in select-output in next-in-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_20548(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20548,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 356  select-output");
t7=((C_word*)((C_word*)t0)[4])[1];
f_20536(t7,t1,((C_word*)t6)[1],((C_word*)t0)[3]);}
else{
t7=(C_word)C_i_car(t2);
t8=C_set_block_item(t5,0,t7);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20584,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t5,a[6]=t6,tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_caddr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_numberp(t10))){
t11=t9;
f_20584(2,t11,(C_word)C_i_caddr(((C_word*)t5)[1]));}
else{
t11=(C_word)C_i_caddr(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 356  next-1");
f_15671(t9,t11);}}}

/* k20582 in do2646 in select-output in next-in-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20584,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_i_set_car(t4,((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_20548(t7,((C_word*)t0)[2],t6,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k20602 in select-output in next-in-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20604,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20609,a[2]=t3,a[3]=t1,a[4]=((C_word)li288),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_20609(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2656 in k20602 in select-output in next-in-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_20609(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20609,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t3);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[3],t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_car(t5));}
else{
t5=(C_word)C_i_cdr(t2);
t8=t1;
t9=t5;
t1=t8;
t2=t9;
goto loop;}}

/* make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20046(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr3r,(void*)f_20046r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_20046r(t0,t1,t2,t3);}}

static void C_ccall f_20046r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a=C_alloc(22);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20050,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20527,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19973,a[2]=t7,a[3]=t10,a[4]=t8,a[5]=((C_word)li286),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_19973(t12,t6,t7,C_SCHEME_FALSE,t8,C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 356  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[358],((C_word*)t4)[1]);}}

/* do2547 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_19973(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19973,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_i_car(t2);
t10=t9;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19818,a[2]=((C_word*)t0)[2],a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t7,a[8]=t8,a[9]=t11,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t11)[1]))){
t13=t12;
f_19818(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 356  error");
t13=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[357],((C_word*)t11)[1]);}}}

/* k19816 in do2547 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19818,2,t0,t1);}
t2=(C_word)C_i_member(lf[353],((C_word*)((C_word*)t0)[9])[1]);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19824,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
if(C_truep(t2)){
t4=t3;
f_19824(2,t4,t2);}
else{
t4=(C_word)C_i_member(lf[355],((C_word*)((C_word*)t0)[9])[1]);
if(C_truep(t4)){
t5=t3;
f_19824(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 356  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[356],((C_word*)((C_word*)t0)[9])[1]);}}}

/* k19822 in k19816 in do2547 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19824,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t11=t10;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19836,a[2]=t3,a[3]=t9,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=t7,tmp=(C_word)a,a+=13,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19909,a[2]=t15,a[3]=t12,a[4]=t5,a[5]=t10,a[6]=t3,a[7]=((C_word*)t0)[2],a[8]=((C_word)li285),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_19909(t17,t13);}

/* do2525 in k19822 in k19816 in do2547 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_19909(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_19909,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
if(C_truep(t2)){
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[7])+1,t8);
t15=t1;
t1=t15;
goto loop;}}

/* k19834 in k19822 in k19816 in do2547 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19836,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19839,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19852,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[12],a[4]=((C_word)li284),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t4=*((C_word*)lf[224]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* a19851 in k19834 in k19822 in k19816 in do2547 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19852(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19852,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19856,a[2]=t8,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t6,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t10=(C_word)C_i_car(t2);
t11=C_set_block_item(t4,0,t10);
t12=(C_word)C_i_cdr(t2);
t13=(C_word)C_i_nullp(t12);
t14=(C_truep(t13)?C_fix(1):(C_word)C_i_cadr(t2));
t15=C_set_block_item(t8,0,t14);
t16=C_set_block_item(t6,0,((C_word*)t8)[1]);
if(C_truep((C_word)C_i_numberp(((C_word*)t8)[1]))){
t17=t9;
f_19856(t17,C_SCHEME_UNDEFINED);}
else{
t17=C_set_block_item(t8,0,C_SCHEME_FALSE);
t18=t9;
f_19856(t18,t17);}}
else{
t10=C_set_block_item(t4,0,t2);
t11=C_set_block_item(t8,0,C_fix(1));
t12=C_set_block_item(t6,0,C_fix(1));
t13=t9;
f_19856(t13,t12);}}

/* k19854 in a19851 in k19834 in k19822 in k19816 in do2547 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_19856(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19856,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19859,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_truep(((C_word*)((C_word*)t0)[2])[1])?((C_word*)((C_word*)t0)[6])[1]:C_SCHEME_FALSE);
if(C_truep(t3)){
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t2;
f_19859(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t5=t2;
f_19859(t5,t4);}}

/* k19857 in k19854 in a19851 in k19834 in k19822 in k19816 in do2547 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_19859(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19859,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k19837 in k19834 in k19822 in k19816 in do2547 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19839,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19850,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 356  reverse");
t3=*((C_word*)lf[203]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k19848 in k19837 in k19834 in k19822 in k19816 in do2547 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19850,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[10])[1],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[9])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19990,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t6=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t6)){
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],t8))){
t9=t5;
f_19990(2,t9,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 356  error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,lf[354],((C_word*)t0)[2]);}}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_19990(2,t10,t9);}}

/* k19988 in k19848 in k19837 in k19834 in k19822 in k19816 in do2547 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19990,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=((C_word*)((C_word*)t0)[4])[1];
f_19973(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k20525 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20050(2,t3,t2);}

/* k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20050,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20053,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_20053(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[319]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20397,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 356  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[319]);}
else{
t22=t21;
f_20397(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[320]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20432,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 356  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[320]);}
else{
t23=t22;
f_20432(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[352]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20467,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 356  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[352]);}
else{
t24=t23;
f_20467(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20496,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 356  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_20496(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k20494 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20496,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20503,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20511,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20509 in k20494 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20503(2,t2,C_SCHEME_UNDEFINED);}}

/* k20501 in k20494 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20053(t5,t4);}

/* k20465 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20467,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20471,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20471(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20469 in k20465 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20053(t7,t6);}

/* k20430 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20432,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20436,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20436(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20434 in k20430 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20053(t7,t6);}

/* k20395 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20397,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20401,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20401(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20399 in k20395 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20053(t7,t6);}

/* k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_20053(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20053,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20056,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_20056(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[319]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20262,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 356  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[319]);}
else{
t6=t5;
f_20262(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[320]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20297,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 356  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[320]);}
else{
t7=t6;
f_20297(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[352]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20332,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 356  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[352]);}
else{
t8=t7;
f_20332(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20361,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 356  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_20361(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k20359 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20361,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20368,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20376,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20374 in k20359 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20368(2,t2,C_SCHEME_UNDEFINED);}}

/* k20366 in k20359 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20056(t5,t4);}

/* k20330 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20332,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20336,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20336(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20334 in k20330 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20056(t7,t6);}

/* k20295 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20297,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20301,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20301(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20299 in k20295 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20056(t7,t6);}

/* k20260 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20262,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20266,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20266(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20264 in k20260 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20056(t7,t6);}

/* k20054 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_20056(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20056,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20059,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_20059(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[319]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20127,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 356  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[319]);}
else{
t6=t5;
f_20127(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[320]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20162,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 356  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[320]);}
else{
t7=t6;
f_20162(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[352]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20197,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 356  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[352]);}
else{
t8=t7;
f_20197(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20226,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 356  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_20226(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k20224 in k20054 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20226,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20233,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20241,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20239 in k20224 in k20054 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20233(2,t2,C_SCHEME_UNDEFINED);}}

/* k20231 in k20224 in k20054 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20059(t5,t4);}

/* k20195 in k20054 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20197,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20201,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20201(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20199 in k20195 in k20054 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20059(t7,t6);}

/* k20160 in k20054 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20162,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20166,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20166(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20164 in k20160 in k20054 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20059(t7,t6);}

/* k20125 in k20054 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20127,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20131,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20131(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20129 in k20125 in k20054 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20059(t7,t6);}

/* k20057 in k20054 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_20059(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20059,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20062,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_20062(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 356  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k20060 in k20057 in k20054 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20062,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20065,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 356  %alloc-pattern");
f_15320(t2);}

/* k20063 in k20060 in k20057 in k20054 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20065,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20071,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20098,a[2]=((C_word)li283),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  initialize-pattern");
f_15330(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[351],"next-in-markov"),t4);}

/* a20097 in k20063 in k20060 in k20057 in k20054 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20098(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20098,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20106,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-data");
f_15049(t4,t3);}

/* k20104 in a20097 in k20063 in k20060 in k20057 in k20054 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[224]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k20069 in k20063 in k20060 in k20057 in k20054 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20071,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20074,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_20074(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20084,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 356  make-list");
t7=C_retrieve(lf[69]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t3,t6,lf[115]);}}

/* k20082 in k20069 in k20063 in k20060 in k20057 in k20054 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20074(t3,t2);}

/* k20072 in k20069 in k20063 in k20060 in k20057 in k20054 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_20074(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20074,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20077,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-cache-set!");
f_15256(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k20075 in k20072 in k20069 in k20063 in k20060 in k20057 in k20054 in k20051 in k20048 in make-markov in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_20077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19613(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19613,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19617,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-data");
f_15049(t3,t2);}

/* k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19617,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19620,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  pattern-period");
f_15103(t2,((C_word*)t0)[2]);}

/* k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19620,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19623,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 356  pattern-flags");
f_15031(t2,((C_word*)t0)[2]);}

/* k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19623,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19629,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19792,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  bitwise-test");
f_7848(t4,t1,C_fix(4));}

/* k19790 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19792,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_19629(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19805,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  period-count");
f_14881(t2,((C_word*)t0)[2]);}}

/* k19803 in k19790 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19805,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19809,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  period-length");
f_14899(t2,((C_word*)t0)[2]);}

/* k19807 in k19803 in k19790 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],t1))){
C_trace("ChickenBridge.scm: 356  recalc-weightings");
f_19501(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t2=((C_word*)t0)[3];
f_19629(2,t2,C_SCHEME_UNDEFINED);}}

/* k19627 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19629,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19635,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
t3=t2;
f_19635(t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19766,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19785,a[2]=((C_word*)t0)[4],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  random-item-count");
f_18651(t4,((C_word*)t0)[4]);}}

/* k19783 in k19627 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19785,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
C_trace("ChickenBridge.scm: 356  random-item-count-set!");
f_18642(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k19764 in k19627 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19766,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19773,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  random-item-count");
f_18651(t2,((C_word*)t0)[2]);}

/* k19771 in k19764 in k19627 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19773,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19777,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  random-item-min");
f_18615(t2,((C_word*)t0)[2]);}

/* k19775 in k19771 in k19764 in k19627 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_19635(t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k19633 in k19627 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_19635(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19635,NULL,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  random-item-datum");
f_18561(((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19641,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  pattern-cache");
f_15265(t2,((C_word*)t0)[2]);}}

/* k19639 in k19633 in k19627 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19641,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19645,a[2]=((C_word)li279),tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19683,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19725,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=t2,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 356  pick");
f_19645(t7,t2,t1);}

/* k19723 in k19639 in k19633 in k19627 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19725,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19727,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li281),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_19727(t5,((C_word*)t0)[2],t1);}

/* do2499 in k19723 in k19639 in k19633 in k19627 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_19727(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19727,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19746,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19749,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  random-item-max");
f_18633(t4,t2);}

/* k19747 in do2499 in k19723 in k19639 in k19633 in k19627 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19749,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19756,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  random-item-count");
f_18651(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_19746(t2,C_SCHEME_FALSE);}}

/* k19754 in k19747 in do2499 in k19723 in k19639 in k19633 in k19627 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19756,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19760,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  random-item-max");
f_18633(t2,((C_word*)t0)[2]);}

/* k19758 in k19754 in k19747 in do2499 in k19723 in k19639 in k19633 in k19627 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_19746(t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* k19744 in do2499 in k19723 in k19639 in k19633 in k19627 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_19746(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19746,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19742,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pick");
f_19645(t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)t0)[2]);
t3=((C_word*)t0)[7];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k19740 in k19744 in do2499 in k19723 in k19639 in k19633 in k19627 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_19727(t2,((C_word*)t0)[2],t1);}

/* k19681 in k19639 in k19633 in k19627 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19683,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19686,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[3]);
if(C_truep(t3)){
t4=t2;
f_19686(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19700,a[2]=t5,a[3]=((C_word)li280),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_19700(t7,t2,((C_word*)t0)[2]);}}

/* do2503 in k19681 in k19639 in k19633 in k19627 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_19700(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19700,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19710,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 356  random-item-count-set!");
f_18642(t3,t4,C_fix(0));}}

/* k19708 in do2503 in k19681 in k19639 in k19633 in k19627 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19700(t3,((C_word*)t0)[2],t2);}

/* k19684 in k19681 in k19639 in k19633 in k19627 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 356  random-item-datum");
f_18561(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* pick in k19639 in k19633 in k19627 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_19645(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19645,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19653,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  tb:ranf");
f_8059(t4,t3);}

/* k19651 in pick in k19639 in k19633 in k19627 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19653,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19655,a[2]=t3,a[3]=((C_word)li278),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_19655(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do2494 in k19651 in pick in k19639 in k19633 in k19627 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_19655(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19655,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19676,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 356  random-item-index");
f_18579(t4,t5);}

/* k19674 in do2494 in k19651 in pick in k19639 in k19633 in k19627 in k19621 in k19618 in k19615 in next-in-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[5],t1))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_19655(t3,((C_word*)t0)[4],t2,((C_word*)t0)[5]);}}

/* recalc-weightings in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_19501(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19501,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19611,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  pattern-data");
f_15049(t4,t2);}

/* k19609 in recalc-weightings in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19611,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=lf[349];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19508,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19570,a[2]=t7,a[3]=t4,a[4]=((C_word)li276),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_19570(t9,t5,t2);}

/* do2466 in k19609 in recalc-weightings in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_19570(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19570,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19599,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19603,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 356  random-item-weight");
f_18597(t4,t5);}}

/* k19601 in do2466 in k19609 in recalc-weightings in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  next-1");
f_15671(((C_word*)t0)[2],t1);}

/* k19597 in do2466 in k19609 in recalc-weightings in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19599,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19584,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 356  random-item-index-set!");
f_18570(t4,t5,((C_word*)((C_word*)t0)[5])[1]);}

/* k19582 in k19597 in do2466 in k19609 in recalc-weightings in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19570(t3,((C_word*)t0)[2],t2);}

/* k19506 in k19609 in recalc-weightings in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19508,2,t0,t1);}
if(C_truep(((C_word*)t0)[6])){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19516,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=((C_word)li275),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_19516(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 356  pattern-cache-set!");
f_15256(((C_word*)t0)[3],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);}}

/* do2472 in k19506 in k19609 in recalc-weightings in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_19516(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19516,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 356  pattern-cache-set!");
f_15256(t1,((C_word*)t0)[4],((C_word*)t6)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19549,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t6,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19561,a[2]=t7,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 356  random-item-index");
f_18579(t8,t9);}}

/* k19559 in do2472 in k19506 in k19609 in recalc-weightings in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19561,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_times(&a,2,t2,C_retrieve(lf[110]));
C_trace("ChickenBridge.scm: 356  floor");
t4=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t3);}

/* k19547 in do2472 in k19506 in k19609 in recalc-weightings in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19549,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19533,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 356  random-item-index-set!");
f_18570(t4,t5,((C_word*)((C_word*)t0)[6])[1]);}

/* k19531 in k19547 in do2472 in k19506 in k19609 in recalc-weightings in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_19516(t4,((C_word*)t0)[2],t3,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18734(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_18734r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18734r(t0,t1,t2,t3);}}

static void C_ccall f_18734r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(7);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18738,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19051,a[2]=((C_word)li273),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t6=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,t2);}

/* %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19051(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19051,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19058,a[2]=t4,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t8=(C_word)C_i_car(t2);
t9=C_set_block_item(t4,0,t8);
t10=(C_word)C_i_cdr(t2);
t11=C_set_block_item(t6,0,t10);
t12=t7;
f_19058(t12,t11);}
else{
t8=C_set_block_item(t4,0,t2);
t9=t7;
f_19058(t9,t8);}}

/* k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_19058(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19058,NULL,2,t0,t1);}
t2=C_fix(1);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)((C_word*)t0)[4])[1];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19061,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t7,a[9]=t5,a[10]=t3,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_19061(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[348]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19364,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 356  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[348]);}
else{
t22=t21;
f_19364(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[234]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19399,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 356  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[234]);}
else{
t23=t22;
f_19399(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[235]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19434,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 356  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[235]);}
else{
t24=t23;
f_19434(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19463,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 356  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)((C_word*)t0)[4])[1]);}
else{
t24=t23;
f_19463(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k19461 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19463,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19470,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19478,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19476 in k19461 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19470(2,t2,C_SCHEME_UNDEFINED);}}

/* k19468 in k19461 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19061(t5,t4);}

/* k19432 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19434,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19438,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19438(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19436 in k19432 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19061(t7,t6);}

/* k19397 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19399,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19403,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19403(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19401 in k19397 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19061(t7,t6);}

/* k19362 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19368,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19368(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19366 in k19362 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19061(t7,t6);}

/* k19059 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_19061(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19061,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19064,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_19064(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[348]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19229,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 356  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[348]);}
else{
t6=t5;
f_19229(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[234]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19264,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 356  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[234]);}
else{
t7=t6;
f_19264(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[235]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19299,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 356  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[235]);}
else{
t8=t7;
f_19299(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19328,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 356  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_19328(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k19326 in k19059 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19328,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19335,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19343,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19341 in k19326 in k19059 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19335(2,t2,C_SCHEME_UNDEFINED);}}

/* k19333 in k19326 in k19059 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19064(t5,t4);}

/* k19297 in k19059 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19299,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19303,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19303(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19301 in k19297 in k19059 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19064(t7,t6);}

/* k19262 in k19059 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19264,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19268,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19268(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19266 in k19262 in k19059 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19064(t7,t6);}

/* k19227 in k19059 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19229,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19233,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19233(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19231 in k19227 in k19059 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19064(t7,t6);}

/* k19062 in k19059 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_19064(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19064,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19067,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_19067(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[348]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19094,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 356  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[348]);}
else{
t6=t5;
f_19094(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[234]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19129,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 356  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[234]);}
else{
t7=t6;
f_19129(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[235]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19164,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 356  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[235]);}
else{
t8=t7;
f_19164(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19193,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 356  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_19193(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k19191 in k19062 in k19059 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19193,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19200,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19208,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19206 in k19191 in k19062 in k19059 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19200(2,t2,C_SCHEME_UNDEFINED);}}

/* k19198 in k19191 in k19062 in k19059 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19067(t5,t4);}

/* k19162 in k19062 in k19059 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19164,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19168,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19168(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19166 in k19162 in k19062 in k19059 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19067(t7,t6);}

/* k19127 in k19062 in k19059 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19129,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19133,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19133(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19131 in k19127 in k19062 in k19059 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19067(t7,t6);}

/* k19092 in k19062 in k19059 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19094,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19098,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19098(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19096 in k19092 in k19062 in k19059 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19067(t7,t6);}

/* k19065 in k19062 in k19059 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_19067(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19067,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19070,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_19070(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 356  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)((C_word*)t0)[2])[1]);}}

/* k19068 in k19065 in k19062 in k19059 in k19056 in %make-random-item in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19070,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=((C_word*)((C_word*)t0)[5])[1];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[3])[1];
t6=((C_word*)((C_word*)t0)[2])[1];
t7=t2;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,9,lf[337],t3,C_SCHEME_FALSE,t4,t5,t6,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18738,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18741,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  %alloc-pattern");
f_15320(t2);}

/* k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18741,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[4]);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_TRUE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18747,a[2]=t10,a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t4,a[9]=t2,a[10]=t8,tmp=(C_word)a,a+=11,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19015,a[2]=t8,a[3]=t6,a[4]=((C_word)li272),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t13=*((C_word*)lf[224]+1);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t11,t12,((C_word*)t0)[4]);}

/* a19014 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19015(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19015,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19019,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 356  random-item-min");
f_18615(t3,t2);}

/* k19017 in a19014 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19019,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19022,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 356  random-item-max");
f_18633(t2,((C_word*)t0)[2]);}

/* k19020 in k19017 in a19014 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19022,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19025,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 356  random-item-weight");
f_18597(t2,((C_word*)t0)[2]);}

/* k19023 in k19020 in k19017 in a19014 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19025,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19028,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 356  random-item-datum");
f_18561(t2,((C_word*)t0)[2]);}

/* k19026 in k19023 in k19020 in k19017 in a19014 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19028,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19031,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19041,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern?");
f_15016(t3,t1);}

/* k19039 in k19026 in k19023 in k19020 in k19017 in a19014 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19041,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_19031(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_19031(t2,C_SCHEME_UNDEFINED);}}

/* k19029 in k19026 in k19023 in k19020 in k19017 in a19014 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_19031(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[4]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18747,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]);
t3=(C_truep(t2)?C_fix(1):((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18754,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(4));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t5;
f_18754(t8,t7);}
else{
t6=t5;
f_18754(t6,C_SCHEME_UNDEFINED);}}

/* k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_18754(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[50],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18754,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[9];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_18757,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[9],a[6]=t11,a[7]=((C_word*)t0)[2],a[8]=((C_word*)t0)[3],a[9]=((C_word*)t0)[4],a[10]=t5,a[11]=t3,a[12]=((C_word*)t0)[5],a[13]=((C_word*)t0)[6],a[14]=((C_word*)t0)[7],a[15]=((C_word*)t0)[8],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_18757(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[319]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18921,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 356  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[319]);}
else{
t18=t17;
f_18921(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[320]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18956,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 356  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[320]);}
else{
t19=t18;
f_18956(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18985,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 356  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[9]);}
else{
t19=t18;
f_18985(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k18983 in k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18985,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18992,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19000,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18998 in k18983 in k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_19000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18992(2,t2,C_SCHEME_UNDEFINED);}}

/* k18990 in k18983 in k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18757(t5,t4);}

/* k18954 in k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18956,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18960,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18960(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18958 in k18954 in k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18757(t7,t6);}

/* k18919 in k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18921,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18925,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18925(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18923 in k18919 in k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18757(t7,t6);}

/* k18755 in k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_18757(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18757,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18760,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18760(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[319]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18821,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 356  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[319]);}
else{
t6=t5;
f_18821(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[320]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18856,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 356  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[320]);}
else{
t7=t6;
f_18856(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18885,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 356  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_18885(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k18883 in k18755 in k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18885,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18892,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18900,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18898 in k18883 in k18755 in k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18892(2,t2,C_SCHEME_UNDEFINED);}}

/* k18890 in k18883 in k18755 in k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18760(t5,t4);}

/* k18854 in k18755 in k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18856,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18860,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18860(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18858 in k18854 in k18755 in k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18760(t7,t6);}

/* k18819 in k18755 in k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18821,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18825,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18825(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18823 in k18819 in k18755 in k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18760(t7,t6);}

/* k18758 in k18755 in k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_18760(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18760,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18763,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18763(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 356  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k18761 in k18758 in k18755 in k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18763,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18766,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18778,a[2]=((C_word)li271),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  initialize-pattern");
f_15330(t2,((C_word*)t0)[9],t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[347],"next-in-weighting"),t4);}

/* a18777 in k18761 in k18758 in k18755 in k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18778(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18778,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18784,a[2]=t2,a[3]=((C_word)li270),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18800,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-data");
f_15049(t5,t3);}

/* k18798 in a18777 in k18761 in k18758 in k18755 in k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[224]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a18783 in a18777 in k18761 in k18758 in k18755 in k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18784(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18784,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18792,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  random-item-datum");
f_18561(t3,t2);}

/* k18790 in a18783 in a18777 in k18761 in k18758 in k18755 in k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  fn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k18764 in k18761 in k18758 in k18755 in k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18766,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18769,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 356  recalc-weightings");
f_19501(t2,((C_word*)t0)[3],C_SCHEME_TRUE);}
else{
t3=t2;
f_18769(2,t3,C_SCHEME_UNDEFINED);}}

/* k18767 in k18764 in k18761 in k18758 in k18755 in k18752 in k18745 in k18739 in k18736 in make-weighting in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* random-item-count in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_18651(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18651,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[337]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* random-item-count-set! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_18642(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18642,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[337]);
C_trace("ChickenBridge.scm: 356  ##sys#block-set!");
t5=*((C_word*)lf[212]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* random-item-max in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_18633(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18633,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[337]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* random-item-min in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_18615(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18615,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[337]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* random-item-weight in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_18597(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18597,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[337]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* random-item-index in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_18579(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18579,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[337]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* random-item-index-set! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_18570(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18570,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[337]);
C_trace("ChickenBridge.scm: 356  ##sys#block-set!");
t5=*((C_word*)lf[212]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* random-item-datum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_18561(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18561,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[337]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18339(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18339,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18342,a[2]=((C_word)li260),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18389,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  pattern-data");
f_15049(t4,t2);}

/* k18387 in next-in-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18389,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18392,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18415,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18534,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  pattern-cache");
f_15265(t6,((C_word*)t0)[2]);}
else{
t4=t2;
f_18392(t4,C_SCHEME_UNDEFINED);}}

/* k18532 in k18387 in next-in-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  next-1");
f_15671(((C_word*)t0)[2],t1);}

/* k18413 in k18387 in next-in-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18415,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18422,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t1))){
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_pairp(t3))){
t4=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_cdddr(t1);
if(C_truep((C_word)C_i_pairp(t5))){
C_apply(5,0,t2,((C_word*)t0)[4],((C_word*)t0)[3],t1);}
else{
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_cadr(t1);
t8=(C_word)C_i_caddr(t1);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18469,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=((C_word*)t0)[4],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 356  pattern-length");
f_15067(t9,((C_word*)t0)[2]);}}
else{
t5=(C_word)C_i_car(t1);
t6=(C_word)C_i_cadr(t1);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18496,a[2]=t6,a[3]=t5,a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 356  pattern-length");
f_15067(t7,((C_word*)t0)[2]);}}
else{
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18515,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 356  pattern-length");
f_15067(t5,((C_word*)t0)[2]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18530,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 356  pattern-length");
f_15067(t3,((C_word*)t0)[2]);}}

/* k18528 in k18413 in k18387 in next-in-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18530,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 356  rotate-items");
t3=((C_word*)t0)[5];
f_18342(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k18513 in k18413 in k18387 in next-in-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18515,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 356  rotate-items");
t3=((C_word*)t0)[5];
f_18342(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k18494 in k18413 in k18387 in next-in-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18496,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 356  rotate-items");
t3=((C_word*)t0)[6];
f_18342(7,t3,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),t2);}

/* k18467 in k18413 in k18387 in next-in-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18469,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[8]);
t3=(C_word)C_a_i_minus(&a,2,t1,t2);
C_trace("ChickenBridge.scm: 356  rotate-items");
t4=((C_word*)t0)[7];
f_18342(7,t4,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k18420 in k18413 in k18387 in next-in-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_18392(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k18390 in k18387 in next-in-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_18392(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[3]);
t5=(C_word)C_i_set_cdr(((C_word*)t0)[3],t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t3);}

/* rotate-items in next-in-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18342(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[10],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_18342,7,t0,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18348,a[2]=t8,a[3]=t4,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=((C_word)li259),tmp=(C_word)a,a+=8,tmp));
t10=((C_word*)t8)[1];
f_18348(t10,t1,t3);}

/* do2234 in rotate-items in next-in-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_18348(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18348,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[6]))){
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[4]);
t5=(C_word)C_i_list_ref(((C_word*)t0)[5],t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18364,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 356  list-set!");
t7=C_retrieve(lf[67]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t6,((C_word*)t0)[5],t2,t5);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}}

/* k18362 in do2234 in rotate-items in next-in-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18367,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 356  list-set!");
t4=C_retrieve(lf[67]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,((C_word*)t0)[3],t3,((C_word*)t0)[2]);}

/* k18365 in k18362 in do2234 in rotate-items in next-in-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18367,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18348(t3,((C_word*)t0)[2],t2);}

/* make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17865(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_17865r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_17865r(t0,t1,t2,t3);}}

static void C_ccall f_17865r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17869,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18329,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_17869(t8,t7);}}

/* k18327 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17869(t3,t2);}

/* k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_17869(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17869,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17872,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_17872(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[319]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18202,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 356  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[319]);}
else{
t22=t21;
f_18202(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[320]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18237,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 356  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[320]);}
else{
t23=t22;
f_18237(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[335]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18272,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 356  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[335]);}
else{
t24=t23;
f_18272(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18301,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 356  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_18301(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k18299 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18301,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18308,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18316,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18314 in k18299 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18308(2,t2,C_SCHEME_UNDEFINED);}}

/* k18306 in k18299 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17872(t5,t4);}

/* k18270 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18272,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18276,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18276(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18274 in k18270 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17872(t7,t6);}

/* k18235 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18237,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18241,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18241(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18239 in k18235 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17872(t7,t6);}

/* k18200 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18202,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18206,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18206(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18204 in k18200 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17872(t7,t6);}

/* k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_17872(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17872,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17875,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17875(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[319]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18067,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 356  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[319]);}
else{
t6=t5;
f_18067(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[320]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18102,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 356  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[320]);}
else{
t7=t6;
f_18102(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[335]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18137,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 356  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[335]);}
else{
t8=t7;
f_18137(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18166,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 356  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_18166(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k18164 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18166,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18173,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18181,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18179 in k18164 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18173(2,t2,C_SCHEME_UNDEFINED);}}

/* k18171 in k18164 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17875(t5,t4);}

/* k18135 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18137,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18141,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18141(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18139 in k18135 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17875(t7,t6);}

/* k18100 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18102,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18106,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18106(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18104 in k18100 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17875(t7,t6);}

/* k18065 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18067,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18071,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18071(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18069 in k18065 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17875(t7,t6);}

/* k17873 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_17875(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17875,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17878,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17878(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[319]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17932,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 356  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[319]);}
else{
t6=t5;
f_17932(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[320]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17967,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 356  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[320]);}
else{
t7=t6;
f_17967(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[335]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18002,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 356  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[335]);}
else{
t8=t7;
f_18002(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18031,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 356  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_18031(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k18029 in k17873 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18031,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18038,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18046,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18044 in k18029 in k17873 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18038(2,t2,C_SCHEME_UNDEFINED);}}

/* k18036 in k18029 in k17873 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17878(t5,t4);}

/* k18000 in k17873 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18002,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18006,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18006(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18004 in k18000 in k17873 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_18006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17878(t7,t6);}

/* k17965 in k17873 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17967,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17971,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17971(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17969 in k17965 in k17873 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17878(t7,t6);}

/* k17930 in k17873 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17932,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17936,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17936(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17934 in k17930 in k17873 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17878(t7,t6);}

/* k17876 in k17873 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_17878(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17878,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17881,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17881(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 356  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k17879 in k17876 in k17873 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17881,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17884,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 356  %alloc-pattern");
f_15320(t2);}

/* k17882 in k17879 in k17876 in k17873 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17884,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17890,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17899,a[2]=((C_word)li257),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  initialize-pattern");
f_15330(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[334],"next-in-rotation"),t5);}

/* a17898 in k17882 in k17879 in k17876 in k17873 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17899(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17899,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17911,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-data");
f_15049(t4,t3);}

/* k17909 in a17898 in k17882 in k17879 in k17876 in k17873 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[224]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k17888 in k17882 in k17879 in k17876 in k17873 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17890,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17893,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-cache-set!");
f_15256(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k17891 in k17888 in k17882 in k17879 in k17876 in k17873 in k17870 in k17867 in make-rotation in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17789(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17789,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17793,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-data");
f_15049(t3,t2);}

/* k17791 in next-in-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17793,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17796,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17812,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-length");
f_15067(t4,((C_word*)t0)[2]);}
else{
t4=t2;
f_17796(2,t4,C_SCHEME_UNDEFINED);}}

/* k17810 in k17791 in next-in-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17812,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17822,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 356  tb:rani");
f_8052(t3,t1);}

/* k17820 in k17810 in k17791 in next-in-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17822,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17824,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word)li255),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_17824(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do2134 in k17820 in k17810 in k17791 in next-in-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_17824(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17824,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[5]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)t0)[3]));}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17841,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t5,a[6]=t1,a[7]=((C_word*)t0)[2],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 356  list-set!");
t10=C_retrieve(lf[67]);
((C_proc5)C_retrieve_proc(t10))(5,t10,t8,((C_word*)t0)[3],t2,t9);}}

/* k17839 in do2134 in k17820 in k17810 in k17791 in next-in-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17841,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17844,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 356  list-set!");
t3=C_retrieve(lf[67]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k17842 in k17839 in do2134 in k17820 in k17810 in k17791 in next-in-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17844,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17855,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 356  tb:rani");
f_8052(t3,((C_word*)t0)[2]);}

/* k17853 in k17842 in k17839 in do2134 in k17820 in k17810 in k17791 in next-in-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_17824(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k17794 in k17791 in next-in-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17526(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_17526r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_17526r(t0,t1,t2,t3);}}

static void C_ccall f_17526r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17530,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17779,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_17530(t8,t7);}}

/* k17777 in make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17530(t3,t2);}

/* k17528 in make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_17530(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17530,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17533,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_17533(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[319]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17687,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 356  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[319]);}
else{
t18=t17;
f_17687(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[320]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17722,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 356  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[320]);}
else{
t19=t18;
f_17722(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17751,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 356  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_17751(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k17749 in k17528 in make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17751,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17758,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17766,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17764 in k17749 in k17528 in make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17758(2,t2,C_SCHEME_UNDEFINED);}}

/* k17756 in k17749 in k17528 in make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17533(t5,t4);}

/* k17720 in k17528 in make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17722,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17726,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17726(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17724 in k17720 in k17528 in make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17533(t7,t6);}

/* k17685 in k17528 in make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17687,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17691,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17691(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17689 in k17685 in k17528 in make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17533(t7,t6);}

/* k17531 in k17528 in make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_17533(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17533,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17536,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_17536(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[319]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17587,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 356  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[319]);}
else{
t6=t5;
f_17587(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[320]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17622,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 356  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[320]);}
else{
t7=t6;
f_17622(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17651,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 356  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_17651(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k17649 in k17531 in k17528 in make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17651,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17658,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17666,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17664 in k17649 in k17531 in k17528 in make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17658(2,t2,C_SCHEME_UNDEFINED);}}

/* k17656 in k17649 in k17531 in k17528 in make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17536(t5,t4);}

/* k17620 in k17531 in k17528 in make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17622,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17626,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17626(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17624 in k17620 in k17531 in k17528 in make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17536(t7,t6);}

/* k17585 in k17531 in k17528 in make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17587,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17591,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17591(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17589 in k17585 in k17531 in k17528 in make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17536(t7,t6);}

/* k17534 in k17531 in k17528 in make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_17536(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17536,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17539,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17539(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 356  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k17537 in k17534 in k17531 in k17528 in make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17539,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17542,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 356  %alloc-pattern");
f_15320(t2);}

/* k17540 in k17537 in k17534 in k17531 in k17528 in make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17542,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17548,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17554,a[2]=((C_word)li253),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  initialize-pattern");
f_15330(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[332],"next-in-heap"),t5);}

/* a17553 in k17540 in k17537 in k17534 in k17531 in k17528 in make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17554(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17554,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17566,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-data");
f_15049(t4,t3);}

/* k17564 in a17553 in k17540 in k17537 in k17534 in k17531 in k17528 in make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[224]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k17546 in k17540 in k17537 in k17534 in k17531 in k17528 in make-heap in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17490(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17490,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17494,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-data");
f_15049(t3,t2);}

/* k17492 in next-in-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17494,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17503,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17510,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  pattern-period");
f_15103(t4,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(t1);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17516,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 356  pattern-data-set!");
f_15040(t4,((C_word*)t0)[2],t5);}}

/* k17514 in k17492 in next-in-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k17508 in k17492 in next-in-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  period-count-set!");
f_14872(((C_word*)t0)[2],t1,C_fix(1));}

/* k17501 in k17492 in next-in-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}

/* make-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17243(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_17243r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_17243r(t0,t1,t2,t3);}}

static void C_ccall f_17243r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17247,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_17247(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_17247(t8,t7);}}

/* k17245 in make-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_17247(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17247,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17250,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_17250(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[319]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17396,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 356  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[319]);}
else{
t18=t17;
f_17396(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[320]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17431,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 356  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[320]);}
else{
t19=t18;
f_17431(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17460,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 356  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_17460(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k17458 in k17245 in make-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17460,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17467,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17475,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17473 in k17458 in k17245 in make-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17467(2,t2,C_SCHEME_UNDEFINED);}}

/* k17465 in k17458 in k17245 in make-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17250(t5,t4);}

/* k17429 in k17245 in make-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17431,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17435,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17435(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17433 in k17429 in k17245 in make-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17250(t7,t6);}

/* k17394 in k17245 in make-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17396,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17400,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17400(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17398 in k17394 in k17245 in make-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17250(t7,t6);}

/* k17248 in k17245 in make-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_17250(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17250,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17253,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_17253(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[319]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17296,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 356  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[319]);}
else{
t6=t5;
f_17296(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[320]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17331,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 356  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[320]);}
else{
t7=t6;
f_17331(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17360,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 356  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_17360(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k17358 in k17248 in k17245 in make-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17360,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17367,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17375,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17373 in k17358 in k17248 in k17245 in make-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17367(2,t2,C_SCHEME_UNDEFINED);}}

/* k17365 in k17358 in k17248 in k17245 in make-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17253(t5,t4);}

/* k17329 in k17248 in k17245 in make-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17331,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17335,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17335(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17333 in k17329 in k17248 in k17245 in make-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17253(t7,t6);}

/* k17294 in k17248 in k17245 in make-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17296,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17300,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17300(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17298 in k17294 in k17248 in k17245 in make-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17253(t7,t6);}

/* k17251 in k17248 in k17245 in make-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_17253(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17253,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17256,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17256(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 356  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k17254 in k17251 in k17248 in k17245 in make-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17256,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17259,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 356  %alloc-pattern");
f_15320(t2);}

/* k17257 in k17254 in k17251 in k17248 in k17245 in make-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17259,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17265,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17267,a[2]=((C_word)li250),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  initialize-pattern");
f_15330(t3,t1,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[330],"next-in-line"),t4);}

/* a17266 in k17257 in k17254 in k17251 in k17248 in k17245 in make-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17267(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17267,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17275,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-data");
f_15049(t4,t3);}

/* k17273 in a17266 in k17257 in k17254 in k17251 in k17248 in k17245 in make-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[224]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k17263 in k17257 in k17254 in k17251 in k17248 in k17245 in make-line in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17028(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17028,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17032,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-cache");
f_15265(t3,t2);}

/* k17030 in next-in-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17032,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[322]);
t4=(C_word)C_i_block_ref(t2,C_fix(1));
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17038,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t6,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],C_fix(0)))){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17062,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t9=t1;
t10=(C_word)C_i_check_structure(t9,lf[322]);
t11=(C_word)C_i_block_ref(t9,C_fix(5));
C_trace("ChickenBridge.scm: 356  next-1");
f_15671(t8,t11);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17241,a[2]=t7,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  palin-len");
f_16469(t8,t1);}}

/* k17239 in k17030 in next-in-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17241,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],t1))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17194,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  palin-inc-set!");
f_16478(t2,((C_word*)t0)[3],C_fix(-1));}
else{
t2=((C_word*)t0)[2];
f_17038(2,t2,C_SCHEME_UNDEFINED);}}

/* k17192 in k17239 in k17030 in next-in-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17194,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[322]);
t4=(C_word)C_i_block_ref(t2,C_fix(4));
t5=(C_word)C_eqp(t4,C_SCHEME_TRUE);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17206,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t5)){
t7=t6;
f_17206(t7,t5);}
else{
if(C_truep((C_word)C_i_pairp(t4))){
t7=(C_word)C_i_cdr(t4);
if(C_truep((C_word)C_i_pairp(t7))){
t8=(C_word)C_i_cadr(t4);
t9=t6;
f_17206(t9,(C_word)C_eqp(t8,C_SCHEME_TRUE));}
else{
t8=t6;
f_17206(t8,C_SCHEME_FALSE);}}
else{
t7=t6;
f_17206(t7,C_SCHEME_FALSE);}}}

/* k17204 in k17192 in k17239 in k17030 in next-in-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_17206(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17206,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(2));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_17038(2,t4,t3);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_17038(2,t4,t3);}}

/* k17060 in k17030 in next-in-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17062,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17065,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 356  palin-len");
f_16469(t2,((C_word*)t0)[2]);}

/* k17063 in k17060 in k17030 in next-in-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17065,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],C_fix(-2));
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17071,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t4=((C_word*)t0)[2];
t5=((C_word*)t0)[5];
t6=(C_word)C_i_check_structure(t4,lf[322]);
C_trace("ChickenBridge.scm: 356  ##sys#block-set!");
t7=*((C_word*)lf[212]+1);
((C_proc5)(void*)(*((C_word*)t7+1)))(5,t7,t3,t4,C_fix(4),t5);}

/* k17069 in k17063 in k17060 in k17030 in next-in-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17071,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17074,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 356  palin-inc-set!");
f_16478(t2,((C_word*)t0)[2],C_fix(1));}

/* k17072 in k17069 in k17063 in k17060 in k17030 in next-in-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17074,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17077,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17162,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t3)){
t5=t4;
f_17162(t5,t3);}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t5=(C_word)C_i_car(((C_word*)t0)[6]);
t6=t4;
f_17162(t6,(C_word)C_eqp(t5,C_SCHEME_TRUE));}
else{
t5=t4;
f_17162(t5,C_SCHEME_FALSE);}}}

/* k17160 in k17072 in k17069 in k17063 in k17060 in k17030 in next-in-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_17162(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
if(C_truep(((C_word*)t0)[4])){
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_17077(t3,t2);}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_17077(t3,t2);}}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_17077(t3,t2);}}

/* k17075 in k17072 in k17069 in k17063 in k17060 in k17030 in next-in-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_17077(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17077,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17083,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17156,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  pattern-flags");
f_15031(t3,((C_word*)t0)[2]);}

/* k17154 in k17075 in k17072 in k17069 in k17063 in k17060 in k17030 in next-in-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  bitwise-test");
f_7848(((C_word*)t0)[2],t1,C_fix(2));}

/* k17081 in k17075 in k17072 in k17069 in k17063 in k17060 in k17030 in next-in-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17083,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17086,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 356  pattern-period");
f_15103(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_17038(2,t2,C_SCHEME_UNDEFINED);}}

/* k17084 in k17081 in k17075 in k17072 in k17069 in k17063 in k17060 in k17030 in next-in-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17086,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],C_fix(2));
switch(((C_word*)t0)[4]){
case C_SCHEME_FALSE:
C_trace("ChickenBridge.scm: 356  period-count-set!");
f_14872(((C_word*)t0)[3],t1,t2);
case C_SCHEME_TRUE:
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(2)):(C_word)C_a_i_minus(&a,2,t2,C_fix(3)));
C_trace("ChickenBridge.scm: 356  period-count-set!");
f_14872(((C_word*)t0)[3],t1,t3);
default:
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[327]))){
t3=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 356  period-count-set!");
f_14872(((C_word*)t0)[3],t1,t3);}
else{
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[328]))){
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(1)):(C_word)C_a_i_minus(&a,2,t2,C_fix(2)));
C_trace("ChickenBridge.scm: 356  period-count-set!");
f_14872(((C_word*)t0)[3],t1,t3);}
else{
C_trace("ChickenBridge.scm: 356  period-count-set!");
f_14872(((C_word*)t0)[3],t1,t2);}}}}

/* k17036 in k17030 in next-in-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17038,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17041,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)t0)[2];
t4=(C_word)C_i_check_structure(t3,lf[322]);
t5=(C_word)C_i_block_ref(t3,C_fix(3));
t6=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],t5);
t7=((C_word*)t0)[2];
t8=(C_word)C_i_check_structure(t7,lf[322]);
C_trace("ChickenBridge.scm: 356  ##sys#block-set!");
t9=*((C_word*)lf[212]+1);
((C_proc5)(void*)(*((C_word*)t9+1)))(5,t9,t2,t7,C_fix(1),t6);}

/* k17039 in k17036 in k17030 in next-in-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17041,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17048,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-data");
f_15049(t2,((C_word*)t0)[2]);}

/* k17046 in k17039 in k17036 in k17030 in next-in-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)((C_word*)t0)[2])[1]));}

/* make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16558(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_16558r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16558r(t0,t1,t2,t3);}}

static void C_ccall f_16558r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16562,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_16562(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_16562(t8,t7);}}

/* k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_16562(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16562,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16565,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_16565(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[319]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16899,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 356  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[319]);}
else{
t22=t21;
f_16899(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[320]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16934,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 356  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[320]);}
else{
t23=t22;
f_16934(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[326]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16969,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 356  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[326]);}
else{
t24=t23;
f_16969(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16998,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 356  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_16998(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k16996 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16998,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17005,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17013,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17011 in k16996 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17005(2,t2,C_SCHEME_UNDEFINED);}}

/* k17003 in k16996 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_17005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16565(t5,t4);}

/* k16967 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16969,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16973,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16973(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16971 in k16967 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16565(t7,t6);}

/* k16932 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16934,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16938,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16938(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16936 in k16932 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16565(t7,t6);}

/* k16897 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16899,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16903,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16903(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16901 in k16897 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16565(t7,t6);}

/* k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_16565(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16565,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16568,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16568(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[319]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16764,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 356  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[319]);}
else{
t6=t5;
f_16764(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[320]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16799,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 356  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[320]);}
else{
t7=t6;
f_16799(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[326]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16834,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 356  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[326]);}
else{
t8=t7;
f_16834(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16863,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 356  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_16863(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16861 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16863,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16870,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16878,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16876 in k16861 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16870(2,t2,C_SCHEME_UNDEFINED);}}

/* k16868 in k16861 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16568(t5,t4);}

/* k16832 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16834,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16838,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16838(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16836 in k16832 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16568(t7,t6);}

/* k16797 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16799,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16803,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16803(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16801 in k16797 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16568(t7,t6);}

/* k16762 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16764,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16768,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16768(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16766 in k16762 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16568(t7,t6);}

/* k16566 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_16568(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16568,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16571,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16571(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[319]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16629,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 356  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[319]);}
else{
t6=t5;
f_16629(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[320]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16664,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 356  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[320]);}
else{
t7=t6;
f_16664(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[326]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16699,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 356  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[326]);}
else{
t8=t7;
f_16699(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16728,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 356  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_16728(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16726 in k16566 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16728,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16735,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16743,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16741 in k16726 in k16566 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16735(2,t2,C_SCHEME_UNDEFINED);}}

/* k16733 in k16726 in k16566 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16571(t5,t4);}

/* k16697 in k16566 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16699,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16703,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16703(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16701 in k16697 in k16566 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16571(t7,t6);}

/* k16662 in k16566 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16664,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16668,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16668(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16666 in k16662 in k16566 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16571(t7,t6);}

/* k16627 in k16566 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16629,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16633,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16633(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16631 in k16627 in k16566 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16571(t7,t6);}

/* k16569 in k16566 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_16571(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16571,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16574,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16574(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 356  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k16572 in k16569 in k16566 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16574,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16577,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 356  %alloc-pattern");
f_15320(t2);}

/* k16575 in k16572 in k16569 in k16566 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16577,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16583,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16600,a[2]=((C_word)li247),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  initialize-pattern");
f_15330(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t4,C_retrieve2(lf[325],"next-in-palindrome"),t5);}

/* a16599 in k16575 in k16572 in k16569 in k16566 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16600(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16600,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16608,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-data");
f_15049(t4,t3);}

/* k16606 in a16599 in k16575 in k16572 in k16569 in k16566 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[224]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16581 in k16575 in k16572 in k16569 in k16566 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16583,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16586,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_record(&a,6,lf[322],C_fix(-2),t3,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);
C_trace("ChickenBridge.scm: 356  pattern-cache-set!");
f_15256(t2,((C_word*)t0)[4],t5);}

/* k16584 in k16581 in k16575 in k16572 in k16569 in k16566 in k16563 in k16560 in make-palindrome in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* palin-inc-set! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_16478(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16478,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[322]);
C_trace("ChickenBridge.scm: 356  ##sys#block-set!");
t5=*((C_word*)lf[212]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* palin-len in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_16469(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16469,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[322]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* next-in-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16397(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16397,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16401,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  pattern-data");
f_15049(t3,t2);}

/* k16399 in next-in-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16401,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16404,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=t2;
f_16404(t5,(C_word)C_i_set_cdr(t1,t4));}
else{
t4=t2;
f_16404(t4,C_SCHEME_UNDEFINED);}}

/* k16402 in k16399 in next-in-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_16404(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16142(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_16142r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16142r(t0,t1,t2,t3);}}

static void C_ccall f_16142r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16146,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_16146(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_16146(t8,t7);}}

/* k16144 in make-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_16146(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16146,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16149,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_16149(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[319]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16303,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 356  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[319]);}
else{
t18=t17;
f_16303(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[320]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16338,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 356  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[320]);}
else{
t19=t18;
f_16338(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16367,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 356  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_16367(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k16365 in k16144 in make-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16367,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16374,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16382,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16380 in k16365 in k16144 in make-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16374(2,t2,C_SCHEME_UNDEFINED);}}

/* k16372 in k16365 in k16144 in make-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16149(t5,t4);}

/* k16336 in k16144 in make-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16338,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16342,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16342(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16340 in k16336 in k16144 in make-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16149(t7,t6);}

/* k16301 in k16144 in make-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16303,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16307,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16307(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16305 in k16301 in k16144 in make-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16149(t7,t6);}

/* k16147 in k16144 in make-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_16149(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16149,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16152,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_16152(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[319]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16203,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 356  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[319]);}
else{
t6=t5;
f_16203(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[320]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16238,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 356  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[320]);}
else{
t7=t6;
f_16238(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16267,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 356  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_16267(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k16265 in k16147 in k16144 in make-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16267,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16274,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16282,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16280 in k16265 in k16147 in k16144 in make-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16274(2,t2,C_SCHEME_UNDEFINED);}}

/* k16272 in k16265 in k16147 in k16144 in make-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16152(t5,t4);}

/* k16236 in k16147 in k16144 in make-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16238,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16242,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16242(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16240 in k16236 in k16147 in k16144 in make-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16152(t7,t6);}

/* k16201 in k16147 in k16144 in make-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16203,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16207,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 356  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16207(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16205 in k16201 in k16147 in k16144 in make-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16152(t7,t6);}

/* k16150 in k16147 in k16144 in make-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_16152(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16152,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16155,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16155(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 356  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k16153 in k16150 in k16147 in k16144 in make-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16155,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16158,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 356  %alloc-pattern");
f_15320(t2);}

/* k16156 in k16153 in k16150 in k16147 in k16144 in make-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16158,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16164,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16170,a[2]=((C_word)li242),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  initialize-pattern");
f_15330(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[318],"next-in-cycle"),t5);}

/* a16169 in k16156 in k16153 in k16150 in k16147 in k16144 in make-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16170(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16170,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16182,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-data");
f_15049(t4,t3);}

/* k16180 in a16169 in k16156 in k16153 in k16150 in k16147 in k16144 in make-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[224]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k16162 in k16156 in k16153 in k16150 in k16147 in k16144 in make-cycle in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* reset-period in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_16027(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16027,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16140,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern?");
f_15016(t3,t2);}

/* k16138 in reset-period in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16140,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16037,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-period");
f_15103(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(1));}}

/* k16035 in k16138 in reset-period in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16037,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16040,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16125,a[2]=t6,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  period-stream");
f_14917(t7,t1);}

/* k16123 in k16035 in k16138 in reset-period in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16125,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16132,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16136,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  period-stream");
f_14917(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
f_16040(2,t2,C_SCHEME_UNDEFINED);}}

/* k16134 in k16123 in k16035 in k16138 in reset-period in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  next-1");
f_15671(((C_word*)t0)[2],t1);}

/* k16130 in k16123 in k16035 in k16138 in reset-period in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[271]);
C_trace("ChickenBridge.scm: 356  ##sys#block-set!");
t4=*((C_word*)lf[212]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(2),t1);}

/* k16038 in k16035 in k16138 in reset-period in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16040,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16122,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 356  period-length");
f_14899(t2,((C_word*)t0)[3]);}

/* k16120 in k16038 in k16035 in k16138 in reset-period in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16122,2,t0,t1);}
t2=(C_word)C_eqp(t1,C_SCHEME_TRUE);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16048,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=((C_word*)t0)[3];
t6=(C_word)C_i_check_structure(t5,lf[271]);
t7=t4;
f_16048(2,t7,(C_word)C_i_block_ref(t5,C_fix(4)));}
else{
C_trace("ChickenBridge.scm: 356  period-length");
f_14899(t4,((C_word*)t0)[3]);}}

/* k16046 in k16120 in k16038 in k16035 in k16138 in reset-period in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16048,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16051,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16057,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16112,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  pattern-flags");
f_15031(t5,((C_word*)t0)[3]);}
else{
t5=t4;
f_16057(2,t5,C_SCHEME_FALSE);}}

/* k16110 in k16046 in k16120 in k16038 in k16035 in k16138 in reset-period in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  bitwise-test");
f_7848(((C_word*)t0)[2],t1,C_fix(8));}

/* k16055 in k16046 in k16120 in k16038 in k16035 in k16138 in reset-period in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16057,2,t0,t1);}
if(C_truep(t1)){
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16060,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16076,a[2]=t3,a[3]=((C_word)li240),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  map-pattern-data");
f_15981(t4,t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_16051(t2,C_SCHEME_UNDEFINED);}}

/* a16075 in k16055 in k16046 in k16120 in k16038 in k16035 in k16138 in reset-period in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16076(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16076,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16105,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  reset-period");
f_16027(t3,t2);}

/* k16103 in a16075 in k16055 in k16046 in k16120 in k16038 in k16035 in k16138 in reset-period in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16105,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16086,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-period");
f_15103(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k16084 in k16103 in a16075 in k16055 in k16046 in k16120 in k16038 in k16035 in k16138 in reset-period in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16086,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16089,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16101,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  period-omit");
f_14953(t3,t1);}

/* k16099 in k16084 in k16103 in a16075 in k16055 in k16046 in k16120 in k16038 in k16035 in k16138 in reset-period in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16101,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 356  period-omit-set!");
f_14944(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k16087 in k16084 in k16103 in a16075 in k16055 in k16046 in k16120 in k16038 in k16035 in k16138 in reset-period in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16089,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k16058 in k16055 in k16046 in k16120 in k16038 in k16035 in k16138 in reset-period in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16060,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16070,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 356  max");
t4=*((C_word*)lf[316]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(0));}
else{
t2=((C_word*)t0)[2];
f_16051(t2,C_SCHEME_UNDEFINED);}}

/* k16068 in k16058 in k16055 in k16046 in k16120 in k16038 in k16035 in k16138 in reset-period in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16051(t3,t2);}

/* k16049 in k16046 in k16120 in k16038 in k16035 in k16138 in reset-period in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_16051(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16051,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16054,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  period-count-set!");
f_14872(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k16052 in k16049 in k16046 in k16120 in k16038 in k16035 in k16138 in reset-period in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* map-pattern-data in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15981(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15981,NULL,3,t1,t2,t3);}
t4=t3;
t5=(C_word)C_i_check_structure(t4,lf[280]);
t6=(C_word)C_i_block_ref(t4,C_fix(13));
t7=t6;
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t3);}

/* next-in-pattern in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15972(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15972,NULL,2,t1,t2);}
t3=t2;
t4=(C_word)C_i_check_structure(t3,lf[280]);
t5=(C_word)C_i_block_ref(t3,C_fix(12));
t6=t5;
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}

/* next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15671(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15671,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15678,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern?");
f_15016(t3,t2);}

/* k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15678,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15681,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-period");
f_15103(t2,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 356  obj");
t2=((C_word*)t0)[2];
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15967,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  promise?");
t3=C_retrieve(lf[315]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}}

/* k15965 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  force");
t2=C_retrieve(lf[314]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15681,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15684,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15952,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 356  period-count");
f_14881(t5,t1);}

/* k15950 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15952,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15907,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15944,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  period-reps");
f_14971(t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_15684(2,t2,C_SCHEME_UNDEFINED);}}

/* k15942 in k15950 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15944,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[280]);
t4=(C_word)C_i_block_ref(t2,C_fix(8));
if(C_truep((C_word)C_i_greater_or_equalp(t1,t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15936,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  pattern-value-set!");
f_15112(t5,((C_word*)t0)[4],lf[309]);}
else{
t5=((C_word*)t0)[2];
f_15907(t5,C_SCHEME_UNDEFINED);}}

/* k15934 in k15942 in k15950 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15936,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15939,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-state-set!");
f_15130(t2,((C_word*)t0)[2],lf[307]);}

/* k15937 in k15934 in k15942 in k15950 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[309]);
t3=((C_word*)t0)[2];
f_15907(t3,t2);}

/* k15905 in k15950 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15907(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15907,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15913,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[4])[1];
if(C_truep(t3)){
t4=t2;
f_15913(t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15930,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  reset-period");
f_16027(t4,((C_word*)t0)[2]);}}

/* k15928 in k15905 in k15950 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_15913(t2,(C_word)C_i_nequalp(t1,C_fix(0)));}

/* k15911 in k15905 in k15950 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15913(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15913,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[295]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15917,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-value-set!");
f_15112(t3,((C_word*)t0)[2],lf[295]);}
else{
t2=((C_word*)t0)[3];
f_15684(2,t2,C_SCHEME_UNDEFINED);}}

/* k15915 in k15911 in k15905 in k15950 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  pattern-state-set!");
f_15130(((C_word*)t0)[3],((C_word*)t0)[2],lf[307]);}

/* k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15684,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15690,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  pattern-flags");
f_15031(t2,((C_word*)t0)[3]);}}

/* k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15690,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[280]);
t4=(C_word)C_i_block_ref(t2,C_fix(9));
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15696,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t8,a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=((C_word*)t0)[3],tmp=(C_word)a,a+=9,tmp);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15782,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t9,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 356  bitwise-test");
f_7848(t10,t1,C_fix(1));}

/* k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15782,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15785,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15798,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  next-in-pattern");
f_15972(t3,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15805,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15894,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  bitwise-test");
f_7848(t3,((C_word*)t0)[2],C_fix(8));}}

/* k15892 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15894,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15901,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  period-length");
f_14899(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_15805(t2,C_SCHEME_FALSE);}}

/* k15899 in k15892 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_15805(t2,(C_word)C_eqp(t1,C_SCHEME_TRUE));}

/* k15803 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15805(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15805,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15807,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li236),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_15807(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1782 in k15803 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15807(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15807,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep(((C_word*)t4)[1])){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15814,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15856,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t7,a[5]=((C_word)li235),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_15856(t9,t5);}}

/* do1786 in do1782 in k15803 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15856(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15856,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15891,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 356  pattern-datum");
f_15085(t2,((C_word*)t0)[3]);}

/* k15889 in do1786 in do1782 in k15803 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15891,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[295]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15866,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15873,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)t0)[2])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15880,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  next-in-pattern");
f_15972(t5,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 356  next-in-pattern");
f_15972(t4,((C_word*)t0)[3]);}}
else{
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}

/* k15878 in k15889 in do1786 in do1782 in k15803 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15880,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16025,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern?");
f_15016(t2,t1);}

/* k16023 in k15878 in k15889 in do1786 in do1782 in k15803 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16025,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16000,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-period");
f_15103(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_15873(2,t2,((C_word*)t0)[2]);}}

/* k15998 in k16023 in k15878 in k15889 in do1786 in do1782 in k15803 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16000,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16021,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  period-omit");
f_14953(t2,t1);}

/* k16019 in k15998 in k16023 in k15878 in k15889 in do1786 in do1782 in k15803 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16021,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16009,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16017,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  period-omit");
f_14953(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[4];
f_15873(2,t2,((C_word*)t0)[2]);}}

/* k16015 in k16019 in k15998 in k16023 in k15878 in k15889 in do1786 in do1782 in k15803 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16017,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 356  period-omit-set!");
f_14944(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k16007 in k16019 in k15998 in k16023 in k15878 in k15889 in do1786 in do1782 in k15803 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_16009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_15873(2,t2,lf[295]);}

/* k15871 in k15889 in do1786 in do1782 in k15803 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  pattern-datum-set!");
f_15076(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k15864 in k15889 in do1786 in do1782 in k15803 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_15856(t2,((C_word*)t0)[2]);}

/* k15812 in do1782 in k15803 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15814,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15818,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15854,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  pattern-datum");
f_15085(t3,((C_word*)t0)[3]);}

/* k15852 in k15812 in do1782 in k15803 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  next-1");
f_15671(((C_word*)t0)[2],t1);}

/* k15816 in k15812 in do1782 in k15803 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15818,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15821,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15837,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15850,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  pattern-datum");
f_15085(t5,((C_word*)t0)[3]);}

/* k15848 in k15816 in k15812 in do1782 in k15803 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  pattern?");
f_15016(((C_word*)t0)[2],t1);}

/* k15835 in k15816 in k15812 in do1782 in k15803 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15837,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15841,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15845,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  pattern-datum");
f_15085(t3,((C_word*)t0)[2]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[307]);
t3=((C_word*)t0)[3];
f_15821(t3,t2);}}

/* k15843 in k15835 in k15816 in k15812 in do1782 in k15803 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  pattern-state");
f_15139(((C_word*)t0)[2],t1);}

/* k15839 in k15835 in k15816 in k15812 in do1782 in k15803 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15821(t3,t2);}

/* k15819 in k15816 in k15812 in do1782 in k15803 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15821(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15821,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15824,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[295]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 356  pattern-datum-set!");
f_15076(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=t2;
f_15824(2,t5,t4);}}

/* k15822 in k15819 in k15816 in k15812 in do1782 in k15803 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_15807(t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k15796 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  pattern-datum-set!");
f_15076(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k15783 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15785,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15789,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15794,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  pattern-datum");
f_15085(t3,((C_word*)t0)[2]);}

/* k15792 in k15783 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  next-1");
f_15671(((C_word*)t0)[2],t1);}

/* k15787 in k15783 in k15780 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[307]);
t4=((C_word*)t0)[2];
f_15696(2,t4,t3);}

/* k15694 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15696,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15699,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[307]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15741,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15753,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  period-count");
f_14881(t5,((C_word*)t0)[3]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15756,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15776,a[2]=((C_word*)t0)[6],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  bitwise-test");
f_7848(t5,((C_word*)t0)[2],C_fix(64));}}

/* k15774 in k15694 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 356  pattern-datum-set!");
f_15076(((C_word*)t0)[3],((C_word*)t0)[2],lf[295]);}
else{
t2=((C_word*)t0)[3];
f_15756(2,t2,C_SCHEME_UNDEFINED);}}

/* k15754 in k15694 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15756,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15762,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  bitwise-test");
f_7848(t2,((C_word*)t0)[2],C_fix(16));}

/* k15760 in k15754 in k15694 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15762,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15773,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  period-count");
f_14881(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_15699(2,t2,C_SCHEME_UNDEFINED);}}

/* k15771 in k15760 in k15754 in k15694 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15773,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 356  period-count-set!");
f_14872(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15751 in k15694 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15753,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 356  period-count-set!");
f_14872(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15739 in k15694 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15741,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15744,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-datum-set!");
f_15076(t2,((C_word*)t0)[2],lf[295]);}

/* k15742 in k15739 in k15694 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
f_15699(2,t3,t2);}

/* k15697 in k15694 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15699,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15702,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15735,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  period-count");
f_14881(t3,((C_word*)t0)[2]);}

/* k15733 in k15697 in k15694 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15735,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[307]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15730,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  period-reps");
f_14971(t3,((C_word*)t0)[3]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[2];
f_15702(2,t3,t2);}}

/* k15728 in k15733 in k15697 in k15694 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15730,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
t3=((C_word*)t0)[3];
t4=(C_word)C_i_check_structure(t3,lf[271]);
C_trace("ChickenBridge.scm: 356  ##sys#block-set!");
t5=*((C_word*)lf[212]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,((C_word*)t0)[2],t3,C_fix(6),t2);}

/* k15700 in k15697 in k15694 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15702,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15705,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15715,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  retfn");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=t2;
f_15705(t3,C_SCHEME_UNDEFINED);}}

/* k15713 in k15700 in k15697 in k15694 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15705(t3,t2);}

/* k15703 in k15700 in k15697 in k15694 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15705(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15705,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15708,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  pattern-state-set!");
f_15130(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k15706 in k15703 in k15700 in k15697 in k15694 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15708,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15711,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern-value-set!");
f_15112(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k15709 in k15706 in k15703 in k15700 in k15697 in k15694 in k15688 in k15682 in k15679 in k15676 in next-1 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* next in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15548(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr3rv,(void*)f_15548r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_15548r(t0,t1,t2,t3);}}

static void C_ccall f_15548r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(16);
t4=(C_word)C_vemptyp(t3);
t5=(C_truep(t4)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
if(C_truep(t5)){
if(C_truep((C_word)C_i_numberp(t5))){
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15569,a[2]=t2,a[3]=t8,a[4]=t6,a[5]=t5,a[6]=((C_word)li232),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_15569(t10,t1,C_fix(0),t6);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15607,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern?");
f_15016(t6,t2);}}
else{
C_trace("ChickenBridge.scm: 356  next-1");
f_15671(t1,t2);}}

/* k15605 in next in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15607,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15617,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 356  next-1");
f_15671(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k15615 in k15605 in next in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15617,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15619,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li233),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_15619(t5,((C_word*)t0)[2],t1,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* do1758 in k15615 in k15605 in next in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15619(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15619,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_eqp(((C_word*)t5)[1],lf[309]);
t8=(C_truep(t7)?t7:((C_word*)t6)[1]);
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_a_i_list(&a,1,((C_word*)t5)[1]);
t10=(C_word)C_i_set_cdr(t3,t9);
t11=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15638,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15648,a[2]=((C_word*)t0)[2],a[3]=t5,a[4]=t11,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 356  eop?");
t13=C_retrieve(lf[306]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,((C_word*)t0)[2]);}}

/* k15646 in do1758 in k15615 in k15605 in next in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15648,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[4];
f_15638(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15653,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  next-1");
f_15671(t2,((C_word*)t0)[2]);}}

/* k15651 in k15646 in do1758 in k15615 in k15605 in next in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15638(t3,t2);}

/* k15636 in do1758 in k15615 in k15605 in next in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15638(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_15619(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do1751 in next in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15569(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15569,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t2,((C_word*)t0)[5]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15601,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 356  next-1");
f_15671(t4,((C_word*)t0)[2]);}}

/* k15599 in do1751 in next in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15601,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,C_fix(1),((C_word*)t0)[4]);
t5=(C_word)C_i_cdr(((C_word*)t0)[5]);
t6=((C_word*)((C_word*)t0)[3])[1];
f_15569(t6,((C_word*)t0)[2],t4,t5);}

/* eod? in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15529(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15529,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15536,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern?");
f_15016(t3,t2);}

/* k15534 in eod? in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15536,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15543,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  pattern-value");
t3=C_retrieve2(lf[289],"pattern-value");
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[309]));}}

/* k15541 in k15534 in eod? in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  eod?");
t2=C_retrieve(lf[308]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* eop? in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15510(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15510,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15517,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern?");
f_15016(t3,t2);}

/* k15515 in eop? in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15517,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15524,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 356  pattern-state");
f_15139(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[307]));}}

/* k15522 in k15515 in eop? in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  eop?");
t2=C_retrieve(lf[306]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* initialize-pattern in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15330(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10){
C_word tmp;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15330,NULL,10,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);}
t11=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15334,a[2]=t7,a[3]=t10,a[4]=t9,a[5]=t5,a[6]=t11,a[7]=t1,a[8]=t8,a[9]=t4,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 356  pattern-data-set!");
f_15040(t12,t2,t3);}

/* k15332 in initialize-pattern in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15334,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_15337,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=((C_word*)t0)[10];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[280]);
C_trace("ChickenBridge.scm: 356  ##sys#block-set!");
t6=*((C_word*)lf[212]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(3),t4);}

/* k15335 in k15332 in initialize-pattern in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15337,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15340,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[9];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[280]);
C_trace("ChickenBridge.scm: 356  ##sys#block-set!");
t6=*((C_word*)lf[212]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(13),t4);}

/* k15338 in k15335 in k15332 in initialize-pattern in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15340,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15343,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[8];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[280]);
C_trace("ChickenBridge.scm: 356  ##sys#block-set!");
t6=*((C_word*)lf[212]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(12),t4);}

/* k15341 in k15338 in k15335 in k15332 in initialize-pattern in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15343,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15346,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15500,a[2]=t3,a[3]=((C_word)li228),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  map-pattern-data");
f_15981(t4,t5,((C_word*)t0)[7]);}

/* a15499 in k15341 in k15338 in k15335 in k15332 in initialize-pattern in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15500(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15500,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15507,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  pattern?");
f_15016(t3,t2);}

/* k15505 in a15499 in k15341 in k15338 in k15335 in k15332 in initialize-pattern in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k15344 in k15341 in k15338 in k15335 in k15332 in initialize-pattern in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15346,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15349,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t2;
f_15349(t5,t4);}
else{
t3=t2;
f_15349(t3,C_SCHEME_UNDEFINED);}}

/* k15347 in k15344 in k15341 in k15338 in k15335 in k15332 in initialize-pattern in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15349(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15349,NULL,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[280]);
t4=(C_word)C_i_block_ref(t2,C_fix(10));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15355,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[296]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_15355(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[303]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(16));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_15355(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 356  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[304],t4);}}}

/* k15353 in k15347 in k15344 in k15341 in k15338 in k15335 in k15332 in initialize-pattern in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15355,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[280]);
t4=(C_word)C_i_block_ref(t2,C_fix(11));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15361,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[297]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(32));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_15361(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[301]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(64));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_15361(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 356  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[302],t4);}}}

/* k15359 in k15353 in k15347 in k15344 in k15341 in k15338 in k15335 in k15332 in initialize-pattern in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15361,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15364,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15424,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  bitwise-test");
f_7848(t3,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}

/* k15422 in k15359 in k15353 in k15347 in k15344 in k15341 in k15338 in k15335 in k15332 in initialize-pattern in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15424,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[299]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_15364(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15438,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 356  bitwise-test");
f_7848(t2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));}}

/* k15436 in k15422 in k15359 in k15353 in k15347 in k15344 in k15341 in k15338 in k15335 in k15332 in initialize-pattern in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15438,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[300]);
t3=(C_word)C_a_i_bitwise_ior(&a,2,t2,C_fix(16));
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15364(t5,t4);}
else{
t2=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_15364(t4,t3);}}

/* k15362 in k15359 in k15353 in k15347 in k15344 in k15341 in k15338 in k15335 in k15332 in initialize-pattern in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15364(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15364,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15367,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_numberp(((C_word*)t0)[2]);
t4=(C_truep(t3)?(C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(0)):C_SCHEME_FALSE);
t5=(C_truep(t4)?((C_word*)t0)[2]:C_retrieve(lf[110]));
t6=((C_word*)t0)[4];
t7=(C_word)C_i_check_structure(t6,lf[280]);
C_trace("ChickenBridge.scm: 356  ##sys#block-set!");
t8=*((C_word*)lf[212]+1);
((C_proc5)(void*)(*((C_word*)t8+1)))(5,t8,t2,t6,C_fix(8),t5);}

/* k15365 in k15362 in k15359 in k15353 in k15347 in k15344 in k15341 in k15338 in k15335 in k15332 in initialize-pattern in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15367,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=(C_truep(t2)?t2:((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15373,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t5=((C_word*)t0)[6];
if(C_truep(t5)){
t6=t4;
f_15373(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(2));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t4;
f_15373(t8,t7);}}

/* k15371 in k15365 in k15362 in k15359 in k15353 in k15347 in k15344 in k15341 in k15338 in k15335 in k15332 in initialize-pattern in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15373(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15373,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15376,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15386,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_numberp(((C_word*)t0)[3]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(((C_word*)t0)[3],C_SCHEME_TRUE));
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 356  make-period");
f_14860(t3,C_fix(0),((C_word*)t0)[3],C_SCHEME_FALSE,((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 356  make-period");
f_14860(t3,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}}

/* k15384 in k15371 in k15365 in k15362 in k15359 in k15353 in k15347 in k15344 in k15341 in k15338 in k15335 in k15332 in initialize-pattern in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[280]);
C_trace("ChickenBridge.scm: 356  ##sys#block-set!");
t4=*((C_word*)lf[212]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(5),t1);}

/* k15374 in k15371 in k15365 in k15362 in k15359 in k15353 in k15347 in k15344 in k15341 in k15338 in k15335 in k15332 in initialize-pattern in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15376,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15379,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)t0)[3];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_i_check_structure(t3,lf[280]);
C_trace("ChickenBridge.scm: 356  ##sys#block-set!");
t6=*((C_word*)lf[212]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(1),t4);}

/* k15377 in k15374 in k15371 in k15365 in k15362 in k15359 in k15353 in k15347 in k15344 in k15341 in k15338 in k15335 in k15332 in initialize-pattern in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 356  values");
C_values(2,0,((C_word*)t0)[2]);}

/* %alloc-pattern in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15320(C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15320,NULL,1,t1);}
t2=lf[295];
t3=lf[295];
t4=lf[295];
t5=C_retrieve(lf[110]);
t6=lf[296];
t7=lf[297];
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,15,lf[280],C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_FALSE,t2,C_SCHEME_FALSE,t3,t4,t5,C_SCHEME_FALSE,t6,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* pattern-cache in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15265(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15265,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[280]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(14)));}

/* pattern-cache-set! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15256(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15256,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[280]);
C_trace("ChickenBridge.scm: 356  ##sys#block-set!");
t5=*((C_word*)lf[212]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(14),t3);}

/* pattern-state in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15139(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15139,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[280]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(7)));}

/* pattern-state-set! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15130(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15130,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[280]);
C_trace("ChickenBridge.scm: 356  ##sys#block-set!");
t5=*((C_word*)lf[212]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(7),t3);}

/* f_15121 in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_15121(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15121,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[280]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* pattern-value-set! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15112(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15112,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[280]);
C_trace("ChickenBridge.scm: 356  ##sys#block-set!");
t5=*((C_word*)lf[212]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* pattern-period in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15103(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15103,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[280]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* pattern-datum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15085(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15085,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[280]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* pattern-datum-set! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15076(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15076,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[280]);
C_trace("ChickenBridge.scm: 356  ##sys#block-set!");
t5=*((C_word*)lf[212]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* pattern-length in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15067(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15067,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[280]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* pattern-data in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15049(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15049,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[280]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* pattern-data-set! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15040(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15040,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[280]);
C_trace("ChickenBridge.scm: 356  ##sys#block-set!");
t5=*((C_word*)lf[212]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* pattern-flags in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15031(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15031,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[280]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* pattern? in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_15016(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15016,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[280]));}

/* period-reps in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14971(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14971,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* period-omit in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14953(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14953,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* period-omit-set! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14944(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14944,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[271]);
C_trace("ChickenBridge.scm: 356  ##sys#block-set!");
t5=*((C_word*)lf[212]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(5),t3);}

/* period-stream in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14917(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14917,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* period-length in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14899(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14899,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* period-count in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14881(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14881,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* period-count-set! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14872(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14872,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[271]);
C_trace("ChickenBridge.scm: 356  ##sys#block-set!");
t5=*((C_word*)lf[212]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(1),t3);}

/* make-period in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14860(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14860,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,7,lf[271],t2,t3,t4,t5,t6,t7));}

/* import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14734(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14734,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14740,a[2]=((C_word)li203),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 355  with-input-from-file");
t4=C_retrieve(lf[269]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t2,t3);}

/* a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14740,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14744,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 355  current-input-port");
t3=*((C_word*)lf[268]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14744,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14745,a[2]=((C_word)li198),tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14762,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 355  rhdr");
f_14745(t5,t1);}

/* k14760 in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14762,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14765,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[266]))){
t4=t3;
f_14765(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 355  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[267],((C_word*)t0)[4]);}}

/* k14763 in k14760 in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14765,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14769,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 355  rhdr");
f_14745(t2,((C_word*)t0)[4]);}

/* k14767 in k14763 in k14760 in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14769,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14772,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[264]))){
t4=t3;
f_14772(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 355  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[265],((C_word*)t0)[4]);}}

/* k14770 in k14767 in k14763 in k14760 in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14772,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14775,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14824,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word)li202),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_14824(t6,t2);}

/* do1506 in k14770 in k14767 in k14763 in k14760 in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14824(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14824,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[263]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14835,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 355  rhdr");
f_14745(t2,((C_word*)t0)[2]);}}

/* k14833 in do1506 in k14770 in k14767 in k14763 in k14760 in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14824(t3,((C_word*)t0)[2]);}

/* k14773 in k14770 in k14767 in k14763 in k14760 in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14775,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14785,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 355  read-line");
t6=C_retrieve(lf[259]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[3]);}

/* k14783 in k14773 in k14770 in k14767 in k14763 in k14760 in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14785,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14787,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li201),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_14787(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1516 in k14783 in k14773 in k14770 in k14767 in k14763 in k14760 in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14787(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14787,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_eofp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14801,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t6=t2;
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14631,a[2]=t5,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  open-input-string");
t8=C_retrieve(lf[262]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,t6);}}

/* k14629 in do1516 in k14783 in k14773 in k14770 in k14767 in k14763 in k14760 in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14631,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14632,a[2]=((C_word*)t0)[3],a[3]=((C_word)li199),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14655,a[2]=t1,a[3]=t2,a[4]=t7,a[5]=((C_word*)t0)[2],a[6]=t8,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 355  rdat");
t10=t2;
f_14632(t10,t9,t1);}

/* k14653 in k14629 in do1516 in k14783 in k14773 in k14770 in k14767 in k14763 in k14760 in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14655,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14659,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 355  rdat");
t4=((C_word*)t0)[3];
f_14632(t4,t3,((C_word*)t0)[2]);}

/* k14657 in k14653 in k14629 in do1516 in k14783 in k14773 in k14770 in k14767 in k14763 in k14760 in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14659,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14662,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14685,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[8],a[6]=((C_word)li200),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_14685(t7,t3,C_fix(0),((C_word*)t0)[5],((C_word*)t0)[7]);}

/* do1485 in k14657 in k14653 in k14629 in do1516 in k14783 in k14773 in k14770 in k14767 in k14763 in k14760 in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14685(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14685,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[5])[1]))){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,C_SCHEME_FALSE);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14695,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=t5,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 355  rdat");
t8=((C_word*)t0)[3];
f_14632(t8,t7,((C_word*)t0)[2]);}}

/* k14693 in do1485 in k14657 in k14653 in k14629 in do1516 in k14783 in k14773 in k14770 in k14767 in k14763 in k14760 in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14695,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14732,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 355  rdat");
t3=((C_word*)t0)[3];
f_14632(t3,t2,((C_word*)t0)[2]);}

/* k14730 in k14693 in do1485 in k14657 in k14653 in k14629 in do1516 in k14783 in k14773 in k14770 in k14767 in k14763 in k14760 in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14732,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[8])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t4);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14724,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 355  rdat");
t7=((C_word*)t0)[3];
f_14632(t7,t6,((C_word*)t0)[2]);}

/* k14722 in k14730 in k14693 in do1485 in k14657 in k14653 in k14629 in do1516 in k14783 in k14773 in k14770 in k14767 in k14763 in k14760 in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14724,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t7=((C_word*)((C_word*)t0)[4])[1];
f_14685(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k14660 in k14657 in k14653 in k14629 in do1516 in k14783 in k14773 in k14770 in k14767 in k14763 in k14760 in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
t3=((C_word*)t0)[5];
f_14801(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_cdr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 355  make-spectrum");
f_11397(((C_word*)t0)[5],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],t3,t4);}}

/* rdat in k14629 in do1516 in k14783 in k14773 in k14770 in k14767 in k14763 in k14760 in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14632(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14632,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14636,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  read");
t4=*((C_word*)lf[261]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k14634 in rdat in k14629 in do1516 in k14783 in k14773 in k14770 in k14767 in k14763 in k14760 in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14636,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14639,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_eofp(t1))){
C_trace("ChickenBridge.scm: 355  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[260],((C_word*)t0)[2]);}
else{
t3=t2;
f_14639(2,t3,C_SCHEME_UNDEFINED);}}

/* k14637 in k14634 in rdat in k14629 in do1516 in k14783 in k14773 in k14770 in k14767 in k14763 in k14760 in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k14799 in do1516 in k14783 in k14773 in k14770 in k14767 in k14763 in k14760 in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14801,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14804,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t3;
f_14804(t8,t7);}
else{
t4=t3;
f_14804(t4,C_SCHEME_UNDEFINED);}}

/* k14802 in k14799 in do1516 in k14783 in k14773 in k14770 in k14767 in k14763 in k14760 in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14804(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14804,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14811,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 355  read-line");
t3=C_retrieve(lf[259]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k14809 in k14802 in k14799 in do1516 in k14783 in k14773 in k14770 in k14767 in k14763 in k14760 in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_14787(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* rhdr in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14745(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14745,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14749,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  read-line");
t4=C_retrieve(lf[259]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k14747 in rhdr in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14749,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14752,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_eofp(t1))){
C_trace("ChickenBridge.scm: 355  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[258],((C_word*)t0)[2]);}
else{
t3=t2;
f_14752(2,t3,C_SCHEME_UNDEFINED);}}

/* k14750 in k14747 in rhdr in k14742 in a14739 in import-spear-frames in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14221(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+24)){
C_save_and_reclaim((void*)tr4r,(void*)f_14221r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_14221r(t0,t1,t2,t3,t4);}}

static void C_ccall f_14221r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a=C_alloc(24);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14225,a[2]=t5,a[3]=t10,a[4]=t8,a[5]=t6,a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t6)[1]))){
C_trace("ChickenBridge.scm: 355  error");
t12=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,lf[255]);}
else{
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14594,a[2]=t11,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_car(((C_word*)t6)[1]);
t15=(C_word)C_i_pairp(t14);
t16=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14600,a[2]=t6,a[3]=t13,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t15)){
t17=t16;
f_14600(t17,t15);}
else{
t17=(C_word)C_i_car(((C_word*)t6)[1]);
t18=t16;
f_14600(t18,(C_word)C_i_numberp(t17));}}
else{
t13=t11;
f_14225(2,t13,C_SCHEME_UNDEFINED);}}}

/* k14598 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14600(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_14594(2,t2,(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]));}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 355  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],lf[256],t2);}}

/* k14592 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14225(2,t3,t2);}

/* k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14225,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14228,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14578,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  <=");
C_less_or_equal_p(5,0,t3,C_fix(1),((C_word*)((C_word*)t0)[2])[1],C_fix(8));}

/* k14576 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14578,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14228(2,t4,t3);}
else{
C_trace("ChickenBridge.scm: 355  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[254],((C_word*)((C_word*)t0)[3])[1]);}}

/* k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14228,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14231,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(2)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14560,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-amps");
t4=C_retrieve(lf[217]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14564,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-freqs");
t4=C_retrieve(lf[215]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}}

/* k14562 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14231(t3,t2);}

/* k14558 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14231(t3,t2);}

/* k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14231(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14231,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14234,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(1)))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14549,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-amps");
t4=C_retrieve(lf[217]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14553,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-freqs");
t4=C_retrieve(lf[215]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}}

/* k14551 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_SCHEME_UNDEFINED;
t3=((C_word*)t0)[2];
f_14234(t3,t2);}

/* k14547 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_SCHEME_UNDEFINED;
t3=((C_word*)t0)[2];
f_14234(t3,t2);}

/* k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14234(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14234,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14237,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=t2;
f_14237(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=t2;
f_14237(t4,t3);}}

/* k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14237(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14237,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14240,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14251,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word)li189),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_14251(t6,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14281,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word)li190),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_14281(t6,t2,((C_word*)((C_word*)t0)[3])[1]);}}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14301,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14537,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 355  every?");
t5=C_retrieve(lf[73]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,*((C_word*)lf[253]+1),((C_word*)((C_word*)t0)[5])[1]);}}

/* k14535 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14537,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
f_14301(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14395,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=t5,a[6]=t3,a[7]=t9,a[8]=t7,a[9]=((C_word*)t0)[4],a[10]=((C_word*)t0)[5],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14521,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-minamp");
t12=C_retrieve(lf[223]);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t0)[2]);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14529,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-minfreq");
t12=C_retrieve(lf[221]);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t0)[2]);}}}

/* k14527 in k14535 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14529,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14533,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-maxfreq");
t4=C_retrieve(lf[222]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14531 in k14527 in k14535 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14395(t3,t2);}

/* k14519 in k14535 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14521,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14525,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-maxamp");
t4=C_retrieve(lf[226]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14523 in k14519 in k14535 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14395(t3,t2);}

/* k14393 in k14535 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14395(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14395,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14398,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14502,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-minamp");
t4=C_retrieve(lf[223]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14510,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-minfreq");
t4=C_retrieve(lf[221]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k14508 in k14393 in k14535 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14510,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14514,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-maxfreq");
t4=C_retrieve(lf[222]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14512 in k14508 in k14393 in k14535 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14398(t3,t2);}

/* k14500 in k14393 in k14535 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14502,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14506,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-maxamp");
t4=C_retrieve(lf[226]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14504 in k14500 in k14393 in k14535 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14398(t3,t2);}

/* k14396 in k14393 in k14535 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14398(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14398,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14402,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 355  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_END_OF_LIST);}

/* k14400 in k14396 in k14393 in k14535 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14402,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14407,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t4,a[8]=((C_word)li196),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_14407(t6,((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}

/* do1448 in k14400 in k14396 in k14393 in k14535 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14407(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14407,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14417,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_eqp(t4,C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t3;
f_14417(t6,(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[3])[1]));}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_eqp(t6,C_SCHEME_TRUE);
t8=t3;
f_14417(t8,(C_truep(t7)?(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[2])[1]):C_SCHEME_UNDEFINED));}}}

/* k14415 in do1448 in k14400 in k14396 in k14393 in k14535 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14417(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14417,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14420,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 355  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[252],t3);}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
t4=(C_word)C_eqp(t3,C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(((C_word*)t0)[7]);
t6=t2;
f_14420(2,t6,(C_word)C_i_set_car(t5,((C_word*)((C_word*)t0)[3])[1]));}
else{
t5=(C_word)C_i_cadr(((C_word*)t0)[7]);
t6=(C_word)C_eqp(t5,C_SCHEME_TRUE);
if(C_truep(t6)){
t7=(C_word)C_i_cdr(((C_word*)t0)[7]);
t8=t2;
f_14420(2,t8,(C_word)C_i_set_car(t7,((C_word*)((C_word*)t0)[2])[1]));}
else{
t7=t2;
f_14420(2,t7,C_SCHEME_UNDEFINED);}}}}

/* k14418 in k14415 in do1448 in k14400 in k14396 in k14393 in k14535 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14407(t3,((C_word*)t0)[2],t2);}

/* k14299 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14301,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14304,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14326,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li194),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_14326(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14364,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li195),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_14364(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* do1462 in k14299 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14364(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14364,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14385,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 355  interp");
t5=C_retrieve(lf[137]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k14383 in do1462 in k14299 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_14364(t4,((C_word*)t0)[2],t3);}

/* do1457 in k14299 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14326(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14326,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14355,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 355  interp");
t6=C_retrieve(lf[137]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}}

/* k14353 in do1457 in k14299 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14355,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[4],t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_14326(t5,((C_word*)t0)[2],t4);}

/* k14302 in k14299 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14304,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14317,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14321,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-freqs");
t4=C_retrieve(lf[215]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14319 in k14302 in k14299 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_apply(4,0,((C_word*)t0)[2],*((C_word*)lf[251]+1),t1);}

/* k14315 in k14302 in k14299 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14317,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_14240(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=((C_word*)t0)[2];
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13684,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13759,a[2]=((C_word)li193),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13767,a[2]=t2,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-freqs");
t6=C_retrieve(lf[215]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}

/* k13765 in k14315 in k14302 in k14299 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13767,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13771,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-amps");
t3=C_retrieve(lf[217]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k13769 in k13765 in k14315 in k14302 in k14299 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 355  map");
t2=*((C_word*)lf[250]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a13758 in k14315 in k14302 in k14299 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13759(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13759,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* k13682 in k14315 in k14302 in k14299 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13684,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13688,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13745,a[2]=((C_word)li192),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 355  sort!");
t6=C_retrieve(lf[249]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)t3)[1],t5);}

/* a13744 in k13682 in k14315 in k14302 in k14299 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13745(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13745,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_lessp(t4,t5));}

/* k13686 in k13682 in k14315 in k14302 in k14299 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13688,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13696,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word)li191),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_13696(t8,((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1],t4);}

/* do1333 in k13686 in k13682 in k14315 in k14302 in k14299 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_13696(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13696,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13706,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-freqs-set!");
f_11445(t5,((C_word*)t0)[5],((C_word*)t0)[3]);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_car(t5);
t7=(C_word)C_i_cdr(t5);
t8=(C_word)C_i_set_cdr(((C_word*)t4)[1],t7);
t9=(C_word)C_i_cdr(((C_word*)t4)[1]);
t10=C_set_block_item(t4,0,t9);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13729,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t12=*((C_word*)lf[237]+1);
t13=t12;
((C_proc4)C_retrieve_proc(t13))(4,t13,t11,t2,t6);}}

/* k13727 in do1333 in k13686 in k13682 in k14315 in k14302 in k14299 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_13696(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k13704 in do1333 in k13686 in k13682 in k14315 in k14302 in k14299 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13706,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13709,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 355  spectrum-amps-set!");
f_11463(t2,((C_word*)t0)[3],t3);}

/* k13707 in k13704 in do1333 in k13686 in k13682 in k14315 in k14302 in k14299 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* do1435 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14281(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14281,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_cdr(t2);
t6=t1;
t7=t4;
t1=t6;
t2=t7;
goto loop;}}

/* do1430 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14251(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_14251,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_times(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_i_set_car(t2,t4);
t6=(C_word)C_i_cdr(t2);
t8=t1;
t9=t6;
t1=t8;
t2=t9;
goto loop;}}

/* k14238 in k14235 in k14232 in k14229 in k14226 in k14223 in spectrum-rescale! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* spectrum-flip! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14164(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14164,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14172,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-maxfreq");
t4=C_retrieve(lf[222]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k14170 in spectrum-flip! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14172,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14176,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-minfreq");
t3=C_retrieve(lf[221]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k14174 in k14170 in spectrum-flip! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14176,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14180,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-freqs");
t3=C_retrieve(lf[215]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[4]);}

/* k14178 in k14174 in k14170 in spectrum-flip! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14180,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14186,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word)li187),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_14186(t5,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* do1411 in k14178 in k14174 in k14170 in spectrum-flip! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14186(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(15);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_14186,NULL,6,t0,t1,t2,t3,t4,t5);}
if(C_truep((C_word)C_i_nullp(t4))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14196,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-freqs-set!");
f_11445(t6,((C_word*)t0)[3],t5);}
else{
t6=(C_word)C_i_car(t4);
t7=(C_word)C_a_i_divide(&a,2,t2,t6);
t8=(C_word)C_a_i_times(&a,2,t3,t7);
t9=(C_word)C_a_i_cons(&a,2,t8,t5);
t10=t5=t9;
t11=(C_word)C_i_cdr(t4);
t14=t1;
t15=t2;
t16=t3;
t17=t11;
t18=t5;
t1=t14;
t2=t15;
t3=t16;
t4=t17;
t5=t18;
goto loop;}}

/* k14194 in do1411 in k14178 in k14174 in k14170 in spectrum-flip! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* rm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13952(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[17],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13952,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13954,a[2]=((C_word)li179),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13971,a[2]=((C_word)li180),tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13988,a[2]=((C_word)li181),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14020,a[2]=t4,a[3]=t2,a[4]=t3,a[5]=t5,a[6]=t6,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 355  getfreqs");
f_13954(t7,t2);}

/* k14018 in rm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14020,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14023,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t1,a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 355  getfreqs");
f_13954(t2,((C_word*)t0)[4]);}

/* k14021 in k14018 in rm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14023,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14026,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 355  getamps");
f_13971(t2,((C_word*)t0)[2]);}

/* k14024 in k14021 in k14018 in rm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14026,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14029,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 355  getamps");
f_13971(t2,((C_word*)t0)[2]);}

/* k14027 in k14024 in k14021 in k14018 in rm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14029,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14032,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 355  make-spectrum");
f_11397(t2,C_SCHEME_FALSE,C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* k14030 in k14027 in k14024 in k14021 in k14018 in rm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14032,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14035,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[4]))){
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14049,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li183),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_14049(t6,t2,((C_word*)t0)[3]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14098,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li184),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_14098(t6,t2,((C_word*)t0)[4]);}}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14130,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li185),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_14130(t6,t2,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 355  sums-and-diffs");
f_13988(t2,t1,((C_word*)t0)[4],((C_word*)t0)[3]);}}}

/* do1404 in k14030 in k14027 in k14024 in k14021 in k14018 in rm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14130(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14130,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14140,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 355  sums-and-diffs");
f_13988(t3,((C_word*)t0)[3],((C_word*)t0)[2],t4);}}

/* k14138 in do1404 in k14030 in k14027 in k14024 in k14021 in k14018 in rm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14130(t3,((C_word*)t0)[2],t2);}

/* do1399 in k14030 in k14027 in k14024 in k14021 in k14018 in rm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14098(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14098,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14108,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 355  sums-and-diffs");
f_13988(t3,((C_word*)t0)[3],t4,((C_word*)t0)[2]);}}

/* k14106 in do1399 in k14030 in k14027 in k14024 in k14021 in k14018 in rm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14098(t3,((C_word*)t0)[2],t2);}

/* do1389 in k14030 in k14027 in k14024 in k14021 in k14018 in rm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14049(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14049,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14059,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14068,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t5,a[6]=((C_word)li182),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_14068(t7,t3,((C_word*)t0)[2]);}}

/* do1392 in do1389 in k14030 in k14027 in k14024 in k14021 in k14018 in rm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_14068(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14068,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14078,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 355  sums-and-diffs");
f_13988(t3,((C_word*)t0)[2],t4,t5);}}

/* k14076 in do1392 in do1389 in k14030 in k14027 in k14024 in k14021 in k14018 in rm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14068(t3,((C_word*)t0)[2],t2);}

/* k14057 in do1389 in k14030 in k14027 in k14024 in k14021 in k14018 in rm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14049(t3,((C_word*)t0)[2],t2);}

/* k14033 in k14030 in k14027 in k14024 in k14021 in k14018 in rm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_14035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* sums-and-diffs in rm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_13988(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13988,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t3,t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13998,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_a_i_plus(&a,2,t3,t4);
C_trace("ChickenBridge.scm: 355  spectrum-add!");
t7=C_retrieve(lf[241]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,t2,t6,lf[246]);}}

/* k13996 in sums-and-diffs in rm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13998,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_abs(&a,1,t2);
C_trace("ChickenBridge.scm: 355  spectrum-add!");
t4=C_retrieve(lf[241]);
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3,lf[245]);}

/* getamps in rm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_13971(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13971,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13978,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  spectrum?");
f_11403(t3,t2);}

/* k13976 in getamps in rm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 355  spectrum-amps");
t2=C_retrieve(lf[217]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?lf[243]:lf[244]));}}

/* getfreqs in rm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_13954(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13954,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13961,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  spectrum?");
f_11403(t3,t2);}

/* k13959 in getfreqs in rm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 355  spectrum-freqs");
t2=C_retrieve(lf[215]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)t0)[2]:((C_word*)t0)[2]));}}

/* spectrum-add! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13773(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_13773,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13781,a[2]=t1,a[3]=t3,a[4]=t4,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-freqs");
t6=C_retrieve(lf[215]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k13779 in spectrum-add! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13781,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13785,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-amps");
t3=C_retrieve(lf[217]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[5]);}

/* k13783 in k13779 in spectrum-add! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13785,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13787,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word)li177),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_13787(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* do1349 in k13783 in k13779 in spectrum-add! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_13787(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13787,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13797,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t5,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t4,a[8]=t2,a[9]=((C_word*)t0)[5],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t6)){
t8=t7;
f_13797(t8,t6);}
else{
t8=(C_word)C_i_car(t2);
t9=t7;
f_13797(t9,(C_word)C_i_greater_or_equalp(t8,((C_word*)t0)[3]));}}

/* k13795 in do1349 in k13783 in k13779 in spectrum-add! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_13797(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13797,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13800,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[8]))){
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13812,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 355  spectrum-freqs-set!");
f_11445(t3,((C_word*)t0)[9],t4);}
else{
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13843,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-size");
t8=C_retrieve(lf[213]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[9]);}}
else{
t3=(C_word)C_i_car(((C_word*)t0)[8]);
if(C_truep((C_word)C_i_nequalp(t3,((C_word*)t0)[5]))){
t4=(C_word)C_i_car(((C_word*)t0)[3]);
t5=(C_word)C_a_i_plus(&a,2,t4,((C_word*)t0)[6]);
t6=t2;
f_13800(2,t6,(C_word)C_i_set_car(((C_word*)t0)[3],t5));}
else{
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13877,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 355  spectrum-freqs-set!");
f_11445(t4,((C_word*)t0)[9],t5);}
else{
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(t4,((C_word*)t0)[8]);
t7=(C_word)C_i_set_cdr(((C_word*)t0)[7],t4);
t8=(C_word)C_i_set_cdr(t5,((C_word*)t0)[3]);
t9=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13928,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-size");
t11=C_retrieve(lf[213]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)t0)[9]);}}}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
t4=((C_word*)((C_word*)t0)[2])[1];
f_13787(t4,((C_word*)t0)[10],t2,t3,((C_word*)t0)[8],((C_word*)t0)[3]);}}

/* k13926 in k13795 in do1349 in k13783 in k13779 in spectrum-add! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13928,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 355  spectrum-size-set!");
f_11427(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13875 in k13795 in do1349 in k13783 in k13779 in spectrum-add! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13877,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13880,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 355  spectrum-amps-set!");
f_11463(t2,((C_word*)t0)[4],t3);}

/* k13878 in k13875 in k13795 in do1349 in k13783 in k13779 in spectrum-add! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13880,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13891,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-size");
t3=C_retrieve(lf[213]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k13889 in k13878 in k13875 in k13795 in do1349 in k13783 in k13779 in spectrum-add! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13891,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 355  spectrum-size-set!");
f_11427(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13841 in k13795 in do1349 in k13783 in k13779 in spectrum-add! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13843,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 355  spectrum-size-set!");
f_11427(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13810 in k13795 in do1349 in k13783 in k13779 in spectrum-add! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13812,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13815,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 355  spectrum-amps-set!");
f_11463(t2,((C_word*)t0)[3],t3);}

/* k13813 in k13810 in k13795 in do1349 in k13783 in k13779 in spectrum-add! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 355  spectrum-size-set!");
f_11427(((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}

/* k13798 in k13795 in do1349 in k13783 in k13779 in spectrum-add! in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* fm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13361(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_13361,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_times(&a,2,t2,t3);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13678,a[2]=t4,a[3]=t2,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 355  round");
t7=*((C_word*)lf[122]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t4);}

/* k13676 in fm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13678,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13374,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_13607,a[2]=t9,a[3]=((C_word*)t0)[2],a[4]=t8,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t5,a[8]=t6,a[9]=t3,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 355  -");
C_minus(3,0,t10,t3);}

/* k13605 in k13676 in fm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13607,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13609,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word)li175),tmp=(C_word)a,a+=11,tmp));
t5=((C_word*)t3)[1];
f_13609(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do1271 in k13605 in k13676 in fm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_13609(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13609,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)t0)[9]))){
t7=(C_word)C_i_cdr(((C_word*)t0)[8]);
t8=C_mutate(((C_word *)((C_word*)t0)[7])+1,t7);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,t8);}
else{
t7=(C_word)C_a_i_times(&a,2,((C_word*)t0)[6],t2);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],t7);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13628,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t11=t2;
t12=((C_word*)t0)[2];
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8154,a[2]=((C_word)li174),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t10,t11,t12);}}

/* f_8154 in do1271 in k13605 in k13676 in fm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8154(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8154,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub390(t4,t5,t6));}

/* k13626 in do1271 in k13605 in k13676 in fm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13628,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13631,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[7])[1],lf[239]);
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],lf[240]));
if(C_truep(t5)){
t6=t3;
f_13631(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[7])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[2])+1,t9);
t11=t3;
f_13631(t11,t10);}}

/* k13629 in k13626 in do1271 in k13605 in k13676 in fm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_13631(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13631,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_13609(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k13372 in k13676 in fm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13374,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13377,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13450,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li173),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_13450(t6,t2,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do1283 in k13372 in k13676 in fm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_13450(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13450,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13603,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t4,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 355  caar");
t7=*((C_word*)lf[238]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k13601 in do1283 in k13372 in k13676 in fm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13603,2,t0,t1);}
if(C_truep((C_word)C_i_negativep(t1))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_abs(&a,1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_i_set_car(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13587,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=t10,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
C_trace("ChickenBridge.scm: 355  -");
C_minus(3,0,t11,t12);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k13585 in k13601 in do1283 in k13372 in k13676 in fm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13587,2,t0,t1);}
t2=(C_word)C_i_set_car(((C_word*)t0)[7],t1);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_i_assoc(t3,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13481,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t4)){
t6=(C_word)C_i_cdr(t4);
t7=(C_word)C_i_cadr(t4);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t9=(C_word)C_a_i_plus(&a,2,t7,t8);
t10=t5;
f_13481(t10,(C_word)C_i_set_car(t6,t9));}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13506,a[2]=t5,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_a_i_minus(&a,2,t7,C_fix(1));
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13539,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=((C_word*)t0)[5],a[5]=((C_word)li172),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_13539(t12,t6,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}}

/* do1289 in k13585 in k13601 in do1283 in k13372 in k13676 in fm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_13539(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13539,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=((C_word*)t5)[1];
t8=(C_truep(t7)?t7:(C_word)C_i_lessp(t2,C_fix(0)));
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,((C_word*)t5)[1]);}
else{
t9=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[4])[1],t2);
t10=(C_word)C_i_car(t9);
t11=C_set_block_item(t6,0,t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13553,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],((C_word*)((C_word*)t0)[2])[1]))){
t13=C_set_block_item(t5,0,t2);
t14=t12;
f_13553(t14,t13);}
else{
t13=t12;
f_13553(t13,C_SCHEME_UNDEFINED);}}}

/* k13551 in do1289 in k13585 in k13601 in do1283 in k13372 in k13676 in fm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_13553(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13553,NULL,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_13539(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k13504 in k13585 in k13601 in do1283 in k13372 in k13676 in fm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13506,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_list_tail(((C_word*)((C_word*)t0)[4])[1],t1);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=(C_word)C_i_cdr(t3);
t7=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t6);
t8=((C_word*)t0)[2];
f_13481(t8,(C_word)C_i_set_cdr(t3,((C_word*)((C_word*)t0)[3])[1]));}
else{
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_13481(t5,t4);}}

/* k13479 in k13585 in k13601 in do1283 in k13372 in k13676 in fm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_13481(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_13450(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k13375 in k13372 in k13676 in fm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13377,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13385,a[2]=t5,a[3]=t2,a[4]=t3,a[5]=((C_word)li171),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_13385(t7,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1],C_fix(0),t3);}

/* do1311 in k13375 in k13372 in k13676 in fm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_13385(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13385,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 355  make-spectrum");
f_11397(t1,C_SCHEME_FALSE,t3,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_car(t6);
t8=(C_word)C_i_cdr(t6);
t9=(C_word)C_i_cadr(t6);
t10=(C_word)C_a_i_abs(&a,1,t9);
t11=(C_word)C_i_set_car(t8,t10);
t12=(C_word)C_i_cdr(t6);
t13=(C_word)C_i_set_cdr(((C_word*)t5)[1],t12);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
t15=C_set_block_item(t5,0,t14);
t16=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13418,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t17=*((C_word*)lf[237]+1);
t18=t17;
((C_proc4)C_retrieve_proc(t18))(4,t18,t16,t2,t7);}}

/* k13416 in do1311 in k13375 in k13372 in k13676 in fm-spectrum in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13418,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t4=((C_word*)((C_word*)t0)[4])[1];
f_13385(t4,((C_word*)t0)[3],t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11888(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+101)){
C_save_and_reclaim((void*)tr3r,(void*)f_11888r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11888r(t0,t1,t2,t3);}}

static void C_ccall f_11888r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word *a=C_alloc(101);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=t3;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11892,a[2]=t27,a[3]=t25,a[4]=t23,a[5]=t21,a[6]=t19,a[7]=t31,a[8]=t17,a[9]=t3,a[10]=t29,a[11]=t15,a[12]=t13,a[13]=t11,a[14]=t9,a[15]=t7,a[16]=t5,a[17]=t2,a[18]=t1,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t29)[1]))){
t33=t32;
f_11892(t33,C_SCHEME_UNDEFINED);}
else{
t33=(C_word)C_i_car(((C_word*)t29)[1]);
t34=(C_word)C_eqp(t33,lf[230]);
if(C_truep(t34)){
t35=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13134,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t17,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("error");
t36=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t36))(4,t36,t35,lf[19],lf[230]);}
else{
t36=t35;
f_13134(2,t36,C_SCHEME_UNDEFINED);}}
else{
t35=(C_word)C_eqp(t33,lf[231]);
if(C_truep(t35)){
t36=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13169,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t19,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t19)[1])){
C_trace("error");
t37=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t37))(4,t37,t36,lf[19],lf[231]);}
else{
t37=t36;
f_13169(2,t37,C_SCHEME_UNDEFINED);}}
else{
t36=(C_word)C_eqp(t33,lf[232]);
if(C_truep(t36)){
t37=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13204,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t21,a[7]=t9,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t21)[1])){
C_trace("error");
t38=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t38))(4,t38,t37,lf[19],lf[232]);}
else{
t38=t37;
f_13204(2,t38,C_SCHEME_UNDEFINED);}}
else{
t37=(C_word)C_eqp(t33,lf[233]);
if(C_truep(t37)){
t38=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13239,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t11,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t23)[1])){
C_trace("error");
t39=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t39))(4,t39,t38,lf[19],lf[233]);}
else{
t39=t38;
f_13239(2,t39,C_SCHEME_UNDEFINED);}}
else{
t38=(C_word)C_eqp(t33,lf[234]);
if(C_truep(t38)){
t39=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13274,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t25,a[7]=t13,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t25)[1])){
C_trace("error");
t40=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t40))(4,t40,t39,lf[19],lf[234]);}
else{
t40=t39;
f_13274(2,t40,C_SCHEME_UNDEFINED);}}
else{
t39=(C_word)C_eqp(t33,lf[235]);
if(C_truep(t39)){
t40=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13309,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t27,a[7]=t15,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t27)[1])){
C_trace("error");
t41=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[19],lf[235]);}
else{
t41=t40;
f_13309(2,t41,C_SCHEME_UNDEFINED);}}
else{
t40=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13338,a[2]=t32,a[3]=t17,a[4]=t5,a[5]=t29,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t31)[1])){
C_trace("error");
t41=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[10],t3);}
else{
t41=t40;
f_13338(2,t41,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k13336 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13338,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13345,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13353,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13351 in k13336 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13345(2,t2,C_SCHEME_UNDEFINED);}}

/* k13343 in k13336 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11892(t5,t4);}

/* k13307 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13309,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13313,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13313(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13311 in k13307 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11892(t7,t6);}

/* k13272 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13274,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13278,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13278(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13276 in k13272 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11892(t7,t6);}

/* k13237 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13239,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13243,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13243(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13241 in k13237 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11892(t7,t6);}

/* k13202 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13204,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13208,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13208(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13206 in k13202 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11892(t7,t6);}

/* k13167 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13169,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13173,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13173(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13171 in k13167 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11892(t7,t6);}

/* k13132 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13134,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13138,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13138(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13136 in k13132 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11892(t7,t6);}

/* k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_11892(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11892,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11895,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11895(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[230]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12894,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[230]);}
else{
t6=t5;
f_12894(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[231]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12929,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[231]);}
else{
t7=t6;
f_12929(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[232]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12964,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[232]);}
else{
t8=t7;
f_12964(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[233]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12999,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[233]);}
else{
t9=t8;
f_12999(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[234]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13034,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[234]);}
else{
t10=t9;
f_13034(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[235]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13069,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[235]);}
else{
t11=t10;
f_13069(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13098,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[15],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_13098(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k13096 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13098,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13105,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13113,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13111 in k13096 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13105(2,t2,C_SCHEME_UNDEFINED);}}

/* k13103 in k13096 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11895(t5,t4);}

/* k13067 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13069,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13073,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13073(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13071 in k13067 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11895(t7,t6);}

/* k13032 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13034,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13038,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13038(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13036 in k13032 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11895(t7,t6);}

/* k12997 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12999,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13003,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13003(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13001 in k12997 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_13003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11895(t7,t6);}

/* k12962 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12964,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12968,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12968(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12966 in k12962 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11895(t7,t6);}

/* k12927 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12929,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12933,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12933(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12931 in k12927 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11895(t7,t6);}

/* k12892 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12894,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12898,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12898(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12896 in k12892 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11895(t7,t6);}

/* k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_11895(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11895,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11898,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11898(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[230]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12654,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[230]);}
else{
t6=t5;
f_12654(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[231]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12689,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[231]);}
else{
t7=t6;
f_12689(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[232]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12724,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[232]);}
else{
t8=t7;
f_12724(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[233]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12759,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[233]);}
else{
t9=t8;
f_12759(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[234]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12794,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[234]);}
else{
t10=t9;
f_12794(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[235]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12829,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[235]);}
else{
t11=t10;
f_12829(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12858,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[14],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_12858(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12856 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12858,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12865,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12873,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12871 in k12856 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12865(2,t2,C_SCHEME_UNDEFINED);}}

/* k12863 in k12856 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11898(t5,t4);}

/* k12827 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12829,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12833,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12833(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12831 in k12827 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11898(t7,t6);}

/* k12792 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12794,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12798,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12798(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12796 in k12792 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11898(t7,t6);}

/* k12757 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12759,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12763,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12763(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12761 in k12757 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11898(t7,t6);}

/* k12722 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12724,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12728,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12728(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12726 in k12722 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11898(t7,t6);}

/* k12687 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12689,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12693,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12693(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12691 in k12687 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11898(t7,t6);}

/* k12652 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12654,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12658,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12658(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12656 in k12652 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11898(t7,t6);}

/* k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_11898(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11898,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11901,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11901(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[230]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12414,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[230]);}
else{
t6=t5;
f_12414(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[231]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12449,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[231]);}
else{
t7=t6;
f_12449(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[232]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12484,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[232]);}
else{
t8=t7;
f_12484(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[233]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12519,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[233]);}
else{
t9=t8;
f_12519(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[234]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12554,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[234]);}
else{
t10=t9;
f_12554(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[235]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12589,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[235]);}
else{
t11=t10;
f_12589(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12618,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_12618(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12616 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12618,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12625,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12633,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12631 in k12616 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12625(2,t2,C_SCHEME_UNDEFINED);}}

/* k12623 in k12616 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11901(t5,t4);}

/* k12587 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12589,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12593,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12593(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12591 in k12587 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11901(t7,t6);}

/* k12552 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12554,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12558,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12558(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12556 in k12552 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11901(t7,t6);}

/* k12517 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12519,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12523,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12523(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12521 in k12517 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11901(t7,t6);}

/* k12482 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12484,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12488,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12488(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12486 in k12482 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11901(t7,t6);}

/* k12447 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12449,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12453,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12453(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12451 in k12447 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11901(t7,t6);}

/* k12412 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12414,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12418,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12418(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12416 in k12412 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11901(t7,t6);}

/* k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_11901(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11901,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11904,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11904(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[230]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12174,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[230]);}
else{
t6=t5;
f_12174(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[231]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12209,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[231]);}
else{
t7=t6;
f_12209(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[232]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12244,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[232]);}
else{
t8=t7;
f_12244(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[233]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12279,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[233]);}
else{
t9=t8;
f_12279(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[234]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12314,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[234]);}
else{
t10=t9;
f_12314(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[235]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12349,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[235]);}
else{
t11=t10;
f_12349(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12378,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[12],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_12378(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12376 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12378,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12385,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12393,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12391 in k12376 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12385(2,t2,C_SCHEME_UNDEFINED);}}

/* k12383 in k12376 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11904(t5,t4);}

/* k12347 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12349,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12353,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12353(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12351 in k12347 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11904(t7,t6);}

/* k12312 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12314,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12318,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12318(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12316 in k12312 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11904(t7,t6);}

/* k12277 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12279,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12283,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12283(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12281 in k12277 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11904(t7,t6);}

/* k12242 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12244,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12248,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12248(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12246 in k12242 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11904(t7,t6);}

/* k12207 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12209,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12213,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12213(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12211 in k12207 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11904(t7,t6);}

/* k12172 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12174,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12178,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12178(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12176 in k12172 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11904(t7,t6);}

/* k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_11904(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11904,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11907,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],a[11]=((C_word*)t0)[18],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11907(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[230]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11934,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[230]);}
else{
t6=t5;
f_11934(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[231]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11969,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[231]);}
else{
t7=t6;
f_11969(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[232]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12004,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[232]);}
else{
t8=t7;
f_12004(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[233]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12039,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[233]);}
else{
t9=t8;
f_12039(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[234]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12074,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[234]);}
else{
t10=t9;
f_12074(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[235]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12109,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[235]);}
else{
t11=t10;
f_12109(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12138,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_12138(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12136 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12138,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12145,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12153,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12151 in k12136 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12145(2,t2,C_SCHEME_UNDEFINED);}}

/* k12143 in k12136 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11907(t5,t4);}

/* k12107 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12109,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12113,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12113(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12111 in k12107 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11907(t7,t6);}

/* k12072 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12074,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12078,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12078(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12076 in k12072 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11907(t7,t6);}

/* k12037 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12039,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12043,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12043(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12041 in k12037 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11907(t7,t6);}

/* k12002 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12004,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12008,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12008(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12006 in k12002 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_12008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11907(t7,t6);}

/* k11967 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11969,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11973,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11973(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11971 in k11967 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11907(t7,t6);}

/* k11932 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11934,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11938,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11938(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11936 in k11932 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11907(t7,t6);}

/* k11905 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_11907(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11907,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11910,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11910(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k11908 in k11905 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11910,2,t0,t1);}
t2=((C_word*)t0)[9];
t3=((C_word*)t0)[8];
t4=((C_word*)((C_word*)t0)[7])[1];
t5=((C_word*)((C_word*)t0)[6])[1];
t6=((C_word*)((C_word*)t0)[5])[1];
t7=((C_word*)((C_word*)t0)[4])[1];
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=((C_word*)((C_word*)t0)[3])[1];
t10=((C_word*)((C_word*)t0)[2])[1];
t11=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11669,a[2]=t3,a[3]=t8,a[4]=t5,a[5]=t2,a[6]=t4,a[7]=t6,a[8]=t10,a[9]=t9,tmp=(C_word)a,a+=10,tmp);
t12=(C_word)C_eqp(((C_word*)t8)[1],C_SCHEME_TRUE);
if(C_truep(t12)){
t13=C_set_block_item(t8,0,C_fix(1));
t14=t11;
f_11669(t14,t13);}
else{
t13=t11;
f_11669(t13,C_SCHEME_UNDEFINED);}}

/* k11667 in k11908 in k11905 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_11669(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11669,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t17=C_set_block_item(t3,0,t16);
t18=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_11678,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t15,a[7]=t13,a[8]=t3,a[9]=t16,a[10]=((C_word*)t0)[6],a[11]=t11,a[12]=((C_word*)t0)[7],a[13]=((C_word*)t0)[8],a[14]=((C_word*)t0)[9],a[15]=t9,a[16]=t7,a[17]=t5,tmp=(C_word)a,a+=18,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-freqs");
t19=C_retrieve(lf[215]);
((C_proc3)C_retrieve_proc(t19))(3,t19,t18,((C_word*)t0)[2]);}

/* k11676 in k11667 in k11908 in k11905 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11678,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_11682,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],tmp=(C_word)a,a+=17,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-amps");
t4=C_retrieve(lf[217]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k11680 in k11676 in k11667 in k11908 in k11905 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11682,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[16])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[15])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11684,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[13],a[4]=((C_word*)t0)[14],a[5]=((C_word)li164),tmp=(C_word)a,a+=6,tmp));
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11756,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word)li165),tmp=(C_word)a,a+=6,tmp));
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11789,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[11],a[4]=((C_word)li166),tmp=(C_word)a,a+=5,tmp));
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11799,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[9],a[5]=((C_word)li167),tmp=(C_word)a,a+=6,tmp));
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11819,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t8=(C_word)C_i_not(((C_word*)t0)[4]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)((C_word*)t0)[16])[1]));
if(C_truep(t9)){
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("for-each");
t10=*((C_word*)lf[224]+1);
((C_proc4)(void*)(*((C_word*)t10+1)))(4,t10,t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
C_trace("for-each");
t10=*((C_word*)lf[224]+1);
((C_proc4)(void*)(*((C_word*)t10+1)))(4,t10,t7,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[2])[1]);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11854,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word)li168),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 355  for-each");
t11=*((C_word*)lf[229]+1);
((C_proc5)C_retrieve_proc(t11))(5,t11,t7,t10,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11869,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[4],a[4]=((C_word)li169),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 355  for-each");
t11=*((C_word*)lf[229]+1);
((C_proc5)C_retrieve_proc(t11))(5,t11,t7,t10,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}}}

/* a11868 in k11680 in k11676 in k11667 in k11908 in k11905 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11869(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11869,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 355  addkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* a11853 in k11680 in k11676 in k11667 in k11908 in k11905 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11854(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11854,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 355  adduniquekey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* k11817 in k11680 in k11676 in k11667 in k11908 in k11905 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=(C_word)C_eqp(((C_word*)t0)[3],C_fix(0));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 355  shuffle!");
t4=C_retrieve(lf[157]);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t2);}
else{
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}}

/* f_11799 in k11680 in k11676 in k11667 in k11908 in k11905 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11799(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11799,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11803,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 355  getkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11801 */
static void C_ccall f_11803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_member(t1,t2))){
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 355  add");
t3=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[3],t1);}}

/* f_11789 in k11680 in k11676 in k11667 in k11908 in k11905 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11789(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11789,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11797,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  getkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11795 */
static void C_ccall f_11797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 355  add");
t2=((C_word*)((C_word*)t0)[3])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* f_11756 in k11680 in k11676 in k11667 in k11908 in k11905 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11756(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11756,3,t0,t1,t2);}
t3=(C_word)C_eqp(((C_word*)t0)[4],C_fix(-1));
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,t2);
t5=(C_word)C_i_cdr(((C_word*)t0)[3]);
t6=(C_word)C_i_set_cdr(t4,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_set_cdr(((C_word*)t0)[3],t4));}
else{
t4=(C_word)C_a_i_list(&a,1,t2);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}}

/* f_11684 in k11680 in k11676 in k11667 in k11908 in k11905 in k11902 in k11899 in k11896 in k11893 in k11890 in spectrum-keys in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11684(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11684,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11688,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[2])){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11751,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  key");
t5=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
C_trace("ChickenBridge.scm: 355  key");
t4=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}

/* k11749 */
static void C_ccall f_11751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 355  quantize");
t2=C_retrieve(lf[120]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k11686 */
static void C_ccall f_11688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11688,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_truep(((C_word*)t0)[4])?(C_word)C_i_lessp(((C_word*)t3)[1],((C_word*)t0)[4]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11699,a[2]=t6,a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word)li162),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_11699(t8,((C_word*)t0)[3]);}
else{
t5=(C_truep(((C_word*)t0)[2])?(C_word)C_i_greaterp(((C_word*)t3)[1],((C_word*)t0)[2]):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11724,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=((C_word)li163),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_11724(t9,((C_word*)t0)[3]);}
else{
t6=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}}}

/* do1024 in k11686 */
static void C_fcall f_11724(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11724,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t5=t1;
t1=t5;
goto loop;}}

/* do1020 in k11686 */
static void C_fcall f_11699(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11699,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_greater_or_equalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t5=t1;
t1=t5;
goto loop;}}

/* spectrum-maxamp in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11640(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11640,3,t0,t1,t2);}
t3=lf[227];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11644,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-amps");
t6=C_retrieve(lf[217]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k11642 in spectrum-maxamp in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11644,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11653,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11655,a[2]=((C_word*)t0)[2],a[3]=((C_word)li160),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[224]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a11654 in k11642 in spectrum-maxamp in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11655(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11655,3,t0,t1,t2);}
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)((C_word*)t0)[2])[1]))){
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}}

/* k11651 in k11642 in spectrum-maxamp in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-minamp in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11609(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11609,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11613,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-amps");
t6=C_retrieve(lf[217]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k11611 in spectrum-minamp in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11613,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11622,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11624,a[2]=((C_word*)t0)[2],a[3]=((C_word)li158),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[224]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[225]);}}

/* a11623 in k11611 in spectrum-minamp in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11624(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11624,3,t0,t1,t2);}
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_lessp(t2,((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}}

/* k11620 in k11611 in spectrum-minamp in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-maxfreq in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11591(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11591,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11599,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-freqs");
t4=C_retrieve(lf[215]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11597 in spectrum-maxfreq in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11599,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11607,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-size");
t3=C_retrieve(lf[213]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11605 in k11597 in spectrum-maxfreq in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11607,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_list_ref(((C_word*)t0)[2],t2));}

/* spectrum-minfreq in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11581(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11581,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11589,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-freqs");
t4=C_retrieve(lf[215]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11587 in spectrum-minfreq in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* spectrum-pairs in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11522(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11522,3,t0,t1,t2);}
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11529,a[2]=t2,a[3]=t1,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-freqs");
t7=C_retrieve(lf[215]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}

/* k11527 in spectrum-pairs in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11529,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11532,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-amps");
t3=C_retrieve(lf[217]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11530 in k11527 in spectrum-pairs in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11532,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11535,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-size");
t3=C_retrieve(lf[213]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11533 in k11530 in k11527 in spectrum-pairs in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11535,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11540,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word)li154),tmp=(C_word)a,a+=9,tmp));
t5=((C_word*)t3)[1];
f_11540(t5,((C_word*)t0)[2],C_fix(0));}

/* do983 in k11533 in k11530 in k11527 in spectrum-pairs in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_11540(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(10);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11540,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[6]));}
else{
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_truep(((C_word*)t0)[4])?(C_word)C_i_list_ref(((C_word*)t0)[4],t2):lf[220]);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t5);
t7=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t11=t1;
t12=t9;
t1=t11;
t2=t12;
goto loop;}}

/* spectrum-copy in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11484(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11484,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11492,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-time");
t4=C_retrieve(lf[210]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11490 in spectrum-copy in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11492,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11496,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-size");
t3=C_retrieve(lf[213]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11494 in k11490 in spectrum-copy in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11496,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11500,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11516,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-freqs");
t4=C_retrieve(lf[215]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k11514 in k11494 in k11490 in spectrum-copy in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 355  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k11498 in k11494 in k11490 in spectrum-copy in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11500,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11504,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11508,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 355  spectrum-amps");
t4=C_retrieve(lf[217]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k11506 in k11498 in k11494 in k11490 in spectrum-copy in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 355  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k11502 in k11498 in k11494 in k11490 in spectrum-copy in k11480 in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 355  make-spectrum");
f_11397(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* spectrum-amps in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11472(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11472,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[208]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* spectrum-amps-set! in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_11463(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11463,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[208]);
C_trace("ChickenBridge.scm: 355  ##sys#block-set!");
t5=*((C_word*)lf[212]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* spectrum-freqs in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11454(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11454,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[208]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* spectrum-freqs-set! in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_11445(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11445,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[208]);
C_trace("ChickenBridge.scm: 355  ##sys#block-set!");
t5=*((C_word*)lf[212]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* spectrum-size in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11436(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11436,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[208]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* spectrum-size-set! in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_11427(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11427,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[208]);
C_trace("ChickenBridge.scm: 355  ##sys#block-set!");
t5=*((C_word*)lf[212]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* spectrum-time in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11418(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11418,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[208]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* spectrum? in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_11403(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11403,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[208]));}

/* make-spectrum in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_11397(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11397,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_record(&a,5,lf[208],t2,t3,t4,t5));}

/* scale-order in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11255(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_11255r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11255r(t0,t1,t2,t3);}}

static void C_ccall f_11255r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(7);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11259,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t4)[1]))){
t6=C_set_block_item(t4,0,C_fix(1));
t7=t5;
f_11259(t7,t6);}
else{
t6=(C_word)C_i_car(((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_11259(t8,t7);}}

/* k11257 in scale-order in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_11259(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11259,NULL,2,t0,t1);}
switch(((C_word*)((C_word*)t0)[4])[1]){
case C_fix(1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11270,a[2]=((C_word)li141),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 354  sort");
t3=C_retrieve(lf[205]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(-1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11328,a[2]=((C_word)li142),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 354  sort");
t3=C_retrieve(lf[205]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(0):
C_trace("ChickenBridge.scm: 354  shuffle");
t2=C_retrieve(lf[158]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);
default:
C_trace("ChickenBridge.scm: 354  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[206],((C_word*)((C_word*)t0)[4])[1]);}}

/* a11327 in k11257 in scale-order in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11328(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11328,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_greaterp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11351,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 354  key");
t5=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11364,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 354  key");
t5=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11371,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 354  key");
t5=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k11369 in a11327 in k11257 in scale-order in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11371,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11375,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 354  key");
t3=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11373 in k11369 in a11327 in k11257 in scale-order in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* k11362 in a11327 in k11257 in scale-order in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(t1,((C_word*)t0)[2]));}

/* k11349 in a11327 in k11257 in scale-order in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* a11269 in k11257 in scale-order in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11270(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11270,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_lessp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11293,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 354  key");
t5=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11306,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 354  key");
t5=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11313,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 354  key");
t5=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k11311 in a11269 in k11257 in scale-order in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11313,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11317,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 354  key");
t3=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11315 in k11311 in a11269 in k11257 in scale-order in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k11304 in a11269 in k11257 in scale-order in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(t1,((C_word*)t0)[2]));}

/* k11291 in a11269 in k11257 in scale-order in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* transpose in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11089(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11089,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_lessp(t2,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t3,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(C_word)C_a_i_plus(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 354  modulo");
t7=*((C_word*)lf[145]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t6,C_fix(12));}
else{
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_plus(&a,2,t2,t3));}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11135,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 354  key");
t5=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11142,a[2]=((C_word)li138),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11190,a[2]=t4,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_numberp(t3))){
t6=t5;
f_11190(2,t6,t3);}
else{
C_trace("ChickenBridge.scm: 354  key");
t6=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t3);}}
else{
C_trace("ChickenBridge.scm: 354  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,lf[201],t2);}}}

/* k11188 in transpose in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11190,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_numberp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_lessp(t3,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t1,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11207,a[2]=t1,a[3]=((C_word)li139),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],t6,((C_word*)t0)[4]);}
else{
C_trace("ChickenBridge.scm: 354  transpkeys");
f_11142(((C_word*)t0)[3],((C_word*)t0)[4],t1);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11235,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11239,a[2]=t1,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 354  key");
t5=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[4]);}}

/* k11237 in k11188 in transpose in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 354  transpkeys");
f_11142(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k11233 in k11188 in transpose in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 354  note");
t2=C_retrieve(lf[190]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a11206 in k11188 in transpose in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11207(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11207,3,t0,t1,t2);}
t3=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 354  modulo");
t4=*((C_word*)lf[145]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* transpkeys in transpose in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_11142(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11142,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11151,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word)li137),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_11151(t8,t1,t2,t4);}

/* do841 in transpkeys in transpose in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_11151(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(7);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11151,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_cdr(t2);
t12=t1;
t13=t10;
t14=t3;
t1=t12;
t2=t13;
t3=t14;
goto loop;}}

/* k11133 in transpose in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11135,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 354  note");
t3=C_retrieve(lf[190]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* invert in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10954(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10954,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_lessp(t2,C_fix(12)))){
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 354  modulo");
t4=*((C_word*)lf[145]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}
else{
C_trace("ChickenBridge.scm: 354  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[198],t2);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10984,a[2]=((C_word)li134),tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_lessp(t5,C_fix(12)))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11054,a[2]=((C_word)li135),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t6,t2);}
else{
C_trace("ChickenBridge.scm: 354  invkeys");
f_10984(t1,t2);}}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11076,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11080,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 354  key");
t7=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}}
else{
C_trace("ChickenBridge.scm: 354  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[199],t2);}}}

/* k11078 in invert in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 354  invkeys");
f_10984(((C_word*)t0)[2],t1);}

/* k11074 in invert in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 354  note");
t2=C_retrieve(lf[190]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a11053 in invert in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_11054(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11054,3,t0,t1,t2);}
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 354  modulo");
t4=*((C_word*)lf[145]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* invkeys in invert in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_10984(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10984,NULL,2,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_cdr(t2);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11000,a[2]=t7,a[3]=t3,a[4]=t4,a[5]=((C_word)li133),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_11000(t9,t1,t5,t4);}

/* do826 in invkeys in invert in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_11000(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11000,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t0)[4]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_minus(&a,2,t4,((C_word*)t0)[3]);
t6=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t5);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(t3,t7);
t9=(C_word)C_i_cdr(t3);
t10=t3=t9;
t11=(C_word)C_i_cdr(t2);
t13=t1;
t14=t11;
t15=t3;
t1=t13;
t2=t14;
t3=t15;
goto loop;}}

/* pc in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10909(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10909,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 354  modulo");
t3=*((C_word*)lf[145]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,C_fix(12));}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t3))){
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,C_retrieve(lf[196]),t2);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10941,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 354  key");
t5=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10952,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 354  key");
t4=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}}

/* k10950 in pc in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 354  modulo");
t2=*((C_word*)lf[145]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(12));}

/* k10939 in pc in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve(lf[196]),t1);}

/* hz in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10793(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10793,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10808,a[2]=t5,a[3]=t3,a[4]=((C_word)li130),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_10808(t7,t1,t2,lf[195],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 354  tb:keynum->hertz");
f_8028(t1,t2);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10907,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 354  note-aux");
f_10521(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k10905 in hz in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_caddr(t1));}

/* do806 in hz in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_10808(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10808,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10821,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_numberp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10838,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_10838(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_10838(t14,(C_word)C_i_listp(t13));}}}

/* k10836 in do806 in hz in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_10838(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10838,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10842,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 354  hz");
t4=C_retrieve(lf[194]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10857,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 354  note-aux");
f_10521(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k10855 in k10836 in do806 in hz in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10857,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_10821(t9,t8);}

/* k10840 in k10836 in do806 in hz in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10842,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_10821(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k10819 in do806 in hz in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_10821(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_10808(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* key in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10671(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10671,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10686,a[2]=t5,a[3]=t3,a[4]=((C_word)li128),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_10686(t7,t1,t2,lf[193],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_greaterp(t2,C_fix(0)))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub310(t5,t6));}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(-1));}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10791,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 354  note-aux");
f_10521(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k10789 in key in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_cadr(t1));}

/* do790 in key in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_10686(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10686,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10699,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_listp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10716,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_10716(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_10716(t14,(C_word)C_i_numberp(t13));}}}

/* k10714 in do790 in key in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_10716(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10716,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10720,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 354  key");
t4=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10735,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 354  note-aux");
f_10521(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k10733 in k10714 in do790 in key in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10735,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_10699(t9,t8);}

/* k10718 in k10714 in do790 in key in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10720,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_10699(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k10697 in do790 in key in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_10699(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_10686(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10574(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10574,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10589,a[2]=t5,a[3]=t3,a[4]=((C_word)li126),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_10589(t7,t1,t2,lf[191],C_SCHEME_FALSE,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10669,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 354  note-aux");
f_10521(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}

/* k10667 in note in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* do776 in note in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_10589(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10589,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10602,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t10))){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10620,a[2]=t8,a[3]=t9,a[4]=t7,tmp=(C_word)a,a+=5,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 354  note");
t13=C_retrieve(lf[190]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t11,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10635,a[2]=t8,a[3]=t9,a[4]=t6,a[5]=t7,tmp=(C_word)a,a+=6,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 354  note-aux");
f_10521(t11,t12,((C_word*)t6)[1],C_SCHEME_TRUE);}}}

/* k10633 in do776 in note in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10635,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_i_car(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=((C_word*)t0)[3];
f_10602(t8,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7));}

/* k10618 in do776 in note in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10620,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_10602(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k10600 in do776 in note in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_10602(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_10589(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note-aux in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_10521(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10521,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_numberp(t2))){
t5=t1;
t6=t2;
t7=t4;
if(C_truep((C_word)C_i_exactp(t6))){
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10471,a[2]=t6,a[3]=t7,a[4]=((C_word)li123),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 354  hash-table-ref");
t9=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t9))(5,t9,t5,C_retrieve2(lf[177],"*notes*"),t6,t8);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10519,a[2]=t5,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 354  floor");
t9=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,t6);}}
else{
if(C_truep((C_word)C_i_symbolp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10544,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 354  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 354  string->note-entry");
f_10419(t1,t2,t3,t4);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10559,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 354  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}}}

/* k10557 in note-aux in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10559,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10566,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 354  keyword->string");
t3=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 354  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[189],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k10564 in k10557 in note-aux in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 354  string->note-entry");
f_10419(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k10542 in note-aux in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 354  string->note-entry");
f_10419(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k10517 in note-aux in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10519,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10491,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t3,lf[185]))){
t5=t4;
f_10491(t5,t2);}
else{
t5=(C_word)C_i_lessp(t3,lf[186]);
t6=t4;
f_10491(t6,(C_truep(t5)?(C_word)C_a_i_plus(&a,2,t2,lf[187]):(C_word)C_a_i_plus(&a,2,t2,C_fix(1))));}}

/* k10489 in k10517 in note-aux in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_10491(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10491,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10493,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li124),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 354  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[177],"*notes*"),t1,t2);}

/* a10492 in k10489 in k10517 in note-aux in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10493,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 354  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[184],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* a10470 in note-aux in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10471,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 354  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[183],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* string->note-entry in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_10419(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10419,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10423,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10456,a[2]=((C_word)li121),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 354  hash-table-ref");
t7=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,C_retrieve2(lf[177],"*notes*"),t2,t6);}

/* a10455 in string->note-entry in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10456,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k10421 in string->note-entry in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10423,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t1);}
else{
if(C_truep(((C_word*)t0)[4])){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10439,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 354  string-append");
t4=*((C_word*)lf[180]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 354  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[5],lf[181],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}}}

/* k10437 in k10421 in string->note-entry in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10439,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10441,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li120),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 354  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[177],"*notes*"),t1,t2);}

/* a10440 in k10437 in k10421 in string->note-entry in k10415 in k10412 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10441,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 354  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[179],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* segs in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10205(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr4r,(void*)f_10205r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_10205r(t0,t1,t2,t3,t4);}}

static void C_ccall f_10205r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(11);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(1)))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_END_OF_LIST);}
else{
t6=C_fix(1);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10218,a[2]=t1,a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t5)[1]))){
t9=(C_word)C_i_car(((C_word*)t5)[1]);
t10=C_set_block_item(t7,0,t9);
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
t12=C_set_block_item(t5,0,t11);
t13=t8;
f_10218(t13,t12);}
else{
t9=t8;
f_10218(t9,C_SCHEME_UNDEFINED);}}}

/* k10216 in segs in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_10218(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10218,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(2)));
if(C_truep(t3)){
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t5=(C_truep(t4)?C_retrieve2(lf[83],"tb:explseg"):C_retrieve2(lf[84],"tb:geoseg"));
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_truep(t6)?C_fix(2):(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]));
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=t8;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10239,a[2]=((C_word*)t0)[2],a[3]=t7,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t10,a[7]=t8,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_lessp(t7,C_fix(0)))){
C_trace("ChickenBridge.scm: 354  error");
t12=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t12))(4,t12,t11,lf[175],t7);}
else{
t12=t11;
f_10239(2,t12,C_SCHEME_UNDEFINED);}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(3));
if(C_truep(t4)){
t5=C_retrieve(lf[140]);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10300,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t8=t7;
f_10300(t8,C_SCHEME_UNDEFINED);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t7;
f_10300(t12,t11);}}
else{
C_trace("ChickenBridge.scm: 354  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],lf[176],((C_word*)((C_word*)t0)[6])[1]);}}}

/* k10298 in k10216 in segs in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_10300(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10300,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10303,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_apply(4,0,t2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}

/* k10301 in k10298 in k10216 in segs in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10303,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t3)[1]);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10311,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t8,a[7]=t3,a[8]=t6,a[9]=((C_word*)t0)[6],a[10]=((C_word)li118),tmp=(C_word)a,a+=11,tmp));
t10=((C_word*)t8)[1];
f_10311(t10,((C_word*)t0)[2],C_fix(1),C_SCHEME_FALSE);}

/* do706 in k10301 in k10298 in k10216 in segs in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_10311(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10311,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[9]))){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10352,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_apply(4,0,t5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10323,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=((C_word)li117),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_10323(t8,t1,((C_word*)t0)[3]);}}

/* do710 in do706 in k10301 in k10298 in k10216 in segs in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_10323(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10323,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10344,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 354  tb:rescale");
f_7889(t3,t4,C_fix(0),((C_word*)((C_word*)t0)[3])[1],C_fix(0),((C_word*)t0)[2],C_fix(1));}}

/* k10342 in do710 in do706 in k10301 in k10298 in k10216 in segs in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_10323(t4,((C_word*)t0)[2],t3);}

/* k10350 in do706 in k10301 in k10298 in k10216 in segs in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10352,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[7])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t10=((C_word*)((C_word*)t0)[3])[1];
f_10311(t10,((C_word*)t0)[2],t9,((C_word*)((C_word*)t0)[7])[1]);}

/* k10237 in k10216 in segs in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10239,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10244,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word)li116),tmp=(C_word)a,a+=10,tmp));
t5=((C_word*)t3)[1];
f_10244(t5,((C_word*)t0)[2],C_fix(0));}

/* do694 in k10237 in k10216 in segs in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_10244(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10244,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[8]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[7]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10276,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 354  func");
t4=((C_word*)t0)[4];
((C_proc6)C_retrieve_proc(t4))(6,t4,t3,t2,((C_word*)t0)[8],((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k10274 in do694 in k10237 in k10216 in segs in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10276,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t7=((C_word*)((C_word*)t0)[3])[1];
f_10244(t7,((C_word*)t0)[2],t6);}

/* rangamma in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10184(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_10184r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_10184r(t0,t1,t2);}}

static void C_ccall f_10184r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 354  tb:rangamma");
f_8126(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 354  tb:rangamma");
f_8126(t1,t3);}}

/* ranpoisson in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10165(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_10165r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_10165r(t0,t1,t2);}}

static void C_ccall f_10165r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_i_nullp(C_retrieve(lf[170])))){
C_trace("ChickenBridge.scm: 354  tb:ranpoisson");
f_8136(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 354  tb:ranpoisson");
f_8136(t1,t3);}}

/* rangauss in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10124(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_10124r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_10124r(t0,t1,t2);}}

static void C_ccall f_10124r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 354  tb:rangauss");
f_8097(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 354  tb:rangauss");
f_8097(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 354  tb:rangauss");
f_8097(t1,t4,t5);}}}

/* ranexp in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10105(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_10105r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_10105r(t0,t1,t2);}}

static void C_ccall f_10105r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 354  tb:ranexp");
f_8108(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 354  tb:ranexp");
f_8108(t1,t3);}}

/* ranbeta in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9877(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_9877r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9877r(t0,t1,t2);}}

static void C_ccall f_9877r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=lf[163];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9881,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_9881(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[164]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10018,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[164]);}
else{
t19=t18;
f_10018(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[165]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10053,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[165]);}
else{
t20=t19;
f_10053(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10082,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[10],t2);}
else{
t20=t19;
f_10082(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k10080 in ranbeta in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10082,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10089,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10097,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10095 in k10080 in ranbeta in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10089(2,t2,C_SCHEME_UNDEFINED);}}

/* k10087 in k10080 in ranbeta in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9881(t5,t4);}

/* k10051 in ranbeta in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10053,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10057,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10057(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10055 in k10051 in ranbeta in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9881(t7,t6);}

/* k10016 in ranbeta in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10018,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10022,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10022(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10020 in k10016 in ranbeta in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_10022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9881(t7,t6);}

/* k9879 in ranbeta in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_9881(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9881,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9884,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_9884(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[164]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9918,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[164]);}
else{
t6=t5;
f_9918(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[165]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9953,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[165]);}
else{
t7=t6;
f_9953(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9982,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_9982(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k9980 in k9879 in ranbeta in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9982,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9989,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9997,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9995 in k9980 in k9879 in ranbeta in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9989(2,t2,C_SCHEME_UNDEFINED);}}

/* k9987 in k9980 in k9879 in ranbeta in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9884(t5,t4);}

/* k9951 in k9879 in ranbeta in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9953,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9957,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9957(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9955 in k9951 in k9879 in ranbeta in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9884(t7,t6);}

/* k9916 in k9879 in ranbeta in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9918,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9922,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9922(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9920 in k9916 in k9879 in ranbeta in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9884(t7,t6);}

/* k9882 in k9879 in ranbeta in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_9884(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9884,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9887,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_9887(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k9885 in k9882 in k9879 in ranbeta in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9887,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9890,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_9890(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[3])[1]);
t5=t2;
f_9890(t5,t4);}}

/* k9888 in k9885 in k9882 in k9879 in ranbeta in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_9890(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9890,NULL,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=((C_word*)((C_word*)t0)[3])[1];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t2;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub363(t5,t6,t7));}

/* shuffle in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9835(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_9835r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9835r(t0,t1,t2);}}

static void C_ccall f_9835r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(6);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9849,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 354  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9864,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 354  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,C_SCHEME_END_OF_LIST);}}

/* k9862 in shuffle in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 354  shuffle!");
t2=C_retrieve(lf[157]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k9847 in shuffle in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 354  shuffle!");
t2=C_retrieve(lf[157]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* shuffle! in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9780(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9780,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9791,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 354  tb:rani");
f_8052(t4,t3);}

/* k9789 in shuffle! in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9791,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9793,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word)li108),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_9793(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do626 in k9789 in shuffle! in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_9793(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9793,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[4]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t0)[3]);}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(C_word)C_i_list_tail(((C_word*)t0)[3],t2);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
t10=(C_word)C_i_set_car(t8,t9);
t11=(C_word)C_i_list_tail(((C_word*)t0)[3],t3);
t12=(C_word)C_i_set_car(t11,((C_word*)t5)[1]);
t13=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t14=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9821,a[2]=t5,a[3]=t13,a[4]=t1,a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 354  tb:rani");
f_8052(t14,((C_word*)t0)[4]);}}

/* k9819 in do626 in k9789 in shuffle! in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_9793(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* vary in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9681(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr4r,(void*)f_9681r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_9681r(t0,t1,t2,t3,t4);}}

static void C_ccall f_9681r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9685,a[2]=t1,a[3]=t5,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
t7=C_set_block_item(t5,0,C_fix(0));
t8=t6;
f_9685(t8,t7);}
else{
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=t6;
f_9685(t9,t8);}}

/* k9683 in vary in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_9685(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9685,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9688,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t3,C_fix(0)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(-1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(1)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t4=t2;
f_9688(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 354  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[156],((C_word*)((C_word*)t0)[3])[1]);}}

/* k9686 in k9683 in vary in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9688,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9690,a[2]=((C_word)li105),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9753,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word)li106),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 354  vary1");
f_9690(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);}}

/* a9752 in k9686 in k9683 in vary in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9753(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9753,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 354  vary1");
f_9690(t1,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* vary1 in k9686 in k9683 in vary in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_9690(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9690,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_less_or_equalp(t3,C_fix(0));
t6=(C_truep(t5)?t5:(C_word)C_i_nequalp(t2,C_fix(0)));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t7=(C_word)C_a_i_times(&a,2,t2,t3);
t8=(C_word)C_a_i_abs(&a,1,t7);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9706,a[2]=t1,a[3]=t2,a[4]=t8,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 354  tb:ranf");
f_8059(t9,t8);}}

/* k9704 in vary1 in k9686 in k9683 in vary in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9706,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[5],C_fix(0));
if(C_truep(t2)){
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],lf[155]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_plus(&a,2,t4,t1));}
else{
t3=(C_word)C_eqp(((C_word*)t0)[5],C_fix(1));
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1):(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t1)));}}

/* odds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9453(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_9453r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_9453r(t0,t1,t2,t3);}}

static void C_ccall f_9453r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=C_SCHEME_TRUE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9457,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t1,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_9457(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[152]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9594,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[152]);}
else{
t20=t19;
f_9594(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[153]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9629,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[153]);}
else{
t21=t20;
f_9629(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9658,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_9658(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k9656 in odds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9658,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9665,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9673,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9671 in k9656 in odds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9665(2,t2,C_SCHEME_UNDEFINED);}}

/* k9663 in k9656 in odds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9457(t5,t4);}

/* k9627 in odds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9629,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9633,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9633(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9631 in k9627 in odds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9457(t7,t6);}

/* k9592 in odds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9594,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9598,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9598(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9596 in k9592 in odds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9457(t7,t6);}

/* k9455 in odds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_9457(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9457,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9460,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_9460(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[152]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9494,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[152]);}
else{
t6=t5;
f_9494(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[153]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9529,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[153]);}
else{
t7=t6;
f_9529(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9558,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_9558(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k9556 in k9455 in odds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9558,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9565,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9573,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9571 in k9556 in k9455 in odds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9565(2,t2,C_SCHEME_UNDEFINED);}}

/* k9563 in k9556 in k9455 in odds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9460(t5,t4);}

/* k9527 in k9455 in odds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9529,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9533,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9533(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9531 in k9527 in k9455 in odds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9460(t7,t6);}

/* k9492 in k9455 in odds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9494,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9498,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9498(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9496 in k9492 in k9455 in odds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9460(t7,t6);}

/* k9458 in k9455 in odds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_9460(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9460,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9463,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_9463(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k9461 in k9458 in k9455 in odds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9463,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9473,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 354  tb:ranf");
f_8059(t2,lf[151]);}

/* k9471 in k9461 in k9458 in k9455 in odds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)((C_word*)t0)[3])[1]:((C_word*)((C_word*)t0)[2])[1]));}

/* pick in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9410(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr2r,(void*)f_9410r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9410r(t0,t1,t2);}}

static void C_ccall f_9410r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9428,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_length(t6);
C_trace("ChickenBridge.scm: 354  tb:rani");
f_8052(t5,t7);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9443,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 354  tb:rani");
f_8052(t4,t5);}}

/* k9441 in pick in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* k9426 in pick in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* between in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9389(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_9389,4,t0,t1,t2,t3);}
t4=(C_word)C_fixnump(t2);
t5=(C_truep(t4)?(C_word)C_fixnump(t3):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_i_foreign_fixnum_argumentp(t7);
t10=(C_word)C_i_foreign_fixnum_argumentp(t8);
t11=t6;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub329(C_SCHEME_UNDEFINED,t9,t10));}
else{
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t10=(C_word)C_i_foreign_flonum_argumentp(t7);
t11=(C_word)C_i_foreign_flonum_argumentp(t8);
t12=t6;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub335(t9,t10,t11));}}

/* ran in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9354(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_9354r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9354r(t0,t1,t2);}}

static void C_ccall f_9354r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(6);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9358,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=C_set_block_item(t3,0,C_fix(1));
t6=t4;
f_9358(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)t3)[1]);
t6=C_set_block_item(t3,0,t5);
t7=t4;
f_9358(t7,t6);}}

/* k9356 in ran in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_9358(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
if(C_truep((C_word)C_fixnump(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("ChickenBridge.scm: 354  tb:rani");
f_8052(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 354  tb:ranf");
f_8059(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}
else{
C_trace("ChickenBridge.scm: 354  tb:ranf");
f_8059(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}

/* scale in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9246(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+19)){
C_save_and_reclaim((void*)tr4r,(void*)f_9246r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_9246r(t0,t1,t2,t3,t4);}}

static void C_ccall f_9246r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(19);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9253,a[2]=t1,a[3]=t6,a[4]=t3,a[5]=t8,a[6]=t2,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_pairp(t10))){
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t11))){
t12=(C_word)C_i_car(((C_word*)t5)[1]);
t13=C_set_block_item(t5,0,t12);
t14=t9;
f_9253(t14,t13);}
else{
t12=(C_word)C_i_cadr(((C_word*)t5)[1]);
t13=C_set_block_item(t8,0,t12);
t14=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9333,a[2]=t9,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)t8)[1],t3))){
C_trace("ChickenBridge.scm: 354  error");
t15=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t14,lf[146],((C_word*)t8)[1]);}
else{
t15=t14;
f_9333(2,t15,C_SCHEME_UNDEFINED);}}}
else{
t11=t9;
f_9253(t11,C_SCHEME_UNDEFINED);}}

/* k9331 in scale in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9253(t4,t3);}

/* k9251 in scale in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_9253(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9253,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[7])[1]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9262,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word)li99),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_9262(t6,((C_word*)t0)[2],C_fix(0),((C_word*)t0)[4],t2,((C_word*)t0)[3]);}

/* do549 in k9251 in scale in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_9262(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9262,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[7]))){
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9275,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9309,a[2]=t8,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 354  fit");
t10=C_retrieve(lf[141]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,((C_word*)t6)[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[4])[1],C_fix(1));}
else{
t9=t8;
f_9275(t9,C_SCHEME_UNDEFINED);}}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k9307 in do549 in k9251 in scale in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9275(t3,t2);}

/* k9273 in do549 in k9251 in scale in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_9275(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9275,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[7])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9301,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 354  modulo");
t7=*((C_word*)lf[145]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t0)[5],((C_word*)t0)[2]);}

/* k9299 in k9273 in do549 in k9251 in scale in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9301,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[8])[1],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_9262(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* fit in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9113(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr5r,(void*)f_9113r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_9113r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_9113r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(13);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9117,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t6,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t10=C_set_block_item(t8,0,C_fix(1));
t11=t9;
f_9117(t11,t10);}
else{
t10=(C_word)C_i_car(((C_word*)t8)[1]);
t11=C_set_block_item(t8,0,t10);
t12=t9;
f_9117(t12,t11);}}

/* k9115 in fit in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_9117(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9117,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9120,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]))){
t3=((C_word*)((C_word*)t0)[5])[1];
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t6=t2;
f_9120(t6,t5);}
else{
t3=t2;
f_9120(t3,C_SCHEME_UNDEFINED);}}

/* k9118 in k9115 in fit in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_9120(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9120,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9122,a[2]=((C_word)li96),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9224,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word)li97),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[6]);}
else{
C_trace("ChickenBridge.scm: 354  fit1");
f_9122(((C_word*)t0)[2],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a9223 in k9118 in k9115 in fit in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9224(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9224,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 354  fit1");
f_9122(t1,t2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* fit1 in k9118 in k9115 in fit in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_9122(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9122,NULL,5,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9129,a[2]=t5,a[3]=t3,a[4]=t4,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 354  <=");
C_less_or_equal_p(5,0,t6,t3,t2,t4);}

/* k9127 in fit1 in k9118 in k9115 in fit in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9129,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[5]);}
else{
t2=(C_word)C_i_greaterp(((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_truep(t2)?((C_word*)t0)[4]:((C_word*)t0)[3]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
switch(((C_word*)t0)[2]){
case C_fix(1):
t5=(C_word)C_i_nequalp(t3,((C_word*)t0)[4]);
t6=(C_truep(t5)?((C_word*)t0)[3]:((C_word*)t0)[4]);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9152,a[2]=t6,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 354  remainder");
t9=*((C_word*)lf[142]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,t4);
case C_fix(2):
t5=(C_word)C_a_i_times(&a,2,C_fix(2),t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9171,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 354  remainder");
t8=*((C_word*)lf[142]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t6,t7,t5);
case C_fix(3):
t5=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t3);
default:
C_trace("ChickenBridge.scm: 354  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[6],lf[143],((C_word*)t0)[2]);}}}

/* k9169 in k9127 in fit1 in k9118 in k9115 in fit in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9171,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9178,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_abs(&a,1,t1);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)t0)[3]))){
t4=(C_word)C_i_greater_or_equalp(t1,C_fix(0));
t5=(C_truep(t4)?*((C_word*)lf[117]+1):*((C_word*)lf[113]+1));
t6=t5;
((C_proc4)C_retrieve_proc(t6))(4,t6,t2,t1,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 354  -");
C_minus(3,0,t2,t1);}}

/* k9176 in k9169 in k9127 in fit1 in k9118 in k9115 in fit in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9178,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,t1,((C_word*)t0)[2]));}

/* k9150 in k9127 in fit1 in k9118 in k9115 in fit in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9152,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)t0)[2],t1));}

/* tendency in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9046(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr5r,(void*)f_9046r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_9046r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_9046r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word *a=C_alloc(16);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=C_retrieve(lf[140]);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9050,a[2]=t2,a[3]=t8,a[4]=t10,a[5]=t1,a[6]=t7,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t12=t11;
f_9050(t12,C_SCHEME_UNDEFINED);}
else{
t12=(C_word)C_i_car(((C_word*)t8)[1]);
t13=C_set_block_item(t10,0,t12);
t14=(C_word)C_i_cdr(((C_word*)t8)[1]);
t15=C_set_block_item(t8,0,t14);
t16=t11;
f_9050(t16,t15);}}

/* k9048 in tendency in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_9050(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9050,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9053,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9096,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 354  interp1");
f_8914(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[7])[1],C_fix(1));}
else{
t3=t2;
f_9053(t3,C_SCHEME_UNDEFINED);}}

/* k9094 in k9048 in tendency in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9053(t3,t2);}

/* k9051 in k9048 in tendency in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_9053(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9053,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9056,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[6])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9089,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 354  interp1");
f_8914(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1],C_fix(1));}
else{
t3=t2;
f_9056(t3,C_SCHEME_UNDEFINED);}}

/* k9087 in k9051 in k9048 in tendency in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9056(t3,t2);}

/* k9054 in k9051 in k9048 in tendency in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_9056(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9056,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9069,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_truep(t3)?(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]));
C_apply(5,0,t2,((C_word*)((C_word*)t0)[3])[1],t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k9067 in k9054 in k9051 in k9048 in tendency in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9069,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[2])[1],t1));}

/* interp in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9000(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_9000r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_9000r(t0,t1,t2,t3);}}

static void C_ccall f_9000r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9004,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 354  error");
t5=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[138]);}
else{
t5=t4;
f_9004(2,t5,C_SCHEME_UNDEFINED);}}

/* k9002 in interp in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_9004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=(C_word)C_i_nullp(t4);
t6=(C_truep(t5)?C_fix(1):(C_word)C_i_cadr(((C_word*)t0)[4]));
C_trace("ChickenBridge.scm: 354  interp1");
f_8914(((C_word*)t0)[3],((C_word*)t0)[2],t3,t6);}
else{
C_trace("ChickenBridge.scm: 354  interp1");
f_8914(((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4],C_fix(1));}}

/* interp1 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_8914(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8914,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8918,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 354  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[136],t3);}
else{
t6=t5;
f_8918(2,t6,(C_word)C_i_car(t3));}}

/* k8916 in interp1 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8918,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8921,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 354  err");
t6=C_retrieve(lf[134]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[135],((C_word*)t0)[4]);}
else{
t6=t4;
f_8921(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k8919 in k8916 in interp1 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8921,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=((C_word*)t0)[5];
t9=(C_word)C_i_cddr(((C_word*)t0)[4]);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8930,a[2]=((C_word*)t0)[4],a[3]=t11,a[4]=t8,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li92),tmp=(C_word)a,a+=11,tmp));
t13=((C_word*)t11)[1];
f_8930(t13,((C_word*)t0)[2],t9);}

/* do500 in k8919 in k8916 in interp1 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_8930(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8930,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 354  tb:rescale");
f_7889(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8952,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 354  error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[133],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_8952(2,t13,t12);}}}

/* k8950 in do500 in k8919 in k8916 in interp1 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_8930(t3,((C_word*)t0)[2],t2);}

/* ratio->cents in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8899(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8899,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[82],"tb:scaler->cents"),t2);}
else{
C_trace("ChickenBridge.scm: 354  tb:scaler->cents");
t3=C_retrieve2(lf[82],"tb:scaler->cents");
f_7983(3,t3,t1,t2);}}

/* cents->ratio in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8884(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8884,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[81],"tb:cents->scaler"),t2);}
else{
C_trace("ChickenBridge.scm: 354  tb:cents->scaler");
t3=C_retrieve2(lf[81],"tb:cents->scaler");
f_7976(3,t3,t1,t2);}}

/* rhythm->seconds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8648(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_8648r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8648r(t0,t1,t2,t3);}}

static void C_ccall f_8648r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=lf[126];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=lf[127];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8652,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t1,a[8]=t7,a[9]=t5,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_8652(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[128]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8797,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[128]);}
else{
t20=t19;
f_8797(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[129]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8832,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[129]);}
else{
t21=t20;
f_8832(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8861,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_8861(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k8859 in rhythm->seconds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8861,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8868,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8876,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8874 in k8859 in rhythm->seconds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8868(2,t2,C_SCHEME_UNDEFINED);}}

/* k8866 in k8859 in rhythm->seconds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8652(t5,t4);}

/* k8830 in rhythm->seconds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8832,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8836,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8836(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8834 in k8830 in rhythm->seconds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8652(t7,t6);}

/* k8795 in rhythm->seconds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8797,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8801,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8801(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8799 in k8795 in rhythm->seconds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8652(t7,t6);}

/* k8650 in rhythm->seconds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_8652(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8652,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8655,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_8655(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[128]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8697,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[128]);}
else{
t6=t5;
f_8697(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[129]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8732,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[129]);}
else{
t7=t6;
f_8732(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8761,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_8761(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k8759 in k8650 in rhythm->seconds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8761,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8768,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8776,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8774 in k8759 in k8650 in rhythm->seconds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8768(2,t2,C_SCHEME_UNDEFINED);}}

/* k8766 in k8759 in k8650 in rhythm->seconds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8655(t5,t4);}

/* k8730 in k8650 in rhythm->seconds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8732,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8736,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8736(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8734 in k8730 in k8650 in rhythm->seconds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8655(t7,t6);}

/* k8695 in k8650 in rhythm->seconds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8697,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8701,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8701(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8699 in k8695 in k8650 in rhythm->seconds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8655(t7,t6);}

/* k8653 in k8650 in rhythm->seconds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_8655(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8655,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8658,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_8658(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k8656 in k8653 in k8650 in rhythm->seconds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8658,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8669,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li88),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 354  tb:rhythm->seconds");
f_7961(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a8668 in k8656 in k8653 in k8650 in rhythm->seconds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8669(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8669,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 354  tb:rhythm->seconds");
f_7961(t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* decimals in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8608(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8608,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8612,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 354  expt");
t5=*((C_word*)lf[123]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[124],t3);}

/* k8610 in decimals in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8612,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[3]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8623,a[2]=t1,a[3]=((C_word)li86),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8642,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 354  round");
t4=*((C_word*)lf[122]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}}

/* k8640 in k8610 in decimals in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8642,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* a8622 in k8610 in decimals in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8623(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8623,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8631,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 354  round");
t5=*((C_word*)lf[122]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k8629 in a8622 in k8610 in decimals in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8631,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* quantize in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8587(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8587,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8599,a[2]=t3,a[3]=((C_word)li84),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_trace("ChickenBridge.scm: 354  tb:quantize");
f_7950(t1,t2,t3);}}

/* a8598 in quantize in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8599(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8599,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 354  tb:quantize");
f_7950(t1,t2,((C_word*)t0)[2]);}

/* divide in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8544(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3r,(void*)f_8544r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8544r(t0,t1,t2,t3);}}

static void C_ccall f_8544r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[119]+1),t2);}
else{
C_trace("ChickenBridge.scm: 354  /");
C_divide(3,0,t1,t2);}}
else{
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8574,a[2]=t3,a[3]=((C_word)li82),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_apply(5,0,t1,*((C_word*)lf[119]+1),t2,t3);}}}

/* a8573 in divide in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8574(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8574,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_divide(&a,2,t2,t3));}

/* minus in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8501(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3r,(void*)f_8501r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8501r(t0,t1,t2,t3);}}

static void C_ccall f_8501r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[117]+1),t2);}
else{
C_trace("ChickenBridge.scm: 354  -");
C_minus(3,0,t1,t2);}}
else{
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8531,a[2]=t3,a[3]=((C_word)li80),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_apply(5,0,t1,*((C_word*)lf[117]+1),t2,t3);}}}

/* a8530 in minus in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8531(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8531,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_minus(&a,2,t2,t3));}

/* times in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8432(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_8432r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8432r(t0,t1,t2);}}

static void C_ccall f_8432r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(1));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[115]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[115]+1),t2);}}
else{
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8476,a[2]=t2,a[3]=((C_word)li78),tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t5,t6);}
else{
C_apply(4,0,t1,*((C_word*)lf[115]+1),t2);}}}}

/* a8475 in times in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8476(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8476,3,t0,t1,t2);}
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_times(&a,2,t2,t3));}

/* plus in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8363(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_8363r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8363r(t0,t1,t2);}}

static void C_ccall f_8363r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[113]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[113]+1),t2);}}
else{
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8407,a[2]=t2,a[3]=((C_word)li76),tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t5,t6);}
else{
C_apply(4,0,t1,*((C_word*)lf[113]+1),t2);}}}}

/* a8406 in plus in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8407(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8407,3,t0,t1,t2);}
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_plus(&a,2,t2,t3));}

/* float in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8339(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8339,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8351,a[2]=((C_word)li74),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,t3,t2);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_times(&a,2,t2,lf[107]));}}

/* a8350 in float in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8351(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8351,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_times(&a,2,t2,lf[106]));}

/* int in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8324(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8324,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[78],"tb:int"),t2);}
else{
C_trace("ChickenBridge.scm: 354  tb:int");
t3=C_retrieve2(lf[78],"tb:int");
f_7943(3,t3,t1,t2);}}

/* discrete in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8213(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+21)){
C_save_and_reclaim((void*)tr6r,(void*)f_8213r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_8213r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_8213r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word *a=C_alloc(21);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(1);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_8217,a[2]=t5,a[3]=t1,a[4]=t12,a[5]=t8,a[6]=t4,a[7]=t3,a[8]=t2,a[9]=t10,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(t5))){
t14=C_set_block_item(t10,0,t5);
if(C_truep((C_word)C_i_nullp(t6))){
t15=(C_word)C_i_length(((C_word*)t10)[1]);
t16=C_set_block_item(t8,0,t15);
t17=t13;
f_8217(t17,t16);}
else{
t15=(C_word)C_i_car(t6);
t16=C_set_block_item(t8,0,t15);
t17=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8288,a[2]=t13,a[3]=t12,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t18=(C_word)C_i_cdr(t6);
t19=(C_word)C_i_nullp(t18);
C_trace("ChickenBridge.scm: 354  not?");
t20=C_retrieve(lf[103]);
((C_proc3)C_retrieve_proc(t20))(3,t20,t17,t19);}}
else{
t14=(C_word)C_i_car(t6);
t15=C_set_block_item(t8,0,t14);
t16=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t16))){
t17=t13;
f_8217(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_cadr(t6);
t18=C_set_block_item(t12,0,t17);
t19=t13;
f_8217(t19,t18);}}}

/* k8286 in discrete in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8217(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_8217(t2,C_SCHEME_UNDEFINED);}}

/* k8215 in discrete in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_8217(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8217,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8231,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[9],a[7]=((C_word)li70),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8246,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 354  tb:discrete");
f_7916(t2,((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],C_fix(0),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8257,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word)li71),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
C_trace("ChickenBridge.scm: 354  tb:discrete");
f_7916(((C_word*)t0)[3],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}}

/* a8256 in k8215 in discrete in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8257(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8257,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 354  tb:discrete");
f_7916(t1,t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k8244 in k8215 in discrete in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* a8230 in k8215 in discrete in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8231(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8231,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8239,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 354  tb:discrete");
f_7916(t3,t2,((C_word*)t0)[5],((C_word*)t0)[4],C_fix(0),((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k8237 in a8230 in k8215 in discrete in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* rescale in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8179(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr7r,(void*)f_8179r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest(a,C_rest_count(0));
f_8179r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_8179r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
if(C_truep((C_word)C_i_listp(t2))){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8191,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t4,a[6]=t3,a[7]=((C_word)li68),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t9=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t1,t8,t2);}
else{
if(C_truep((C_word)C_i_nullp(t7))){
C_trace("ChickenBridge.scm: 354  tb:rescale");
f_7889(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 354  tb:rescale");
f_7889(t1,t2,t3,t4,t5,t6,t8);}}}

/* a8190 in rescale in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8191(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8191,3,t0,t1,t2);}
C_apply(9,0,t1,C_retrieve(lf[101]),t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* log2 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8172(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8172,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub401(t3,t4));}

/* log10 in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8165(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8165,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub396(t3,t4));}

/* tb:ranbrown in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8146,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub383(t2));}

/* tb:ranpink in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8143,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub380(t2));}

/* tb:ranpoisson in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_8136(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8136,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub377(C_SCHEME_UNDEFINED,t3));}

/* tb:rancauchy in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8133,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub373(t2));}

/* tb:rangamma in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_8126(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8126,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub369(t3,t4));}

/* tb:ranexp in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_8108(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8108,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub357(t3,t4));}

/* tb:rangauss in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_8097(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8097,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub351(t4,t5,t6));}

/* tb:ranmiddle in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8094,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub346(t2));}

/* tb:ranhigh in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8091,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub343(t2));}

/* tb:ranlow in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8088,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub340(t2));}

/* tb:ranf in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_8059(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8059,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub323(t3,t4));}

/* tb:rani in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_8052(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8052,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub319(C_SCHEME_UNDEFINED,t3));}

/* tb:ran-set! in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8049(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8049,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub315(C_SCHEME_UNDEFINED,t2));}

/* tb:keynum->hertz in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_8028(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8028,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub301(t3,t4));}

/* tb:geoseg in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_8009(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_8009,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub293(t6,t7,t8,t9,t10));}

/* tb:explseg in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7990(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7990,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub282(t6,t7,t8,t9,t10));}

/* tb:scaler->cents in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7983(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7983,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub275(C_SCHEME_UNDEFINED,t3));}

/* tb:cents->scaler in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7976(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7976,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_fixnum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub270(t3,t4));}

/* tb:rhythm->seconds in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_7961(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7961,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t2);
t7=(C_word)C_i_foreign_flonum_argumentp(t3);
t8=(C_word)C_i_foreign_flonum_argumentp(t4);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub263(t5,t6,t7,t8));}

/* tb:quantize in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_7950(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7950,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub255(t4,t5,t6));}

/* tb:int in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7943(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7943,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub250(C_SCHEME_UNDEFINED,t3));}

/* tb:discrete in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_7916(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7916,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_i_foreign_flonum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_flonum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=(C_word)C_i_foreign_flonum_argumentp(t7);
t14=t1;
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)stub241(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12,t13));}

/* tb:rescale in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_7889(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7889,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub226(t8,t9,t10,t11,t12,t13,t14));}

/* bitwise-test in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_7848(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7848,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7854,a[2]=t7,a[3]=t4,a[4]=t5,a[5]=((C_word)li41),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_7854(t9,t1,C_SCHEME_FALSE);}

/* do187 in bitwise-test in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_7854(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7854,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7864,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(0)))){
t5=C_set_block_item(t3,0,C_SCHEME_TRUE);
t6=t4;
f_7864(t6,t5);}
else{
t5=C_set_block_item(t3,0,C_SCHEME_FALSE);
t6=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t7=t4;
f_7864(t7,t6);}}
else{
t5=t4;
f_7864(t5,C_SCHEME_UNDEFINED);}}}

/* k7862 in do187 in bitwise-test in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_7864(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7864,NULL,2,t0,t1);}
t2=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(-1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=((C_word*)((C_word*)t0)[4])[1];
f_7854(t6,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-prop in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7762(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr4r,(void*)f_7762r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_7762r(t0,t1,t2,t3,t4);}}

static void C_ccall f_7762r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_nullp(t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_truep(t5)?C_SCHEME_FALSE:(C_word)C_i_car(t4)));}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_eqp(t5,t3);
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cadr(t2));}
else{
t7=(C_word)C_i_cddr(t2);
C_apply(6,0,t1,C_retrieve2(lf[74],"list-prop"),t7,t3,t4);}}}

/* every? in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7723(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7723,4,t0,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7729,a[2]=t2,a[3]=t5,a[4]=((C_word)li38),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7729(t7,t1,t3,C_SCHEME_TRUE);}

/* do171 in every? in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_7729(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7729,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_not(((C_word*)t4)[1]);
t6=(C_truep(t5)?t5:(C_word)C_i_nullp(t2));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,((C_word*)t4)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7742,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7752,a[2]=t4,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 353  f");
t10=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t10))(3,t10,t8,t9);}}

/* k7750 in do171 in every? in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_7742(t2,C_SCHEME_FALSE);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
f_7742(t3,t2);}}

/* k7740 in do171 in every? in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_7742(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_7729(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* list-find in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7684(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7684,4,t0,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7690,a[2]=t2,a[3]=t5,a[4]=((C_word)li36),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7690(t7,t1,t3,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do160 in list-find in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_7690(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7690,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7700,a[2]=t5,a[3]=t3,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7710,a[2]=t8,a[3]=t5,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 353  p");
t11=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}}

/* k7708 in do160 in list-find in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_7700(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_7700(t2,C_SCHEME_UNDEFINED);}}

/* k7698 in do160 in list-find in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_7700(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_7690(t3,((C_word*)t0)[4],t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-index in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7644(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7644,4,t0,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7650,a[2]=t2,a[3]=t5,a[4]=((C_word)li34),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7650(t7,t1,t3,C_fix(0),C_SCHEME_FALSE);}

/* do149 in list-index in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_7650(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7650,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7660,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7674,a[2]=t8,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 353  p");
t11=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}}

/* k7672 in do149 in list-index in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_7660(t3,t2);}
else{
t2=((C_word*)t0)[2];
f_7660(t2,C_SCHEME_UNDEFINED);}}

/* k7658 in do149 in list-index in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_7660(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7660,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t4=((C_word*)((C_word*)t0)[4])[1];
f_7650(t4,((C_word*)t0)[3],t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* make-list in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7545(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_7545r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7545r(t0,t1,t2,t3);}}

static void C_ccall f_7545r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7549,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(0)))){
C_trace("ChickenBridge.scm: 353  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[70],t2);}
else{
t5=t4;
f_7549(2,t5,C_SCHEME_UNDEFINED);}}

/* k7547 in make-list in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7549,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7551,a[2]=t3,a[3]=((C_word)li31),tmp=(C_word)a,a+=4,tmp));
t7=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7574,a[2]=t5,a[3]=((C_word)li32),tmp=(C_word)a,a+=4,tmp));
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 353  l1");
t8=((C_word*)t3)[1];
f_7551(t8,((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_closurep(t8))){
C_trace("ChickenBridge.scm: 353  l2");
t9=((C_word*)t5)[1];
f_7574(t9,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 353  l1");
t10=((C_word*)t3)[1];
f_7551(t10,((C_word*)t0)[3],((C_word*)t0)[2],t9);}}}

/* l2 in k7547 in make-list in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_7574(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7574,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7591,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cdr(t3);
C_apply(4,0,t4,t5,t6);}}

/* k7589 in l2 in k7547 in make-list in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7591,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7595,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
C_trace("ChickenBridge.scm: 353  l2");
t4=((C_word*)((C_word*)t0)[3])[1];
f_7574(t4,t2,t3,((C_word*)t0)[2]);}

/* k7593 in k7589 in l2 in k7547 in make-list in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7595,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* l1 in k7547 in make-list in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_7551(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_7551,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7568,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 353  l1");
t7=t4;
t8=t5;
t9=t3;
t1=t7;
t2=t8;
t3=t9;
goto loop;}}

/* k7566 in l1 in k7547 in make-list in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7568,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* reverse! in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7484(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7484,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7497,a[2]=t2,a[3]=t6,a[4]=((C_word)li29),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_7497(t8,t1,C_fix(0),t4,t2);}

/* do126 in reverse! in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_7497(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(12);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_7497,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_lessp(t2,t3))){
t5=(C_word)C_i_car(t4);
t6=(C_word)C_a_i_minus(&a,2,t3,t2);
t7=(C_word)C_i_list_tail(t4,t6);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_i_set_car(t4,t8);
t10=(C_word)C_i_set_car(t7,t5);
t11=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t12=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t13=(C_word)C_i_cdr(t4);
t15=t1;
t16=t11;
t17=t12;
t18=t13;
t1=t15;
t2=t16;
t3=t17;
t4=t18;
goto loop;}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,((C_word*)t0)[2]);}}

/* list-set! in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7474(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_7474,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_list_tail(t2,t3);
t6=(C_word)C_i_set_car(t5,t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t4);}

/* list* in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7434(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_7434r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7434r(t0,t1,t2);}}

static void C_ccall f_7434r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 353  error");
t3=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[66]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7464,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t2);
C_apply(4,0,t5,C_retrieve(lf[65]),t6);}}}

/* k7462 in list* in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7464,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* tail in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7344(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7344,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 353  tail");
t5=C_retrieve(lf[64]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* butlast in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7296(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7296,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7330,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 353  butlast");
t8=C_retrieve(lf[63]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k7328 in butlast in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7330,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7273(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7273,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 353  last");
t5=C_retrieve(lf[62]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* rest in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7267(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7267,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* tenth in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7252(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7252,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7238(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7238,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7228(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7228,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7218(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7218,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7208(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7208,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7198(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7198,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* chdir in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7165(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2rv,(void*)f_7165r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_7165r(t0,t1,t2);}}

static void C_ccall f_7165r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?lf[45]:(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7174,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t5+1)))(3,t5,t1,t4);}

/* f_7174 in chdir in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7174(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7174,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7179,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_7179(2,t4,C_SCHEME_FALSE);}}

/* k7177 */
static void C_ccall f_7179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub95(C_SCHEME_UNDEFINED,t1));}

/* cwd in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7154,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7159,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_7159 in cwd in k7150 in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7159,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[43]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub90(t2),C_fix(0));}

/* expand-send in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6861(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[17],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6861,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=t4;
t7=(C_truep(t6)?t6:(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7141,a[2]=((C_word)li5),tmp=(C_word)a,a+=3,tmp));
t8=t4;
t9=(C_truep(t8)?(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7130,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp):(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7139,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6871,a[2]=t9,a[3]=t7,a[4]=t1,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t2))){
C_trace("ChickenBridge.scm: 266  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}
else{
t11=t10;
f_6871(2,t11,t2);}}

/* k6869 in expand-send in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6871,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6874,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7122,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 267  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve(lf[29]),t1,t3);}

/* a7121 in k6869 in expand-send in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7122,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k6872 in k6869 in expand-send in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6874,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6877,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=t1;
if(C_truep(t3)){
t4=t2;
f_6877(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 268  ferror");
t4=((C_word*)t0)[4];
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[40],((C_word*)t0)[3]);}}

/* k6875 in k6872 in k6869 in expand-send in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6877,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
t3=(C_word)C_i_car(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_length(t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_6892,a[2]=t2,a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=((C_word*)t0)[5],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nequalp(t7,C_fix(1)))){
t9=(C_word)C_i_car(t4);
t10=t8;
f_6892(t10,(C_word)C_eqp(t9,lf[39]));}
else{
t9=t8;
f_6892(t9,C_SCHEME_FALSE);}}

/* k6890 in k6875 in k6872 in k6869 in expand-send in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_6892(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6892,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[11];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[10],((C_word*)((C_word*)t0)[9])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_6902,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 282  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[8],C_SCHEME_END_OF_LIST);}}

/* k6900 in k6890 in k6875 in k6872 in k6869 in expand-send in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6902,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_6904,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=t3,a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word)li10),tmp=(C_word)a,a+=13,tmp));
t5=((C_word*)t3)[1];
f_6904(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do63 in k6900 in k6890 in k6875 in k6872 in k6869 in expand-send in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_6904(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6904,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6916,a[2]=((C_word*)t0)[9],a[3]=t10,a[4]=t2,a[5]=((C_word*)t0)[10],a[6]=((C_word)li8),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_6916(t12,t1,t2);}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6957,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_6963,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t8,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=t2,a[9]=t7,a[10]=((C_word*)t0)[9],a[11]=t6,a[12]=((C_word*)t0)[11],a[13]=t9,a[14]=((C_word*)t0)[7],tmp=(C_word)a,a+=15,tmp);
t11=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t11)){
t12=t10;
f_6963(2,t12,C_SCHEME_FALSE);}
else{
t12=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 297  keyword?");
t13=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t10,t12);}}}

/* k6961 in do63 in k6900 in k6890 in k6875 in k6872 in k6869 in expand-send in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6963,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[13];
f_6957(t3,t2);}
else{
t2=((C_word*)((C_word*)t0)[14])[1];
if(C_truep(t2)){
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=(C_word)C_i_assoc(((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10]);
t6=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[12])+1,t7);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_7017,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_7090,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t9,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 318  keyword?");
t11=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)((C_word*)t0)[11])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6973,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t4=(C_word)C_i_length(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 308  ferror");
t5=((C_word*)t0)[7];
((C_proc6)C_retrieve_proc(t5))(6,t5,t3,lf[38],((C_word*)t0)[6],((C_word*)t0)[3],t4);}
else{
t4=t3;
f_6973(2,t4,C_SCHEME_UNDEFINED);}}}}

/* k6971 in k6961 in do63 in k6900 in k6890 in k6875 in k6872 in k6869 in expand-send in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6973,2,t0,t1);}
t2=(C_word)C_i_list_tail(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_set_car(t2,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=((C_word*)t0)[2];
f_6957(t9,t8);}

/* k7088 in k6961 in do63 in k6900 in k6890 in k6875 in k6872 in k6869 in expand-send in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7090,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7063,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 323  keyname");
t3=((C_word*)t0)[5];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t2)){
t3=((C_word*)t0)[7];
f_7017(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7076,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7078,a[2]=((C_word*)t0)[5],a[3]=((C_word)li9),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}}}
else{
C_trace("ChickenBridge.scm: 319  ferror");
t2=((C_word*)t0)[8];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[7],lf[37],((C_word*)t0)[6],((C_word*)((C_word*)t0)[4])[1]);}}

/* a7077 in k7088 in k6961 in do63 in k6900 in k6890 in k6875 in k6872 in k6869 in expand-send in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7078(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7078,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 327  keyname");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* k7074 in k7088 in k6961 in do63 in k6900 in k6890 in k6875 in k6872 in k6869 in expand-send in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 325  ferror");
t2=((C_word*)t0)[5];
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],lf[36],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k7061 in k7088 in k6961 in do63 in k6900 in k6890 in k6875 in k6872 in k6869 in expand-send in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 322  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[35],((C_word*)t0)[2],t1);}

/* k7015 in k6961 in do63 in k6900 in k6890 in k6875 in k6872 in k6869 in expand-send in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7017,2,t0,t1);}
t2=(C_word)C_i_member(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7023,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_7023(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7044,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 334  keyname");
t5=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k7042 in k7015 in k6961 in do63 in k6900 in k6890 in k6875 in k6872 in k6869 in expand-send in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 333  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[34],((C_word*)t0)[2],t1);}

/* k7021 in k7015 in k6961 in do63 in k6900 in k6890 in k6875 in k6872 in k6869 in expand-send in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_set_car(((C_word*)t0)[3],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=((C_word*)t0)[2];
f_6957(t6,t5);}

/* k6955 in do63 in k6900 in k6890 in k6875 in k6872 in k6869 in expand-send in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_6957(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[7])[1];
f_6904(t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* do69 in do63 in k6900 in k6890 in k6875 in k6872 in k6869 in expand-send in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_6916(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6916,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6929,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_member(t4,((C_word*)t0)[2]))){
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=t3;
f_6929(t7,(C_word)C_i_set_car(t2,t6));}
else{
t5=t3;
f_6929(t5,C_SCHEME_UNDEFINED);}}}

/* k6927 in do69 in do63 in k6900 in k6890 in k6875 in k6872 in k6869 in expand-send in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_fcall f_6929(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_6916(t3,((C_word*)t0)[2],t2);}

/* f_7139 in expand-send in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7139(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7139,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_7130 in expand-send in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7130(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7130,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7138,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  keyword->string");
t4=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k7136 */
static void C_ccall f_7138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[32],t1);}

/* f_7141 in expand-send in k6857 in k6854 in k6850 in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_7141(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr3r,(void*)f_7141r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7141r(t0,t1,t2,t3);}}

static void C_ccall f_7141r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7149,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(5,0,t4,C_retrieve(lf[31]),t2,t3);}

/* k7147 */
static void C_ccall f_7149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 260  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* expand-optkeys in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6563(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6563,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6724,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6816,a[2]=((C_word)li3),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,t3);}

/* a6815 in expand-optkeys in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6816(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6816,3,t0,t1,t2);}
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6830,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6834,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 212  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6845,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6849,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 213  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k6847 in a6815 in expand-optkeys in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 213  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6843 in a6815 in expand-optkeys in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6845,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,t1,((C_word*)t0)[2],C_SCHEME_FALSE));}

/* k6832 in a6815 in expand-optkeys in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 212  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6828 in a6815 in expand-optkeys in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6830,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k6722 in expand-optkeys in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6724,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6727,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 215  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[28]);}

/* k6725 in k6722 in expand-optkeys in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6727,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6730,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 216  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[27]);}

/* k6728 in k6725 in k6722 in expand-optkeys in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6730,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6733,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6810,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word)li2),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a6809 in k6728 in k6725 in k6722 in expand-optkeys in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6810(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6810,3,t0,t1,t2);}
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t2);
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6576,a[2]=t1,a[3]=t3,a[4]=t7,a[5]=t5,a[6]=t4,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6635,a[2]=t8,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 176  symbol->string");
t10=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,t7);}

/* k6633 in a6809 in k6728 in k6725 in k6722 in expand-optkeys in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 176  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6574 in a6809 in k6728 in k6725 in k6722 in expand-optkeys in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6576,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[19],t1);
t4=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[6]);
t6=(C_word)C_a_i_list(&a,2,lf[3],t5);
t7=(C_word)C_a_i_list(&a,3,lf[4],lf[21],((C_word*)t0)[5]);
t8=(C_word)C_a_i_list(&a,2,lf[22],((C_word*)t0)[6]);
t9=(C_word)C_a_i_list(&a,4,lf[20],t6,t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t9);
t11=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],C_SCHEME_TRUE);
t12=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],C_SCHEME_TRUE);
t13=(C_word)C_a_i_list(&a,2,lf[23],((C_word*)t0)[6]);
t14=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t13);
t15=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)C_a_i_list(&a,6,t2,t4,t10,t11,t12,t14));}

/* k6731 in k6728 in k6725 in k6722 in expand-optkeys in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6733,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6740,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t2,*((C_word*)lf[15]+1),((C_word*)t0)[2]);}

/* k6738 in k6731 in k6728 in k6725 in k6722 in expand-optkeys in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6740,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6752,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6786,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6800,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a6799 in k6738 in k6731 in k6728 in k6725 in k6722 in expand-optkeys in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6800(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6800,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t3,C_SCHEME_FALSE));}

/* k6784 in k6738 in k6731 in k6728 in k6725 in k6722 in expand-optkeys in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6786,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 222  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],t1,t4);}

/* k6750 in k6738 in k6731 in k6728 in k6725 in k6722 in expand-optkeys in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6752,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6756,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6760,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6778,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word)li0),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a6777 in k6750 in k6738 in k6731 in k6728 in k6725 in k6722 in expand-optkeys in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6778(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[119],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6778,3,t0,t1,t2);}
t3=((C_word*)t0)[5];
t4=((C_word*)t0)[4];
t5=((C_word*)t0)[3];
t6=((C_word*)t0)[2];
t7=(C_word)C_a_i_list(&a,2,lf[3],t4);
t8=(C_word)C_a_i_list(&a,2,lf[8],t4);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6713,a[2]=t7,a[3]=t1,a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_cadr(t2);
t12=(C_word)C_a_i_list(&a,3,lf[4],lf[10],t5);
t13=(C_word)C_a_i_list(&a,3,lf[11],t3,t12);
t14=(C_word)C_a_i_list(&a,2,lf[8],t4);
t15=(C_word)C_a_i_list(&a,3,lf[12],t11,t14);
t16=(C_word)C_a_i_list(&a,2,lf[13],t11);
t17=(C_word)C_a_i_list(&a,3,lf[4],lf[14],t11);
t18=(C_word)C_a_i_list(&a,3,lf[11],t16,t17);
t19=(C_word)C_a_i_list(&a,3,lf[12],t10,C_SCHEME_TRUE);
t20=(C_word)C_a_i_list(&a,2,lf[15],t4);
t21=(C_word)C_a_i_list(&a,3,lf[12],t4,t20);
t22=(C_word)C_a_i_list(&a,6,lf[16],t13,t15,t18,t19,t21);
t23=(C_word)C_a_i_list(&a,1,t22);
C_trace("##sys#append");
t24=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t9,t6,t23);}

/* k6711 in a6777 in k6750 in k6738 in k6731 in k6728 in k6725 in k6722 in expand-optkeys in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6713,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[9],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[6],((C_word*)t0)[2],t3));}

/* k6758 in k6750 in k6738 in k6731 in k6728 in k6725 in k6722 in expand-optkeys in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6760,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[5],((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[6],t2,t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)t0)[3]);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[2],t1,t5);}

/* k6754 in k6750 in k6738 in k6731 in k6728 in k6725 in k6722 in expand-optkeys in k6559 in k6556 in k6553 in k6550 */
static void C_ccall f_6756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6756,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[1],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[2],t3));}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[2847] = {
{"toplevelChickenBridge.scm",(void*)C_grace_toplevel},
{"f_6552ChickenBridge.scm",(void*)f_6552},
{"f_6555ChickenBridge.scm",(void*)f_6555},
{"f_6558ChickenBridge.scm",(void*)f_6558},
{"f_6561ChickenBridge.scm",(void*)f_6561},
{"f_41620ChickenBridge.scm",(void*)f_41620},
{"f_6852ChickenBridge.scm",(void*)f_6852},
{"f_6856ChickenBridge.scm",(void*)f_6856},
{"f_41568ChickenBridge.scm",(void*)f_41568},
{"f_41615ChickenBridge.scm",(void*)f_41615},
{"f_41605ChickenBridge.scm",(void*)f_41605},
{"f_41572ChickenBridge.scm",(void*)f_41572},
{"f_6859ChickenBridge.scm",(void*)f_6859},
{"f_41562ChickenBridge.scm",(void*)f_41562},
{"f_7152ChickenBridge.scm",(void*)f_7152},
{"f_10414ChickenBridge.scm",(void*)f_10414},
{"f_41346ChickenBridge.scm",(void*)f_41346},
{"f_41560ChickenBridge.scm",(void*)f_41560},
{"f_41380ChickenBridge.scm",(void*)f_41380},
{"f_41392ChickenBridge.scm",(void*)f_41392},
{"f_41396ChickenBridge.scm",(void*)f_41396},
{"f_41400ChickenBridge.scm",(void*)f_41400},
{"f_41544ChickenBridge.scm",(void*)f_41544},
{"f_41406ChickenBridge.scm",(void*)f_41406},
{"f_41426ChickenBridge.scm",(void*)f_41426},
{"f_41429ChickenBridge.scm",(void*)f_41429},
{"f_41437ChickenBridge.scm",(void*)f_41437},
{"f_41444ChickenBridge.scm",(void*)f_41444},
{"f_41447ChickenBridge.scm",(void*)f_41447},
{"f_41451ChickenBridge.scm",(void*)f_41451},
{"f_41458ChickenBridge.scm",(void*)f_41458},
{"f_41461ChickenBridge.scm",(void*)f_41461},
{"f_41465ChickenBridge.scm",(void*)f_41465},
{"f_41472ChickenBridge.scm",(void*)f_41472},
{"f_41416ChickenBridge.scm",(void*)f_41416},
{"f_41369ChickenBridge.scm",(void*)f_41369},
{"f_41359ChickenBridge.scm",(void*)f_41359},
{"f_41362ChickenBridge.scm",(void*)f_41362},
{"f_10417ChickenBridge.scm",(void*)f_10417},
{"f_41336ChickenBridge.scm",(void*)f_41336},
{"f_41344ChickenBridge.scm",(void*)f_41344},
{"f_11482ChickenBridge.scm",(void*)f_11482},
{"f_41322ChickenBridge.scm",(void*)f_41322},
{"f_41330ChickenBridge.scm",(void*)f_41330},
{"f_41334ChickenBridge.scm",(void*)f_41334},
{"f_22637ChickenBridge.scm",(void*)f_22637},
{"f_22688ChickenBridge.scm",(void*)f_22688},
{"f_41312ChickenBridge.scm",(void*)f_41312},
{"f_41320ChickenBridge.scm",(void*)f_41320},
{"f_22793ChickenBridge.scm",(void*)f_22793},
{"f_41209ChickenBridge.scm",(void*)f_41209},
{"f_41272ChickenBridge.scm",(void*)f_41272},
{"f_41276ChickenBridge.scm",(void*)f_41276},
{"f_41290ChickenBridge.scm",(void*)f_41290},
{"f_41212ChickenBridge.scm",(void*)f_41212},
{"f_41232ChickenBridge.scm",(void*)f_41232},
{"f_41236ChickenBridge.scm",(void*)f_41236},
{"f_22796ChickenBridge.scm",(void*)f_22796},
{"f_41195ChickenBridge.scm",(void*)f_41195},
{"f_41203ChickenBridge.scm",(void*)f_41203},
{"f_41207ChickenBridge.scm",(void*)f_41207},
{"f_22989ChickenBridge.scm",(void*)f_22989},
{"f_41169ChickenBridge.scm",(void*)f_41169},
{"f_41173ChickenBridge.scm",(void*)f_41173},
{"f_41179ChickenBridge.scm",(void*)f_41179},
{"f_41190ChickenBridge.scm",(void*)f_41190},
{"f_41186ChickenBridge.scm",(void*)f_41186},
{"f_23058ChickenBridge.scm",(void*)f_23058},
{"f_41147ChickenBridge.scm",(void*)f_41147},
{"f_24303ChickenBridge.scm",(void*)f_24303},
{"f_41127ChickenBridge.scm",(void*)f_41127},
{"f_24306ChickenBridge.scm",(void*)f_24306},
{"f_41087ChickenBridge.scm",(void*)f_41087},
{"f_24309ChickenBridge.scm",(void*)f_24309},
{"f_40993ChickenBridge.scm",(void*)f_40993},
{"f_40997ChickenBridge.scm",(void*)f_40997},
{"f_41000ChickenBridge.scm",(void*)f_41000},
{"f_41018ChickenBridge.scm",(void*)f_41018},
{"f_41021ChickenBridge.scm",(void*)f_41021},
{"f_41052ChickenBridge.scm",(void*)f_41052},
{"f_41024ChickenBridge.scm",(void*)f_41024},
{"f_41030ChickenBridge.scm",(void*)f_41030},
{"f_40983ChickenBridge.scm",(void*)f_40983},
{"f_40977ChickenBridge.scm",(void*)f_40977},
{"f_24312ChickenBridge.scm",(void*)f_24312},
{"f_40885ChickenBridge.scm",(void*)f_40885},
{"f_40887ChickenBridge.scm",(void*)f_40887},
{"f_40891ChickenBridge.scm",(void*)f_40891},
{"f_40894ChickenBridge.scm",(void*)f_40894},
{"f_40897ChickenBridge.scm",(void*)f_40897},
{"f_40937ChickenBridge.scm",(void*)f_40937},
{"f_40929ChickenBridge.scm",(void*)f_40929},
{"f_40900ChickenBridge.scm",(void*)f_40900},
{"f_40903ChickenBridge.scm",(void*)f_40903},
{"f_40906ChickenBridge.scm",(void*)f_40906},
{"f_40877ChickenBridge.scm",(void*)f_40877},
{"f_24315ChickenBridge.scm",(void*)f_24315},
{"f_40849ChickenBridge.scm",(void*)f_40849},
{"f_24318ChickenBridge.scm",(void*)f_24318},
{"f_40813ChickenBridge.scm",(void*)f_40813},
{"f_40825ChickenBridge.scm",(void*)f_40825},
{"f_40821ChickenBridge.scm",(void*)f_40821},
{"f_40795ChickenBridge.scm",(void*)f_40795},
{"f_40789ChickenBridge.scm",(void*)f_40789},
{"f_24321ChickenBridge.scm",(void*)f_24321},
{"f_40703ChickenBridge.scm",(void*)f_40703},
{"f_40707ChickenBridge.scm",(void*)f_40707},
{"f_40710ChickenBridge.scm",(void*)f_40710},
{"f_40713ChickenBridge.scm",(void*)f_40713},
{"f_40726ChickenBridge.scm",(void*)f_40726},
{"f_40672ChickenBridge.scm",(void*)f_40672},
{"f_40676ChickenBridge.scm",(void*)f_40676},
{"f_40691ChickenBridge.scm",(void*)f_40691},
{"f_40666ChickenBridge.scm",(void*)f_40666},
{"f_24324ChickenBridge.scm",(void*)f_24324},
{"f_40552ChickenBridge.scm",(void*)f_40552},
{"f_40568ChickenBridge.scm",(void*)f_40568},
{"f_40579ChickenBridge.scm",(void*)f_40579},
{"f_40546ChickenBridge.scm",(void*)f_40546},
{"f_24380ChickenBridge.scm",(void*)f_24380},
{"f_40413ChickenBridge.scm",(void*)f_40413},
{"f_40436ChickenBridge.scm",(void*)f_40436},
{"f_40433ChickenBridge.scm",(void*)f_40433},
{"f_40407ChickenBridge.scm",(void*)f_40407},
{"f_24383ChickenBridge.scm",(void*)f_24383},
{"f_40261ChickenBridge.scm",(void*)f_40261},
{"f_40279ChickenBridge.scm",(void*)f_40279},
{"f_40288ChickenBridge.scm",(void*)f_40288},
{"f_40255ChickenBridge.scm",(void*)f_40255},
{"f_24386ChickenBridge.scm",(void*)f_24386},
{"f_40208ChickenBridge.scm",(void*)f_40208},
{"f_40212ChickenBridge.scm",(void*)f_40212},
{"f_40215ChickenBridge.scm",(void*)f_40215},
{"f_40231ChickenBridge.scm",(void*)f_40231},
{"f_40190ChickenBridge.scm",(void*)f_40190},
{"f_40184ChickenBridge.scm",(void*)f_40184},
{"f_24389ChickenBridge.scm",(void*)f_24389},
{"f_40108ChickenBridge.scm",(void*)f_40108},
{"f_24528ChickenBridge.scm",(void*)f_24528},
{"f_40034ChickenBridge.scm",(void*)f_40034},
{"f_40041ChickenBridge.scm",(void*)f_40041},
{"f_40028ChickenBridge.scm",(void*)f_40028},
{"f_24531ChickenBridge.scm",(void*)f_24531},
{"f_39924ChickenBridge.scm",(void*)f_39924},
{"f_39932ChickenBridge.scm",(void*)f_39932},
{"f_39898ChickenBridge.scm",(void*)f_39898},
{"f_39915ChickenBridge.scm",(void*)f_39915},
{"f_39906ChickenBridge.scm",(void*)f_39906},
{"f_39892ChickenBridge.scm",(void*)f_39892},
{"f_24534ChickenBridge.scm",(void*)f_24534},
{"f_39848ChickenBridge.scm",(void*)f_39848},
{"f_24537ChickenBridge.scm",(void*)f_24537},
{"f_39766ChickenBridge.scm",(void*)f_39766},
{"f_39777ChickenBridge.scm",(void*)f_39777},
{"f_39779ChickenBridge.scm",(void*)f_39779},
{"f_39808ChickenBridge.scm",(void*)f_39808},
{"f_39744ChickenBridge.scm",(void*)f_39744},
{"f_39760ChickenBridge.scm",(void*)f_39760},
{"f_39738ChickenBridge.scm",(void*)f_39738},
{"f_24540ChickenBridge.scm",(void*)f_24540},
{"f_39691ChickenBridge.scm",(void*)f_39691},
{"f_39695ChickenBridge.scm",(void*)f_39695},
{"f_39702ChickenBridge.scm",(void*)f_39702},
{"f_39669ChickenBridge.scm",(void*)f_39669},
{"f_39685ChickenBridge.scm",(void*)f_39685},
{"f_39663ChickenBridge.scm",(void*)f_39663},
{"f_24543ChickenBridge.scm",(void*)f_24543},
{"f_39531ChickenBridge.scm",(void*)f_39531},
{"f_39571ChickenBridge.scm",(void*)f_39571},
{"f_39535ChickenBridge.scm",(void*)f_39535},
{"f_39551ChickenBridge.scm",(void*)f_39551},
{"f_39563ChickenBridge.scm",(void*)f_39563},
{"f_39567ChickenBridge.scm",(void*)f_39567},
{"f_39559ChickenBridge.scm",(void*)f_39559},
{"f_39456ChickenBridge.scm",(void*)f_39456},
{"f_39499ChickenBridge.scm",(void*)f_39499},
{"f_39503ChickenBridge.scm",(void*)f_39503},
{"f_39463ChickenBridge.scm",(void*)f_39463},
{"f_39474ChickenBridge.scm",(void*)f_39474},
{"f_39450ChickenBridge.scm",(void*)f_39450},
{"f_24546ChickenBridge.scm",(void*)f_24546},
{"f_39430ChickenBridge.scm",(void*)f_39430},
{"f_39424ChickenBridge.scm",(void*)f_39424},
{"f_24549ChickenBridge.scm",(void*)f_24549},
{"f_39404ChickenBridge.scm",(void*)f_39404},
{"f_39408ChickenBridge.scm",(void*)f_39408},
{"f_39396ChickenBridge.scm",(void*)f_39396},
{"f_24552ChickenBridge.scm",(void*)f_24552},
{"f_39376ChickenBridge.scm",(void*)f_39376},
{"f_39380ChickenBridge.scm",(void*)f_39380},
{"f_39368ChickenBridge.scm",(void*)f_39368},
{"f_24555ChickenBridge.scm",(void*)f_24555},
{"f_39348ChickenBridge.scm",(void*)f_39348},
{"f_39352ChickenBridge.scm",(void*)f_39352},
{"f_39340ChickenBridge.scm",(void*)f_39340},
{"f_24558ChickenBridge.scm",(void*)f_24558},
{"f_39320ChickenBridge.scm",(void*)f_39320},
{"f_39324ChickenBridge.scm",(void*)f_39324},
{"f_39312ChickenBridge.scm",(void*)f_39312},
{"f_24561ChickenBridge.scm",(void*)f_24561},
{"f_39211ChickenBridge.scm",(void*)f_39211},
{"f_39181ChickenBridge.scm",(void*)f_39181},
{"f_39205ChickenBridge.scm",(void*)f_39205},
{"f_39175ChickenBridge.scm",(void*)f_39175},
{"f_24564ChickenBridge.scm",(void*)f_24564},
{"f_39125ChickenBridge.scm",(void*)f_39125},
{"f_39127ChickenBridge.scm",(void*)f_39127},
{"f_39131ChickenBridge.scm",(void*)f_39131},
{"f_39159ChickenBridge.scm",(void*)f_39159},
{"f_39151ChickenBridge.scm",(void*)f_39151},
{"f_39147ChickenBridge.scm",(void*)f_39147},
{"f_39134ChickenBridge.scm",(void*)f_39134},
{"f_39117ChickenBridge.scm",(void*)f_39117},
{"f_24567ChickenBridge.scm",(void*)f_24567},
{"f_39064ChickenBridge.scm",(void*)f_39064},
{"f_39066ChickenBridge.scm",(void*)f_39066},
{"f_39070ChickenBridge.scm",(void*)f_39070},
{"f_39101ChickenBridge.scm",(void*)f_39101},
{"f_39093ChickenBridge.scm",(void*)f_39093},
{"f_39089ChickenBridge.scm",(void*)f_39089},
{"f_39073ChickenBridge.scm",(void*)f_39073},
{"f_39076ChickenBridge.scm",(void*)f_39076},
{"f_39056ChickenBridge.scm",(void*)f_39056},
{"f_24570ChickenBridge.scm",(void*)f_24570},
{"f_39006ChickenBridge.scm",(void*)f_39006},
{"f_39020ChickenBridge.scm",(void*)f_39020},
{"f_39012ChickenBridge.scm",(void*)f_39012},
{"f_38971ChickenBridge.scm",(void*)f_38971},
{"f_39004ChickenBridge.scm",(void*)f_39004},
{"f_38965ChickenBridge.scm",(void*)f_38965},
{"f_24573ChickenBridge.scm",(void*)f_24573},
{"f_38912ChickenBridge.scm",(void*)f_38912},
{"f_38916ChickenBridge.scm",(void*)f_38916},
{"f_38929ChickenBridge.scm",(void*)f_38929},
{"f_38921ChickenBridge.scm",(void*)f_38921},
{"f_38869ChickenBridge.scm",(void*)f_38869},
{"f_38902ChickenBridge.scm",(void*)f_38902},
{"f_38863ChickenBridge.scm",(void*)f_38863},
{"f_24576ChickenBridge.scm",(void*)f_24576},
{"f_38783ChickenBridge.scm",(void*)f_38783},
{"f_38777ChickenBridge.scm",(void*)f_38777},
{"f_24579ChickenBridge.scm",(void*)f_24579},
{"f_38546ChickenBridge.scm",(void*)f_38546},
{"f_38550ChickenBridge.scm",(void*)f_38550},
{"f_38558ChickenBridge.scm",(void*)f_38558},
{"f_38581ChickenBridge.scm",(void*)f_38581},
{"f_38584ChickenBridge.scm",(void*)f_38584},
{"f_38587ChickenBridge.scm",(void*)f_38587},
{"f_38590ChickenBridge.scm",(void*)f_38590},
{"f_38650ChickenBridge.scm",(void*)f_38650},
{"f_38657ChickenBridge.scm",(void*)f_38657},
{"f_38667ChickenBridge.scm",(void*)f_38667},
{"f_38677ChickenBridge.scm",(void*)f_38677},
{"f_38691ChickenBridge.scm",(void*)f_38691},
{"f_38701ChickenBridge.scm",(void*)f_38701},
{"f_38711ChickenBridge.scm",(void*)f_38711},
{"f_38721ChickenBridge.scm",(void*)f_38721},
{"f_38593ChickenBridge.scm",(void*)f_38593},
{"f_38617ChickenBridge.scm",(void*)f_38617},
{"f_38596ChickenBridge.scm",(void*)f_38596},
{"f_38503ChickenBridge.scm",(void*)f_38503},
{"f_38536ChickenBridge.scm",(void*)f_38536},
{"f_38497ChickenBridge.scm",(void*)f_38497},
{"f_24582ChickenBridge.scm",(void*)f_24582},
{"f_38415ChickenBridge.scm",(void*)f_38415},
{"f_38419ChickenBridge.scm",(void*)f_38419},
{"f_38425ChickenBridge.scm",(void*)f_38425},
{"f_38445ChickenBridge.scm",(void*)f_38445},
{"f_38389ChickenBridge.scm",(void*)f_38389},
{"f_38399ChickenBridge.scm",(void*)f_38399},
{"f_38383ChickenBridge.scm",(void*)f_38383},
{"f_24585ChickenBridge.scm",(void*)f_24585},
{"f_38198ChickenBridge.scm",(void*)f_38198},
{"f_38202ChickenBridge.scm",(void*)f_38202},
{"f_38208ChickenBridge.scm",(void*)f_38208},
{"f_38217ChickenBridge.scm",(void*)f_38217},
{"f_38255ChickenBridge.scm",(void*)f_38255},
{"f_38247ChickenBridge.scm",(void*)f_38247},
{"f_38224ChickenBridge.scm",(void*)f_38224},
{"f_38228ChickenBridge.scm",(void*)f_38228},
{"f_38130ChickenBridge.scm",(void*)f_38130},
{"f_38149ChickenBridge.scm",(void*)f_38149},
{"f_38184ChickenBridge.scm",(void*)f_38184},
{"f_38155ChickenBridge.scm",(void*)f_38155},
{"f_38159ChickenBridge.scm",(void*)f_38159},
{"f_38173ChickenBridge.scm",(void*)f_38173},
{"f_38162ChickenBridge.scm",(void*)f_38162},
{"f_38143ChickenBridge.scm",(void*)f_38143},
{"f_38124ChickenBridge.scm",(void*)f_38124},
{"f_24588ChickenBridge.scm",(void*)f_24588},
{"f_37852ChickenBridge.scm",(void*)f_37852},
{"f_25111ChickenBridge.scm",(void*)f_25111},
{"f_37804ChickenBridge.scm",(void*)f_37804},
{"f_37796ChickenBridge.scm",(void*)f_37796},
{"f_25114ChickenBridge.scm",(void*)f_25114},
{"f_37676ChickenBridge.scm",(void*)f_37676},
{"f_25120ChickenBridge.scm",(void*)f_25120},
{"f_25656ChickenBridge.scm",(void*)f_25656},
{"f_25690ChickenBridge.scm",(void*)f_25690},
{"f_25682ChickenBridge.scm",(void*)f_25682},
{"f_25678ChickenBridge.scm",(void*)f_25678},
{"f_25663ChickenBridge.scm",(void*)f_25663},
{"f_25667ChickenBridge.scm",(void*)f_25667},
{"f_25660ChickenBridge.scm",(void*)f_25660},
{"f_25138ChickenBridge.scm",(void*)f_25138},
{"f_25649ChickenBridge.scm",(void*)f_25649},
{"f_25645ChickenBridge.scm",(void*)f_25645},
{"f_25145ChickenBridge.scm",(void*)f_25145},
{"f_25520ChickenBridge.scm",(void*)f_25520},
{"f_25541ChickenBridge.scm",(void*)f_25541},
{"f_25543ChickenBridge.scm",(void*)f_25543},
{"f_25557ChickenBridge.scm",(void*)f_25557},
{"f_25610ChickenBridge.scm",(void*)f_25610},
{"f_25560ChickenBridge.scm",(void*)f_25560},
{"f_25595ChickenBridge.scm",(void*)f_25595},
{"f_25563ChickenBridge.scm",(void*)f_25563},
{"f_25576ChickenBridge.scm",(void*)f_25576},
{"f_25588ChickenBridge.scm",(void*)f_25588},
{"f_25580ChickenBridge.scm",(void*)f_25580},
{"f_25566ChickenBridge.scm",(void*)f_25566},
{"f_25530ChickenBridge.scm",(void*)f_25530},
{"f_25148ChickenBridge.scm",(void*)f_25148},
{"f_25484ChickenBridge.scm",(void*)f_25484},
{"f_25510ChickenBridge.scm",(void*)f_25510},
{"f_25495ChickenBridge.scm",(void*)f_25495},
{"f_25154ChickenBridge.scm",(void*)f_25154},
{"f_25158ChickenBridge.scm",(void*)f_25158},
{"f_25361ChickenBridge.scm",(void*)f_25361},
{"f_25365ChickenBridge.scm",(void*)f_25365},
{"f_25369ChickenBridge.scm",(void*)f_25369},
{"f_25412ChickenBridge.scm",(void*)f_25412},
{"f_25422ChickenBridge.scm",(void*)f_25422},
{"f_25425ChickenBridge.scm",(void*)f_25425},
{"f_25446ChickenBridge.scm",(void*)f_25446},
{"f_25428ChickenBridge.scm",(void*)f_25428},
{"f_25432ChickenBridge.scm",(void*)f_25432},
{"f_25372ChickenBridge.scm",(void*)f_25372},
{"f_25375ChickenBridge.scm",(void*)f_25375},
{"f_25161ChickenBridge.scm",(void*)f_25161},
{"f_25165ChickenBridge.scm",(void*)f_25165},
{"f_25168ChickenBridge.scm",(void*)f_25168},
{"f_25321ChickenBridge.scm",(void*)f_25321},
{"f_25329ChickenBridge.scm",(void*)f_25329},
{"f_25325ChickenBridge.scm",(void*)f_25325},
{"f_25171ChickenBridge.scm",(void*)f_25171},
{"f_25199ChickenBridge.scm",(void*)f_25199},
{"f_25202ChickenBridge.scm",(void*)f_25202},
{"f_25205ChickenBridge.scm",(void*)f_25205},
{"f_25208ChickenBridge.scm",(void*)f_25208},
{"f_25211ChickenBridge.scm",(void*)f_25211},
{"f_25270ChickenBridge.scm",(void*)f_25270},
{"f_37630ChickenBridge.scm",(void*)f_37630},
{"f_37646ChickenBridge.scm",(void*)f_37646},
{"f_37649ChickenBridge.scm",(void*)f_37649},
{"f_37652ChickenBridge.scm",(void*)f_37652},
{"f_37655ChickenBridge.scm",(void*)f_37655},
{"f_37666ChickenBridge.scm",(void*)f_37666},
{"f_37624ChickenBridge.scm",(void*)f_37624},
{"f_25697ChickenBridge.scm",(void*)f_25697},
{"f_37485ChickenBridge.scm",(void*)f_37485},
{"f_37524ChickenBridge.scm",(void*)f_37524},
{"f_37498ChickenBridge.scm",(void*)f_37498},
{"f_37479ChickenBridge.scm",(void*)f_37479},
{"f_25700ChickenBridge.scm",(void*)f_25700},
{"f_37067ChickenBridge.scm",(void*)f_37067},
{"f_37071ChickenBridge.scm",(void*)f_37071},
{"f_37083ChickenBridge.scm",(void*)f_37083},
{"f_37141ChickenBridge.scm",(void*)f_37141},
{"f_37144ChickenBridge.scm",(void*)f_37144},
{"f_37147ChickenBridge.scm",(void*)f_37147},
{"f_37359ChickenBridge.scm",(void*)f_37359},
{"f_37297ChickenBridge.scm",(void*)f_37297},
{"f_37331ChickenBridge.scm",(void*)f_37331},
{"f_37306ChickenBridge.scm",(void*)f_37306},
{"f_37317ChickenBridge.scm",(void*)f_37317},
{"f_37313ChickenBridge.scm",(void*)f_37313},
{"f_37156ChickenBridge.scm",(void*)f_37156},
{"f_37234ChickenBridge.scm",(void*)f_37234},
{"f_37275ChickenBridge.scm",(void*)f_37275},
{"f_37279ChickenBridge.scm",(void*)f_37279},
{"f_37283ChickenBridge.scm",(void*)f_37283},
{"f_37238ChickenBridge.scm",(void*)f_37238},
{"f_37242ChickenBridge.scm",(void*)f_37242},
{"f_37269ChickenBridge.scm",(void*)f_37269},
{"f_37245ChickenBridge.scm",(void*)f_37245},
{"f_37159ChickenBridge.scm",(void*)f_37159},
{"f_37231ChickenBridge.scm",(void*)f_37231},
{"f_37173ChickenBridge.scm",(void*)f_37173},
{"f_37175ChickenBridge.scm",(void*)f_37175},
{"f_37223ChickenBridge.scm",(void*)f_37223},
{"f_37194ChickenBridge.scm",(void*)f_37194},
{"f_37211ChickenBridge.scm",(void*)f_37211},
{"f_37197ChickenBridge.scm",(void*)f_37197},
{"f_37190ChickenBridge.scm",(void*)f_37190},
{"f_37162ChickenBridge.scm",(void*)f_37162},
{"f_37092ChickenBridge.scm",(void*)f_37092},
{"f_37102ChickenBridge.scm",(void*)f_37102},
{"f_37108ChickenBridge.scm",(void*)f_37108},
{"f_37080ChickenBridge.scm",(void*)f_37080},
{"f_37028ChickenBridge.scm",(void*)f_37028},
{"f_37045ChickenBridge.scm",(void*)f_37045},
{"f_37061ChickenBridge.scm",(void*)f_37061},
{"f_37039ChickenBridge.scm",(void*)f_37039},
{"f_37022ChickenBridge.scm",(void*)f_37022},
{"f_25703ChickenBridge.scm",(void*)f_25703},
{"f_36946ChickenBridge.scm",(void*)f_36946},
{"f_25706ChickenBridge.scm",(void*)f_25706},
{"f_36922ChickenBridge.scm",(void*)f_36922},
{"f_36934ChickenBridge.scm",(void*)f_36934},
{"f_36930ChickenBridge.scm",(void*)f_36930},
{"f_36908ChickenBridge.scm",(void*)f_36908},
{"f_36916ChickenBridge.scm",(void*)f_36916},
{"f_36902ChickenBridge.scm",(void*)f_36902},
{"f_25709ChickenBridge.scm",(void*)f_25709},
{"f_36894ChickenBridge.scm",(void*)f_36894},
{"f_29487ChickenBridge.scm",(void*)f_29487},
{"f_29490ChickenBridge.scm",(void*)f_29490},
{"f_29656ChickenBridge.scm",(void*)f_29656},
{"f_29652ChickenBridge.scm",(void*)f_29652},
{"f_29642ChickenBridge.scm",(void*)f_29642},
{"f_29497ChickenBridge.scm",(void*)f_29497},
{"f_29501ChickenBridge.scm",(void*)f_29501},
{"f_29504ChickenBridge.scm",(void*)f_29504},
{"f_29515ChickenBridge.scm",(void*)f_29515},
{"f_29523ChickenBridge.scm",(void*)f_29523},
{"f_29595ChickenBridge.scm",(void*)f_29595},
{"f_29603ChickenBridge.scm",(void*)f_29603},
{"f_29599ChickenBridge.scm",(void*)f_29599},
{"f_29591ChickenBridge.scm",(void*)f_29591},
{"f_29587ChickenBridge.scm",(void*)f_29587},
{"f_29559ChickenBridge.scm",(void*)f_29559},
{"f_29555ChickenBridge.scm",(void*)f_29555},
{"f_29519ChickenBridge.scm",(void*)f_29519},
{"f_26134ChickenBridge.scm",(void*)f_26134},
{"f_36880ChickenBridge.scm",(void*)f_36880},
{"f_26137ChickenBridge.scm",(void*)f_26137},
{"f_36851ChickenBridge.scm",(void*)f_36851},
{"f_36855ChickenBridge.scm",(void*)f_36855},
{"f_26140ChickenBridge.scm",(void*)f_26140},
{"f_36848ChickenBridge.scm",(void*)f_36848},
{"f_26143ChickenBridge.scm",(void*)f_26143},
{"f_36706ChickenBridge.scm",(void*)f_36706},
{"f_29669ChickenBridge.scm",(void*)f_29669},
{"f_29801ChickenBridge.scm",(void*)f_29801},
{"f_29672ChickenBridge.scm",(void*)f_29672},
{"f_29683ChickenBridge.scm",(void*)f_29683},
{"f_29691ChickenBridge.scm",(void*)f_29691},
{"f_29715ChickenBridge.scm",(void*)f_29715},
{"f_29718ChickenBridge.scm",(void*)f_29718},
{"f_29726ChickenBridge.scm",(void*)f_29726},
{"f_29734ChickenBridge.scm",(void*)f_29734},
{"f_29754ChickenBridge.scm",(void*)f_29754},
{"f_29750ChickenBridge.scm",(void*)f_29750},
{"f_29730ChickenBridge.scm",(void*)f_29730},
{"f_29722ChickenBridge.scm",(void*)f_29722},
{"f_29711ChickenBridge.scm",(void*)f_29711},
{"f_29687ChickenBridge.scm",(void*)f_29687},
{"f_29663ChickenBridge.scm",(void*)f_29663},
{"f_34699ChickenBridge.scm",(void*)f_34699},
{"f_34702ChickenBridge.scm",(void*)f_34702},
{"f_34705ChickenBridge.scm",(void*)f_34705},
{"f_34708ChickenBridge.scm",(void*)f_34708},
{"f_34711ChickenBridge.scm",(void*)f_34711},
{"f_34714ChickenBridge.scm",(void*)f_34714},
{"f_34717ChickenBridge.scm",(void*)f_34717},
{"f_34720ChickenBridge.scm",(void*)f_34720},
{"f_34723ChickenBridge.scm",(void*)f_34723},
{"f_34726ChickenBridge.scm",(void*)f_34726},
{"f_34729ChickenBridge.scm",(void*)f_34729},
{"f_34732ChickenBridge.scm",(void*)f_34732},
{"f_34735ChickenBridge.scm",(void*)f_34735},
{"f_34738ChickenBridge.scm",(void*)f_34738},
{"f_34741ChickenBridge.scm",(void*)f_34741},
{"f_34744ChickenBridge.scm",(void*)f_34744},
{"f_34747ChickenBridge.scm",(void*)f_34747},
{"f_34750ChickenBridge.scm",(void*)f_34750},
{"f_35606ChickenBridge.scm",(void*)f_35606},
{"f_35609ChickenBridge.scm",(void*)f_35609},
{"f_35612ChickenBridge.scm",(void*)f_35612},
{"f_35615ChickenBridge.scm",(void*)f_35615},
{"f_35618ChickenBridge.scm",(void*)f_35618},
{"f_35621ChickenBridge.scm",(void*)f_35621},
{"f_35624ChickenBridge.scm",(void*)f_35624},
{"f_35627ChickenBridge.scm",(void*)f_35627},
{"f_36643ChickenBridge.scm",(void*)f_36643},
{"f_36671ChickenBridge.scm",(void*)f_36671},
{"f_36310ChickenBridge.scm",(void*)f_36310},
{"f_36637ChickenBridge.scm",(void*)f_36637},
{"f_36355ChickenBridge.scm",(void*)f_36355},
{"f_36361ChickenBridge.scm",(void*)f_36361},
{"f_36364ChickenBridge.scm",(void*)f_36364},
{"f_36367ChickenBridge.scm",(void*)f_36367},
{"f_36371ChickenBridge.scm",(void*)f_36371},
{"f_36581ChickenBridge.scm",(void*)f_36581},
{"f_36593ChickenBridge.scm",(void*)f_36593},
{"f_36589ChickenBridge.scm",(void*)f_36589},
{"f_36374ChickenBridge.scm",(void*)f_36374},
{"f_36538ChickenBridge.scm",(void*)f_36538},
{"f_36574ChickenBridge.scm",(void*)f_36574},
{"f_36567ChickenBridge.scm",(void*)f_36567},
{"f_36377ChickenBridge.scm",(void*)f_36377},
{"f_36476ChickenBridge.scm",(void*)f_36476},
{"f_36484ChickenBridge.scm",(void*)f_36484},
{"f_36480ChickenBridge.scm",(void*)f_36480},
{"f_36472ChickenBridge.scm",(void*)f_36472},
{"f_36468ChickenBridge.scm",(void*)f_36468},
{"f_36424ChickenBridge.scm",(void*)f_36424},
{"f_36420ChickenBridge.scm",(void*)f_36420},
{"f_36387ChickenBridge.scm",(void*)f_36387},
{"f_36398ChickenBridge.scm",(void*)f_36398},
{"f_36406ChickenBridge.scm",(void*)f_36406},
{"f_36402ChickenBridge.scm",(void*)f_36402},
{"f_36600ChickenBridge.scm",(void*)f_36600},
{"f_36608ChickenBridge.scm",(void*)f_36608},
{"f_36622ChickenBridge.scm",(void*)f_36622},
{"f_36612ChickenBridge.scm",(void*)f_36612},
{"f_36603ChickenBridge.scm",(void*)f_36603},
{"f_36606ChickenBridge.scm",(void*)f_36606},
{"f_36312ChickenBridge.scm",(void*)f_36312},
{"f_36328ChickenBridge.scm",(void*)f_36328},
{"f_36239ChickenBridge.scm",(void*)f_36239},
{"f_36250ChickenBridge.scm",(void*)f_36250},
{"f_36253ChickenBridge.scm",(void*)f_36253},
{"f_36260ChickenBridge.scm",(void*)f_36260},
{"f_36229ChickenBridge.scm",(void*)f_36229},
{"f_35908ChickenBridge.scm",(void*)f_35908},
{"f_36233ChickenBridge.scm",(void*)f_36233},
{"f_36171ChickenBridge.scm",(void*)f_36171},
{"f_36189ChickenBridge.scm",(void*)f_36189},
{"f_36199ChickenBridge.scm",(void*)f_36199},
{"f_36175ChickenBridge.scm",(void*)f_36175},
{"f_36162ChickenBridge.scm",(void*)f_36162},
{"f_35886ChickenBridge.scm",(void*)f_35886},
{"f_36166ChickenBridge.scm",(void*)f_36166},
{"f_36156ChickenBridge.scm",(void*)f_36156},
{"f_35868ChickenBridge.scm",(void*)f_35868},
{"f_36147ChickenBridge.scm",(void*)f_36147},
{"f_35877ChickenBridge.scm",(void*)f_35877},
{"f_36151ChickenBridge.scm",(void*)f_36151},
{"f_36144ChickenBridge.scm",(void*)f_36144},
{"f_35932ChickenBridge.scm",(void*)f_35932},
{"f_36096ChickenBridge.scm",(void*)f_36096},
{"f_36091ChickenBridge.scm",(void*)f_36091},
{"f_35934ChickenBridge.scm",(void*)f_35934},
{"f_36083ChickenBridge.scm",(void*)f_36083},
{"f_36087ChickenBridge.scm",(void*)f_36087},
{"f_36079ChickenBridge.scm",(void*)f_36079},
{"f_36039ChickenBridge.scm",(void*)f_36039},
{"f_36049ChickenBridge.scm",(void*)f_36049},
{"f_36003ChickenBridge.scm",(void*)f_36003},
{"f_36008ChickenBridge.scm",(void*)f_36008},
{"f_36033ChickenBridge.scm",(void*)f_36033},
{"f_36037ChickenBridge.scm",(void*)f_36037},
{"f_36018ChickenBridge.scm",(void*)f_36018},
{"f_35994ChickenBridge.scm",(void*)f_35994},
{"f_35964ChickenBridge.scm",(void*)f_35964},
{"f_35936ChickenBridge.scm",(void*)f_35936},
{"f_35913ChickenBridge.scm",(void*)f_35913},
{"f_35918ChickenBridge.scm",(void*)f_35918},
{"f_35923ChickenBridge.scm",(void*)f_35923},
{"f_35891ChickenBridge.scm",(void*)f_35891},
{"f_35895ChickenBridge.scm",(void*)f_35895},
{"f_35847ChickenBridge.scm",(void*)f_35847},
{"f_35851ChickenBridge.scm",(void*)f_35851},
{"f_35833ChickenBridge.scm",(void*)f_35833},
{"f_35838ChickenBridge.scm",(void*)f_35838},
{"f_35819ChickenBridge.scm",(void*)f_35819},
{"f_35824ChickenBridge.scm",(void*)f_35824},
{"f_35629ChickenBridge.scm",(void*)f_35629},
{"f_35690ChickenBridge.scm",(void*)f_35690},
{"f_35692ChickenBridge.scm",(void*)f_35692},
{"f_35702ChickenBridge.scm",(void*)f_35702},
{"f_35721ChickenBridge.scm",(void*)f_35721},
{"f_35761ChickenBridge.scm",(void*)f_35761},
{"f_35803ChickenBridge.scm",(void*)f_35803},
{"f_35773ChickenBridge.scm",(void*)f_35773},
{"f_35758ChickenBridge.scm",(void*)f_35758},
{"f_35676ChickenBridge.scm",(void*)f_35676},
{"f_35641ChickenBridge.scm",(void*)f_35641},
{"f_35668ChickenBridge.scm",(void*)f_35668},
{"f_35649ChickenBridge.scm",(void*)f_35649},
{"f_35656ChickenBridge.scm",(void*)f_35656},
{"f_35660ChickenBridge.scm",(void*)f_35660},
{"f_35664ChickenBridge.scm",(void*)f_35664},
{"f_35741ChickenBridge.scm",(void*)f_35741},
{"f_35719ChickenBridge.scm",(void*)f_35719},
{"f_35705ChickenBridge.scm",(void*)f_35705},
{"f_35708ChickenBridge.scm",(void*)f_35708},
{"f_35683ChickenBridge.scm",(void*)f_35683},
{"f_35155ChickenBridge.scm",(void*)f_35155},
{"f_35582ChickenBridge.scm",(void*)f_35582},
{"f_35597ChickenBridge.scm",(void*)f_35597},
{"f_35589ChickenBridge.scm",(void*)f_35589},
{"f_35553ChickenBridge.scm",(void*)f_35553},
{"f_35557ChickenBridge.scm",(void*)f_35557},
{"f_35518ChickenBridge.scm",(void*)f_35518},
{"f_35522ChickenBridge.scm",(void*)f_35522},
{"f_35483ChickenBridge.scm",(void*)f_35483},
{"f_35487ChickenBridge.scm",(void*)f_35487},
{"f_35159ChickenBridge.scm",(void*)f_35159},
{"f_35447ChickenBridge.scm",(void*)f_35447},
{"f_35462ChickenBridge.scm",(void*)f_35462},
{"f_35454ChickenBridge.scm",(void*)f_35454},
{"f_35418ChickenBridge.scm",(void*)f_35418},
{"f_35422ChickenBridge.scm",(void*)f_35422},
{"f_35383ChickenBridge.scm",(void*)f_35383},
{"f_35387ChickenBridge.scm",(void*)f_35387},
{"f_35348ChickenBridge.scm",(void*)f_35348},
{"f_35352ChickenBridge.scm",(void*)f_35352},
{"f_35162ChickenBridge.scm",(void*)f_35162},
{"f_35312ChickenBridge.scm",(void*)f_35312},
{"f_35327ChickenBridge.scm",(void*)f_35327},
{"f_35319ChickenBridge.scm",(void*)f_35319},
{"f_35283ChickenBridge.scm",(void*)f_35283},
{"f_35287ChickenBridge.scm",(void*)f_35287},
{"f_35248ChickenBridge.scm",(void*)f_35248},
{"f_35252ChickenBridge.scm",(void*)f_35252},
{"f_35213ChickenBridge.scm",(void*)f_35213},
{"f_35217ChickenBridge.scm",(void*)f_35217},
{"f_35165ChickenBridge.scm",(void*)f_35165},
{"f_35168ChickenBridge.scm",(void*)f_35168},
{"f_35171ChickenBridge.scm",(void*)f_35171},
{"f_35175ChickenBridge.scm",(void*)f_35175},
{"f_34917ChickenBridge.scm",(void*)f_34917},
{"f_35132ChickenBridge.scm",(void*)f_35132},
{"f_35147ChickenBridge.scm",(void*)f_35147},
{"f_35139ChickenBridge.scm",(void*)f_35139},
{"f_35103ChickenBridge.scm",(void*)f_35103},
{"f_35107ChickenBridge.scm",(void*)f_35107},
{"f_35068ChickenBridge.scm",(void*)f_35068},
{"f_35072ChickenBridge.scm",(void*)f_35072},
{"f_34921ChickenBridge.scm",(void*)f_34921},
{"f_35032ChickenBridge.scm",(void*)f_35032},
{"f_35047ChickenBridge.scm",(void*)f_35047},
{"f_35039ChickenBridge.scm",(void*)f_35039},
{"f_35003ChickenBridge.scm",(void*)f_35003},
{"f_35007ChickenBridge.scm",(void*)f_35007},
{"f_34968ChickenBridge.scm",(void*)f_34968},
{"f_34972ChickenBridge.scm",(void*)f_34972},
{"f_34924ChickenBridge.scm",(void*)f_34924},
{"f_34927ChickenBridge.scm",(void*)f_34927},
{"f_34930ChickenBridge.scm",(void*)f_34930},
{"f_34934ChickenBridge.scm",(void*)f_34934},
{"f_34860ChickenBridge.scm",(void*)f_34860},
{"f_34893ChickenBridge.scm",(void*)f_34893},
{"f_34873ChickenBridge.scm",(void*)f_34873},
{"f_34881ChickenBridge.scm",(void*)f_34881},
{"f_34864ChickenBridge.scm",(void*)f_34864},
{"f_34803ChickenBridge.scm",(void*)f_34803},
{"f_34836ChickenBridge.scm",(void*)f_34836},
{"f_34816ChickenBridge.scm",(void*)f_34816},
{"f_34824ChickenBridge.scm",(void*)f_34824},
{"f_34807ChickenBridge.scm",(void*)f_34807},
{"f_34795ChickenBridge.scm",(void*)f_34795},
{"f_34800ChickenBridge.scm",(void*)f_34800},
{"f_34752ChickenBridge.scm",(void*)f_34752},
{"f_34779ChickenBridge.scm",(void*)f_34779},
{"f_34773ChickenBridge.scm",(void*)f_34773},
{"f_34777ChickenBridge.scm",(void*)f_34777},
{"f_34763ChickenBridge.scm",(void*)f_34763},
{"f_34678ChickenBridge.scm",(void*)f_34678},
{"f_34689ChickenBridge.scm",(void*)f_34689},
{"f_34685ChickenBridge.scm",(void*)f_34685},
{"f_34667ChickenBridge.scm",(void*)f_34667},
{"f_34675ChickenBridge.scm",(void*)f_34675},
{"f_34671ChickenBridge.scm",(void*)f_34671},
{"f_34656ChickenBridge.scm",(void*)f_34656},
{"f_34664ChickenBridge.scm",(void*)f_34664},
{"f_34660ChickenBridge.scm",(void*)f_34660},
{"f_34645ChickenBridge.scm",(void*)f_34645},
{"f_34653ChickenBridge.scm",(void*)f_34653},
{"f_34649ChickenBridge.scm",(void*)f_34649},
{"f_34634ChickenBridge.scm",(void*)f_34634},
{"f_34642ChickenBridge.scm",(void*)f_34642},
{"f_34638ChickenBridge.scm",(void*)f_34638},
{"f_34623ChickenBridge.scm",(void*)f_34623},
{"f_34631ChickenBridge.scm",(void*)f_34631},
{"f_34627ChickenBridge.scm",(void*)f_34627},
{"f_34584ChickenBridge.scm",(void*)f_34584},
{"f_34597ChickenBridge.scm",(void*)f_34597},
{"f_34601ChickenBridge.scm",(void*)f_34601},
{"f_34591ChickenBridge.scm",(void*)f_34591},
{"f_34527ChickenBridge.scm",(void*)f_34527},
{"f_34581ChickenBridge.scm",(void*)f_34581},
{"f_34576ChickenBridge.scm",(void*)f_34576},
{"f_34539ChickenBridge.scm",(void*)f_34539},
{"f_34545ChickenBridge.scm",(void*)f_34545},
{"f_34571ChickenBridge.scm",(void*)f_34571},
{"f_34575ChickenBridge.scm",(void*)f_34575},
{"f_34551ChickenBridge.scm",(void*)f_34551},
{"f_34569ChickenBridge.scm",(void*)f_34569},
{"f_34566ChickenBridge.scm",(void*)f_34566},
{"f_34562ChickenBridge.scm",(void*)f_34562},
{"f_34555ChickenBridge.scm",(void*)f_34555},
{"f_34512ChickenBridge.scm",(void*)f_34512},
{"f_34517ChickenBridge.scm",(void*)f_34517},
{"f_34484ChickenBridge.scm",(void*)f_34484},
{"f_34489ChickenBridge.scm",(void*)f_34489},
{"f_34456ChickenBridge.scm",(void*)f_34456},
{"f_34461ChickenBridge.scm",(void*)f_34461},
{"f_34428ChickenBridge.scm",(void*)f_34428},
{"f_34433ChickenBridge.scm",(void*)f_34433},
{"f_34400ChickenBridge.scm",(void*)f_34400},
{"f_34405ChickenBridge.scm",(void*)f_34405},
{"f_34372ChickenBridge.scm",(void*)f_34372},
{"f_34377ChickenBridge.scm",(void*)f_34377},
{"f_34344ChickenBridge.scm",(void*)f_34344},
{"f_34349ChickenBridge.scm",(void*)f_34349},
{"f_34316ChickenBridge.scm",(void*)f_34316},
{"f_34321ChickenBridge.scm",(void*)f_34321},
{"f_34288ChickenBridge.scm",(void*)f_34288},
{"f_34293ChickenBridge.scm",(void*)f_34293},
{"f_34260ChickenBridge.scm",(void*)f_34260},
{"f_34265ChickenBridge.scm",(void*)f_34265},
{"f_34237ChickenBridge.scm",(void*)f_34237},
{"f_34242ChickenBridge.scm",(void*)f_34242},
{"f_34241ChickenBridge.scm",(void*)f_34241},
{"f_34218ChickenBridge.scm",(void*)f_34218},
{"f_34223ChickenBridge.scm",(void*)f_34223},
{"f_34163ChickenBridge.scm",(void*)f_34163},
{"f_34170ChickenBridge.scm",(void*)f_34170},
{"f_34173ChickenBridge.scm",(void*)f_34173},
{"f_34197ChickenBridge.scm",(void*)f_34197},
{"f_34177ChickenBridge.scm",(void*)f_34177},
{"f_34167ChickenBridge.scm",(void*)f_34167},
{"f_34116ChickenBridge.scm",(void*)f_34116},
{"f_34123ChickenBridge.scm",(void*)f_34123},
{"f_34126ChickenBridge.scm",(void*)f_34126},
{"f_34146ChickenBridge.scm",(void*)f_34146},
{"f_34130ChickenBridge.scm",(void*)f_34130},
{"f_34093ChickenBridge.scm",(void*)f_34093},
{"f_34098ChickenBridge.scm",(void*)f_34098},
{"f_34097ChickenBridge.scm",(void*)f_34097},
{"f_34074ChickenBridge.scm",(void*)f_34074},
{"f_34079ChickenBridge.scm",(void*)f_34079},
{"f_34051ChickenBridge.scm",(void*)f_34051},
{"f_34056ChickenBridge.scm",(void*)f_34056},
{"f_34055ChickenBridge.scm",(void*)f_34055},
{"f_34032ChickenBridge.scm",(void*)f_34032},
{"f_34037ChickenBridge.scm",(void*)f_34037},
{"f_34013ChickenBridge.scm",(void*)f_34013},
{"f_34018ChickenBridge.scm",(void*)f_34018},
{"f_34017ChickenBridge.scm",(void*)f_34017},
{"f_33998ChickenBridge.scm",(void*)f_33998},
{"f_34003ChickenBridge.scm",(void*)f_34003},
{"f_33979ChickenBridge.scm",(void*)f_33979},
{"f_33984ChickenBridge.scm",(void*)f_33984},
{"f_33983ChickenBridge.scm",(void*)f_33983},
{"f_33964ChickenBridge.scm",(void*)f_33964},
{"f_33969ChickenBridge.scm",(void*)f_33969},
{"f_33949ChickenBridge.scm",(void*)f_33949},
{"f_33954ChickenBridge.scm",(void*)f_33954},
{"f_33931ChickenBridge.scm",(void*)f_33931},
{"f_33939ChickenBridge.scm",(void*)f_33939},
{"f_33935ChickenBridge.scm",(void*)f_33935},
{"f_33461ChickenBridge.scm",(void*)f_33461},
{"f_33889ChickenBridge.scm",(void*)f_33889},
{"f_33904ChickenBridge.scm",(void*)f_33904},
{"f_33896ChickenBridge.scm",(void*)f_33896},
{"f_33860ChickenBridge.scm",(void*)f_33860},
{"f_33864ChickenBridge.scm",(void*)f_33864},
{"f_33825ChickenBridge.scm",(void*)f_33825},
{"f_33829ChickenBridge.scm",(void*)f_33829},
{"f_33790ChickenBridge.scm",(void*)f_33790},
{"f_33794ChickenBridge.scm",(void*)f_33794},
{"f_33465ChickenBridge.scm",(void*)f_33465},
{"f_33754ChickenBridge.scm",(void*)f_33754},
{"f_33769ChickenBridge.scm",(void*)f_33769},
{"f_33761ChickenBridge.scm",(void*)f_33761},
{"f_33725ChickenBridge.scm",(void*)f_33725},
{"f_33729ChickenBridge.scm",(void*)f_33729},
{"f_33690ChickenBridge.scm",(void*)f_33690},
{"f_33694ChickenBridge.scm",(void*)f_33694},
{"f_33655ChickenBridge.scm",(void*)f_33655},
{"f_33659ChickenBridge.scm",(void*)f_33659},
{"f_33468ChickenBridge.scm",(void*)f_33468},
{"f_33619ChickenBridge.scm",(void*)f_33619},
{"f_33634ChickenBridge.scm",(void*)f_33634},
{"f_33626ChickenBridge.scm",(void*)f_33626},
{"f_33590ChickenBridge.scm",(void*)f_33590},
{"f_33594ChickenBridge.scm",(void*)f_33594},
{"f_33555ChickenBridge.scm",(void*)f_33555},
{"f_33559ChickenBridge.scm",(void*)f_33559},
{"f_33520ChickenBridge.scm",(void*)f_33520},
{"f_33524ChickenBridge.scm",(void*)f_33524},
{"f_33471ChickenBridge.scm",(void*)f_33471},
{"f_33474ChickenBridge.scm",(void*)f_33474},
{"f_33478ChickenBridge.scm",(void*)f_33478},
{"f_33442ChickenBridge.scm",(void*)f_33442},
{"f_33447ChickenBridge.scm",(void*)f_33447},
{"f_32991ChickenBridge.scm",(void*)f_32991},
{"f_33419ChickenBridge.scm",(void*)f_33419},
{"f_33434ChickenBridge.scm",(void*)f_33434},
{"f_33426ChickenBridge.scm",(void*)f_33426},
{"f_33390ChickenBridge.scm",(void*)f_33390},
{"f_33394ChickenBridge.scm",(void*)f_33394},
{"f_33355ChickenBridge.scm",(void*)f_33355},
{"f_33359ChickenBridge.scm",(void*)f_33359},
{"f_33320ChickenBridge.scm",(void*)f_33320},
{"f_33324ChickenBridge.scm",(void*)f_33324},
{"f_32995ChickenBridge.scm",(void*)f_32995},
{"f_33284ChickenBridge.scm",(void*)f_33284},
{"f_33299ChickenBridge.scm",(void*)f_33299},
{"f_33291ChickenBridge.scm",(void*)f_33291},
{"f_33255ChickenBridge.scm",(void*)f_33255},
{"f_33259ChickenBridge.scm",(void*)f_33259},
{"f_33220ChickenBridge.scm",(void*)f_33220},
{"f_33224ChickenBridge.scm",(void*)f_33224},
{"f_33185ChickenBridge.scm",(void*)f_33185},
{"f_33189ChickenBridge.scm",(void*)f_33189},
{"f_32998ChickenBridge.scm",(void*)f_32998},
{"f_33149ChickenBridge.scm",(void*)f_33149},
{"f_33164ChickenBridge.scm",(void*)f_33164},
{"f_33156ChickenBridge.scm",(void*)f_33156},
{"f_33120ChickenBridge.scm",(void*)f_33120},
{"f_33124ChickenBridge.scm",(void*)f_33124},
{"f_33085ChickenBridge.scm",(void*)f_33085},
{"f_33089ChickenBridge.scm",(void*)f_33089},
{"f_33050ChickenBridge.scm",(void*)f_33050},
{"f_33054ChickenBridge.scm",(void*)f_33054},
{"f_33001ChickenBridge.scm",(void*)f_33001},
{"f_33004ChickenBridge.scm",(void*)f_33004},
{"f_33008ChickenBridge.scm",(void*)f_33008},
{"f_32972ChickenBridge.scm",(void*)f_32972},
{"f_32977ChickenBridge.scm",(void*)f_32977},
{"f_32521ChickenBridge.scm",(void*)f_32521},
{"f_32949ChickenBridge.scm",(void*)f_32949},
{"f_32964ChickenBridge.scm",(void*)f_32964},
{"f_32956ChickenBridge.scm",(void*)f_32956},
{"f_32920ChickenBridge.scm",(void*)f_32920},
{"f_32924ChickenBridge.scm",(void*)f_32924},
{"f_32885ChickenBridge.scm",(void*)f_32885},
{"f_32889ChickenBridge.scm",(void*)f_32889},
{"f_32850ChickenBridge.scm",(void*)f_32850},
{"f_32854ChickenBridge.scm",(void*)f_32854},
{"f_32525ChickenBridge.scm",(void*)f_32525},
{"f_32814ChickenBridge.scm",(void*)f_32814},
{"f_32829ChickenBridge.scm",(void*)f_32829},
{"f_32821ChickenBridge.scm",(void*)f_32821},
{"f_32785ChickenBridge.scm",(void*)f_32785},
{"f_32789ChickenBridge.scm",(void*)f_32789},
{"f_32750ChickenBridge.scm",(void*)f_32750},
{"f_32754ChickenBridge.scm",(void*)f_32754},
{"f_32715ChickenBridge.scm",(void*)f_32715},
{"f_32719ChickenBridge.scm",(void*)f_32719},
{"f_32528ChickenBridge.scm",(void*)f_32528},
{"f_32679ChickenBridge.scm",(void*)f_32679},
{"f_32694ChickenBridge.scm",(void*)f_32694},
{"f_32686ChickenBridge.scm",(void*)f_32686},
{"f_32650ChickenBridge.scm",(void*)f_32650},
{"f_32654ChickenBridge.scm",(void*)f_32654},
{"f_32615ChickenBridge.scm",(void*)f_32615},
{"f_32619ChickenBridge.scm",(void*)f_32619},
{"f_32580ChickenBridge.scm",(void*)f_32580},
{"f_32584ChickenBridge.scm",(void*)f_32584},
{"f_32531ChickenBridge.scm",(void*)f_32531},
{"f_32534ChickenBridge.scm",(void*)f_32534},
{"f_32538ChickenBridge.scm",(void*)f_32538},
{"f_32502ChickenBridge.scm",(void*)f_32502},
{"f_32507ChickenBridge.scm",(void*)f_32507},
{"f_31773ChickenBridge.scm",(void*)f_31773},
{"f_32479ChickenBridge.scm",(void*)f_32479},
{"f_32494ChickenBridge.scm",(void*)f_32494},
{"f_32486ChickenBridge.scm",(void*)f_32486},
{"f_32450ChickenBridge.scm",(void*)f_32450},
{"f_32454ChickenBridge.scm",(void*)f_32454},
{"f_32415ChickenBridge.scm",(void*)f_32415},
{"f_32419ChickenBridge.scm",(void*)f_32419},
{"f_32380ChickenBridge.scm",(void*)f_32380},
{"f_32384ChickenBridge.scm",(void*)f_32384},
{"f_32345ChickenBridge.scm",(void*)f_32345},
{"f_32349ChickenBridge.scm",(void*)f_32349},
{"f_31777ChickenBridge.scm",(void*)f_31777},
{"f_32309ChickenBridge.scm",(void*)f_32309},
{"f_32324ChickenBridge.scm",(void*)f_32324},
{"f_32316ChickenBridge.scm",(void*)f_32316},
{"f_32280ChickenBridge.scm",(void*)f_32280},
{"f_32284ChickenBridge.scm",(void*)f_32284},
{"f_32245ChickenBridge.scm",(void*)f_32245},
{"f_32249ChickenBridge.scm",(void*)f_32249},
{"f_32210ChickenBridge.scm",(void*)f_32210},
{"f_32214ChickenBridge.scm",(void*)f_32214},
{"f_32175ChickenBridge.scm",(void*)f_32175},
{"f_32179ChickenBridge.scm",(void*)f_32179},
{"f_31780ChickenBridge.scm",(void*)f_31780},
{"f_32139ChickenBridge.scm",(void*)f_32139},
{"f_32154ChickenBridge.scm",(void*)f_32154},
{"f_32146ChickenBridge.scm",(void*)f_32146},
{"f_32110ChickenBridge.scm",(void*)f_32110},
{"f_32114ChickenBridge.scm",(void*)f_32114},
{"f_32075ChickenBridge.scm",(void*)f_32075},
{"f_32079ChickenBridge.scm",(void*)f_32079},
{"f_32040ChickenBridge.scm",(void*)f_32040},
{"f_32044ChickenBridge.scm",(void*)f_32044},
{"f_32005ChickenBridge.scm",(void*)f_32005},
{"f_32009ChickenBridge.scm",(void*)f_32009},
{"f_31783ChickenBridge.scm",(void*)f_31783},
{"f_31969ChickenBridge.scm",(void*)f_31969},
{"f_31984ChickenBridge.scm",(void*)f_31984},
{"f_31976ChickenBridge.scm",(void*)f_31976},
{"f_31940ChickenBridge.scm",(void*)f_31940},
{"f_31944ChickenBridge.scm",(void*)f_31944},
{"f_31905ChickenBridge.scm",(void*)f_31905},
{"f_31909ChickenBridge.scm",(void*)f_31909},
{"f_31870ChickenBridge.scm",(void*)f_31870},
{"f_31874ChickenBridge.scm",(void*)f_31874},
{"f_31835ChickenBridge.scm",(void*)f_31835},
{"f_31839ChickenBridge.scm",(void*)f_31839},
{"f_31786ChickenBridge.scm",(void*)f_31786},
{"f_31789ChickenBridge.scm",(void*)f_31789},
{"f_31793ChickenBridge.scm",(void*)f_31793},
{"f_31754ChickenBridge.scm",(void*)f_31754},
{"f_31759ChickenBridge.scm",(void*)f_31759},
{"f_31025ChickenBridge.scm",(void*)f_31025},
{"f_31731ChickenBridge.scm",(void*)f_31731},
{"f_31746ChickenBridge.scm",(void*)f_31746},
{"f_31738ChickenBridge.scm",(void*)f_31738},
{"f_31702ChickenBridge.scm",(void*)f_31702},
{"f_31706ChickenBridge.scm",(void*)f_31706},
{"f_31667ChickenBridge.scm",(void*)f_31667},
{"f_31671ChickenBridge.scm",(void*)f_31671},
{"f_31632ChickenBridge.scm",(void*)f_31632},
{"f_31636ChickenBridge.scm",(void*)f_31636},
{"f_31597ChickenBridge.scm",(void*)f_31597},
{"f_31601ChickenBridge.scm",(void*)f_31601},
{"f_31029ChickenBridge.scm",(void*)f_31029},
{"f_31561ChickenBridge.scm",(void*)f_31561},
{"f_31576ChickenBridge.scm",(void*)f_31576},
{"f_31568ChickenBridge.scm",(void*)f_31568},
{"f_31532ChickenBridge.scm",(void*)f_31532},
{"f_31536ChickenBridge.scm",(void*)f_31536},
{"f_31497ChickenBridge.scm",(void*)f_31497},
{"f_31501ChickenBridge.scm",(void*)f_31501},
{"f_31462ChickenBridge.scm",(void*)f_31462},
{"f_31466ChickenBridge.scm",(void*)f_31466},
{"f_31427ChickenBridge.scm",(void*)f_31427},
{"f_31431ChickenBridge.scm",(void*)f_31431},
{"f_31032ChickenBridge.scm",(void*)f_31032},
{"f_31391ChickenBridge.scm",(void*)f_31391},
{"f_31406ChickenBridge.scm",(void*)f_31406},
{"f_31398ChickenBridge.scm",(void*)f_31398},
{"f_31362ChickenBridge.scm",(void*)f_31362},
{"f_31366ChickenBridge.scm",(void*)f_31366},
{"f_31327ChickenBridge.scm",(void*)f_31327},
{"f_31331ChickenBridge.scm",(void*)f_31331},
{"f_31292ChickenBridge.scm",(void*)f_31292},
{"f_31296ChickenBridge.scm",(void*)f_31296},
{"f_31257ChickenBridge.scm",(void*)f_31257},
{"f_31261ChickenBridge.scm",(void*)f_31261},
{"f_31035ChickenBridge.scm",(void*)f_31035},
{"f_31221ChickenBridge.scm",(void*)f_31221},
{"f_31236ChickenBridge.scm",(void*)f_31236},
{"f_31228ChickenBridge.scm",(void*)f_31228},
{"f_31192ChickenBridge.scm",(void*)f_31192},
{"f_31196ChickenBridge.scm",(void*)f_31196},
{"f_31157ChickenBridge.scm",(void*)f_31157},
{"f_31161ChickenBridge.scm",(void*)f_31161},
{"f_31122ChickenBridge.scm",(void*)f_31122},
{"f_31126ChickenBridge.scm",(void*)f_31126},
{"f_31087ChickenBridge.scm",(void*)f_31087},
{"f_31091ChickenBridge.scm",(void*)f_31091},
{"f_31038ChickenBridge.scm",(void*)f_31038},
{"f_31041ChickenBridge.scm",(void*)f_31041},
{"f_31045ChickenBridge.scm",(void*)f_31045},
{"f_31006ChickenBridge.scm",(void*)f_31006},
{"f_31011ChickenBridge.scm",(void*)f_31011},
{"f_30555ChickenBridge.scm",(void*)f_30555},
{"f_30983ChickenBridge.scm",(void*)f_30983},
{"f_30998ChickenBridge.scm",(void*)f_30998},
{"f_30990ChickenBridge.scm",(void*)f_30990},
{"f_30954ChickenBridge.scm",(void*)f_30954},
{"f_30958ChickenBridge.scm",(void*)f_30958},
{"f_30919ChickenBridge.scm",(void*)f_30919},
{"f_30923ChickenBridge.scm",(void*)f_30923},
{"f_30884ChickenBridge.scm",(void*)f_30884},
{"f_30888ChickenBridge.scm",(void*)f_30888},
{"f_30559ChickenBridge.scm",(void*)f_30559},
{"f_30848ChickenBridge.scm",(void*)f_30848},
{"f_30863ChickenBridge.scm",(void*)f_30863},
{"f_30855ChickenBridge.scm",(void*)f_30855},
{"f_30819ChickenBridge.scm",(void*)f_30819},
{"f_30823ChickenBridge.scm",(void*)f_30823},
{"f_30784ChickenBridge.scm",(void*)f_30784},
{"f_30788ChickenBridge.scm",(void*)f_30788},
{"f_30749ChickenBridge.scm",(void*)f_30749},
{"f_30753ChickenBridge.scm",(void*)f_30753},
{"f_30562ChickenBridge.scm",(void*)f_30562},
{"f_30713ChickenBridge.scm",(void*)f_30713},
{"f_30728ChickenBridge.scm",(void*)f_30728},
{"f_30720ChickenBridge.scm",(void*)f_30720},
{"f_30684ChickenBridge.scm",(void*)f_30684},
{"f_30688ChickenBridge.scm",(void*)f_30688},
{"f_30649ChickenBridge.scm",(void*)f_30649},
{"f_30653ChickenBridge.scm",(void*)f_30653},
{"f_30614ChickenBridge.scm",(void*)f_30614},
{"f_30618ChickenBridge.scm",(void*)f_30618},
{"f_30565ChickenBridge.scm",(void*)f_30565},
{"f_30568ChickenBridge.scm",(void*)f_30568},
{"f_30572ChickenBridge.scm",(void*)f_30572},
{"f_30536ChickenBridge.scm",(void*)f_30536},
{"f_30541ChickenBridge.scm",(void*)f_30541},
{"f_29807ChickenBridge.scm",(void*)f_29807},
{"f_30513ChickenBridge.scm",(void*)f_30513},
{"f_30528ChickenBridge.scm",(void*)f_30528},
{"f_30520ChickenBridge.scm",(void*)f_30520},
{"f_30484ChickenBridge.scm",(void*)f_30484},
{"f_30488ChickenBridge.scm",(void*)f_30488},
{"f_30449ChickenBridge.scm",(void*)f_30449},
{"f_30453ChickenBridge.scm",(void*)f_30453},
{"f_30414ChickenBridge.scm",(void*)f_30414},
{"f_30418ChickenBridge.scm",(void*)f_30418},
{"f_30379ChickenBridge.scm",(void*)f_30379},
{"f_30383ChickenBridge.scm",(void*)f_30383},
{"f_29811ChickenBridge.scm",(void*)f_29811},
{"f_30343ChickenBridge.scm",(void*)f_30343},
{"f_30358ChickenBridge.scm",(void*)f_30358},
{"f_30350ChickenBridge.scm",(void*)f_30350},
{"f_30314ChickenBridge.scm",(void*)f_30314},
{"f_30318ChickenBridge.scm",(void*)f_30318},
{"f_30279ChickenBridge.scm",(void*)f_30279},
{"f_30283ChickenBridge.scm",(void*)f_30283},
{"f_30244ChickenBridge.scm",(void*)f_30244},
{"f_30248ChickenBridge.scm",(void*)f_30248},
{"f_30209ChickenBridge.scm",(void*)f_30209},
{"f_30213ChickenBridge.scm",(void*)f_30213},
{"f_29814ChickenBridge.scm",(void*)f_29814},
{"f_30173ChickenBridge.scm",(void*)f_30173},
{"f_30188ChickenBridge.scm",(void*)f_30188},
{"f_30180ChickenBridge.scm",(void*)f_30180},
{"f_30144ChickenBridge.scm",(void*)f_30144},
{"f_30148ChickenBridge.scm",(void*)f_30148},
{"f_30109ChickenBridge.scm",(void*)f_30109},
{"f_30113ChickenBridge.scm",(void*)f_30113},
{"f_30074ChickenBridge.scm",(void*)f_30074},
{"f_30078ChickenBridge.scm",(void*)f_30078},
{"f_30039ChickenBridge.scm",(void*)f_30039},
{"f_30043ChickenBridge.scm",(void*)f_30043},
{"f_29817ChickenBridge.scm",(void*)f_29817},
{"f_30003ChickenBridge.scm",(void*)f_30003},
{"f_30018ChickenBridge.scm",(void*)f_30018},
{"f_30010ChickenBridge.scm",(void*)f_30010},
{"f_29974ChickenBridge.scm",(void*)f_29974},
{"f_29978ChickenBridge.scm",(void*)f_29978},
{"f_29939ChickenBridge.scm",(void*)f_29939},
{"f_29943ChickenBridge.scm",(void*)f_29943},
{"f_29904ChickenBridge.scm",(void*)f_29904},
{"f_29908ChickenBridge.scm",(void*)f_29908},
{"f_29869ChickenBridge.scm",(void*)f_29869},
{"f_29873ChickenBridge.scm",(void*)f_29873},
{"f_29820ChickenBridge.scm",(void*)f_29820},
{"f_29823ChickenBridge.scm",(void*)f_29823},
{"f_29827ChickenBridge.scm",(void*)f_29827},
{"f_29469ChickenBridge.scm",(void*)f_29469},
{"f_29309ChickenBridge.scm",(void*)f_29309},
{"f_29344ChickenBridge.scm",(void*)f_29344},
{"f_29354ChickenBridge.scm",(void*)f_29354},
{"f_29358ChickenBridge.scm",(void*)f_29358},
{"f_29361ChickenBridge.scm",(void*)f_29361},
{"f_29422ChickenBridge.scm",(void*)f_29422},
{"f_29413ChickenBridge.scm",(void*)f_29413},
{"f_29364ChickenBridge.scm",(void*)f_29364},
{"f_29383ChickenBridge.scm",(void*)f_29383},
{"f_29390ChickenBridge.scm",(void*)f_29390},
{"f_29367ChickenBridge.scm",(void*)f_29367},
{"f_29373ChickenBridge.scm",(void*)f_29373},
{"f_29342ChickenBridge.scm",(void*)f_29342},
{"f_29317ChickenBridge.scm",(void*)f_29317},
{"f_29316ChickenBridge.scm",(void*)f_29316},
{"f_29477ChickenBridge.scm",(void*)f_29477},
{"f_29055ChickenBridge.scm",(void*)f_29055},
{"f_29077ChickenBridge.scm",(void*)f_29077},
{"f_29092ChickenBridge.scm",(void*)f_29092},
{"f_29095ChickenBridge.scm",(void*)f_29095},
{"f_29271ChickenBridge.scm",(void*)f_29271},
{"f_29265ChickenBridge.scm",(void*)f_29265},
{"f_29098ChickenBridge.scm",(void*)f_29098},
{"f_29247ChickenBridge.scm",(void*)f_29247},
{"f_29101ChickenBridge.scm",(void*)f_29101},
{"f_29104ChickenBridge.scm",(void*)f_29104},
{"f_29240ChickenBridge.scm",(void*)f_29240},
{"f_29228ChickenBridge.scm",(void*)f_29228},
{"f_29124ChickenBridge.scm",(void*)f_29124},
{"f_29131ChickenBridge.scm",(void*)f_29131},
{"f_29201ChickenBridge.scm",(void*)f_29201},
{"f_29187ChickenBridge.scm",(void*)f_29187},
{"f_29195ChickenBridge.scm",(void*)f_29195},
{"f_29134ChickenBridge.scm",(void*)f_29134},
{"f_29173ChickenBridge.scm",(void*)f_29173},
{"f_29137ChickenBridge.scm",(void*)f_29137},
{"f_29166ChickenBridge.scm",(void*)f_29166},
{"f_29143ChickenBridge.scm",(void*)f_29143},
{"f_29146ChickenBridge.scm",(void*)f_29146},
{"f_29150ChickenBridge.scm",(void*)f_29150},
{"f_29111ChickenBridge.scm",(void*)f_29111},
{"f_29114ChickenBridge.scm",(void*)f_29114},
{"f_28924ChickenBridge.scm",(void*)f_28924},
{"f_28933ChickenBridge.scm",(void*)f_28933},
{"f_28881ChickenBridge.scm",(void*)f_28881},
{"f_28887ChickenBridge.scm",(void*)f_28887},
{"f_28950ChickenBridge.scm",(void*)f_28950},
{"f_29036ChickenBridge.scm",(void*)f_29036},
{"f_29023ChickenBridge.scm",(void*)f_29023},
{"f_29031ChickenBridge.scm",(void*)f_29031},
{"f_28953ChickenBridge.scm",(void*)f_28953},
{"f_28957ChickenBridge.scm",(void*)f_28957},
{"f_29000ChickenBridge.scm",(void*)f_29000},
{"f_28962ChickenBridge.scm",(void*)f_28962},
{"f_28928ChickenBridge.scm",(void*)f_28928},
{"f_28823ChickenBridge.scm",(void*)f_28823},
{"f_28830ChickenBridge.scm",(void*)f_28830},
{"f_28861ChickenBridge.scm",(void*)f_28861},
{"f_28857ChickenBridge.scm",(void*)f_28857},
{"f_28849ChickenBridge.scm",(void*)f_28849},
{"f_28732ChickenBridge.scm",(void*)f_28732},
{"f_28739ChickenBridge.scm",(void*)f_28739},
{"f_28807ChickenBridge.scm",(void*)f_28807},
{"f_28750ChickenBridge.scm",(void*)f_28750},
{"f_28777ChickenBridge.scm",(void*)f_28777},
{"f_28761ChickenBridge.scm",(void*)f_28761},
{"f_28666ChickenBridge.scm",(void*)f_28666},
{"f_28677ChickenBridge.scm",(void*)f_28677},
{"f_28680ChickenBridge.scm",(void*)f_28680},
{"f_28687ChickenBridge.scm",(void*)f_28687},
{"f_28660ChickenBridge.scm",(void*)f_28660},
{"f_28114ChickenBridge.scm",(void*)f_28114},
{"f_28145ChickenBridge.scm",(void*)f_28145},
{"f_28609ChickenBridge.scm",(void*)f_28609},
{"f_28615ChickenBridge.scm",(void*)f_28615},
{"f_28156ChickenBridge.scm",(void*)f_28156},
{"f_28041ChickenBridge.scm",(void*)f_28041},
{"f_28066ChickenBridge.scm",(void*)f_28066},
{"f_28001ChickenBridge.scm",(void*)f_28001},
{"f_28014ChickenBridge.scm",(void*)f_28014},
{"f_28055ChickenBridge.scm",(void*)f_28055},
{"f_28160ChickenBridge.scm",(void*)f_28160},
{"f_28597ChickenBridge.scm",(void*)f_28597},
{"f_28593ChickenBridge.scm",(void*)f_28593},
{"f_28589ChickenBridge.scm",(void*)f_28589},
{"f_28163ChickenBridge.scm",(void*)f_28163},
{"f_28383ChickenBridge.scm",(void*)f_28383},
{"f_28492ChickenBridge.scm",(void*)f_28492},
{"f_28557ChickenBridge.scm",(void*)f_28557},
{"f_28499ChickenBridge.scm",(void*)f_28499},
{"f_28503ChickenBridge.scm",(void*)f_28503},
{"f_28507ChickenBridge.scm",(void*)f_28507},
{"f_28549ChickenBridge.scm",(void*)f_28549},
{"f_28545ChickenBridge.scm",(void*)f_28545},
{"f_28523ChickenBridge.scm",(void*)f_28523},
{"f_28386ChickenBridge.scm",(void*)f_28386},
{"f_28389ChickenBridge.scm",(void*)f_28389},
{"f_28288ChickenBridge.scm",(void*)f_28288},
{"f_28371ChickenBridge.scm",(void*)f_28371},
{"f_28338ChickenBridge.scm",(void*)f_28338},
{"f_28364ChickenBridge.scm",(void*)f_28364},
{"f_28346ChickenBridge.scm",(void*)f_28346},
{"f_28294ChickenBridge.scm",(void*)f_28294},
{"f_28334ChickenBridge.scm",(void*)f_28334},
{"f_28276ChickenBridge.scm",(void*)f_28276},
{"f_28247ChickenBridge.scm",(void*)f_28247},
{"f_28269ChickenBridge.scm",(void*)f_28269},
{"f_28255ChickenBridge.scm",(void*)f_28255},
{"f_28209ChickenBridge.scm",(void*)f_28209},
{"f_28166ChickenBridge.scm",(void*)f_28166},
{"f_28177ChickenBridge.scm",(void*)f_28177},
{"f_28181ChickenBridge.scm",(void*)f_28181},
{"f_28185ChickenBridge.scm",(void*)f_28185},
{"f_28189ChickenBridge.scm",(void*)f_28189},
{"f_28173ChickenBridge.scm",(void*)f_28173},
{"f_28133ChickenBridge.scm",(void*)f_28133},
{"f_28128ChickenBridge.scm",(void*)f_28128},
{"f_28123ChickenBridge.scm",(void*)f_28123},
{"f_27955ChickenBridge.scm",(void*)f_27955},
{"f_27966ChickenBridge.scm",(void*)f_27966},
{"f_27981ChickenBridge.scm",(void*)f_27981},
{"f_27917ChickenBridge.scm",(void*)f_27917},
{"f_27928ChickenBridge.scm",(void*)f_27928},
{"f_27943ChickenBridge.scm",(void*)f_27943},
{"f_27850ChickenBridge.scm",(void*)f_27850},
{"f_27870ChickenBridge.scm",(void*)f_27870},
{"f_27880ChickenBridge.scm",(void*)f_27880},
{"f_27893ChickenBridge.scm",(void*)f_27893},
{"f_27861ChickenBridge.scm",(void*)f_27861},
{"f_27868ChickenBridge.scm",(void*)f_27868},
{"f_27657ChickenBridge.scm",(void*)f_27657},
{"f_27717ChickenBridge.scm",(void*)f_27717},
{"f_27727ChickenBridge.scm",(void*)f_27727},
{"f_27841ChickenBridge.scm",(void*)f_27841},
{"f_27806ChickenBridge.scm",(void*)f_27806},
{"f_27798ChickenBridge.scm",(void*)f_27798},
{"f_27769ChickenBridge.scm",(void*)f_27769},
{"f_27747ChickenBridge.scm",(void*)f_27747},
{"f_27750ChickenBridge.scm",(void*)f_27750},
{"f_27738ChickenBridge.scm",(void*)f_27738},
{"f_27664ChickenBridge.scm",(void*)f_27664},
{"f_27715ChickenBridge.scm",(void*)f_27715},
{"f_27707ChickenBridge.scm",(void*)f_27707},
{"f_27667ChickenBridge.scm",(void*)f_27667},
{"f_27678ChickenBridge.scm",(void*)f_27678},
{"f_27682ChickenBridge.scm",(void*)f_27682},
{"f_27674ChickenBridge.scm",(void*)f_27674},
{"f_27515ChickenBridge.scm",(void*)f_27515},
{"f_27563ChickenBridge.scm",(void*)f_27563},
{"f_27573ChickenBridge.scm",(void*)f_27573},
{"f_27584ChickenBridge.scm",(void*)f_27584},
{"f_27621ChickenBridge.scm",(void*)f_27621},
{"f_27596ChickenBridge.scm",(void*)f_27596},
{"f_27587ChickenBridge.scm",(void*)f_27587},
{"f_27525ChickenBridge.scm",(void*)f_27525},
{"f_27561ChickenBridge.scm",(void*)f_27561},
{"f_27532ChickenBridge.scm",(void*)f_27532},
{"f_27164ChickenBridge.scm",(void*)f_27164},
{"f_27171ChickenBridge.scm",(void*)f_27171},
{"f_27405ChickenBridge.scm",(void*)f_27405},
{"f_27415ChickenBridge.scm",(void*)f_27415},
{"f_27426ChickenBridge.scm",(void*)f_27426},
{"f_27438ChickenBridge.scm",(void*)f_27438},
{"f_27441ChickenBridge.scm",(void*)f_27441},
{"f_27429ChickenBridge.scm",(void*)f_27429},
{"f_27177ChickenBridge.scm",(void*)f_27177},
{"f_27403ChickenBridge.scm",(void*)f_27403},
{"f_27399ChickenBridge.scm",(void*)f_27399},
{"f_27345ChickenBridge.scm",(void*)f_27345},
{"f_27310ChickenBridge.scm",(void*)f_27310},
{"f_27326ChickenBridge.scm",(void*)f_27326},
{"f_27281ChickenBridge.scm",(void*)f_27281},
{"f_27205ChickenBridge.scm",(void*)f_27205},
{"f_27208ChickenBridge.scm",(void*)f_27208},
{"f_27272ChickenBridge.scm",(void*)f_27272},
{"f_27268ChickenBridge.scm",(void*)f_27268},
{"f_27188ChickenBridge.scm",(void*)f_27188},
{"f_27199ChickenBridge.scm",(void*)f_27199},
{"f_27195ChickenBridge.scm",(void*)f_27195},
{"f_27117ChickenBridge.scm",(void*)f_27117},
{"f_27150ChickenBridge.scm",(void*)f_27150},
{"f_27132ChickenBridge.scm",(void*)f_27132},
{"f_27144ChickenBridge.scm",(void*)f_27144},
{"f_26735ChickenBridge.scm",(void*)f_26735},
{"f_26944ChickenBridge.scm",(void*)f_26944},
{"f_26954ChickenBridge.scm",(void*)f_26954},
{"f_26965ChickenBridge.scm",(void*)f_26965},
{"f_27085ChickenBridge.scm",(void*)f_27085},
{"f_27064ChickenBridge.scm",(void*)f_27064},
{"f_27043ChickenBridge.scm",(void*)f_27043},
{"f_27022ChickenBridge.scm",(void*)f_27022},
{"f_27001ChickenBridge.scm",(void*)f_27001},
{"f_26980ChickenBridge.scm",(void*)f_26980},
{"f_26968ChickenBridge.scm",(void*)f_26968},
{"f_26745ChickenBridge.scm",(void*)f_26745},
{"f_26748ChickenBridge.scm",(void*)f_26748},
{"f_26911ChickenBridge.scm",(void*)f_26911},
{"f_26751ChickenBridge.scm",(void*)f_26751},
{"f_26902ChickenBridge.scm",(void*)f_26902},
{"f_26882ChickenBridge.scm",(void*)f_26882},
{"f_26754ChickenBridge.scm",(void*)f_26754},
{"f_26847ChickenBridge.scm",(void*)f_26847},
{"f_26864ChickenBridge.scm",(void*)f_26864},
{"f_26757ChickenBridge.scm",(void*)f_26757},
{"f_26796ChickenBridge.scm",(void*)f_26796},
{"f_26830ChickenBridge.scm",(void*)f_26830},
{"f_26814ChickenBridge.scm",(void*)f_26814},
{"f_26799ChickenBridge.scm",(void*)f_26799},
{"f_26764ChickenBridge.scm",(void*)f_26764},
{"f_26775ChickenBridge.scm",(void*)f_26775},
{"f_26779ChickenBridge.scm",(void*)f_26779},
{"f_26771ChickenBridge.scm",(void*)f_26771},
{"f_26653ChickenBridge.scm",(void*)f_26653},
{"f_26657ChickenBridge.scm",(void*)f_26657},
{"f_26675ChickenBridge.scm",(void*)f_26675},
{"f_26493ChickenBridge.scm",(void*)f_26493},
{"f_26501ChickenBridge.scm",(void*)f_26501},
{"f_26511ChickenBridge.scm",(void*)f_26511},
{"f_26549ChickenBridge.scm",(void*)f_26549},
{"f_26552ChickenBridge.scm",(void*)f_26552},
{"f_26555ChickenBridge.scm",(void*)f_26555},
{"f_26630ChickenBridge.scm",(void*)f_26630},
{"f_26640ChickenBridge.scm",(void*)f_26640},
{"f_26558ChickenBridge.scm",(void*)f_26558},
{"f_26561ChickenBridge.scm",(void*)f_26561},
{"f_26564ChickenBridge.scm",(void*)f_26564},
{"f_26584ChickenBridge.scm",(void*)f_26584},
{"f_26594ChickenBridge.scm",(void*)f_26594},
{"f_26597ChickenBridge.scm",(void*)f_26597},
{"f_26600ChickenBridge.scm",(void*)f_26600},
{"f_26567ChickenBridge.scm",(void*)f_26567},
{"f_26570ChickenBridge.scm",(void*)f_26570},
{"f_26487ChickenBridge.scm",(void*)f_26487},
{"f_26481ChickenBridge.scm",(void*)f_26481},
{"f_26475ChickenBridge.scm",(void*)f_26475},
{"f_26404ChickenBridge.scm",(void*)f_26404},
{"f_26445ChickenBridge.scm",(void*)f_26445},
{"f_26449ChickenBridge.scm",(void*)f_26449},
{"f_26453ChickenBridge.scm",(void*)f_26453},
{"f_26457ChickenBridge.scm",(void*)f_26457},
{"f_26461ChickenBridge.scm",(void*)f_26461},
{"f_26465ChickenBridge.scm",(void*)f_26465},
{"f_26469ChickenBridge.scm",(void*)f_26469},
{"f_26473ChickenBridge.scm",(void*)f_26473},
{"f_26406ChickenBridge.scm",(void*)f_26406},
{"f_26412ChickenBridge.scm",(void*)f_26412},
{"f_26434ChickenBridge.scm",(void*)f_26434},
{"f_26423ChickenBridge.scm",(void*)f_26423},
{"f_26253ChickenBridge.scm",(void*)f_26253},
{"f_26268ChickenBridge.scm",(void*)f_26268},
{"f_26281ChickenBridge.scm",(void*)f_26281},
{"f_26241ChickenBridge.scm",(void*)f_26241},
{"f_26229ChickenBridge.scm",(void*)f_26229},
{"f_26217ChickenBridge.scm",(void*)f_26217},
{"f_26211ChickenBridge.scm",(void*)f_26211},
{"f_26205ChickenBridge.scm",(void*)f_26205},
{"f_26193ChickenBridge.scm",(void*)f_26193},
{"f_26181ChickenBridge.scm",(void*)f_26181},
{"f_26169ChickenBridge.scm",(void*)f_26169},
{"f_26157ChickenBridge.scm",(void*)f_26157},
{"f_26151ChickenBridge.scm",(void*)f_26151},
{"f_26115ChickenBridge.scm",(void*)f_26115},
{"f_26109ChickenBridge.scm",(void*)f_26109},
{"f_26055ChickenBridge.scm",(void*)f_26055},
{"f_26059ChickenBridge.scm",(void*)f_26059},
{"f_26075ChickenBridge.scm",(void*)f_26075},
{"f_26107ChickenBridge.scm",(void*)f_26107},
{"f_26081ChickenBridge.scm",(void*)f_26081},
{"f_26087ChickenBridge.scm",(void*)f_26087},
{"f_26062ChickenBridge.scm",(void*)f_26062},
{"f_26046ChickenBridge.scm",(void*)f_26046},
{"f_26050ChickenBridge.scm",(void*)f_26050},
{"f_25893ChickenBridge.scm",(void*)f_25893},
{"f_26020ChickenBridge.scm",(void*)f_26020},
{"f_26033ChickenBridge.scm",(void*)f_26033},
{"f_26015ChickenBridge.scm",(void*)f_26015},
{"f_25896ChickenBridge.scm",(void*)f_25896},
{"f_26012ChickenBridge.scm",(void*)f_26012},
{"f_25996ChickenBridge.scm",(void*)f_25996},
{"f_25924ChickenBridge.scm",(void*)f_25924},
{"f_25932ChickenBridge.scm",(void*)f_25932},
{"f_25942ChickenBridge.scm",(void*)f_25942},
{"f_25945ChickenBridge.scm",(void*)f_25945},
{"f_25927ChickenBridge.scm",(void*)f_25927},
{"f_25716ChickenBridge.scm",(void*)f_25716},
{"f_25720ChickenBridge.scm",(void*)f_25720},
{"f_25725ChickenBridge.scm",(void*)f_25725},
{"f_25728ChickenBridge.scm",(void*)f_25728},
{"f_23463ChickenBridge.scm",(void*)f_23463},
{"f_23476ChickenBridge.scm",(void*)f_23476},
{"f_23483ChickenBridge.scm",(void*)f_23483},
{"f_23490ChickenBridge.scm",(void*)f_23490},
{"f_23469ChickenBridge.scm",(void*)f_23469},
{"f_25732ChickenBridge.scm",(void*)f_25732},
{"f_25769ChickenBridge.scm",(void*)f_25769},
{"f_25862ChickenBridge.scm",(void*)f_25862},
{"f_25872ChickenBridge.scm",(void*)f_25872},
{"f_25775ChickenBridge.scm",(void*)f_25775},
{"f_25832ChickenBridge.scm",(void*)f_25832},
{"f_25842ChickenBridge.scm",(void*)f_25842},
{"f_25783ChickenBridge.scm",(void*)f_25783},
{"f_25797ChickenBridge.scm",(void*)f_25797},
{"f_25801ChickenBridge.scm",(void*)f_25801},
{"f_25805ChickenBridge.scm",(void*)f_25805},
{"f_25809ChickenBridge.scm",(void*)f_25809},
{"f_25816ChickenBridge.scm",(void*)f_25816},
{"f_25793ChickenBridge.scm",(void*)f_25793},
{"f_25786ChickenBridge.scm",(void*)f_25786},
{"f_25735ChickenBridge.scm",(void*)f_25735},
{"f_24590ChickenBridge.scm",(void*)f_24590},
{"f_24603ChickenBridge.scm",(void*)f_24603},
{"f_24653ChickenBridge.scm",(void*)f_24653},
{"f_24750ChickenBridge.scm",(void*)f_24750},
{"f_24818ChickenBridge.scm",(void*)f_24818},
{"f_25075ChickenBridge.scm",(void*)f_25075},
{"f_24825ChickenBridge.scm",(void*)f_24825},
{"f_25063ChickenBridge.scm",(void*)f_25063},
{"f_25014ChickenBridge.scm",(void*)f_25014},
{"f_25020ChickenBridge.scm",(void*)f_25020},
{"f_25044ChickenBridge.scm",(void*)f_25044},
{"f_25040ChickenBridge.scm",(void*)f_25040},
{"f_25028ChickenBridge.scm",(void*)f_25028},
{"f_24828ChickenBridge.scm",(void*)f_24828},
{"f_24990ChickenBridge.scm",(void*)f_24990},
{"f_24994ChickenBridge.scm",(void*)f_24994},
{"f_24831ChickenBridge.scm",(void*)f_24831},
{"f_24967ChickenBridge.scm",(void*)f_24967},
{"f_24971ChickenBridge.scm",(void*)f_24971},
{"f_24834ChickenBridge.scm",(void*)f_24834},
{"f_24944ChickenBridge.scm",(void*)f_24944},
{"f_24948ChickenBridge.scm",(void*)f_24948},
{"f_24837ChickenBridge.scm",(void*)f_24837},
{"f_24869ChickenBridge.scm",(void*)f_24869},
{"f_24887ChickenBridge.scm",(void*)f_24887},
{"f_24905ChickenBridge.scm",(void*)f_24905},
{"f_24923ChickenBridge.scm",(void*)f_24923},
{"f_24840ChickenBridge.scm",(void*)f_24840},
{"f_24844ChickenBridge.scm",(void*)f_24844},
{"f_24754ChickenBridge.scm",(void*)f_24754},
{"f_24758ChickenBridge.scm",(void*)f_24758},
{"f_24762ChickenBridge.scm",(void*)f_24762},
{"f_24657ChickenBridge.scm",(void*)f_24657},
{"f_24661ChickenBridge.scm",(void*)f_24661},
{"f_24665ChickenBridge.scm",(void*)f_24665},
{"f_24684ChickenBridge.scm",(void*)f_24684},
{"f_24688ChickenBridge.scm",(void*)f_24688},
{"f_24668ChickenBridge.scm",(void*)f_24668},
{"f_24672ChickenBridge.scm",(void*)f_24672},
{"f_24607ChickenBridge.scm",(void*)f_24607},
{"f_24611ChickenBridge.scm",(void*)f_24611},
{"f_24615ChickenBridge.scm",(void*)f_24615},
{"f_24597ChickenBridge.scm",(void*)f_24597},
{"f_24412ChickenBridge.scm",(void*)f_24412},
{"f_24424ChickenBridge.scm",(void*)f_24424},
{"f_24443ChickenBridge.scm",(void*)f_24443},
{"f_24461ChickenBridge.scm",(void*)f_24461},
{"f_24493ChickenBridge.scm",(void*)f_24493},
{"f_24496ChickenBridge.scm",(void*)f_24496},
{"f_24489ChickenBridge.scm",(void*)f_24489},
{"f_24475ChickenBridge.scm",(void*)f_24475},
{"f_24446ChickenBridge.scm",(void*)f_24446},
{"f_24391ChickenBridge.scm",(void*)f_24391},
{"f_24398ChickenBridge.scm",(void*)f_24398},
{"f_24401ChickenBridge.scm",(void*)f_24401},
{"f_24407ChickenBridge.scm",(void*)f_24407},
{"f_24326ChickenBridge.scm",(void*)f_24326},
{"f_24335ChickenBridge.scm",(void*)f_24335},
{"f_24358ChickenBridge.scm",(void*)f_24358},
{"f_24348ChickenBridge.scm",(void*)f_24348},
{"f_24282ChickenBridge.scm",(void*)f_24282},
{"f_24270ChickenBridge.scm",(void*)f_24270},
{"f_24168ChickenBridge.scm",(void*)f_24168},
{"f_24120ChickenBridge.scm",(void*)f_24120},
{"f_23501ChickenBridge.scm",(void*)f_23501},
{"f_23505ChickenBridge.scm",(void*)f_23505},
{"f_23508ChickenBridge.scm",(void*)f_23508},
{"f_23934ChickenBridge.scm",(void*)f_23934},
{"f_23930ChickenBridge.scm",(void*)f_23930},
{"f_23926ChickenBridge.scm",(void*)f_23926},
{"f_23511ChickenBridge.scm",(void*)f_23511},
{"f_23634ChickenBridge.scm",(void*)f_23634},
{"f_22867ChickenBridge.scm",(void*)f_22867},
{"f_23640ChickenBridge.scm",(void*)f_23640},
{"f_22883ChickenBridge.scm",(void*)f_22883},
{"f_23728ChickenBridge.scm",(void*)f_23728},
{"f_23798ChickenBridge.scm",(void*)f_23798},
{"f_22899ChickenBridge.scm",(void*)f_22899},
{"f_23801ChickenBridge.scm",(void*)f_23801},
{"f_22931ChickenBridge.scm",(void*)f_22931},
{"f_23879ChickenBridge.scm",(void*)f_23879},
{"f_23905ChickenBridge.scm",(void*)f_23905},
{"f_23899ChickenBridge.scm",(void*)f_23899},
{"f_23888ChickenBridge.scm",(void*)f_23888},
{"f_23830ChickenBridge.scm",(void*)f_23830},
{"f_23840ChickenBridge.scm",(void*)f_23840},
{"f_23866ChickenBridge.scm",(void*)f_23866},
{"f_23860ChickenBridge.scm",(void*)f_23860},
{"f_23843ChickenBridge.scm",(void*)f_23843},
{"f_23853ChickenBridge.scm",(void*)f_23853},
{"f_23846ChickenBridge.scm",(void*)f_23846},
{"f_23807ChickenBridge.scm",(void*)f_23807},
{"f_23816ChickenBridge.scm",(void*)f_23816},
{"f_23810ChickenBridge.scm",(void*)f_23810},
{"f_23734ChickenBridge.scm",(void*)f_23734},
{"f_23752ChickenBridge.scm",(void*)f_23752},
{"f_23785ChickenBridge.scm",(void*)f_23785},
{"f_23771ChickenBridge.scm",(void*)f_23771},
{"f_23779ChickenBridge.scm",(void*)f_23779},
{"f_23762ChickenBridge.scm",(void*)f_23762},
{"f_23737ChickenBridge.scm",(void*)f_23737},
{"f_23649ChickenBridge.scm",(void*)f_23649},
{"f_23671ChickenBridge.scm",(void*)f_23671},
{"f_23718ChickenBridge.scm",(void*)f_23718},
{"f_23704ChickenBridge.scm",(void*)f_23704},
{"f_23712ChickenBridge.scm",(void*)f_23712},
{"f_23684ChickenBridge.scm",(void*)f_23684},
{"f_23687ChickenBridge.scm",(void*)f_23687},
{"f_23652ChickenBridge.scm",(void*)f_23652},
{"f_23669ChickenBridge.scm",(void*)f_23669},
{"f_23655ChickenBridge.scm",(void*)f_23655},
{"f_23520ChickenBridge.scm",(void*)f_23520},
{"f_23526ChickenBridge.scm",(void*)f_23526},
{"f_23584ChickenBridge.scm",(void*)f_23584},
{"f_23587ChickenBridge.scm",(void*)f_23587},
{"f_23608ChickenBridge.scm",(void*)f_23608},
{"f_23619ChickenBridge.scm",(void*)f_23619},
{"f_23598ChickenBridge.scm",(void*)f_23598},
{"f_23532ChickenBridge.scm",(void*)f_23532},
{"f_23542ChickenBridge.scm",(void*)f_23542},
{"f_23578ChickenBridge.scm",(void*)f_23578},
{"f_23548ChickenBridge.scm",(void*)f_23548},
{"f_23563ChickenBridge.scm",(void*)f_23563},
{"f_23567ChickenBridge.scm",(void*)f_23567},
{"f_23571ChickenBridge.scm",(void*)f_23571},
{"f_23555ChickenBridge.scm",(void*)f_23555},
{"f_23397ChickenBridge.scm",(void*)f_23397},
{"f_23399ChickenBridge.scm",(void*)f_23399},
{"f_23447ChickenBridge.scm",(void*)f_23447},
{"f_23403ChickenBridge.scm",(void*)f_23403},
{"f_23406ChickenBridge.scm",(void*)f_23406},
{"f_23411ChickenBridge.scm",(void*)f_23411},
{"f_23432ChickenBridge.scm",(void*)f_23432},
{"f_23389ChickenBridge.scm",(void*)f_23389},
{"f_23391ChickenBridge.scm",(void*)f_23391},
{"f_23212ChickenBridge.scm",(void*)f_23212},
{"f_23220ChickenBridge.scm",(void*)f_23220},
{"f_23181ChickenBridge.scm",(void*)f_23181},
{"f_23198ChickenBridge.scm",(void*)f_23198},
{"f_23202ChickenBridge.scm",(void*)f_23202},
{"f_23148ChickenBridge.scm",(void*)f_23148},
{"f_23155ChickenBridge.scm",(void*)f_23155},
{"f_23099ChickenBridge.scm",(void*)f_23099},
{"f_23106ChickenBridge.scm",(void*)f_23106},
{"f_23164ChickenBridge.scm",(void*)f_23164},
{"f_23387ChickenBridge.scm",(void*)f_23387},
{"f_23364ChickenBridge.scm",(void*)f_23364},
{"f_23380ChickenBridge.scm",(void*)f_23380},
{"f_23226ChickenBridge.scm",(void*)f_23226},
{"f_23229ChickenBridge.scm",(void*)f_23229},
{"f_23253ChickenBridge.scm",(void*)f_23253},
{"f_23310ChickenBridge.scm",(void*)f_23310},
{"f_23316ChickenBridge.scm",(void*)f_23316},
{"f_23325ChickenBridge.scm",(void*)f_23325},
{"f_23334ChickenBridge.scm",(void*)f_23334},
{"f_23343ChickenBridge.scm",(void*)f_23343},
{"f_23352ChickenBridge.scm",(void*)f_23352},
{"f_23304ChickenBridge.scm",(void*)f_23304},
{"f_23259ChickenBridge.scm",(void*)f_23259},
{"f_23265ChickenBridge.scm",(void*)f_23265},
{"f_23271ChickenBridge.scm",(void*)f_23271},
{"f_23277ChickenBridge.scm",(void*)f_23277},
{"f_23283ChickenBridge.scm",(void*)f_23283},
{"f_23289ChickenBridge.scm",(void*)f_23289},
{"f_23130ChickenBridge.scm",(void*)f_23130},
{"f_23137ChickenBridge.scm",(void*)f_23137},
{"f_23120ChickenBridge.scm",(void*)f_23120},
{"f_23108ChickenBridge.scm",(void*)f_23108},
{"f_23076ChickenBridge.scm",(void*)f_23076},
{"f_23083ChickenBridge.scm",(void*)f_23083},
{"f_23090ChickenBridge.scm",(void*)f_23090},
{"f_23060ChickenBridge.scm",(void*)f_23060},
{"f_23067ChickenBridge.scm",(void*)f_23067},
{"f_23074ChickenBridge.scm",(void*)f_23074},
{"f_23048ChickenBridge.scm",(void*)f_23048},
{"f_23030ChickenBridge.scm",(void*)f_23030},
{"f_23012ChickenBridge.scm",(void*)f_23012},
{"f_22997ChickenBridge.scm",(void*)f_22997},
{"f_22991ChickenBridge.scm",(void*)f_22991},
{"f_22979ChickenBridge.scm",(void*)f_22979},
{"f_22961ChickenBridge.scm",(void*)f_22961},
{"f_22940ChickenBridge.scm",(void*)f_22940},
{"f_22908ChickenBridge.scm",(void*)f_22908},
{"f_22915ChickenBridge.scm",(void*)f_22915},
{"f_22850ChickenBridge.scm",(void*)f_22850},
{"f_22858ChickenBridge.scm",(void*)f_22858},
{"f_22840ChickenBridge.scm",(void*)f_22840},
{"f_22848ChickenBridge.scm",(void*)f_22848},
{"f_22834ChickenBridge.scm",(void*)f_22834},
{"f_22822ChickenBridge.scm",(void*)f_22822},
{"f_22819ChickenBridge.scm",(void*)f_22819},
{"f_22798ChickenBridge.scm",(void*)f_22798},
{"f_22711ChickenBridge.scm",(void*)f_22711},
{"f_22690ChickenBridge.scm",(void*)f_22690},
{"f_22680ChickenBridge.scm",(void*)f_22680},
{"f_22668ChickenBridge.scm",(void*)f_22668},
{"f_22639ChickenBridge.scm",(void*)f_22639},
{"f_22627ChickenBridge.scm",(void*)f_22627},
{"f_22609ChickenBridge.scm",(void*)f_22609},
{"f_22591ChickenBridge.scm",(void*)f_22591},
{"f_22570ChickenBridge.scm",(void*)f_22570},
{"f_21548ChickenBridge.scm",(void*)f_21548},
{"f_22547ChickenBridge.scm",(void*)f_22547},
{"f_22562ChickenBridge.scm",(void*)f_22562},
{"f_22554ChickenBridge.scm",(void*)f_22554},
{"f_22518ChickenBridge.scm",(void*)f_22518},
{"f_22522ChickenBridge.scm",(void*)f_22522},
{"f_22483ChickenBridge.scm",(void*)f_22483},
{"f_22487ChickenBridge.scm",(void*)f_22487},
{"f_21558ChickenBridge.scm",(void*)f_21558},
{"f_22447ChickenBridge.scm",(void*)f_22447},
{"f_22462ChickenBridge.scm",(void*)f_22462},
{"f_22454ChickenBridge.scm",(void*)f_22454},
{"f_22418ChickenBridge.scm",(void*)f_22418},
{"f_22422ChickenBridge.scm",(void*)f_22422},
{"f_22383ChickenBridge.scm",(void*)f_22383},
{"f_22387ChickenBridge.scm",(void*)f_22387},
{"f_21561ChickenBridge.scm",(void*)f_21561},
{"f_21564ChickenBridge.scm",(void*)f_21564},
{"f_21569ChickenBridge.scm",(void*)f_21569},
{"f_22276ChickenBridge.scm",(void*)f_22276},
{"f_22299ChickenBridge.scm",(void*)f_22299},
{"f_22352ChickenBridge.scm",(void*)f_22352},
{"f_22334ChickenBridge.scm",(void*)f_22334},
{"f_22327ChickenBridge.scm",(void*)f_22327},
{"f_22309ChickenBridge.scm",(void*)f_22309},
{"f_22286ChickenBridge.scm",(void*)f_22286},
{"f_21763ChickenBridge.scm",(void*)f_21763},
{"f_22238ChickenBridge.scm",(void*)f_22238},
{"f_22260ChickenBridge.scm",(void*)f_22260},
{"f_22244ChickenBridge.scm",(void*)f_22244},
{"f_22252ChickenBridge.scm",(void*)f_22252},
{"f_22256ChickenBridge.scm",(void*)f_22256},
{"f_22242ChickenBridge.scm",(void*)f_22242},
{"f_22232ChickenBridge.scm",(void*)f_22232},
{"f_21766ChickenBridge.scm",(void*)f_21766},
{"f_22109ChickenBridge.scm",(void*)f_22109},
{"f_22133ChickenBridge.scm",(void*)f_22133},
{"f_22195ChickenBridge.scm",(void*)f_22195},
{"f_22136ChickenBridge.scm",(void*)f_22136},
{"f_22152ChickenBridge.scm",(void*)f_22152},
{"f_22177ChickenBridge.scm",(void*)f_22177},
{"f_22143ChickenBridge.scm",(void*)f_22143},
{"f_22120ChickenBridge.scm",(void*)f_22120},
{"f_21769ChickenBridge.scm",(void*)f_21769},
{"f_22095ChickenBridge.scm",(void*)f_22095},
{"f_21773ChickenBridge.scm",(void*)f_21773},
{"f_21817ChickenBridge.scm",(void*)f_21817},
{"f_21820ChickenBridge.scm",(void*)f_21820},
{"f_22076ChickenBridge.scm",(void*)f_22076},
{"f_22086ChickenBridge.scm",(void*)f_22086},
{"f_21823ChickenBridge.scm",(void*)f_21823},
{"f_22014ChickenBridge.scm",(void*)f_22014},
{"f_22024ChickenBridge.scm",(void*)f_22024},
{"f_22027ChickenBridge.scm",(void*)f_22027},
{"f_22047ChickenBridge.scm",(void*)f_22047},
{"f_22049ChickenBridge.scm",(void*)f_22049},
{"f_22059ChickenBridge.scm",(void*)f_22059},
{"f_22033ChickenBridge.scm",(void*)f_22033},
{"f_22036ChickenBridge.scm",(void*)f_22036},
{"f_21826ChickenBridge.scm",(void*)f_21826},
{"f_21834ChickenBridge.scm",(void*)f_21834},
{"f_21847ChickenBridge.scm",(void*)f_21847},
{"f_21721ChickenBridge.scm",(void*)f_21721},
{"f_21730ChickenBridge.scm",(void*)f_21730},
{"f_21752ChickenBridge.scm",(void*)f_21752},
{"f_21741ChickenBridge.scm",(void*)f_21741},
{"f_21850ChickenBridge.scm",(void*)f_21850},
{"f_21985ChickenBridge.scm",(void*)f_21985},
{"f_21987ChickenBridge.scm",(void*)f_21987},
{"f_21997ChickenBridge.scm",(void*)f_21997},
{"f_21856ChickenBridge.scm",(void*)f_21856},
{"f_21958ChickenBridge.scm",(void*)f_21958},
{"f_21960ChickenBridge.scm",(void*)f_21960},
{"f_21970ChickenBridge.scm",(void*)f_21970},
{"f_21859ChickenBridge.scm",(void*)f_21859},
{"f_21871ChickenBridge.scm",(void*)f_21871},
{"f_21897ChickenBridge.scm",(void*)f_21897},
{"f_21903ChickenBridge.scm",(void*)f_21903},
{"f_21909ChickenBridge.scm",(void*)f_21909},
{"f_21919ChickenBridge.scm",(void*)f_21919},
{"f_21921ChickenBridge.scm",(void*)f_21921},
{"f_21931ChickenBridge.scm",(void*)f_21931},
{"f_21912ChickenBridge.scm",(void*)f_21912},
{"f_21884ChickenBridge.scm",(void*)f_21884},
{"f_21862ChickenBridge.scm",(void*)f_21862},
{"f_21829ChickenBridge.scm",(void*)f_21829},
{"f_21776ChickenBridge.scm",(void*)f_21776},
{"f_21799ChickenBridge.scm",(void*)f_21799},
{"f_21788ChickenBridge.scm",(void*)f_21788},
{"f_21653ChickenBridge.scm",(void*)f_21653},
{"f_21701ChickenBridge.scm",(void*)f_21701},
{"f_21663ChickenBridge.scm",(void*)f_21663},
{"f_21691ChickenBridge.scm",(void*)f_21691},
{"f_21666ChickenBridge.scm",(void*)f_21666},
{"f_21571ChickenBridge.scm",(void*)f_21571},
{"f_21643ChickenBridge.scm",(void*)f_21643},
{"f_21575ChickenBridge.scm",(void*)f_21575},
{"f_21593ChickenBridge.scm",(void*)f_21593},
{"f_21625ChickenBridge.scm",(void*)f_21625},
{"f_21454ChickenBridge.scm",(void*)f_21454},
{"f_21458ChickenBridge.scm",(void*)f_21458},
{"f_21487ChickenBridge.scm",(void*)f_21487},
{"f_21492ChickenBridge.scm",(void*)f_21492},
{"f_21517ChickenBridge.scm",(void*)f_21517},
{"f_21502ChickenBridge.scm",(void*)f_21502},
{"f_20936ChickenBridge.scm",(void*)f_20936},
{"f_21207ChickenBridge.scm",(void*)f_21207},
{"f_21211ChickenBridge.scm",(void*)f_21211},
{"f_21216ChickenBridge.scm",(void*)f_21216},
{"f_21422ChickenBridge.scm",(void*)f_21422},
{"f_21437ChickenBridge.scm",(void*)f_21437},
{"f_21429ChickenBridge.scm",(void*)f_21429},
{"f_21393ChickenBridge.scm",(void*)f_21393},
{"f_21397ChickenBridge.scm",(void*)f_21397},
{"f_21358ChickenBridge.scm",(void*)f_21358},
{"f_21362ChickenBridge.scm",(void*)f_21362},
{"f_21220ChickenBridge.scm",(void*)f_21220},
{"f_21322ChickenBridge.scm",(void*)f_21322},
{"f_21337ChickenBridge.scm",(void*)f_21337},
{"f_21329ChickenBridge.scm",(void*)f_21329},
{"f_21293ChickenBridge.scm",(void*)f_21293},
{"f_21297ChickenBridge.scm",(void*)f_21297},
{"f_21258ChickenBridge.scm",(void*)f_21258},
{"f_21262ChickenBridge.scm",(void*)f_21262},
{"f_21223ChickenBridge.scm",(void*)f_21223},
{"f_21226ChickenBridge.scm",(void*)f_21226},
{"f_21229ChickenBridge.scm",(void*)f_21229},
{"f_21198ChickenBridge.scm",(void*)f_21198},
{"f_20940ChickenBridge.scm",(void*)f_20940},
{"f_21167ChickenBridge.scm",(void*)f_21167},
{"f_21182ChickenBridge.scm",(void*)f_21182},
{"f_21174ChickenBridge.scm",(void*)f_21174},
{"f_21138ChickenBridge.scm",(void*)f_21138},
{"f_21142ChickenBridge.scm",(void*)f_21142},
{"f_21103ChickenBridge.scm",(void*)f_21103},
{"f_21107ChickenBridge.scm",(void*)f_21107},
{"f_20943ChickenBridge.scm",(void*)f_20943},
{"f_21067ChickenBridge.scm",(void*)f_21067},
{"f_21082ChickenBridge.scm",(void*)f_21082},
{"f_21074ChickenBridge.scm",(void*)f_21074},
{"f_21038ChickenBridge.scm",(void*)f_21038},
{"f_21042ChickenBridge.scm",(void*)f_21042},
{"f_21003ChickenBridge.scm",(void*)f_21003},
{"f_21007ChickenBridge.scm",(void*)f_21007},
{"f_20946ChickenBridge.scm",(void*)f_20946},
{"f_20949ChickenBridge.scm",(void*)f_20949},
{"f_20952ChickenBridge.scm",(void*)f_20952},
{"f_20964ChickenBridge.scm",(void*)f_20964},
{"f_20982ChickenBridge.scm",(void*)f_20982},
{"f_20970ChickenBridge.scm",(void*)f_20970},
{"f_20958ChickenBridge.scm",(void*)f_20958},
{"f_20873ChickenBridge.scm",(void*)f_20873},
{"f_20533ChickenBridge.scm",(void*)f_20533},
{"f_20715ChickenBridge.scm",(void*)f_20715},
{"f_20719ChickenBridge.scm",(void*)f_20719},
{"f_20721ChickenBridge.scm",(void*)f_20721},
{"f_20646ChickenBridge.scm",(void*)f_20646},
{"f_20656ChickenBridge.scm",(void*)f_20656},
{"f_20663ChickenBridge.scm",(void*)f_20663},
{"f_20731ChickenBridge.scm",(void*)f_20731},
{"f_20734ChickenBridge.scm",(void*)f_20734},
{"f_20738ChickenBridge.scm",(void*)f_20738},
{"f_20758ChickenBridge.scm",(void*)f_20758},
{"f_20774ChickenBridge.scm",(void*)f_20774},
{"f_20741ChickenBridge.scm",(void*)f_20741},
{"f_20536ChickenBridge.scm",(void*)f_20536},
{"f_20548ChickenBridge.scm",(void*)f_20548},
{"f_20584ChickenBridge.scm",(void*)f_20584},
{"f_20604ChickenBridge.scm",(void*)f_20604},
{"f_20609ChickenBridge.scm",(void*)f_20609},
{"f_20046ChickenBridge.scm",(void*)f_20046},
{"f_19973ChickenBridge.scm",(void*)f_19973},
{"f_19818ChickenBridge.scm",(void*)f_19818},
{"f_19824ChickenBridge.scm",(void*)f_19824},
{"f_19909ChickenBridge.scm",(void*)f_19909},
{"f_19836ChickenBridge.scm",(void*)f_19836},
{"f_19852ChickenBridge.scm",(void*)f_19852},
{"f_19856ChickenBridge.scm",(void*)f_19856},
{"f_19859ChickenBridge.scm",(void*)f_19859},
{"f_19839ChickenBridge.scm",(void*)f_19839},
{"f_19850ChickenBridge.scm",(void*)f_19850},
{"f_19990ChickenBridge.scm",(void*)f_19990},
{"f_20527ChickenBridge.scm",(void*)f_20527},
{"f_20050ChickenBridge.scm",(void*)f_20050},
{"f_20496ChickenBridge.scm",(void*)f_20496},
{"f_20511ChickenBridge.scm",(void*)f_20511},
{"f_20503ChickenBridge.scm",(void*)f_20503},
{"f_20467ChickenBridge.scm",(void*)f_20467},
{"f_20471ChickenBridge.scm",(void*)f_20471},
{"f_20432ChickenBridge.scm",(void*)f_20432},
{"f_20436ChickenBridge.scm",(void*)f_20436},
{"f_20397ChickenBridge.scm",(void*)f_20397},
{"f_20401ChickenBridge.scm",(void*)f_20401},
{"f_20053ChickenBridge.scm",(void*)f_20053},
{"f_20361ChickenBridge.scm",(void*)f_20361},
{"f_20376ChickenBridge.scm",(void*)f_20376},
{"f_20368ChickenBridge.scm",(void*)f_20368},
{"f_20332ChickenBridge.scm",(void*)f_20332},
{"f_20336ChickenBridge.scm",(void*)f_20336},
{"f_20297ChickenBridge.scm",(void*)f_20297},
{"f_20301ChickenBridge.scm",(void*)f_20301},
{"f_20262ChickenBridge.scm",(void*)f_20262},
{"f_20266ChickenBridge.scm",(void*)f_20266},
{"f_20056ChickenBridge.scm",(void*)f_20056},
{"f_20226ChickenBridge.scm",(void*)f_20226},
{"f_20241ChickenBridge.scm",(void*)f_20241},
{"f_20233ChickenBridge.scm",(void*)f_20233},
{"f_20197ChickenBridge.scm",(void*)f_20197},
{"f_20201ChickenBridge.scm",(void*)f_20201},
{"f_20162ChickenBridge.scm",(void*)f_20162},
{"f_20166ChickenBridge.scm",(void*)f_20166},
{"f_20127ChickenBridge.scm",(void*)f_20127},
{"f_20131ChickenBridge.scm",(void*)f_20131},
{"f_20059ChickenBridge.scm",(void*)f_20059},
{"f_20062ChickenBridge.scm",(void*)f_20062},
{"f_20065ChickenBridge.scm",(void*)f_20065},
{"f_20098ChickenBridge.scm",(void*)f_20098},
{"f_20106ChickenBridge.scm",(void*)f_20106},
{"f_20071ChickenBridge.scm",(void*)f_20071},
{"f_20084ChickenBridge.scm",(void*)f_20084},
{"f_20074ChickenBridge.scm",(void*)f_20074},
{"f_20077ChickenBridge.scm",(void*)f_20077},
{"f_19613ChickenBridge.scm",(void*)f_19613},
{"f_19617ChickenBridge.scm",(void*)f_19617},
{"f_19620ChickenBridge.scm",(void*)f_19620},
{"f_19623ChickenBridge.scm",(void*)f_19623},
{"f_19792ChickenBridge.scm",(void*)f_19792},
{"f_19805ChickenBridge.scm",(void*)f_19805},
{"f_19809ChickenBridge.scm",(void*)f_19809},
{"f_19629ChickenBridge.scm",(void*)f_19629},
{"f_19785ChickenBridge.scm",(void*)f_19785},
{"f_19766ChickenBridge.scm",(void*)f_19766},
{"f_19773ChickenBridge.scm",(void*)f_19773},
{"f_19777ChickenBridge.scm",(void*)f_19777},
{"f_19635ChickenBridge.scm",(void*)f_19635},
{"f_19641ChickenBridge.scm",(void*)f_19641},
{"f_19725ChickenBridge.scm",(void*)f_19725},
{"f_19727ChickenBridge.scm",(void*)f_19727},
{"f_19749ChickenBridge.scm",(void*)f_19749},
{"f_19756ChickenBridge.scm",(void*)f_19756},
{"f_19760ChickenBridge.scm",(void*)f_19760},
{"f_19746ChickenBridge.scm",(void*)f_19746},
{"f_19742ChickenBridge.scm",(void*)f_19742},
{"f_19683ChickenBridge.scm",(void*)f_19683},
{"f_19700ChickenBridge.scm",(void*)f_19700},
{"f_19710ChickenBridge.scm",(void*)f_19710},
{"f_19686ChickenBridge.scm",(void*)f_19686},
{"f_19645ChickenBridge.scm",(void*)f_19645},
{"f_19653ChickenBridge.scm",(void*)f_19653},
{"f_19655ChickenBridge.scm",(void*)f_19655},
{"f_19676ChickenBridge.scm",(void*)f_19676},
{"f_19501ChickenBridge.scm",(void*)f_19501},
{"f_19611ChickenBridge.scm",(void*)f_19611},
{"f_19570ChickenBridge.scm",(void*)f_19570},
{"f_19603ChickenBridge.scm",(void*)f_19603},
{"f_19599ChickenBridge.scm",(void*)f_19599},
{"f_19584ChickenBridge.scm",(void*)f_19584},
{"f_19508ChickenBridge.scm",(void*)f_19508},
{"f_19516ChickenBridge.scm",(void*)f_19516},
{"f_19561ChickenBridge.scm",(void*)f_19561},
{"f_19549ChickenBridge.scm",(void*)f_19549},
{"f_19533ChickenBridge.scm",(void*)f_19533},
{"f_18734ChickenBridge.scm",(void*)f_18734},
{"f_19051ChickenBridge.scm",(void*)f_19051},
{"f_19058ChickenBridge.scm",(void*)f_19058},
{"f_19463ChickenBridge.scm",(void*)f_19463},
{"f_19478ChickenBridge.scm",(void*)f_19478},
{"f_19470ChickenBridge.scm",(void*)f_19470},
{"f_19434ChickenBridge.scm",(void*)f_19434},
{"f_19438ChickenBridge.scm",(void*)f_19438},
{"f_19399ChickenBridge.scm",(void*)f_19399},
{"f_19403ChickenBridge.scm",(void*)f_19403},
{"f_19364ChickenBridge.scm",(void*)f_19364},
{"f_19368ChickenBridge.scm",(void*)f_19368},
{"f_19061ChickenBridge.scm",(void*)f_19061},
{"f_19328ChickenBridge.scm",(void*)f_19328},
{"f_19343ChickenBridge.scm",(void*)f_19343},
{"f_19335ChickenBridge.scm",(void*)f_19335},
{"f_19299ChickenBridge.scm",(void*)f_19299},
{"f_19303ChickenBridge.scm",(void*)f_19303},
{"f_19264ChickenBridge.scm",(void*)f_19264},
{"f_19268ChickenBridge.scm",(void*)f_19268},
{"f_19229ChickenBridge.scm",(void*)f_19229},
{"f_19233ChickenBridge.scm",(void*)f_19233},
{"f_19064ChickenBridge.scm",(void*)f_19064},
{"f_19193ChickenBridge.scm",(void*)f_19193},
{"f_19208ChickenBridge.scm",(void*)f_19208},
{"f_19200ChickenBridge.scm",(void*)f_19200},
{"f_19164ChickenBridge.scm",(void*)f_19164},
{"f_19168ChickenBridge.scm",(void*)f_19168},
{"f_19129ChickenBridge.scm",(void*)f_19129},
{"f_19133ChickenBridge.scm",(void*)f_19133},
{"f_19094ChickenBridge.scm",(void*)f_19094},
{"f_19098ChickenBridge.scm",(void*)f_19098},
{"f_19067ChickenBridge.scm",(void*)f_19067},
{"f_19070ChickenBridge.scm",(void*)f_19070},
{"f_18738ChickenBridge.scm",(void*)f_18738},
{"f_18741ChickenBridge.scm",(void*)f_18741},
{"f_19015ChickenBridge.scm",(void*)f_19015},
{"f_19019ChickenBridge.scm",(void*)f_19019},
{"f_19022ChickenBridge.scm",(void*)f_19022},
{"f_19025ChickenBridge.scm",(void*)f_19025},
{"f_19028ChickenBridge.scm",(void*)f_19028},
{"f_19041ChickenBridge.scm",(void*)f_19041},
{"f_19031ChickenBridge.scm",(void*)f_19031},
{"f_18747ChickenBridge.scm",(void*)f_18747},
{"f_18754ChickenBridge.scm",(void*)f_18754},
{"f_18985ChickenBridge.scm",(void*)f_18985},
{"f_19000ChickenBridge.scm",(void*)f_19000},
{"f_18992ChickenBridge.scm",(void*)f_18992},
{"f_18956ChickenBridge.scm",(void*)f_18956},
{"f_18960ChickenBridge.scm",(void*)f_18960},
{"f_18921ChickenBridge.scm",(void*)f_18921},
{"f_18925ChickenBridge.scm",(void*)f_18925},
{"f_18757ChickenBridge.scm",(void*)f_18757},
{"f_18885ChickenBridge.scm",(void*)f_18885},
{"f_18900ChickenBridge.scm",(void*)f_18900},
{"f_18892ChickenBridge.scm",(void*)f_18892},
{"f_18856ChickenBridge.scm",(void*)f_18856},
{"f_18860ChickenBridge.scm",(void*)f_18860},
{"f_18821ChickenBridge.scm",(void*)f_18821},
{"f_18825ChickenBridge.scm",(void*)f_18825},
{"f_18760ChickenBridge.scm",(void*)f_18760},
{"f_18763ChickenBridge.scm",(void*)f_18763},
{"f_18778ChickenBridge.scm",(void*)f_18778},
{"f_18800ChickenBridge.scm",(void*)f_18800},
{"f_18784ChickenBridge.scm",(void*)f_18784},
{"f_18792ChickenBridge.scm",(void*)f_18792},
{"f_18766ChickenBridge.scm",(void*)f_18766},
{"f_18769ChickenBridge.scm",(void*)f_18769},
{"f_18651ChickenBridge.scm",(void*)f_18651},
{"f_18642ChickenBridge.scm",(void*)f_18642},
{"f_18633ChickenBridge.scm",(void*)f_18633},
{"f_18615ChickenBridge.scm",(void*)f_18615},
{"f_18597ChickenBridge.scm",(void*)f_18597},
{"f_18579ChickenBridge.scm",(void*)f_18579},
{"f_18570ChickenBridge.scm",(void*)f_18570},
{"f_18561ChickenBridge.scm",(void*)f_18561},
{"f_18339ChickenBridge.scm",(void*)f_18339},
{"f_18389ChickenBridge.scm",(void*)f_18389},
{"f_18534ChickenBridge.scm",(void*)f_18534},
{"f_18415ChickenBridge.scm",(void*)f_18415},
{"f_18530ChickenBridge.scm",(void*)f_18530},
{"f_18515ChickenBridge.scm",(void*)f_18515},
{"f_18496ChickenBridge.scm",(void*)f_18496},
{"f_18469ChickenBridge.scm",(void*)f_18469},
{"f_18422ChickenBridge.scm",(void*)f_18422},
{"f_18392ChickenBridge.scm",(void*)f_18392},
{"f_18342ChickenBridge.scm",(void*)f_18342},
{"f_18348ChickenBridge.scm",(void*)f_18348},
{"f_18364ChickenBridge.scm",(void*)f_18364},
{"f_18367ChickenBridge.scm",(void*)f_18367},
{"f_17865ChickenBridge.scm",(void*)f_17865},
{"f_18329ChickenBridge.scm",(void*)f_18329},
{"f_17869ChickenBridge.scm",(void*)f_17869},
{"f_18301ChickenBridge.scm",(void*)f_18301},
{"f_18316ChickenBridge.scm",(void*)f_18316},
{"f_18308ChickenBridge.scm",(void*)f_18308},
{"f_18272ChickenBridge.scm",(void*)f_18272},
{"f_18276ChickenBridge.scm",(void*)f_18276},
{"f_18237ChickenBridge.scm",(void*)f_18237},
{"f_18241ChickenBridge.scm",(void*)f_18241},
{"f_18202ChickenBridge.scm",(void*)f_18202},
{"f_18206ChickenBridge.scm",(void*)f_18206},
{"f_17872ChickenBridge.scm",(void*)f_17872},
{"f_18166ChickenBridge.scm",(void*)f_18166},
{"f_18181ChickenBridge.scm",(void*)f_18181},
{"f_18173ChickenBridge.scm",(void*)f_18173},
{"f_18137ChickenBridge.scm",(void*)f_18137},
{"f_18141ChickenBridge.scm",(void*)f_18141},
{"f_18102ChickenBridge.scm",(void*)f_18102},
{"f_18106ChickenBridge.scm",(void*)f_18106},
{"f_18067ChickenBridge.scm",(void*)f_18067},
{"f_18071ChickenBridge.scm",(void*)f_18071},
{"f_17875ChickenBridge.scm",(void*)f_17875},
{"f_18031ChickenBridge.scm",(void*)f_18031},
{"f_18046ChickenBridge.scm",(void*)f_18046},
{"f_18038ChickenBridge.scm",(void*)f_18038},
{"f_18002ChickenBridge.scm",(void*)f_18002},
{"f_18006ChickenBridge.scm",(void*)f_18006},
{"f_17967ChickenBridge.scm",(void*)f_17967},
{"f_17971ChickenBridge.scm",(void*)f_17971},
{"f_17932ChickenBridge.scm",(void*)f_17932},
{"f_17936ChickenBridge.scm",(void*)f_17936},
{"f_17878ChickenBridge.scm",(void*)f_17878},
{"f_17881ChickenBridge.scm",(void*)f_17881},
{"f_17884ChickenBridge.scm",(void*)f_17884},
{"f_17899ChickenBridge.scm",(void*)f_17899},
{"f_17911ChickenBridge.scm",(void*)f_17911},
{"f_17890ChickenBridge.scm",(void*)f_17890},
{"f_17893ChickenBridge.scm",(void*)f_17893},
{"f_17789ChickenBridge.scm",(void*)f_17789},
{"f_17793ChickenBridge.scm",(void*)f_17793},
{"f_17812ChickenBridge.scm",(void*)f_17812},
{"f_17822ChickenBridge.scm",(void*)f_17822},
{"f_17824ChickenBridge.scm",(void*)f_17824},
{"f_17841ChickenBridge.scm",(void*)f_17841},
{"f_17844ChickenBridge.scm",(void*)f_17844},
{"f_17855ChickenBridge.scm",(void*)f_17855},
{"f_17796ChickenBridge.scm",(void*)f_17796},
{"f_17526ChickenBridge.scm",(void*)f_17526},
{"f_17779ChickenBridge.scm",(void*)f_17779},
{"f_17530ChickenBridge.scm",(void*)f_17530},
{"f_17751ChickenBridge.scm",(void*)f_17751},
{"f_17766ChickenBridge.scm",(void*)f_17766},
{"f_17758ChickenBridge.scm",(void*)f_17758},
{"f_17722ChickenBridge.scm",(void*)f_17722},
{"f_17726ChickenBridge.scm",(void*)f_17726},
{"f_17687ChickenBridge.scm",(void*)f_17687},
{"f_17691ChickenBridge.scm",(void*)f_17691},
{"f_17533ChickenBridge.scm",(void*)f_17533},
{"f_17651ChickenBridge.scm",(void*)f_17651},
{"f_17666ChickenBridge.scm",(void*)f_17666},
{"f_17658ChickenBridge.scm",(void*)f_17658},
{"f_17622ChickenBridge.scm",(void*)f_17622},
{"f_17626ChickenBridge.scm",(void*)f_17626},
{"f_17587ChickenBridge.scm",(void*)f_17587},
{"f_17591ChickenBridge.scm",(void*)f_17591},
{"f_17536ChickenBridge.scm",(void*)f_17536},
{"f_17539ChickenBridge.scm",(void*)f_17539},
{"f_17542ChickenBridge.scm",(void*)f_17542},
{"f_17554ChickenBridge.scm",(void*)f_17554},
{"f_17566ChickenBridge.scm",(void*)f_17566},
{"f_17548ChickenBridge.scm",(void*)f_17548},
{"f_17490ChickenBridge.scm",(void*)f_17490},
{"f_17494ChickenBridge.scm",(void*)f_17494},
{"f_17516ChickenBridge.scm",(void*)f_17516},
{"f_17510ChickenBridge.scm",(void*)f_17510},
{"f_17503ChickenBridge.scm",(void*)f_17503},
{"f_17243ChickenBridge.scm",(void*)f_17243},
{"f_17247ChickenBridge.scm",(void*)f_17247},
{"f_17460ChickenBridge.scm",(void*)f_17460},
{"f_17475ChickenBridge.scm",(void*)f_17475},
{"f_17467ChickenBridge.scm",(void*)f_17467},
{"f_17431ChickenBridge.scm",(void*)f_17431},
{"f_17435ChickenBridge.scm",(void*)f_17435},
{"f_17396ChickenBridge.scm",(void*)f_17396},
{"f_17400ChickenBridge.scm",(void*)f_17400},
{"f_17250ChickenBridge.scm",(void*)f_17250},
{"f_17360ChickenBridge.scm",(void*)f_17360},
{"f_17375ChickenBridge.scm",(void*)f_17375},
{"f_17367ChickenBridge.scm",(void*)f_17367},
{"f_17331ChickenBridge.scm",(void*)f_17331},
{"f_17335ChickenBridge.scm",(void*)f_17335},
{"f_17296ChickenBridge.scm",(void*)f_17296},
{"f_17300ChickenBridge.scm",(void*)f_17300},
{"f_17253ChickenBridge.scm",(void*)f_17253},
{"f_17256ChickenBridge.scm",(void*)f_17256},
{"f_17259ChickenBridge.scm",(void*)f_17259},
{"f_17267ChickenBridge.scm",(void*)f_17267},
{"f_17275ChickenBridge.scm",(void*)f_17275},
{"f_17265ChickenBridge.scm",(void*)f_17265},
{"f_17028ChickenBridge.scm",(void*)f_17028},
{"f_17032ChickenBridge.scm",(void*)f_17032},
{"f_17241ChickenBridge.scm",(void*)f_17241},
{"f_17194ChickenBridge.scm",(void*)f_17194},
{"f_17206ChickenBridge.scm",(void*)f_17206},
{"f_17062ChickenBridge.scm",(void*)f_17062},
{"f_17065ChickenBridge.scm",(void*)f_17065},
{"f_17071ChickenBridge.scm",(void*)f_17071},
{"f_17074ChickenBridge.scm",(void*)f_17074},
{"f_17162ChickenBridge.scm",(void*)f_17162},
{"f_17077ChickenBridge.scm",(void*)f_17077},
{"f_17156ChickenBridge.scm",(void*)f_17156},
{"f_17083ChickenBridge.scm",(void*)f_17083},
{"f_17086ChickenBridge.scm",(void*)f_17086},
{"f_17038ChickenBridge.scm",(void*)f_17038},
{"f_17041ChickenBridge.scm",(void*)f_17041},
{"f_17048ChickenBridge.scm",(void*)f_17048},
{"f_16558ChickenBridge.scm",(void*)f_16558},
{"f_16562ChickenBridge.scm",(void*)f_16562},
{"f_16998ChickenBridge.scm",(void*)f_16998},
{"f_17013ChickenBridge.scm",(void*)f_17013},
{"f_17005ChickenBridge.scm",(void*)f_17005},
{"f_16969ChickenBridge.scm",(void*)f_16969},
{"f_16973ChickenBridge.scm",(void*)f_16973},
{"f_16934ChickenBridge.scm",(void*)f_16934},
{"f_16938ChickenBridge.scm",(void*)f_16938},
{"f_16899ChickenBridge.scm",(void*)f_16899},
{"f_16903ChickenBridge.scm",(void*)f_16903},
{"f_16565ChickenBridge.scm",(void*)f_16565},
{"f_16863ChickenBridge.scm",(void*)f_16863},
{"f_16878ChickenBridge.scm",(void*)f_16878},
{"f_16870ChickenBridge.scm",(void*)f_16870},
{"f_16834ChickenBridge.scm",(void*)f_16834},
{"f_16838ChickenBridge.scm",(void*)f_16838},
{"f_16799ChickenBridge.scm",(void*)f_16799},
{"f_16803ChickenBridge.scm",(void*)f_16803},
{"f_16764ChickenBridge.scm",(void*)f_16764},
{"f_16768ChickenBridge.scm",(void*)f_16768},
{"f_16568ChickenBridge.scm",(void*)f_16568},
{"f_16728ChickenBridge.scm",(void*)f_16728},
{"f_16743ChickenBridge.scm",(void*)f_16743},
{"f_16735ChickenBridge.scm",(void*)f_16735},
{"f_16699ChickenBridge.scm",(void*)f_16699},
{"f_16703ChickenBridge.scm",(void*)f_16703},
{"f_16664ChickenBridge.scm",(void*)f_16664},
{"f_16668ChickenBridge.scm",(void*)f_16668},
{"f_16629ChickenBridge.scm",(void*)f_16629},
{"f_16633ChickenBridge.scm",(void*)f_16633},
{"f_16571ChickenBridge.scm",(void*)f_16571},
{"f_16574ChickenBridge.scm",(void*)f_16574},
{"f_16577ChickenBridge.scm",(void*)f_16577},
{"f_16600ChickenBridge.scm",(void*)f_16600},
{"f_16608ChickenBridge.scm",(void*)f_16608},
{"f_16583ChickenBridge.scm",(void*)f_16583},
{"f_16586ChickenBridge.scm",(void*)f_16586},
{"f_16478ChickenBridge.scm",(void*)f_16478},
{"f_16469ChickenBridge.scm",(void*)f_16469},
{"f_16397ChickenBridge.scm",(void*)f_16397},
{"f_16401ChickenBridge.scm",(void*)f_16401},
{"f_16404ChickenBridge.scm",(void*)f_16404},
{"f_16142ChickenBridge.scm",(void*)f_16142},
{"f_16146ChickenBridge.scm",(void*)f_16146},
{"f_16367ChickenBridge.scm",(void*)f_16367},
{"f_16382ChickenBridge.scm",(void*)f_16382},
{"f_16374ChickenBridge.scm",(void*)f_16374},
{"f_16338ChickenBridge.scm",(void*)f_16338},
{"f_16342ChickenBridge.scm",(void*)f_16342},
{"f_16303ChickenBridge.scm",(void*)f_16303},
{"f_16307ChickenBridge.scm",(void*)f_16307},
{"f_16149ChickenBridge.scm",(void*)f_16149},
{"f_16267ChickenBridge.scm",(void*)f_16267},
{"f_16282ChickenBridge.scm",(void*)f_16282},
{"f_16274ChickenBridge.scm",(void*)f_16274},
{"f_16238ChickenBridge.scm",(void*)f_16238},
{"f_16242ChickenBridge.scm",(void*)f_16242},
{"f_16203ChickenBridge.scm",(void*)f_16203},
{"f_16207ChickenBridge.scm",(void*)f_16207},
{"f_16152ChickenBridge.scm",(void*)f_16152},
{"f_16155ChickenBridge.scm",(void*)f_16155},
{"f_16158ChickenBridge.scm",(void*)f_16158},
{"f_16170ChickenBridge.scm",(void*)f_16170},
{"f_16182ChickenBridge.scm",(void*)f_16182},
{"f_16164ChickenBridge.scm",(void*)f_16164},
{"f_16027ChickenBridge.scm",(void*)f_16027},
{"f_16140ChickenBridge.scm",(void*)f_16140},
{"f_16037ChickenBridge.scm",(void*)f_16037},
{"f_16125ChickenBridge.scm",(void*)f_16125},
{"f_16136ChickenBridge.scm",(void*)f_16136},
{"f_16132ChickenBridge.scm",(void*)f_16132},
{"f_16040ChickenBridge.scm",(void*)f_16040},
{"f_16122ChickenBridge.scm",(void*)f_16122},
{"f_16048ChickenBridge.scm",(void*)f_16048},
{"f_16112ChickenBridge.scm",(void*)f_16112},
{"f_16057ChickenBridge.scm",(void*)f_16057},
{"f_16076ChickenBridge.scm",(void*)f_16076},
{"f_16105ChickenBridge.scm",(void*)f_16105},
{"f_16086ChickenBridge.scm",(void*)f_16086},
{"f_16101ChickenBridge.scm",(void*)f_16101},
{"f_16089ChickenBridge.scm",(void*)f_16089},
{"f_16060ChickenBridge.scm",(void*)f_16060},
{"f_16070ChickenBridge.scm",(void*)f_16070},
{"f_16051ChickenBridge.scm",(void*)f_16051},
{"f_16054ChickenBridge.scm",(void*)f_16054},
{"f_15981ChickenBridge.scm",(void*)f_15981},
{"f_15972ChickenBridge.scm",(void*)f_15972},
{"f_15671ChickenBridge.scm",(void*)f_15671},
{"f_15678ChickenBridge.scm",(void*)f_15678},
{"f_15967ChickenBridge.scm",(void*)f_15967},
{"f_15681ChickenBridge.scm",(void*)f_15681},
{"f_15952ChickenBridge.scm",(void*)f_15952},
{"f_15944ChickenBridge.scm",(void*)f_15944},
{"f_15936ChickenBridge.scm",(void*)f_15936},
{"f_15939ChickenBridge.scm",(void*)f_15939},
{"f_15907ChickenBridge.scm",(void*)f_15907},
{"f_15930ChickenBridge.scm",(void*)f_15930},
{"f_15913ChickenBridge.scm",(void*)f_15913},
{"f_15917ChickenBridge.scm",(void*)f_15917},
{"f_15684ChickenBridge.scm",(void*)f_15684},
{"f_15690ChickenBridge.scm",(void*)f_15690},
{"f_15782ChickenBridge.scm",(void*)f_15782},
{"f_15894ChickenBridge.scm",(void*)f_15894},
{"f_15901ChickenBridge.scm",(void*)f_15901},
{"f_15805ChickenBridge.scm",(void*)f_15805},
{"f_15807ChickenBridge.scm",(void*)f_15807},
{"f_15856ChickenBridge.scm",(void*)f_15856},
{"f_15891ChickenBridge.scm",(void*)f_15891},
{"f_15880ChickenBridge.scm",(void*)f_15880},
{"f_16025ChickenBridge.scm",(void*)f_16025},
{"f_16000ChickenBridge.scm",(void*)f_16000},
{"f_16021ChickenBridge.scm",(void*)f_16021},
{"f_16017ChickenBridge.scm",(void*)f_16017},
{"f_16009ChickenBridge.scm",(void*)f_16009},
{"f_15873ChickenBridge.scm",(void*)f_15873},
{"f_15866ChickenBridge.scm",(void*)f_15866},
{"f_15814ChickenBridge.scm",(void*)f_15814},
{"f_15854ChickenBridge.scm",(void*)f_15854},
{"f_15818ChickenBridge.scm",(void*)f_15818},
{"f_15850ChickenBridge.scm",(void*)f_15850},
{"f_15837ChickenBridge.scm",(void*)f_15837},
{"f_15845ChickenBridge.scm",(void*)f_15845},
{"f_15841ChickenBridge.scm",(void*)f_15841},
{"f_15821ChickenBridge.scm",(void*)f_15821},
{"f_15824ChickenBridge.scm",(void*)f_15824},
{"f_15798ChickenBridge.scm",(void*)f_15798},
{"f_15785ChickenBridge.scm",(void*)f_15785},
{"f_15794ChickenBridge.scm",(void*)f_15794},
{"f_15789ChickenBridge.scm",(void*)f_15789},
{"f_15696ChickenBridge.scm",(void*)f_15696},
{"f_15776ChickenBridge.scm",(void*)f_15776},
{"f_15756ChickenBridge.scm",(void*)f_15756},
{"f_15762ChickenBridge.scm",(void*)f_15762},
{"f_15773ChickenBridge.scm",(void*)f_15773},
{"f_15753ChickenBridge.scm",(void*)f_15753},
{"f_15741ChickenBridge.scm",(void*)f_15741},
{"f_15744ChickenBridge.scm",(void*)f_15744},
{"f_15699ChickenBridge.scm",(void*)f_15699},
{"f_15735ChickenBridge.scm",(void*)f_15735},
{"f_15730ChickenBridge.scm",(void*)f_15730},
{"f_15702ChickenBridge.scm",(void*)f_15702},
{"f_15715ChickenBridge.scm",(void*)f_15715},
{"f_15705ChickenBridge.scm",(void*)f_15705},
{"f_15708ChickenBridge.scm",(void*)f_15708},
{"f_15711ChickenBridge.scm",(void*)f_15711},
{"f_15548ChickenBridge.scm",(void*)f_15548},
{"f_15607ChickenBridge.scm",(void*)f_15607},
{"f_15617ChickenBridge.scm",(void*)f_15617},
{"f_15619ChickenBridge.scm",(void*)f_15619},
{"f_15648ChickenBridge.scm",(void*)f_15648},
{"f_15653ChickenBridge.scm",(void*)f_15653},
{"f_15638ChickenBridge.scm",(void*)f_15638},
{"f_15569ChickenBridge.scm",(void*)f_15569},
{"f_15601ChickenBridge.scm",(void*)f_15601},
{"f_15529ChickenBridge.scm",(void*)f_15529},
{"f_15536ChickenBridge.scm",(void*)f_15536},
{"f_15543ChickenBridge.scm",(void*)f_15543},
{"f_15510ChickenBridge.scm",(void*)f_15510},
{"f_15517ChickenBridge.scm",(void*)f_15517},
{"f_15524ChickenBridge.scm",(void*)f_15524},
{"f_15330ChickenBridge.scm",(void*)f_15330},
{"f_15334ChickenBridge.scm",(void*)f_15334},
{"f_15337ChickenBridge.scm",(void*)f_15337},
{"f_15340ChickenBridge.scm",(void*)f_15340},
{"f_15343ChickenBridge.scm",(void*)f_15343},
{"f_15500ChickenBridge.scm",(void*)f_15500},
{"f_15507ChickenBridge.scm",(void*)f_15507},
{"f_15346ChickenBridge.scm",(void*)f_15346},
{"f_15349ChickenBridge.scm",(void*)f_15349},
{"f_15355ChickenBridge.scm",(void*)f_15355},
{"f_15361ChickenBridge.scm",(void*)f_15361},
{"f_15424ChickenBridge.scm",(void*)f_15424},
{"f_15438ChickenBridge.scm",(void*)f_15438},
{"f_15364ChickenBridge.scm",(void*)f_15364},
{"f_15367ChickenBridge.scm",(void*)f_15367},
{"f_15373ChickenBridge.scm",(void*)f_15373},
{"f_15386ChickenBridge.scm",(void*)f_15386},
{"f_15376ChickenBridge.scm",(void*)f_15376},
{"f_15379ChickenBridge.scm",(void*)f_15379},
{"f_15320ChickenBridge.scm",(void*)f_15320},
{"f_15265ChickenBridge.scm",(void*)f_15265},
{"f_15256ChickenBridge.scm",(void*)f_15256},
{"f_15139ChickenBridge.scm",(void*)f_15139},
{"f_15130ChickenBridge.scm",(void*)f_15130},
{"f_15121ChickenBridge.scm",(void*)f_15121},
{"f_15112ChickenBridge.scm",(void*)f_15112},
{"f_15103ChickenBridge.scm",(void*)f_15103},
{"f_15085ChickenBridge.scm",(void*)f_15085},
{"f_15076ChickenBridge.scm",(void*)f_15076},
{"f_15067ChickenBridge.scm",(void*)f_15067},
{"f_15049ChickenBridge.scm",(void*)f_15049},
{"f_15040ChickenBridge.scm",(void*)f_15040},
{"f_15031ChickenBridge.scm",(void*)f_15031},
{"f_15016ChickenBridge.scm",(void*)f_15016},
{"f_14971ChickenBridge.scm",(void*)f_14971},
{"f_14953ChickenBridge.scm",(void*)f_14953},
{"f_14944ChickenBridge.scm",(void*)f_14944},
{"f_14917ChickenBridge.scm",(void*)f_14917},
{"f_14899ChickenBridge.scm",(void*)f_14899},
{"f_14881ChickenBridge.scm",(void*)f_14881},
{"f_14872ChickenBridge.scm",(void*)f_14872},
{"f_14860ChickenBridge.scm",(void*)f_14860},
{"f_14734ChickenBridge.scm",(void*)f_14734},
{"f_14740ChickenBridge.scm",(void*)f_14740},
{"f_14744ChickenBridge.scm",(void*)f_14744},
{"f_14762ChickenBridge.scm",(void*)f_14762},
{"f_14765ChickenBridge.scm",(void*)f_14765},
{"f_14769ChickenBridge.scm",(void*)f_14769},
{"f_14772ChickenBridge.scm",(void*)f_14772},
{"f_14824ChickenBridge.scm",(void*)f_14824},
{"f_14835ChickenBridge.scm",(void*)f_14835},
{"f_14775ChickenBridge.scm",(void*)f_14775},
{"f_14785ChickenBridge.scm",(void*)f_14785},
{"f_14787ChickenBridge.scm",(void*)f_14787},
{"f_14631ChickenBridge.scm",(void*)f_14631},
{"f_14655ChickenBridge.scm",(void*)f_14655},
{"f_14659ChickenBridge.scm",(void*)f_14659},
{"f_14685ChickenBridge.scm",(void*)f_14685},
{"f_14695ChickenBridge.scm",(void*)f_14695},
{"f_14732ChickenBridge.scm",(void*)f_14732},
{"f_14724ChickenBridge.scm",(void*)f_14724},
{"f_14662ChickenBridge.scm",(void*)f_14662},
{"f_14632ChickenBridge.scm",(void*)f_14632},
{"f_14636ChickenBridge.scm",(void*)f_14636},
{"f_14639ChickenBridge.scm",(void*)f_14639},
{"f_14801ChickenBridge.scm",(void*)f_14801},
{"f_14804ChickenBridge.scm",(void*)f_14804},
{"f_14811ChickenBridge.scm",(void*)f_14811},
{"f_14745ChickenBridge.scm",(void*)f_14745},
{"f_14749ChickenBridge.scm",(void*)f_14749},
{"f_14752ChickenBridge.scm",(void*)f_14752},
{"f_14221ChickenBridge.scm",(void*)f_14221},
{"f_14600ChickenBridge.scm",(void*)f_14600},
{"f_14594ChickenBridge.scm",(void*)f_14594},
{"f_14225ChickenBridge.scm",(void*)f_14225},
{"f_14578ChickenBridge.scm",(void*)f_14578},
{"f_14228ChickenBridge.scm",(void*)f_14228},
{"f_14564ChickenBridge.scm",(void*)f_14564},
{"f_14560ChickenBridge.scm",(void*)f_14560},
{"f_14231ChickenBridge.scm",(void*)f_14231},
{"f_14553ChickenBridge.scm",(void*)f_14553},
{"f_14549ChickenBridge.scm",(void*)f_14549},
{"f_14234ChickenBridge.scm",(void*)f_14234},
{"f_14237ChickenBridge.scm",(void*)f_14237},
{"f_14537ChickenBridge.scm",(void*)f_14537},
{"f_14529ChickenBridge.scm",(void*)f_14529},
{"f_14533ChickenBridge.scm",(void*)f_14533},
{"f_14521ChickenBridge.scm",(void*)f_14521},
{"f_14525ChickenBridge.scm",(void*)f_14525},
{"f_14395ChickenBridge.scm",(void*)f_14395},
{"f_14510ChickenBridge.scm",(void*)f_14510},
{"f_14514ChickenBridge.scm",(void*)f_14514},
{"f_14502ChickenBridge.scm",(void*)f_14502},
{"f_14506ChickenBridge.scm",(void*)f_14506},
{"f_14398ChickenBridge.scm",(void*)f_14398},
{"f_14402ChickenBridge.scm",(void*)f_14402},
{"f_14407ChickenBridge.scm",(void*)f_14407},
{"f_14417ChickenBridge.scm",(void*)f_14417},
{"f_14420ChickenBridge.scm",(void*)f_14420},
{"f_14301ChickenBridge.scm",(void*)f_14301},
{"f_14364ChickenBridge.scm",(void*)f_14364},
{"f_14385ChickenBridge.scm",(void*)f_14385},
{"f_14326ChickenBridge.scm",(void*)f_14326},
{"f_14355ChickenBridge.scm",(void*)f_14355},
{"f_14304ChickenBridge.scm",(void*)f_14304},
{"f_14321ChickenBridge.scm",(void*)f_14321},
{"f_14317ChickenBridge.scm",(void*)f_14317},
{"f_13767ChickenBridge.scm",(void*)f_13767},
{"f_13771ChickenBridge.scm",(void*)f_13771},
{"f_13759ChickenBridge.scm",(void*)f_13759},
{"f_13684ChickenBridge.scm",(void*)f_13684},
{"f_13745ChickenBridge.scm",(void*)f_13745},
{"f_13688ChickenBridge.scm",(void*)f_13688},
{"f_13696ChickenBridge.scm",(void*)f_13696},
{"f_13729ChickenBridge.scm",(void*)f_13729},
{"f_13706ChickenBridge.scm",(void*)f_13706},
{"f_13709ChickenBridge.scm",(void*)f_13709},
{"f_14281ChickenBridge.scm",(void*)f_14281},
{"f_14251ChickenBridge.scm",(void*)f_14251},
{"f_14240ChickenBridge.scm",(void*)f_14240},
{"f_14164ChickenBridge.scm",(void*)f_14164},
{"f_14172ChickenBridge.scm",(void*)f_14172},
{"f_14176ChickenBridge.scm",(void*)f_14176},
{"f_14180ChickenBridge.scm",(void*)f_14180},
{"f_14186ChickenBridge.scm",(void*)f_14186},
{"f_14196ChickenBridge.scm",(void*)f_14196},
{"f_13952ChickenBridge.scm",(void*)f_13952},
{"f_14020ChickenBridge.scm",(void*)f_14020},
{"f_14023ChickenBridge.scm",(void*)f_14023},
{"f_14026ChickenBridge.scm",(void*)f_14026},
{"f_14029ChickenBridge.scm",(void*)f_14029},
{"f_14032ChickenBridge.scm",(void*)f_14032},
{"f_14130ChickenBridge.scm",(void*)f_14130},
{"f_14140ChickenBridge.scm",(void*)f_14140},
{"f_14098ChickenBridge.scm",(void*)f_14098},
{"f_14108ChickenBridge.scm",(void*)f_14108},
{"f_14049ChickenBridge.scm",(void*)f_14049},
{"f_14068ChickenBridge.scm",(void*)f_14068},
{"f_14078ChickenBridge.scm",(void*)f_14078},
{"f_14059ChickenBridge.scm",(void*)f_14059},
{"f_14035ChickenBridge.scm",(void*)f_14035},
{"f_13988ChickenBridge.scm",(void*)f_13988},
{"f_13998ChickenBridge.scm",(void*)f_13998},
{"f_13971ChickenBridge.scm",(void*)f_13971},
{"f_13978ChickenBridge.scm",(void*)f_13978},
{"f_13954ChickenBridge.scm",(void*)f_13954},
{"f_13961ChickenBridge.scm",(void*)f_13961},
{"f_13773ChickenBridge.scm",(void*)f_13773},
{"f_13781ChickenBridge.scm",(void*)f_13781},
{"f_13785ChickenBridge.scm",(void*)f_13785},
{"f_13787ChickenBridge.scm",(void*)f_13787},
{"f_13797ChickenBridge.scm",(void*)f_13797},
{"f_13928ChickenBridge.scm",(void*)f_13928},
{"f_13877ChickenBridge.scm",(void*)f_13877},
{"f_13880ChickenBridge.scm",(void*)f_13880},
{"f_13891ChickenBridge.scm",(void*)f_13891},
{"f_13843ChickenBridge.scm",(void*)f_13843},
{"f_13812ChickenBridge.scm",(void*)f_13812},
{"f_13815ChickenBridge.scm",(void*)f_13815},
{"f_13800ChickenBridge.scm",(void*)f_13800},
{"f_13361ChickenBridge.scm",(void*)f_13361},
{"f_13678ChickenBridge.scm",(void*)f_13678},
{"f_13607ChickenBridge.scm",(void*)f_13607},
{"f_13609ChickenBridge.scm",(void*)f_13609},
{"f_8154ChickenBridge.scm",(void*)f_8154},
{"f_13628ChickenBridge.scm",(void*)f_13628},
{"f_13631ChickenBridge.scm",(void*)f_13631},
{"f_13374ChickenBridge.scm",(void*)f_13374},
{"f_13450ChickenBridge.scm",(void*)f_13450},
{"f_13603ChickenBridge.scm",(void*)f_13603},
{"f_13587ChickenBridge.scm",(void*)f_13587},
{"f_13539ChickenBridge.scm",(void*)f_13539},
{"f_13553ChickenBridge.scm",(void*)f_13553},
{"f_13506ChickenBridge.scm",(void*)f_13506},
{"f_13481ChickenBridge.scm",(void*)f_13481},
{"f_13377ChickenBridge.scm",(void*)f_13377},
{"f_13385ChickenBridge.scm",(void*)f_13385},
{"f_13418ChickenBridge.scm",(void*)f_13418},
{"f_11888ChickenBridge.scm",(void*)f_11888},
{"f_13338ChickenBridge.scm",(void*)f_13338},
{"f_13353ChickenBridge.scm",(void*)f_13353},
{"f_13345ChickenBridge.scm",(void*)f_13345},
{"f_13309ChickenBridge.scm",(void*)f_13309},
{"f_13313ChickenBridge.scm",(void*)f_13313},
{"f_13274ChickenBridge.scm",(void*)f_13274},
{"f_13278ChickenBridge.scm",(void*)f_13278},
{"f_13239ChickenBridge.scm",(void*)f_13239},
{"f_13243ChickenBridge.scm",(void*)f_13243},
{"f_13204ChickenBridge.scm",(void*)f_13204},
{"f_13208ChickenBridge.scm",(void*)f_13208},
{"f_13169ChickenBridge.scm",(void*)f_13169},
{"f_13173ChickenBridge.scm",(void*)f_13173},
{"f_13134ChickenBridge.scm",(void*)f_13134},
{"f_13138ChickenBridge.scm",(void*)f_13138},
{"f_11892ChickenBridge.scm",(void*)f_11892},
{"f_13098ChickenBridge.scm",(void*)f_13098},
{"f_13113ChickenBridge.scm",(void*)f_13113},
{"f_13105ChickenBridge.scm",(void*)f_13105},
{"f_13069ChickenBridge.scm",(void*)f_13069},
{"f_13073ChickenBridge.scm",(void*)f_13073},
{"f_13034ChickenBridge.scm",(void*)f_13034},
{"f_13038ChickenBridge.scm",(void*)f_13038},
{"f_12999ChickenBridge.scm",(void*)f_12999},
{"f_13003ChickenBridge.scm",(void*)f_13003},
{"f_12964ChickenBridge.scm",(void*)f_12964},
{"f_12968ChickenBridge.scm",(void*)f_12968},
{"f_12929ChickenBridge.scm",(void*)f_12929},
{"f_12933ChickenBridge.scm",(void*)f_12933},
{"f_12894ChickenBridge.scm",(void*)f_12894},
{"f_12898ChickenBridge.scm",(void*)f_12898},
{"f_11895ChickenBridge.scm",(void*)f_11895},
{"f_12858ChickenBridge.scm",(void*)f_12858},
{"f_12873ChickenBridge.scm",(void*)f_12873},
{"f_12865ChickenBridge.scm",(void*)f_12865},
{"f_12829ChickenBridge.scm",(void*)f_12829},
{"f_12833ChickenBridge.scm",(void*)f_12833},
{"f_12794ChickenBridge.scm",(void*)f_12794},
{"f_12798ChickenBridge.scm",(void*)f_12798},
{"f_12759ChickenBridge.scm",(void*)f_12759},
{"f_12763ChickenBridge.scm",(void*)f_12763},
{"f_12724ChickenBridge.scm",(void*)f_12724},
{"f_12728ChickenBridge.scm",(void*)f_12728},
{"f_12689ChickenBridge.scm",(void*)f_12689},
{"f_12693ChickenBridge.scm",(void*)f_12693},
{"f_12654ChickenBridge.scm",(void*)f_12654},
{"f_12658ChickenBridge.scm",(void*)f_12658},
{"f_11898ChickenBridge.scm",(void*)f_11898},
{"f_12618ChickenBridge.scm",(void*)f_12618},
{"f_12633ChickenBridge.scm",(void*)f_12633},
{"f_12625ChickenBridge.scm",(void*)f_12625},
{"f_12589ChickenBridge.scm",(void*)f_12589},
{"f_12593ChickenBridge.scm",(void*)f_12593},
{"f_12554ChickenBridge.scm",(void*)f_12554},
{"f_12558ChickenBridge.scm",(void*)f_12558},
{"f_12519ChickenBridge.scm",(void*)f_12519},
{"f_12523ChickenBridge.scm",(void*)f_12523},
{"f_12484ChickenBridge.scm",(void*)f_12484},
{"f_12488ChickenBridge.scm",(void*)f_12488},
{"f_12449ChickenBridge.scm",(void*)f_12449},
{"f_12453ChickenBridge.scm",(void*)f_12453},
{"f_12414ChickenBridge.scm",(void*)f_12414},
{"f_12418ChickenBridge.scm",(void*)f_12418},
{"f_11901ChickenBridge.scm",(void*)f_11901},
{"f_12378ChickenBridge.scm",(void*)f_12378},
{"f_12393ChickenBridge.scm",(void*)f_12393},
{"f_12385ChickenBridge.scm",(void*)f_12385},
{"f_12349ChickenBridge.scm",(void*)f_12349},
{"f_12353ChickenBridge.scm",(void*)f_12353},
{"f_12314ChickenBridge.scm",(void*)f_12314},
{"f_12318ChickenBridge.scm",(void*)f_12318},
{"f_12279ChickenBridge.scm",(void*)f_12279},
{"f_12283ChickenBridge.scm",(void*)f_12283},
{"f_12244ChickenBridge.scm",(void*)f_12244},
{"f_12248ChickenBridge.scm",(void*)f_12248},
{"f_12209ChickenBridge.scm",(void*)f_12209},
{"f_12213ChickenBridge.scm",(void*)f_12213},
{"f_12174ChickenBridge.scm",(void*)f_12174},
{"f_12178ChickenBridge.scm",(void*)f_12178},
{"f_11904ChickenBridge.scm",(void*)f_11904},
{"f_12138ChickenBridge.scm",(void*)f_12138},
{"f_12153ChickenBridge.scm",(void*)f_12153},
{"f_12145ChickenBridge.scm",(void*)f_12145},
{"f_12109ChickenBridge.scm",(void*)f_12109},
{"f_12113ChickenBridge.scm",(void*)f_12113},
{"f_12074ChickenBridge.scm",(void*)f_12074},
{"f_12078ChickenBridge.scm",(void*)f_12078},
{"f_12039ChickenBridge.scm",(void*)f_12039},
{"f_12043ChickenBridge.scm",(void*)f_12043},
{"f_12004ChickenBridge.scm",(void*)f_12004},
{"f_12008ChickenBridge.scm",(void*)f_12008},
{"f_11969ChickenBridge.scm",(void*)f_11969},
{"f_11973ChickenBridge.scm",(void*)f_11973},
{"f_11934ChickenBridge.scm",(void*)f_11934},
{"f_11938ChickenBridge.scm",(void*)f_11938},
{"f_11907ChickenBridge.scm",(void*)f_11907},
{"f_11910ChickenBridge.scm",(void*)f_11910},
{"f_11669ChickenBridge.scm",(void*)f_11669},
{"f_11678ChickenBridge.scm",(void*)f_11678},
{"f_11682ChickenBridge.scm",(void*)f_11682},
{"f_11869ChickenBridge.scm",(void*)f_11869},
{"f_11854ChickenBridge.scm",(void*)f_11854},
{"f_11819ChickenBridge.scm",(void*)f_11819},
{"f_11799ChickenBridge.scm",(void*)f_11799},
{"f_11803ChickenBridge.scm",(void*)f_11803},
{"f_11789ChickenBridge.scm",(void*)f_11789},
{"f_11797ChickenBridge.scm",(void*)f_11797},
{"f_11756ChickenBridge.scm",(void*)f_11756},
{"f_11684ChickenBridge.scm",(void*)f_11684},
{"f_11751ChickenBridge.scm",(void*)f_11751},
{"f_11688ChickenBridge.scm",(void*)f_11688},
{"f_11724ChickenBridge.scm",(void*)f_11724},
{"f_11699ChickenBridge.scm",(void*)f_11699},
{"f_11640ChickenBridge.scm",(void*)f_11640},
{"f_11644ChickenBridge.scm",(void*)f_11644},
{"f_11655ChickenBridge.scm",(void*)f_11655},
{"f_11653ChickenBridge.scm",(void*)f_11653},
{"f_11609ChickenBridge.scm",(void*)f_11609},
{"f_11613ChickenBridge.scm",(void*)f_11613},
{"f_11624ChickenBridge.scm",(void*)f_11624},
{"f_11622ChickenBridge.scm",(void*)f_11622},
{"f_11591ChickenBridge.scm",(void*)f_11591},
{"f_11599ChickenBridge.scm",(void*)f_11599},
{"f_11607ChickenBridge.scm",(void*)f_11607},
{"f_11581ChickenBridge.scm",(void*)f_11581},
{"f_11589ChickenBridge.scm",(void*)f_11589},
{"f_11522ChickenBridge.scm",(void*)f_11522},
{"f_11529ChickenBridge.scm",(void*)f_11529},
{"f_11532ChickenBridge.scm",(void*)f_11532},
{"f_11535ChickenBridge.scm",(void*)f_11535},
{"f_11540ChickenBridge.scm",(void*)f_11540},
{"f_11484ChickenBridge.scm",(void*)f_11484},
{"f_11492ChickenBridge.scm",(void*)f_11492},
{"f_11496ChickenBridge.scm",(void*)f_11496},
{"f_11516ChickenBridge.scm",(void*)f_11516},
{"f_11500ChickenBridge.scm",(void*)f_11500},
{"f_11508ChickenBridge.scm",(void*)f_11508},
{"f_11504ChickenBridge.scm",(void*)f_11504},
{"f_11472ChickenBridge.scm",(void*)f_11472},
{"f_11463ChickenBridge.scm",(void*)f_11463},
{"f_11454ChickenBridge.scm",(void*)f_11454},
{"f_11445ChickenBridge.scm",(void*)f_11445},
{"f_11436ChickenBridge.scm",(void*)f_11436},
{"f_11427ChickenBridge.scm",(void*)f_11427},
{"f_11418ChickenBridge.scm",(void*)f_11418},
{"f_11403ChickenBridge.scm",(void*)f_11403},
{"f_11397ChickenBridge.scm",(void*)f_11397},
{"f_11255ChickenBridge.scm",(void*)f_11255},
{"f_11259ChickenBridge.scm",(void*)f_11259},
{"f_11328ChickenBridge.scm",(void*)f_11328},
{"f_11371ChickenBridge.scm",(void*)f_11371},
{"f_11375ChickenBridge.scm",(void*)f_11375},
{"f_11364ChickenBridge.scm",(void*)f_11364},
{"f_11351ChickenBridge.scm",(void*)f_11351},
{"f_11270ChickenBridge.scm",(void*)f_11270},
{"f_11313ChickenBridge.scm",(void*)f_11313},
{"f_11317ChickenBridge.scm",(void*)f_11317},
{"f_11306ChickenBridge.scm",(void*)f_11306},
{"f_11293ChickenBridge.scm",(void*)f_11293},
{"f_11089ChickenBridge.scm",(void*)f_11089},
{"f_11190ChickenBridge.scm",(void*)f_11190},
{"f_11239ChickenBridge.scm",(void*)f_11239},
{"f_11235ChickenBridge.scm",(void*)f_11235},
{"f_11207ChickenBridge.scm",(void*)f_11207},
{"f_11142ChickenBridge.scm",(void*)f_11142},
{"f_11151ChickenBridge.scm",(void*)f_11151},
{"f_11135ChickenBridge.scm",(void*)f_11135},
{"f_10954ChickenBridge.scm",(void*)f_10954},
{"f_11080ChickenBridge.scm",(void*)f_11080},
{"f_11076ChickenBridge.scm",(void*)f_11076},
{"f_11054ChickenBridge.scm",(void*)f_11054},
{"f_10984ChickenBridge.scm",(void*)f_10984},
{"f_11000ChickenBridge.scm",(void*)f_11000},
{"f_10909ChickenBridge.scm",(void*)f_10909},
{"f_10952ChickenBridge.scm",(void*)f_10952},
{"f_10941ChickenBridge.scm",(void*)f_10941},
{"f_10793ChickenBridge.scm",(void*)f_10793},
{"f_10907ChickenBridge.scm",(void*)f_10907},
{"f_10808ChickenBridge.scm",(void*)f_10808},
{"f_10838ChickenBridge.scm",(void*)f_10838},
{"f_10857ChickenBridge.scm",(void*)f_10857},
{"f_10842ChickenBridge.scm",(void*)f_10842},
{"f_10821ChickenBridge.scm",(void*)f_10821},
{"f_10671ChickenBridge.scm",(void*)f_10671},
{"f_10791ChickenBridge.scm",(void*)f_10791},
{"f_10686ChickenBridge.scm",(void*)f_10686},
{"f_10716ChickenBridge.scm",(void*)f_10716},
{"f_10735ChickenBridge.scm",(void*)f_10735},
{"f_10720ChickenBridge.scm",(void*)f_10720},
{"f_10699ChickenBridge.scm",(void*)f_10699},
{"f_10574ChickenBridge.scm",(void*)f_10574},
{"f_10669ChickenBridge.scm",(void*)f_10669},
{"f_10589ChickenBridge.scm",(void*)f_10589},
{"f_10635ChickenBridge.scm",(void*)f_10635},
{"f_10620ChickenBridge.scm",(void*)f_10620},
{"f_10602ChickenBridge.scm",(void*)f_10602},
{"f_10521ChickenBridge.scm",(void*)f_10521},
{"f_10559ChickenBridge.scm",(void*)f_10559},
{"f_10566ChickenBridge.scm",(void*)f_10566},
{"f_10544ChickenBridge.scm",(void*)f_10544},
{"f_10519ChickenBridge.scm",(void*)f_10519},
{"f_10491ChickenBridge.scm",(void*)f_10491},
{"f_10493ChickenBridge.scm",(void*)f_10493},
{"f_10471ChickenBridge.scm",(void*)f_10471},
{"f_10419ChickenBridge.scm",(void*)f_10419},
{"f_10456ChickenBridge.scm",(void*)f_10456},
{"f_10423ChickenBridge.scm",(void*)f_10423},
{"f_10439ChickenBridge.scm",(void*)f_10439},
{"f_10441ChickenBridge.scm",(void*)f_10441},
{"f_10205ChickenBridge.scm",(void*)f_10205},
{"f_10218ChickenBridge.scm",(void*)f_10218},
{"f_10300ChickenBridge.scm",(void*)f_10300},
{"f_10303ChickenBridge.scm",(void*)f_10303},
{"f_10311ChickenBridge.scm",(void*)f_10311},
{"f_10323ChickenBridge.scm",(void*)f_10323},
{"f_10344ChickenBridge.scm",(void*)f_10344},
{"f_10352ChickenBridge.scm",(void*)f_10352},
{"f_10239ChickenBridge.scm",(void*)f_10239},
{"f_10244ChickenBridge.scm",(void*)f_10244},
{"f_10276ChickenBridge.scm",(void*)f_10276},
{"f_10184ChickenBridge.scm",(void*)f_10184},
{"f_10165ChickenBridge.scm",(void*)f_10165},
{"f_10124ChickenBridge.scm",(void*)f_10124},
{"f_10105ChickenBridge.scm",(void*)f_10105},
{"f_9877ChickenBridge.scm",(void*)f_9877},
{"f_10082ChickenBridge.scm",(void*)f_10082},
{"f_10097ChickenBridge.scm",(void*)f_10097},
{"f_10089ChickenBridge.scm",(void*)f_10089},
{"f_10053ChickenBridge.scm",(void*)f_10053},
{"f_10057ChickenBridge.scm",(void*)f_10057},
{"f_10018ChickenBridge.scm",(void*)f_10018},
{"f_10022ChickenBridge.scm",(void*)f_10022},
{"f_9881ChickenBridge.scm",(void*)f_9881},
{"f_9982ChickenBridge.scm",(void*)f_9982},
{"f_9997ChickenBridge.scm",(void*)f_9997},
{"f_9989ChickenBridge.scm",(void*)f_9989},
{"f_9953ChickenBridge.scm",(void*)f_9953},
{"f_9957ChickenBridge.scm",(void*)f_9957},
{"f_9918ChickenBridge.scm",(void*)f_9918},
{"f_9922ChickenBridge.scm",(void*)f_9922},
{"f_9884ChickenBridge.scm",(void*)f_9884},
{"f_9887ChickenBridge.scm",(void*)f_9887},
{"f_9890ChickenBridge.scm",(void*)f_9890},
{"f_9835ChickenBridge.scm",(void*)f_9835},
{"f_9864ChickenBridge.scm",(void*)f_9864},
{"f_9849ChickenBridge.scm",(void*)f_9849},
{"f_9780ChickenBridge.scm",(void*)f_9780},
{"f_9791ChickenBridge.scm",(void*)f_9791},
{"f_9793ChickenBridge.scm",(void*)f_9793},
{"f_9821ChickenBridge.scm",(void*)f_9821},
{"f_9681ChickenBridge.scm",(void*)f_9681},
{"f_9685ChickenBridge.scm",(void*)f_9685},
{"f_9688ChickenBridge.scm",(void*)f_9688},
{"f_9753ChickenBridge.scm",(void*)f_9753},
{"f_9690ChickenBridge.scm",(void*)f_9690},
{"f_9706ChickenBridge.scm",(void*)f_9706},
{"f_9453ChickenBridge.scm",(void*)f_9453},
{"f_9658ChickenBridge.scm",(void*)f_9658},
{"f_9673ChickenBridge.scm",(void*)f_9673},
{"f_9665ChickenBridge.scm",(void*)f_9665},
{"f_9629ChickenBridge.scm",(void*)f_9629},
{"f_9633ChickenBridge.scm",(void*)f_9633},
{"f_9594ChickenBridge.scm",(void*)f_9594},
{"f_9598ChickenBridge.scm",(void*)f_9598},
{"f_9457ChickenBridge.scm",(void*)f_9457},
{"f_9558ChickenBridge.scm",(void*)f_9558},
{"f_9573ChickenBridge.scm",(void*)f_9573},
{"f_9565ChickenBridge.scm",(void*)f_9565},
{"f_9529ChickenBridge.scm",(void*)f_9529},
{"f_9533ChickenBridge.scm",(void*)f_9533},
{"f_9494ChickenBridge.scm",(void*)f_9494},
{"f_9498ChickenBridge.scm",(void*)f_9498},
{"f_9460ChickenBridge.scm",(void*)f_9460},
{"f_9463ChickenBridge.scm",(void*)f_9463},
{"f_9473ChickenBridge.scm",(void*)f_9473},
{"f_9410ChickenBridge.scm",(void*)f_9410},
{"f_9443ChickenBridge.scm",(void*)f_9443},
{"f_9428ChickenBridge.scm",(void*)f_9428},
{"f_9389ChickenBridge.scm",(void*)f_9389},
{"f_9354ChickenBridge.scm",(void*)f_9354},
{"f_9358ChickenBridge.scm",(void*)f_9358},
{"f_9246ChickenBridge.scm",(void*)f_9246},
{"f_9333ChickenBridge.scm",(void*)f_9333},
{"f_9253ChickenBridge.scm",(void*)f_9253},
{"f_9262ChickenBridge.scm",(void*)f_9262},
{"f_9309ChickenBridge.scm",(void*)f_9309},
{"f_9275ChickenBridge.scm",(void*)f_9275},
{"f_9301ChickenBridge.scm",(void*)f_9301},
{"f_9113ChickenBridge.scm",(void*)f_9113},
{"f_9117ChickenBridge.scm",(void*)f_9117},
{"f_9120ChickenBridge.scm",(void*)f_9120},
{"f_9224ChickenBridge.scm",(void*)f_9224},
{"f_9122ChickenBridge.scm",(void*)f_9122},
{"f_9129ChickenBridge.scm",(void*)f_9129},
{"f_9171ChickenBridge.scm",(void*)f_9171},
{"f_9178ChickenBridge.scm",(void*)f_9178},
{"f_9152ChickenBridge.scm",(void*)f_9152},
{"f_9046ChickenBridge.scm",(void*)f_9046},
{"f_9050ChickenBridge.scm",(void*)f_9050},
{"f_9096ChickenBridge.scm",(void*)f_9096},
{"f_9053ChickenBridge.scm",(void*)f_9053},
{"f_9089ChickenBridge.scm",(void*)f_9089},
{"f_9056ChickenBridge.scm",(void*)f_9056},
{"f_9069ChickenBridge.scm",(void*)f_9069},
{"f_9000ChickenBridge.scm",(void*)f_9000},
{"f_9004ChickenBridge.scm",(void*)f_9004},
{"f_8914ChickenBridge.scm",(void*)f_8914},
{"f_8918ChickenBridge.scm",(void*)f_8918},
{"f_8921ChickenBridge.scm",(void*)f_8921},
{"f_8930ChickenBridge.scm",(void*)f_8930},
{"f_8952ChickenBridge.scm",(void*)f_8952},
{"f_8899ChickenBridge.scm",(void*)f_8899},
{"f_8884ChickenBridge.scm",(void*)f_8884},
{"f_8648ChickenBridge.scm",(void*)f_8648},
{"f_8861ChickenBridge.scm",(void*)f_8861},
{"f_8876ChickenBridge.scm",(void*)f_8876},
{"f_8868ChickenBridge.scm",(void*)f_8868},
{"f_8832ChickenBridge.scm",(void*)f_8832},
{"f_8836ChickenBridge.scm",(void*)f_8836},
{"f_8797ChickenBridge.scm",(void*)f_8797},
{"f_8801ChickenBridge.scm",(void*)f_8801},
{"f_8652ChickenBridge.scm",(void*)f_8652},
{"f_8761ChickenBridge.scm",(void*)f_8761},
{"f_8776ChickenBridge.scm",(void*)f_8776},
{"f_8768ChickenBridge.scm",(void*)f_8768},
{"f_8732ChickenBridge.scm",(void*)f_8732},
{"f_8736ChickenBridge.scm",(void*)f_8736},
{"f_8697ChickenBridge.scm",(void*)f_8697},
{"f_8701ChickenBridge.scm",(void*)f_8701},
{"f_8655ChickenBridge.scm",(void*)f_8655},
{"f_8658ChickenBridge.scm",(void*)f_8658},
{"f_8669ChickenBridge.scm",(void*)f_8669},
{"f_8608ChickenBridge.scm",(void*)f_8608},
{"f_8612ChickenBridge.scm",(void*)f_8612},
{"f_8642ChickenBridge.scm",(void*)f_8642},
{"f_8623ChickenBridge.scm",(void*)f_8623},
{"f_8631ChickenBridge.scm",(void*)f_8631},
{"f_8587ChickenBridge.scm",(void*)f_8587},
{"f_8599ChickenBridge.scm",(void*)f_8599},
{"f_8544ChickenBridge.scm",(void*)f_8544},
{"f_8574ChickenBridge.scm",(void*)f_8574},
{"f_8501ChickenBridge.scm",(void*)f_8501},
{"f_8531ChickenBridge.scm",(void*)f_8531},
{"f_8432ChickenBridge.scm",(void*)f_8432},
{"f_8476ChickenBridge.scm",(void*)f_8476},
{"f_8363ChickenBridge.scm",(void*)f_8363},
{"f_8407ChickenBridge.scm",(void*)f_8407},
{"f_8339ChickenBridge.scm",(void*)f_8339},
{"f_8351ChickenBridge.scm",(void*)f_8351},
{"f_8324ChickenBridge.scm",(void*)f_8324},
{"f_8213ChickenBridge.scm",(void*)f_8213},
{"f_8288ChickenBridge.scm",(void*)f_8288},
{"f_8217ChickenBridge.scm",(void*)f_8217},
{"f_8257ChickenBridge.scm",(void*)f_8257},
{"f_8246ChickenBridge.scm",(void*)f_8246},
{"f_8231ChickenBridge.scm",(void*)f_8231},
{"f_8239ChickenBridge.scm",(void*)f_8239},
{"f_8179ChickenBridge.scm",(void*)f_8179},
{"f_8191ChickenBridge.scm",(void*)f_8191},
{"f_8172ChickenBridge.scm",(void*)f_8172},
{"f_8165ChickenBridge.scm",(void*)f_8165},
{"f_8146ChickenBridge.scm",(void*)f_8146},
{"f_8143ChickenBridge.scm",(void*)f_8143},
{"f_8136ChickenBridge.scm",(void*)f_8136},
{"f_8133ChickenBridge.scm",(void*)f_8133},
{"f_8126ChickenBridge.scm",(void*)f_8126},
{"f_8108ChickenBridge.scm",(void*)f_8108},
{"f_8097ChickenBridge.scm",(void*)f_8097},
{"f_8094ChickenBridge.scm",(void*)f_8094},
{"f_8091ChickenBridge.scm",(void*)f_8091},
{"f_8088ChickenBridge.scm",(void*)f_8088},
{"f_8059ChickenBridge.scm",(void*)f_8059},
{"f_8052ChickenBridge.scm",(void*)f_8052},
{"f_8049ChickenBridge.scm",(void*)f_8049},
{"f_8028ChickenBridge.scm",(void*)f_8028},
{"f_8009ChickenBridge.scm",(void*)f_8009},
{"f_7990ChickenBridge.scm",(void*)f_7990},
{"f_7983ChickenBridge.scm",(void*)f_7983},
{"f_7976ChickenBridge.scm",(void*)f_7976},
{"f_7961ChickenBridge.scm",(void*)f_7961},
{"f_7950ChickenBridge.scm",(void*)f_7950},
{"f_7943ChickenBridge.scm",(void*)f_7943},
{"f_7916ChickenBridge.scm",(void*)f_7916},
{"f_7889ChickenBridge.scm",(void*)f_7889},
{"f_7848ChickenBridge.scm",(void*)f_7848},
{"f_7854ChickenBridge.scm",(void*)f_7854},
{"f_7864ChickenBridge.scm",(void*)f_7864},
{"f_7762ChickenBridge.scm",(void*)f_7762},
{"f_7723ChickenBridge.scm",(void*)f_7723},
{"f_7729ChickenBridge.scm",(void*)f_7729},
{"f_7752ChickenBridge.scm",(void*)f_7752},
{"f_7742ChickenBridge.scm",(void*)f_7742},
{"f_7684ChickenBridge.scm",(void*)f_7684},
{"f_7690ChickenBridge.scm",(void*)f_7690},
{"f_7710ChickenBridge.scm",(void*)f_7710},
{"f_7700ChickenBridge.scm",(void*)f_7700},
{"f_7644ChickenBridge.scm",(void*)f_7644},
{"f_7650ChickenBridge.scm",(void*)f_7650},
{"f_7674ChickenBridge.scm",(void*)f_7674},
{"f_7660ChickenBridge.scm",(void*)f_7660},
{"f_7545ChickenBridge.scm",(void*)f_7545},
{"f_7549ChickenBridge.scm",(void*)f_7549},
{"f_7574ChickenBridge.scm",(void*)f_7574},
{"f_7591ChickenBridge.scm",(void*)f_7591},
{"f_7595ChickenBridge.scm",(void*)f_7595},
{"f_7551ChickenBridge.scm",(void*)f_7551},
{"f_7568ChickenBridge.scm",(void*)f_7568},
{"f_7484ChickenBridge.scm",(void*)f_7484},
{"f_7497ChickenBridge.scm",(void*)f_7497},
{"f_7474ChickenBridge.scm",(void*)f_7474},
{"f_7434ChickenBridge.scm",(void*)f_7434},
{"f_7464ChickenBridge.scm",(void*)f_7464},
{"f_7344ChickenBridge.scm",(void*)f_7344},
{"f_7296ChickenBridge.scm",(void*)f_7296},
{"f_7330ChickenBridge.scm",(void*)f_7330},
{"f_7273ChickenBridge.scm",(void*)f_7273},
{"f_7267ChickenBridge.scm",(void*)f_7267},
{"f_7252ChickenBridge.scm",(void*)f_7252},
{"f_7238ChickenBridge.scm",(void*)f_7238},
{"f_7228ChickenBridge.scm",(void*)f_7228},
{"f_7218ChickenBridge.scm",(void*)f_7218},
{"f_7208ChickenBridge.scm",(void*)f_7208},
{"f_7198ChickenBridge.scm",(void*)f_7198},
{"f_7165ChickenBridge.scm",(void*)f_7165},
{"f_7174ChickenBridge.scm",(void*)f_7174},
{"f_7179ChickenBridge.scm",(void*)f_7179},
{"f_7154ChickenBridge.scm",(void*)f_7154},
{"f_7159ChickenBridge.scm",(void*)f_7159},
{"f_6861ChickenBridge.scm",(void*)f_6861},
{"f_6871ChickenBridge.scm",(void*)f_6871},
{"f_7122ChickenBridge.scm",(void*)f_7122},
{"f_6874ChickenBridge.scm",(void*)f_6874},
{"f_6877ChickenBridge.scm",(void*)f_6877},
{"f_6892ChickenBridge.scm",(void*)f_6892},
{"f_6902ChickenBridge.scm",(void*)f_6902},
{"f_6904ChickenBridge.scm",(void*)f_6904},
{"f_6963ChickenBridge.scm",(void*)f_6963},
{"f_6973ChickenBridge.scm",(void*)f_6973},
{"f_7090ChickenBridge.scm",(void*)f_7090},
{"f_7078ChickenBridge.scm",(void*)f_7078},
{"f_7076ChickenBridge.scm",(void*)f_7076},
{"f_7063ChickenBridge.scm",(void*)f_7063},
{"f_7017ChickenBridge.scm",(void*)f_7017},
{"f_7044ChickenBridge.scm",(void*)f_7044},
{"f_7023ChickenBridge.scm",(void*)f_7023},
{"f_6957ChickenBridge.scm",(void*)f_6957},
{"f_6916ChickenBridge.scm",(void*)f_6916},
{"f_6929ChickenBridge.scm",(void*)f_6929},
{"f_7139ChickenBridge.scm",(void*)f_7139},
{"f_7130ChickenBridge.scm",(void*)f_7130},
{"f_7138ChickenBridge.scm",(void*)f_7138},
{"f_7141ChickenBridge.scm",(void*)f_7141},
{"f_7149ChickenBridge.scm",(void*)f_7149},
{"f_6563ChickenBridge.scm",(void*)f_6563},
{"f_6816ChickenBridge.scm",(void*)f_6816},
{"f_6849ChickenBridge.scm",(void*)f_6849},
{"f_6845ChickenBridge.scm",(void*)f_6845},
{"f_6834ChickenBridge.scm",(void*)f_6834},
{"f_6830ChickenBridge.scm",(void*)f_6830},
{"f_6724ChickenBridge.scm",(void*)f_6724},
{"f_6727ChickenBridge.scm",(void*)f_6727},
{"f_6730ChickenBridge.scm",(void*)f_6730},
{"f_6810ChickenBridge.scm",(void*)f_6810},
{"f_6635ChickenBridge.scm",(void*)f_6635},
{"f_6576ChickenBridge.scm",(void*)f_6576},
{"f_6733ChickenBridge.scm",(void*)f_6733},
{"f_6740ChickenBridge.scm",(void*)f_6740},
{"f_6800ChickenBridge.scm",(void*)f_6800},
{"f_6786ChickenBridge.scm",(void*)f_6786},
{"f_6752ChickenBridge.scm",(void*)f_6752},
{"f_6778ChickenBridge.scm",(void*)f_6778},
{"f_6713ChickenBridge.scm",(void*)f_6713},
{"f_6760ChickenBridge.scm",(void*)f_6760},
{"f_6756ChickenBridge.scm",(void*)f_6756},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
