/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2008-04-25 13:12
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-04-21 on dhcp218a.music.uiuc.edu (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: grace
*/

#include "chicken.h"


/*************************************************************************
 * Copyright (C) 2007 Todd Ingalls, Rick Taube.                          *
 * This program is free software; you can redistribute it and/or modify  *
 * it under the terms of the Lisp Lesser Gnu Public License. The text of *
 * this agreement is available at http://www.cliki.net/LLGPL             *
 *************************************************************************/

#include "Grace.h"
#include "Scheme.h"
#include "Syntax.h"
#include "Midi.h"
#include <juce.h>

//
// Console Window code
//

void print_message(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, false);
}

void print_error(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update

printf("in print_error\n");
printf("  str='%s'\n",st);

  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, false);
}

//
// Scheduler code
//

void scheduler_sprout( C_word proc, double time, int id)
{
  ((GraceApp *)
   GraceApp::getInstance())->schemeProcess->addNode(0, time, proc, id);
}

bool scheduler_is_paused () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isPaused();
}

void scheduler_pause() {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(true);
}

void scheduler_cont () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(false);
}

void scheduler_stop (int id) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(id);
}

void scheduler_hush () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(-1);
  ((GraceApp *)GraceApp::getInstance())->midiOutPort->clear();
}

bool scheduler_is_time_milliseconds () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isTimeMilliseconds();
}
 
void scheduler_set_time_milliseconds (bool b) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setTimeMilliseconds(b);
}

//void print_current_directory() {
//  String s=File::getCurrentWorkingDirectory().getFullPathName().quoted() + T("\n");
//  ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
//}

char *get_current_directory() {
  return (char *)File::getCurrentWorkingDirectory().getFullPathName().toUTF8();
}

void set_current_directory (char *path) {
  File dir=File(String(path));
  if ( dir.isDirectory() ) {
    dir.setAsCurrentWorkingDirectory();
    //print_working_directory();
  }
  else {
    String s=T(">>> Error: ") + dir.getFullPathName().quoted() + T(" is not a directory.\n");
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  }			 
}

void load_sal_file(char *path) {
  SalSyntax::getInstance()->loadFile( String(path) );  
}



#include "Toolbox.h"



void mp_note(double time, double dur, float key, float vel, float chan) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendNote(time, dur, key, vel, chan); 
}

void mp_data(int type, double time, float chan, float data1, float data2) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendData(type, time, chan, data1, data2) ;
}

void mp_message(MidiMessage *m) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendMessage(m) ;
}

/// MidiMessage accessors

MidiMessage *mm_make(int type, double time, int chan, 
		     int data1, int data2 ) {
  MidiMessage *m;
  chan++; // juce channels are 1 based
  switch (type) {
  case MidiNode::MM_OFF :
    m=new MidiMessage(MidiMessage::noteOff(chan, data1));
    break;
  case MidiNode::MM_ON :
    m=new MidiMessage(MidiMessage::noteOn(chan, data1, (juce::uint8)data2));
    break;
  case MidiNode::MM_TOUCH :
    m=new MidiMessage(MidiMessage::aftertouchChange(chan, data1, data2));
    break;
  case MidiNode::MM_CTRL :
    m=new MidiMessage(MidiMessage::controllerEvent(chan, data1, data2));
    break;
  case MidiNode::MM_PROG :
    m=new MidiMessage(MidiMessage::programChange(chan, data1));
    break;
  case MidiNode::MM_PRESS :
    m=new MidiMessage(MidiMessage::channelPressureChange(chan, data1));
    break;
  case MidiNode::MM_BEND :
    m=new MidiMessage(MidiMessage::pitchWheel(chan, data1));
    break;
  default:
    return NULL;
  }
  return m;
}

MidiMessage *mm_copy(MidiMessage *m) {
  return new MidiMessage(*m);
}

void mm_free(MidiMessage *m) {
  delete m;
}

bool mm_is_type(MidiMessage *m, int typ) {
  switch (typ) {
  case MidiNode::MM_OFF :
    return m->isNoteOff();
    break;
  case MidiNode::MM_ON :
    return m->isNoteOn();
    break;
  case MidiNode::MM_TOUCH :
    return m->isAftertouch();
    break;
  case MidiNode::MM_CTRL :
    return m->isController();
    break;
  case MidiNode::MM_PROG :
    return m->isProgramChange();
    break;
  case MidiNode::MM_PRESS :
    return m->isChannelPressure();
    break;
  case MidiNode::MM_BEND :
    return m->isPitchWheel();
    break;
  default:
    return false;
  }
}

double mm_time(MidiMessage *m) {
  return m->getTimeStamp();
}

void mm_set_time(MidiMessage *m, double t) {
  m->setTimeStamp(t);
  return ;		
}

int mm_chan(MidiMessage *m) {
  // juce channels are 1 based
  return m->getChannel()-1;
}

void mm_set_chan(MidiMessage *m, int chan) {
  // juce channels are 1 based
  m->setChannel(chan+1);
}

int mm_data(MidiMessage *m, int n ) {
  juce::uint8 *data=m->getRawData();
  return (int)data[n];
}

void mm_set_data(MidiMessage *m, int n, int v ) {
  juce::uint8 *data=m->getRawData();
  data[n]=(v & 0x7f);
}

//INput Hook Code
void set_input_hook( C_word proc )
{
 // FIX
 ((GraceApp *)GraceApp::getInstance())->schemeProcess->setInputHook( proc);
}



#include "Csound.h"

void cs_send_score_event (int type, int len, C_word lyst) {
  MYFLT buf[len];
  int i=0;
  for ( ; C_SCHEME_END_OF_LIST != lyst; lyst = C_u_i_cdr( lyst ) ) {
    if (i==len) break;
    C_word w = C_u_i_car( lyst );
    if ( C_immediatep(w) ) {
      if ( C_truep(C_fixnump(w)) ) {
	// printf("FIX: buf[%d]=%d\n", i, C_unfix(w) );
	buf[i++] = (MYFLT)C_unfix(w);
      }
      else
        buf[i++] = 0.0;
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_flonump( w ) )) {
      // printf("FLO: buf[%d]=%f\n", i, (float)C_flonum_magnitude( w ));
      buf[i++] = (MYFLT)C_flonum_magnitude( w );
    }
    else {
      buf[i++] = 0.0;
    }
  }
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->sendScoreEvent( ((type==2) ? 'f' : 'i'), len, buf);  
}

void cs_clear_score () {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->clearScore();
}



static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[950];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,11),40,97,54,53,55,57,32,105,51,50,41,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,11),40,97,54,54,48,49,32,105,51,49,41,0,0,0};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,11),40,97,54,54,49,49,32,105,51,48,41,0,0,0};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,11),40,97,54,54,49,55,32,118,50,54,41,0,0,0};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,111,112,116,107,101,121,115,32,117,115,101,114,48,32,115,112,101,99,49,32,98,111,100,121,50,41,0,0};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,23),40,102,95,54,57,52,51,32,115,116,114,53,48,32,46,32,97,114,103,115,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,12),40,102,95,54,57,51,50,32,107,53,52,41,0,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,12),40,102,95,54,57,52,49,32,107,53,53,41,0,0,0,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,13),40,100,111,54,57,32,116,97,105,108,55,49,41,0,0,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,11),40,97,54,56,55,57,32,120,55,55,41,0,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,31),40,100,111,54,51,32,97,114,103,115,54,53,32,107,101,121,54,54,32,97,114,103,54,55,32,112,111,115,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,7),40,97,54,57,50,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,115,101,110,100,32,109,101,115,103,52,52,32,100,97,116,97,52,53,32,101,114,114,102,52,54,41,0,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,8),40,102,95,54,57,54,49,41};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,14),40,102,95,54,57,55,54,32,97,57,52,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,46,32,100,105,114,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,12),40,102,105,102,116,104,32,108,49,48,48,41,0,0,0,0};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,12),40,115,105,120,116,104,32,108,49,48,49,41,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,14),40,115,101,118,101,110,116,104,32,108,49,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,13),40,101,105,103,104,116,104,32,108,49,48,51,41,0,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,12),40,110,105,110,116,104,32,108,49,48,52,41,0,0,0,0};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,12),40,116,101,110,116,104,32,108,49,48,53,41,0,0,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,11),40,114,101,115,116,32,108,49,48,54,41,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,11),40,108,97,115,116,32,108,49,48,55,41,0,0,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,14),40,98,117,116,108,97,115,116,32,108,49,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,11),40,116,97,105,108,32,108,49,48,57,41,0,0,0};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,17),40,108,105,115,116,42,32,46,32,97,114,103,115,49,49,57,41,0};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,32),40,108,105,115,116,45,115,101,116,33,32,108,105,115,49,50,48,32,112,111,115,49,50,49,32,118,97,108,49,50,50,41};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,22),40,100,111,49,50,54,32,105,49,50,56,32,106,49,50,57,32,116,49,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,15),40,114,101,118,101,114,115,101,33,32,108,49,50,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,14),40,108,49,32,97,49,52,48,32,98,49,52,49,41,0,0,0,0,0,0};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,14),40,108,50,32,97,49,52,50,32,98,49,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,25),40,109,97,107,101,45,108,105,115,116,32,110,49,51,54,32,46,32,111,98,106,49,51,55,41,0};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,25),40,100,111,49,52,57,32,116,97,105,108,49,53,49,32,105,49,53,50,32,102,49,53,51,41,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,22),40,108,105,115,116,45,105,110,100,101,120,32,112,49,52,55,32,108,49,52,56,41,0,0,0,0,0,0};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,25),40,100,111,49,54,48,32,116,97,105,108,49,54,50,32,120,49,54,51,32,102,49,54,52,41,0};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,21),40,108,105,115,116,45,102,105,110,100,32,112,49,53,56,32,108,49,53,57,41,0,0,0,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,23),40,100,111,49,55,49,32,116,97,105,108,49,55,51,32,102,108,97,103,49,55,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,18),40,101,118,101,114,121,63,32,102,49,54,57,32,108,49,55,48,41,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,35),40,108,105,115,116,45,112,114,111,112,32,108,105,115,49,55,57,32,112,114,111,112,49,56,48,32,46,32,100,101,102,49,56,49,41,0,0,0};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,12),40,100,111,49,56,55,32,102,49,56,57,41,0,0,0,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,24),40,98,105,116,119,105,115,101,45,116,101,115,116,32,97,49,56,53,32,98,49,56,54,41};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,60),40,116,98,58,114,101,115,99,97,108,101,32,97,50,50,53,50,50,56,32,97,50,50,52,50,50,57,32,97,50,50,51,50,51,48,32,97,50,50,50,50,51,49,32,97,50,50,49,50,51,50,32,97,50,50,48,50,51,51,41,0,0,0,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,61),40,116,98,58,100,105,115,99,114,101,116,101,32,97,50,52,48,50,52,51,32,97,50,51,57,50,52,52,32,97,50,51,56,50,52,53,32,97,50,51,55,50,52,54,32,97,50,51,54,50,52,55,32,97,50,51,53,50,52,56,41,0,0,0,0,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,16),40,116,98,58,105,110,116,32,97,50,52,57,50,53,50,41};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,29),40,116,98,58,113,117,97,110,116,105,122,101,32,97,50,53,52,50,53,55,32,97,50,53,51,50,53,56,41,0,0,0,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,44),40,116,98,58,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,97,50,54,50,50,54,53,32,97,50,54,49,50,54,54,32,97,50,54,48,50,54,55,41,0,0,0,0};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,26),40,116,98,58,99,101,110,116,115,45,62,115,99,97,108,101,114,32,97,50,54,57,50,55,50,41,0,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,26),40,116,98,58,115,99,97,108,101,114,45,62,99,101,110,116,115,32,97,50,55,52,50,55,55,41,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,44),40,116,98,58,101,120,112,108,115,101,103,32,97,50,56,49,50,56,52,32,97,50,56,48,50,56,53,32,97,50,55,57,50,56,54,32,97,50,55,56,50,56,55,41,0,0,0,0};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,43),40,116,98,58,103,101,111,115,101,103,32,97,50,57,50,50,57,53,32,97,50,57,49,50,57,54,32,97,50,57,48,50,57,55,32,97,50,56,57,50,57,56,41,0,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,26),40,116,98,58,107,101,121,110,117,109,45,62,104,101,114,116,122,32,97,51,48,48,51,48,51,41,0,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,45,115,101,116,33,32,97,51,49,52,51,49,55,41,0,0,0,0,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,105,32,97,51,49,56,51,50,49,41,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,102,32,97,51,50,50,51,50,53,41,0};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,11),40,116,98,58,114,97,110,108,111,119,41,0,0,0};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,104,105,103,104,41,0,0,0,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,109,105,100,100,108,101,41,0,0,0,0,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,29),40,116,98,58,114,97,110,103,97,117,115,115,32,97,51,53,48,51,53,51,32,97,51,52,57,51,53,52,41,0,0,0,0,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,19),40,116,98,58,114,97,110,101,120,112,32,97,51,53,54,51,53,57,41,0,0,0};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,103,97,109,109,97,32,97,51,54,56,51,55,49,41,0,0,0,0,0};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,99,97,117,99,104,121,41,0,0,0,0,0,0};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,23),40,116,98,58,114,97,110,112,111,105,115,115,111,110,32,97,51,55,54,51,55,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,112,105,110,107,41,0,0,0,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,13),40,116,98,58,114,97,110,98,114,111,119,110,41,0,0,0,0,0};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,12),40,97,55,57,55,56,32,122,52,48,49,41,0,0,0,0};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,45),40,114,101,115,99,97,108,101,32,120,51,57,53,32,120,49,51,57,54,32,120,50,51,57,55,32,121,49,51,57,56,32,121,50,51,57,57,32,46,32,98,52,48,48,41,0,0,0,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,12),40,97,56,48,49,56,32,122,52,49,51,41,0,0,0,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,12),40,97,56,48,52,52,32,122,52,49,52,41,0,0,0,0};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,43),40,100,105,115,99,114,101,116,101,32,120,52,48,50,32,120,49,52,48,51,32,120,50,52,48,52,32,105,49,52,48,53,32,46,32,97,114,103,115,52,48,54,41,0,0,0};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,10),40,105,110,116,32,102,52,49,54,41,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,16),40,112,108,117,115,32,46,32,97,114,103,115,52,49,55,41};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,24),40,109,105,110,117,115,32,97,114,103,52,49,56,32,46,32,97,114,103,115,52,49,57,41};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,12),40,97,56,50,48,54,32,110,52,50,50,41,0,0,0,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,26),40,113,117,97,110,116,105,122,101,32,110,117,109,52,50,48,32,115,116,101,112,115,52,50,49,41,0,0};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,12),40,97,56,50,51,48,32,118,52,50,54,41,0,0,0,0};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,29),40,100,101,99,105,109,97,108,115,32,118,97,108,117,101,52,50,51,32,112,108,97,99,101,115,52,50,52,41,0,0,0,0,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,12),40,97,56,50,55,54,32,120,52,54,55,41,0,0,0,0};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,36),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,52,50,55,32,46,32,97,114,103,115,52,50,56,41,0,0,0,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,23),40,99,101,110,116,115,45,62,114,97,116,105,111,32,99,101,110,116,115,52,55,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,21),40,114,97,116,105,111,45,62,99,101,110,116,115,32,110,117,109,52,55,50,41,0,0,0,0,0};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,15),40,100,111,52,56,49,32,116,97,105,108,52,56,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,32),40,105,110,116,101,114,112,49,32,120,52,55,51,32,99,111,111,114,100,115,52,55,52,32,98,97,115,101,52,55,53,41};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,23),40,105,110,116,101,114,112,32,120,52,57,49,32,46,32,97,114,103,115,52,57,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,40),40,116,101,110,100,101,110,99,121,32,120,52,57,52,32,108,111,119,52,57,53,32,104,105,103,104,52,57,54,32,46,32,97,114,103,115,52,57,55,41};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,33),40,102,105,116,49,32,110,117,109,53,49,48,32,108,98,53,49,49,32,117,98,53,49,50,32,109,111,100,101,53,49,51,41,0};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,12),40,97,56,56,51,49,32,110,53,49,56,41,0,0,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,34),40,102,105,116,32,110,117,109,53,48,51,32,108,98,53,48,52,32,117,98,53,48,53,32,46,32,109,111,100,101,53,48,54,41,0,0};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,27),40,100,111,53,51,48,32,105,53,51,50,32,107,53,51,51,32,108,53,51,52,32,116,53,51,53,41,0,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,34),40,115,99,97,108,101,32,108,101,110,53,50,50,32,107,101,121,110,117,109,53,50,51,32,46,32,97,114,103,115,53,50,52,41,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,14),40,114,97,110,32,46,32,110,117,109,53,52,50,41,0,0,0,0,0,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,19),40,98,101,116,119,101,101,110,32,97,53,52,52,32,98,53,52,53,41,0,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,16),40,112,105,99,107,32,46,32,97,114,103,115,53,52,54,41};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,21),40,111,100,100,115,32,110,53,52,55,32,46,32,97,114,103,115,53,52,56,41,0,0,0,0,0};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,30),40,118,97,114,121,49,32,118,97,108,53,57,52,32,118,97,114,105,53,57,53,32,109,111,100,101,53,57,54,41,0,0,0,0,0,0};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,12),40,97,57,51,54,48,32,118,54,48,49,41,0,0,0,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,31),40,118,97,114,121,32,118,97,108,53,57,48,32,118,97,114,105,53,57,49,32,46,32,109,111,100,101,53,57,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,22),40,100,111,54,48,55,32,105,54,48,57,32,106,54,49,48,32,118,54,49,49,41,0,0,0,0,0,0};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,15),40,115,104,117,102,102,108,101,33,32,108,54,48,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,19),40,115,104,117,102,102,108,101,32,46,32,97,114,103,115,54,49,54,41,0,0,0};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,19),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,54,49,55,41,0,0,0};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,18),40,114,97,110,101,120,112,32,46,32,97,114,103,115,54,54,48,41,0,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,54,54,49,41,0,0,0,0};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,22),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,54,54,50,41,0,0,0,0,0,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,54,54,51,41,0,0,0,0};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,12),40,100,111,54,55,53,32,105,54,55,55,41,0,0,0,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,15),40,100,111,54,57,49,32,116,97,105,108,54,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,17),40,100,111,54,56,55,32,105,54,56,57,32,110,54,57,48,41,0};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,30),40,115,101,103,115,32,110,117,109,54,54,52,32,115,117,109,54,54,53,32,46,32,97,114,103,115,54,54,54,41,0,0,0,0,0,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,8),40,97,49,48,48,52,56,41};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,8),40,97,49,48,48,54,51,41};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,41),40,115,116,114,105,110,103,45,62,110,111,116,101,45,101,110,116,114,121,32,115,116,114,55,52,52,32,111,99,116,55,52,53,32,101,114,114,55,52,54,41,0};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,8),40,97,49,48,48,55,56,41};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,8),40,97,49,48,49,48,48,41};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,34),40,110,111,116,101,45,97,117,120,32,102,114,101,113,55,53,50,32,100,111,99,116,55,53,51,32,101,114,114,63,55,53,52,41,0,0};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,39),40,100,111,55,53,55,32,116,97,105,108,55,53,57,32,100,101,102,111,55,54,48,32,116,104,105,115,55,54,49,32,114,101,115,108,55,54,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,14),40,110,111,116,101,32,102,114,101,113,55,53,53,41,0,0,0,0,0,0};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,39),40,100,111,55,55,49,32,116,97,105,108,55,55,51,32,100,101,102,111,55,55,52,32,116,104,105,115,55,55,53,32,114,101,115,108,55,55,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,13),40,107,101,121,32,102,114,101,113,55,54,57,41,0,0,0,0,0};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,39),40,100,111,55,56,55,32,116,97,105,108,55,56,57,32,100,101,102,111,55,57,48,32,116,104,105,115,55,57,49,32,114,101,115,108,55,57,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,12),40,104,122,32,102,114,101,113,55,56,53,41,0,0,0,0};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,9),40,112,99,32,120,56,48,49,41,0};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,23),40,100,111,56,48,55,32,116,97,105,108,56,48,57,32,108,97,115,116,56,49,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,17),40,105,110,118,107,101,121,115,32,107,101,121,115,56,48,52,41,0};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,13),40,97,49,48,54,54,49,32,122,56,49,52,41,0,0,0,0,0};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,13),40,105,110,118,101,114,116,32,120,56,48,50,41,0,0,0,0,0};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,23),40,100,111,56,50,50,32,116,97,105,108,56,50,52,32,108,97,115,116,56,50,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,28),40,116,114,97,110,115,112,107,101,121,115,32,107,101,121,115,56,49,57,32,111,114,105,103,56,50,48,41,0,0,0,0};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,13),40,97,49,48,56,49,52,32,122,56,50,57,41,0,0,0,0,0};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,21),40,116,114,97,110,115,112,111,115,101,32,120,56,49,53,32,121,56,49,54,41,0,0,0,0,0};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,18),40,97,49,48,56,55,55,32,97,56,51,50,32,98,56,51,51,41,0,0};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,18),40,97,49,48,57,51,53,32,97,56,51,52,32,98,56,51,53,41,0,0};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,32),40,115,99,97,108,101,45,111,114,100,101,114,32,115,99,97,108,101,56,51,48,32,46,32,109,111,100,101,56,51,49,41};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,48),40,109,97,107,101,45,115,112,101,99,116,114,117,109,32,116,105,109,101,57,49,53,32,115,105,122,101,57,49,54,32,102,114,101,113,115,57,49,55,32,97,109,112,115,57,49,56,41};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,16),40,115,112,101,99,116,114,117,109,63,32,120,57,49,57,41};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,20),40,115,112,101,99,116,114,117,109,45,116,105,109,101,32,120,57,50,51,41,0,0,0,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,32),40,115,112,101,99,116,114,117,109,45,115,105,122,101,45,115,101,116,33,32,120,57,50,54,32,118,97,108,57,50,55,41};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,20),40,115,112,101,99,116,114,117,109,45,115,105,122,101,32,120,57,50,57,41,0,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,33),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,45,115,101,116,33,32,120,57,51,50,32,118,97,108,57,51,51,41,0};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,21),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,32,120,57,51,53,41,0,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,32),40,115,112,101,99,116,114,117,109,45,97,109,112,115,45,115,101,116,33,32,120,57,51,56,32,118,97,108,57,51,57,41};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,20),40,115,112,101,99,116,114,117,109,45,97,109,112,115,32,120,57,52,49,41,0,0,0,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,27),40,115,112,101,99,116,114,117,109,45,99,111,112,121,32,115,112,101,99,116,114,117,109,57,53,49,41,0,0,0};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,12),40,100,111,57,53,56,32,105,57,54,48,41,0,0,0,0};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,28),40,115,112,101,99,116,114,117,109,45,112,97,105,114,115,32,115,112,101,99,116,114,117,109,57,53,50,41,0,0,0,0};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,105,110,102,114,101,113,32,115,112,101,99,116,114,117,109,57,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,97,120,102,114,101,113,32,115,112,101,99,116,114,117,109,57,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,13),40,97,49,49,50,51,49,32,97,57,54,57,41,0,0,0,0,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,29),40,115,112,101,99,116,114,117,109,45,109,105,110,97,109,112,32,115,112,101,99,116,114,117,109,57,54,54,41,0,0,0,0,0};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,13),40,97,49,49,50,54,50,32,97,57,55,54,41,0,0,0,0,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,29),40,115,112,101,99,116,114,117,109,45,109,97,120,97,109,112,32,115,112,101,99,116,114,117,109,57,55,51,41,0,0,0,0,0};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,7),40,100,111,57,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,7),40,100,111,57,57,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,14),40,102,95,49,49,50,57,50,32,104,57,57,51,41,0,0,0,0,0,0};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,15),40,102,95,49,49,51,54,52,32,107,49,48,48,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,15),40,102,95,49,49,51,57,55,32,104,49,48,48,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,15),40,102,95,49,49,52,48,55,32,104,49,48,48,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,20),40,97,49,49,52,54,49,32,97,49,48,49,50,32,98,49,48,49,51,41,0,0,0,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,20),40,97,49,49,52,55,54,32,97,49,48,49,52,32,98,49,48,49,53,41,0,0,0,0};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,39),40,115,112,101,99,116,114,117,109,45,107,101,121,115,32,115,112,101,99,116,114,117,109,49,48,50,55,32,46,32,97,114,103,115,49,48,50,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,35),40,100,111,49,50,56,54,32,116,97,105,108,49,50,56,56,32,115,105,122,101,49,50,56,57,32,97,109,112,108,49,50,57,48,41,0,0,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,26),40,100,111,49,50,54,52,32,105,49,50,54,54,32,102,49,50,54,55,32,120,49,50,54,56,41,0,0};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,24),40,100,111,49,50,53,56,32,110,101,103,49,50,54,48,32,112,111,115,49,50,54,49,41};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,24),40,102,95,55,57,53,54,32,97,51,56,57,51,57,50,32,97,51,56,56,51,57,51,41};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,26),40,100,111,49,50,52,54,32,107,49,50,52,56,32,102,49,50,52,57,32,97,49,50,53,48,41,0,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,46),40,102,109,45,115,112,101,99,116,114,117,109,32,99,97,114,114,105,101,114,49,50,51,56,32,109,114,97,116,105,111,49,50,51,57,32,105,110,100,101,120,49,50,52,48,41,0,0,0,0,0,0};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,47),40,100,111,49,51,50,52,32,102,114,101,113,115,49,51,50,54,32,97,109,112,115,49,51,50,55,32,108,97,115,116,102,49,51,50,56,32,108,97,115,116,97,49,51,50,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,41),40,115,112,101,99,116,114,117,109,45,97,100,100,33,32,115,112,101,99,49,51,50,49,32,102,114,101,113,49,51,50,50,32,97,109,112,49,51,50,51,41,0};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,16),40,103,101,116,102,114,101,113,115,32,115,49,51,53,49,41};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,15),40,103,101,116,97,109,112,115,32,115,49,51,53,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,36),40,115,117,109,115,45,97,110,100,45,100,105,102,102,115,32,115,49,51,53,51,32,102,49,49,51,53,52,32,102,50,49,51,53,54,41,0,0,0,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,15),40,100,111,49,51,54,55,32,108,49,49,51,54,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,15),40,100,111,49,51,54,52,32,108,50,49,51,54,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,15),40,100,111,49,51,55,52,32,108,49,49,51,55,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,15),40,100,111,49,51,55,57,32,115,50,49,51,56,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,33),40,114,109,45,115,112,101,99,116,114,117,109,32,115,112,101,99,49,49,51,52,54,32,115,112,101,99,50,49,51,52,55,41,0};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,44),40,100,111,49,51,56,54,32,109,97,120,102,49,51,56,56,32,109,105,110,102,49,51,56,57,32,116,97,105,108,49,51,57,48,32,102,108,105,112,49,51,57,49,41,0,0,0,0};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,25),40,115,112,101,99,116,114,117,109,45,102,108,105,112,33,32,115,112,101,99,49,51,56,53,41,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,48,53,32,116,97,105,108,49,52,48,55,41,0};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,49,48,32,116,97,105,108,49,52,49,50,41,0};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,26),40,100,111,49,51,48,56,32,116,97,105,108,49,51,49,48,32,97,109,112,108,49,51,49,49,41,0,0};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,20),40,97,49,51,51,53,50,32,97,49,51,48,52,32,98,49,51,48,53,41,0,0,0,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,20),40,97,49,51,51,54,54,32,97,49,51,48,50,32,98,49,51,48,51,41,0,0,0,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,51,50,32,116,97,105,108,49,52,51,52,41,0};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,51,55,32,116,97,105,108,49,52,51,57,41,0};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,50,51,32,116,97,105,108,49,52,50,53,41,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,48),40,115,112,101,99,116,114,117,109,45,114,101,115,99,97,108,101,33,32,115,112,101,99,49,51,57,53,32,109,111,100,101,49,51,57,54,32,46,32,97,114,103,115,49,51,57,55,41};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,12),40,114,104,100,114,32,112,49,52,55,56,41,0,0,0,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,12),40,114,100,97,116,32,112,49,52,53,55,41,0,0,0,0};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,26),40,100,111,49,52,54,48,32,105,49,52,54,50,32,97,49,52,54,51,32,102,49,52,54,52,41,0,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,26),40,100,111,49,52,57,49,32,108,105,110,101,49,52,57,51,32,115,112,101,99,49,52,57,52,41,0,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,8),40,100,111,49,52,56,49,41};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,8),40,97,49,52,51,52,55,41};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,30),40,105,109,112,111,114,116,45,115,112,101,97,114,45,102,114,97,109,101,115,32,102,105,108,101,49,52,55,52,41,0,0,0,0,0,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,75),40,109,97,107,101,45,112,101,114,105,111,100,32,99,111,117,110,116,49,53,49,55,32,108,101,110,103,116,104,49,53,49,56,32,115,116,114,101,97,109,49,53,49,57,32,100,101,102,97,117,108,116,49,53,50,48,32,111,109,105,116,49,53,50,49,32,114,101,112,115,49,53,50,50,41,0,0,0};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,33),40,112,101,114,105,111,100,45,99,111,117,110,116,45,115,101,116,33,32,120,49,53,50,52,32,118,97,108,49,53,50,53,41,0};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,99,111,117,110,116,32,120,49,53,50,55,41,0,0,0,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,108,101,110,103,116,104,32,120,49,53,51,51,41,0,0,0,0,0};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,115,116,114,101,97,109,32,120,49,53,51,57,41,0,0,0,0,0};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,32),40,112,101,114,105,111,100,45,111,109,105,116,45,115,101,116,33,32,120,49,53,52,56,32,118,97,108,49,53,52,57,41};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,111,109,105,116,32,120,49,53,53,49,41,0,0,0};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,114,101,112,115,32,120,49,53,53,55,41,0,0,0};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,16),40,112,97,116,116,101,114,110,63,32,120,49,53,56,51,41};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,102,108,97,103,115,32,120,49,53,56,55,41,0,0,0,0,0};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,33),40,112,97,116,116,101,114,110,45,100,97,116,97,45,115,101,116,33,32,120,49,53,57,48,32,118,97,108,49,53,57,49,41,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,100,97,116,97,32,120,49,53,57,51,41,0,0,0,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,108,101,110,103,116,104,32,120,49,53,57,57,41,0,0,0,0,0,0};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,100,97,116,117,109,45,115,101,116,33,32,120,49,54,48,50,32,118,97,108,49,54,48,51,41,0,0};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,100,97,116,117,109,32,120,49,54,48,53,41,0,0,0,0,0};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,112,101,114,105,111,100,32,120,49,54,49,49,41,0,0,0,0,0,0};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,118,97,108,117,101,45,115,101,116,33,32,120,49,54,49,52,32,118,97,108,49,54,49,53,41,0,0};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,15),40,102,95,49,52,55,50,57,32,120,49,54,49,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,115,116,97,116,101,45,115,101,116,33,32,120,49,54,50,48,32,118,97,108,49,54,50,49,41,0,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,115,116,97,116,101,32,120,49,54,50,51,41,0,0,0,0,0};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,99,97,99,104,101,45,115,101,116,33,32,120,49,54,54,50,32,118,97,108,49,54,54,51,41,0,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,99,97,99,104,101,32,120,49,54,54,53,41,0,0,0,0,0};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,16),40,37,97,108,108,111,99,45,112,97,116,116,101,114,110,41};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,14),40,97,49,53,49,48,55,32,120,49,54,57,53,41,0,0,0,0,0,0};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,98),40,105,110,105,116,105,97,108,105,122,101,45,112,97,116,116,101,114,110,32,111,98,106,49,54,56,53,32,100,97,116,97,49,54,56,54,32,102,111,114,49,54,56,55,32,114,101,112,49,54,56,56,32,102,108,97,103,115,49,54,56,57,32,108,101,110,49,54,57,48,32,100,112,101,114,49,54,57,49,32,103,101,116,114,49,54,57,50,32,109,97,112,114,49,54,57,51,41,0,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,12),40,101,111,112,63,32,120,49,55,50,48,41,0,0,0,0};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,12),40,101,111,100,63,32,120,49,55,50,49,41,0,0,0,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,20),40,100,111,49,55,50,54,32,105,49,55,50,56,32,101,49,55,50,57,41,0,0,0,0};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,26),40,100,111,49,55,51,51,32,110,49,55,51,53,32,101,49,55,51,54,32,102,49,55,51,55,41,0,0};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,32,111,98,106,49,55,50,50,32,46,32,97,114,103,115,49,55,50,51,41,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,8),40,100,111,49,55,54,49,41};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,26),40,100,111,49,55,53,55,32,100,121,110,63,49,55,53,57,32,115,116,111,112,49,55,54,48,41,0,0};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,16),40,110,101,120,116,45,49,32,111,98,106,49,55,52,51,41};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,45,105,110,45,112,97,116,116,101,114,110,32,111,98,106,49,55,56,49,41,0};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,33),40,109,97,112,45,112,97,116,116,101,114,110,45,100,97,116,97,32,102,110,49,55,56,50,32,111,98,106,49,55,56,51,41,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,14),40,97,49,53,54,56,51,32,120,49,55,57,50,41,0,0,0,0,0,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,22),40,114,101,115,101,116,45,112,101,114,105,111,100,32,111,98,106,49,55,56,55,41,0,0,0,0,0,0};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,23),40,97,49,53,55,55,55,32,102,110,49,56,52,52,32,111,98,106,49,56,52,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,99,121,99,108,101,32,100,97,116,97,49,56,48,49,32,46,32,97,114,103,115,49,56,48,50,41};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,99,121,99,108,101,32,111,98,106,49,56,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,17),40,112,97,108,105,110,45,108,101,110,32,120,49,56,55,49,41,0};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,30),40,112,97,108,105,110,45,105,110,99,45,115,101,116,33,32,120,49,56,55,52,32,118,97,108,49,56,55,53,41,0,0,0,0,0,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,23),40,97,49,54,50,48,55,32,102,110,49,57,55,50,32,111,98,106,49,57,55,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,37),40,109,97,107,101,45,112,97,108,105,110,100,114,111,109,101,32,100,97,116,97,49,57,48,48,32,46,32,97,114,103,115,49,57,48,49,41,0,0,0,0,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,28),40,110,101,120,116,45,105,110,45,112,97,108,105,110,100,114,111,109,101,32,111,98,106,49,57,56,49,41,0,0,0,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,23),40,97,49,54,56,55,52,32,102,110,50,48,52,51,32,111,98,106,50,48,52,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,108,105,110,101,32,100,97,116,97,50,48,48,48,32,46,32,97,114,103,115,50,48,48,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,108,105,110,101,32,111,98,106,50,48,53,48,41,0,0,0,0,0,0};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,23),40,97,49,55,49,54,49,32,102,110,50,48,57,56,32,111,98,106,50,48,57,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,104,101,97,112,32,100,97,116,97,50,48,53,53,32,46,32,97,114,103,115,50,48,53,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,26),40,100,111,50,49,48,57,32,105,50,49,49,49,32,106,50,49,49,50,32,118,50,49,49,51,41,0,0};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,104,101,97,112,32,111,98,106,50,49,48,53,41,0,0,0,0,0,0};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,23),40,97,49,55,53,48,54,32,102,110,50,49,57,51,32,111,98,106,50,49,57,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,114,111,116,97,116,105,111,110,32,100,97,116,97,50,49,50,49,32,46,32,97,114,103,115,50,49,50,50,41,0,0,0};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,14),40,100,111,50,50,48,57,32,105,50,50,49,49,41,0,0,0,0,0,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,61),40,114,111,116,97,116,101,45,105,116,101,109,115,32,105,116,101,109,115,50,50,48,52,32,115,116,97,114,116,50,50,48,53,32,115,116,101,112,50,50,48,54,32,119,105,100,116,104,50,50,48,55,32,101,110,100,50,50,48,56,41,0,0,0,0,0};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,26),40,110,101,120,116,45,105,110,45,114,111,116,97,116,105,111,110,32,111,98,106,50,50,48,50,41,0,0};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,100,97,116,117,109,32,120,50,50,51,54,41,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,45,115,101,116,33,32,120,50,50,51,57,32,118,97,108,50,50,52,48,41,0,0,0,0,0,0};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,32,120,50,50,52,50,41,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,26),40,114,97,110,100,111,109,45,105,116,101,109,45,119,101,105,103,104,116,32,120,50,50,52,56,41,0,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,105,110,32,120,50,50,53,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,97,120,32,120,50,50,54,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,45,115,101,116,33,32,120,50,50,54,51,32,118,97,108,50,50,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,32,120,50,50,54,54,41,0};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,14),40,97,49,56,51,57,49,32,105,50,51,52,57,41,0,0,0,0,0,0};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,23),40,97,49,56,51,56,53,32,102,110,50,51,52,55,32,111,98,106,50,51,52,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,17),40,97,49,56,54,50,50,32,105,116,101,109,50,51,48,50,41,0};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,25),40,37,109,97,107,101,45,114,97,110,100,111,109,45,105,116,101,109,32,119,50,51,54,48,41,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,36),40,109,97,107,101,45,119,101,105,103,104,116,105,110,103,32,100,97,116,97,50,50,57,50,32,46,32,97,114,103,115,50,50,57,51,41,0,0,0,0};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,37),40,100,111,50,52,52,55,32,116,97,105,108,50,52,52,57,32,105,110,100,101,120,50,52,53,48,32,116,111,116,97,108,50,52,53,49,41,0,0,0,0,0};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,17),40,100,111,50,52,52,49,32,116,97,105,108,50,52,52,51,41,0};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,36),40,114,101,99,97,108,99,45,119,101,105,103,104,116,105,110,103,115,32,111,98,106,50,52,51,55,32,102,105,120,63,50,52,51,56,41,0,0,0,0};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,27),40,100,111,50,52,54,57,32,116,97,105,108,50,52,55,49,32,105,110,100,101,120,50,52,55,50,41,0,0,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,18),40,112,105,99,107,32,99,50,52,54,55,32,114,50,52,54,56,41,0,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,17),40,100,111,50,52,55,56,32,116,97,105,108,50,52,56,48,41,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,17),40,100,111,50,52,55,52,32,105,116,101,109,50,52,55,54,41,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,27),40,110,101,120,116,45,105,110,45,119,101,105,103,104,116,105,110,103,32,111,98,106,50,52,53,55,41,0,0,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,23),40,97,49,57,55,48,53,32,102,110,50,54,48,54,32,111,98,106,50,54,48,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,14),40,97,49,57,52,53,57,32,115,50,53,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,8),40,100,111,50,53,48,48,41};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,41),40,100,111,50,53,50,50,32,116,97,105,108,50,53,50,52,32,111,114,100,101,114,50,53,50,53,32,108,105,115,50,53,50,54,32,112,50,53,50,55,41,0};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,33),40,109,97,107,101,45,109,97,114,107,111,118,32,100,97,116,97,50,53,51,52,32,46,32,97,114,103,115,50,53,51,53,41,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,17),40,100,111,50,54,51,49,32,116,97,105,108,50,54,51,51,41,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,33),40,100,111,50,54,50,49,32,116,97,105,108,50,54,50,51,32,111,117,116,50,54,50,52,32,115,117,109,50,54,50,53,41,0};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,37),40,115,101,108,101,99,116,45,111,117,116,112,117,116,32,114,97,110,103,101,50,54,49,57,32,111,117,116,112,117,116,115,50,54,50,48,41,0,0,0,0,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,17),40,100,111,50,54,54,49,32,108,97,115,116,50,54,54,51,41,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,26),40,100,111,50,54,51,55,32,105,50,54,51,57,32,106,50,54,52,48,32,102,50,54,52,49,41,0,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,35),40,100,111,50,54,53,50,32,116,97,105,108,50,54,53,52,32,112,97,115,116,50,54,53,53,32,105,116,101,109,50,54,53,54,41,0,0,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,109,97,114,107,111,118,32,111,98,106,50,54,49,54,41};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,24),40,103,114,97,112,104,45,110,111,100,101,45,100,97,116,117,109,32,120,50,54,56,49,41};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,14),40,97,50,48,53,55,55,32,110,50,55,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,23),40,97,50,48,53,55,49,32,102,110,50,55,52,53,32,111,98,106,50,55,52,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,28),40,97,50,48,56,50,51,32,105,116,101,109,50,55,53,55,32,46,32,97,114,103,115,50,55,53,56,41,0,0,0,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,29),40,112,97,114,115,101,45,103,114,97,112,104,45,105,116,101,109,32,101,120,116,101,114,110,50,55,53,54,41,0,0,0,0,0};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,103,114,97,112,104,32,100,97,116,97,50,55,48,50,32,46,32,97,114,103,115,50,55,48,51,41};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,49,49,32,116,97,105,108,50,56,49,51,41,0};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,103,114,97,112,104,32,111,98,106,50,56,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,14),40,97,50,49,50,53,48,32,120,50,56,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,31),40,97,100,100,45,111,117,116,99,111,109,101,32,112,114,101,118,50,56,55,52,32,110,101,120,116,50,56,55,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,14),40,97,50,49,50,57,56,32,122,50,56,56,53,41,0,0,0,0,0,0};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,14),40,97,50,49,51,48,56,32,122,50,56,56,52,41,0,0,0,0,0,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,27),40,98,101,102,111,114,101,63,32,120,50,56,55,57,32,121,50,56,56,48,32,108,50,56,56,49,41,0,0,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,16),40,97,50,49,52,48,54,32,114,111,119,51,48,48,56,41};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,20),40,100,111,50,57,56,50,32,105,50,57,56,52,32,109,50,57,56,53,41,0,0,0,0};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,55,53,32,108,50,57,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,20),40,100,111,50,57,54,56,32,105,50,57,55,48,32,109,50,57,55,49,41,0,0,0,0};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,20),40,100,111,50,57,54,50,32,105,50,57,54,52,32,109,50,57,54,53,41,0,0,0,0};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,14),40,100,111,50,56,56,56,32,120,50,56,57,48,41,0,0,0,0,0,0};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,17),40,100,111,50,57,53,54,32,116,97,105,108,50,57,53,56,41,0};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,20),40,100,111,50,57,52,54,32,105,50,57,52,56,32,109,50,57,52,57,41,0,0,0,0};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,52,49,32,108,50,57,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,51,54,32,105,50,57,51,56,41,0,0,0,0,0,0};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,20),40,97,50,49,55,48,50,32,120,50,57,51,50,32,121,50,57,51,51,41,0,0,0,0};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,50,51,32,101,50,57,50,53,41,0,0,0,0,0,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,20),40,100,111,50,57,49,55,32,101,50,57,49,57,32,115,50,57,50,48,41,0,0,0,0};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,25),40,100,111,50,57,48,57,32,116,97,105,108,50,57,49,49,32,108,101,110,50,57,49,50,41,0};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,20),40,97,50,49,56,53,49,32,120,50,57,48,55,32,121,50,57,48,56,41,0,0,0,0};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,29),40,100,111,50,56,57,54,32,112,114,101,118,50,56,57,56,32,106,50,56,57,57,32,120,50,57,48,48,41,0,0,0,0,0};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,14),40,100,111,50,56,57,51,32,105,50,56,57,53,41,0,0,0,0,0,0};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,35),40,109,97,114,107,111,118,45,97,110,97,108,121,122,101,32,115,101,113,50,56,49,57,32,46,32,97,114,103,115,50,56,50,48,41,0,0,0};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,45),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,51,48,53,50,32,115,116,114,105,110,103,51,48,53,51,32,112,111,115,105,116,105,111,110,51,48,53,52,41,0,0,0,0,0};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,116,121,112,101,32,120,51,48,53,57,41,0,0};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,20),40,116,111,107,101,110,45,115,116,114,105,110,103,32,120,51,48,54,53,41,0,0,0,0};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,22),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,51,48,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,19),40,108,105,115,116,45,62,116,111,107,101,110,32,108,51,48,56,48,41,0,0,0};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,22),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,51,48,56,50,41,0,0,0,0,0,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,23),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,51,48,56,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,63),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,51,48,56,53,32,116,121,112,101,51,48,56,54,32,112,97,116,116,101,114,110,51,48,56,55,32,112,97,114,115,101,114,51,48,56,56,32,101,109,105,116,101,114,51,48,56,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,17),40,114,117,108,101,45,110,97,109,101,32,120,51,48,57,52,41,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,26),40,103,101,116,45,114,117,108,101,32,116,121,112,51,49,51,56,32,100,101,102,51,49,51,57,41,0,0};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,118,97,108,117,101,32,120,51,49,52,49,41,0,0,0,0,0};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,51,49,52,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,51,49,52,52,41,0,0,0,0};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,51,49,52,53,41,0,0,0,0,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,25),40,112,97,116,116,101,114,110,45,115,117,98,32,120,51,49,52,54,32,105,51,49,52,55,41,0};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,29),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,51,49,53,49,41,0,0,0,0,0};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,51,49,53,51,32,112,111,115,105,116,105,111,110,51,49,53,52,41,0,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,26),40,112,97,114,115,101,45,101,114,114,111,114,45,115,116,114,105,110,103,32,120,51,49,53,57,41,0,0};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,28),40,112,97,114,115,101,45,101,114,114,111,114,45,112,111,115,105,116,105,111,110,32,120,51,49,54,53,41,0,0,0,0};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,51,49,55,51,32,112,97,114,115,101,100,51,49,55,52,32,112,111,115,105,116,105,111,110,51,49,55,53,41,0,0};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,19),40,112,97,114,115,101,45,117,110,105,116,63,32,120,51,49,55,54,41,0,0,0};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,23),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,51,49,56,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,51,49,56,54,41,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,51,49,57,50,41,0,0,0};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,117,110,105,116,63,32,120,51,50,48,50,41,0,0,0};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,33),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,51,50,48,51,32,116,121,112,51,50,48,52,41,0};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,33),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,51,50,48,54,32,105,110,102,111,51,50,48,55,41,0};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,42),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,51,50,48,57,32,100,97,116,97,51,50,49,48,32,105,110,102,111,51,50,49,49,41,0,0};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,43),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,51,50,49,50,32,100,97,116,97,51,50,49,51,32,105,110,102,111,51,50,49,52,41,0,0,0};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,30),40,101,109,105,116,32,120,51,50,49,55,32,105,110,102,111,51,50,49,56,32,101,114,114,102,51,50,49,57,41,0,0,0,0,0,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,37),40,101,109,105,116,45,108,105,115,116,32,108,105,115,51,50,50,48,32,105,110,102,111,51,50,50,49,32,101,114,114,102,51,50,50,50,41,0,0,0,0,0};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,15),40,33,61,32,46,32,110,117,109,115,51,50,50,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,27),40,102,95,50,50,57,57,57,32,97,114,103,115,51,50,51,53,32,101,114,114,102,51,50,51,54,41,0,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,51,50,51,52,41,0,0,0,0,0};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,52,52,32,116,97,105,108,51,50,52,54,41,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,36),40,102,95,50,51,48,48,55,32,117,110,105,116,51,50,51,56,32,105,110,102,111,51,50,51,57,32,101,114,114,102,51,50,52,48,41,0,0,0,0};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,30),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,51,50,51,55,41,0,0,0,0,0,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,8),40,97,50,51,50,48,53,41};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,26),40,97,50,51,50,49,53,32,97,51,50,55,54,32,98,51,50,55,55,32,99,51,50,55,56,41,0,0};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,8),40,97,50,51,51,49,49,41};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,26),40,97,50,51,51,50,53,32,97,51,50,57,50,32,98,51,50,57,51,32,99,51,50,57,52,41,0,0};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,14),40,100,111,51,50,56,55,32,105,51,50,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,8),40,97,50,51,51,55,56,41};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,26),40,97,50,51,51,57,50,32,97,51,51,49,52,32,98,51,51,49,53,32,99,51,51,49,54,41,0,0};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,14),40,100,111,51,51,48,57,32,105,51,51,49,49,41,0,0,0,0,0,0};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,8),40,97,50,51,52,54,55,41};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,26),40,97,50,51,52,55,51,32,97,51,51,51,51,32,98,51,51,51,52,32,99,51,51,51,53,41,0,0};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,8),40,100,111,51,51,50,57,41};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,8),40,97,50,51,53,48,54,41};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,26),40,97,50,51,53,49,50,32,97,51,51,53,49,32,98,51,51,53,50,32,99,51,51,53,51,41,0,0};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,70),40,112,97,114,115,101,114,32,112,97,116,51,50,54,51,32,116,111,107,101,110,115,51,50,54,52,32,102,111,114,99,101,45,97,110,100,51,50,54,53,32,108,101,118,101,108,51,50,54,54,32,116,114,97,99,101,51,50,54,55,32,101,114,114,102,51,50,54,56,41,0,0,0,0,0,0};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,21),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,51,53,50,56,41,0,0,0,0,0};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,18),40,83,97,108,79,112,84,121,112,101,63,32,105,51,53,51,50,41,0,0};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,20),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,51,53,52,49,41,0,0,0,0};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,29),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,51,53,52,50,32,116,121,112,50,51,53,52,51,41,0,0,0,0,0};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,17),40,100,111,51,53,57,50,32,116,111,107,115,51,53,57,52,41,0};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,36),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,51,53,56,56,32,116,121,112,51,53,56,57,41,0,0,0,0};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,14),40,105,115,45,111,112,63,32,120,51,54,49,57,41,0,0,0,0,0,0};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,29),40,100,111,51,54,50,56,32,119,50,51,54,51,48,32,111,107,51,54,51,49,32,108,105,51,54,51,50,41,0,0,0,0,0};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,8),40,100,111,51,54,50,54,41};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,18),40,105,110,102,45,62,112,114,101,32,105,110,102,51,54,50,49,41,0,0};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,51,55,56,55,32,101,114,114,102,51,55,56,56,41,0,0,0,0,0,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,14),40,100,111,52,48,48,53,32,102,52,48,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,14),40,100,111,51,57,57,56,32,102,52,48,48,48,41,0,0,0,0,0,0};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,8),40,97,50,51,48,55,54,41};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,44),40,97,50,51,48,56,51,32,115,117,99,99,101,115,115,51,50,53,56,32,114,101,115,117,108,116,115,51,50,53,57,32,114,101,109,97,105,110,115,51,50,54,48,41,0,0,0,0};
static C_char C_TLS li382[] C_aligned={C_lihdr(0,0,17),40,97,50,51,48,55,48,32,101,114,114,102,51,50,53,54,41,0};
static C_char C_TLS li383[] C_aligned={C_lihdr(0,0,47),40,115,97,108,32,115,116,114,105,110,103,51,57,56,50,32,114,117,108,101,51,57,56,51,32,116,111,107,101,110,115,51,57,56,52,32,116,114,97,99,101,63,51,57,56,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li384[] C_aligned={C_lihdr(0,0,17),40,100,111,52,48,50,53,32,116,97,105,108,52,48,50,55,41,0};
static C_char C_TLS li385[] C_aligned={C_lihdr(0,0,27),40,112,114,105,110,116,101,114,32,116,104,105,110,103,52,48,50,51,32,108,101,118,52,48,50,52,41,0,0,0};
static C_char C_TLS li386[] C_aligned={C_lihdr(0,0,17),40,100,111,52,48,51,51,32,116,97,105,108,52,48,51,53,41,0};
static C_char C_TLS li387[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,52,48,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li388[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,52,48,52,48,41,0,0,0,0};
static C_char C_TLS li389[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,52,48,52,50,41,0,0,0};
static C_char C_TLS li390[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,52,48,52,54,41,0,0,0,0,0};
static C_char C_TLS li391[] C_aligned={C_lihdr(0,0,23),40,115,97,108,58,111,117,116,112,117,116,32,46,32,97,114,103,115,52,48,52,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li392[] C_aligned={C_lihdr(0,0,32),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,52,49,55,56,32,120,52,49,55,57,41};
static C_char C_TLS li393[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,52,49,56,48,41,0,0,0,0,0};
static C_char C_TLS li394[] C_aligned={C_lihdr(0,0,23),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,52,49,56,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li395[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,52,49,56,54,41,0,0,0,0,0,0};
static C_char C_TLS li396[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,52,49,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li397[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,52,49,57,50,41,0,0,0,0};
static C_char C_TLS li398[] C_aligned={C_lihdr(0,0,31),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,52,49,57,51,32,120,52,49,57,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li399[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,52,49,57,53,41,0,0,0,0,0};
static C_char C_TLS li400[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,52,49,57,56,41,0,0,0,0};
static C_char C_TLS li401[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,52,50,48,49,41,0,0,0,0,0,0};
static C_char C_TLS li402[] C_aligned={C_lihdr(0,0,14),40,100,111,52,50,48,54,32,97,52,50,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li403[] C_aligned={C_lihdr(0,0,27),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,52,50,48,52,41,0,0,0};
static C_char C_TLS li404[] C_aligned={C_lihdr(0,0,14),40,100,111,52,50,49,56,32,108,52,50,50,48,41,0,0,0,0,0,0};
static C_char C_TLS li405[] C_aligned={C_lihdr(0,0,40),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,52,50,49,54,32,97,99,99,101,115,115,111,114,52,50,49,55,41};
static C_char C_TLS li406[] C_aligned={C_lihdr(0,0,39),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,52,50,49,51,32,99,108,97,117,115,101,115,52,50,49,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li407[] C_aligned={C_lihdr(0,0,24),40,108,111,111,112,45,111,112,63,32,120,52,50,50,52,32,111,112,115,52,50,50,53,41};
static C_char C_TLS li408[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,52,50,50,54,41,0,0,0,0,0,0};
static C_char C_TLS li409[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,52,50,50,55,32,118,97,108,52,50,50,56,41,0,0,0,0,0,0};
static C_char C_TLS li410[] C_aligned={C_lihdr(0,0,17),40,100,111,52,50,53,48,32,116,97,105,108,52,50,53,50,41,0};
static C_char C_TLS li411[] C_aligned={C_lihdr(0,0,17),40,100,111,52,50,52,53,32,116,97,105,108,52,50,52,55,41,0};
static C_char C_TLS li412[] C_aligned={C_lihdr(0,0,20),40,100,111,52,50,51,53,32,104,52,50,51,55,32,108,52,50,51,56,41,0,0,0,0};
static C_char C_TLS li413[] C_aligned={C_lihdr(0,0,39),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,52,50,50,57,32,102,111,114,109,115,52,50,51,48,32,97,114,103,115,52,50,51,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li414[] C_aligned={C_lihdr(0,0,41),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,52,50,54,52,32,99,108,97,117,115,101,115,52,50,54,53,32,111,112,115,52,50,54,54,41,0};
static C_char C_TLS li415[] C_aligned={C_lihdr(0,0,17),40,100,111,52,50,56,52,32,110,101,120,116,52,50,56,54,41,0};
static C_char C_TLS li416[] C_aligned={C_lihdr(0,0,51),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,52,50,55,48,32,99,108,97,117,115,101,115,52,50,55,49,32,111,112,115,52,50,55,50,41,0,0,0};
static C_char C_TLS li417[] C_aligned={C_lihdr(0,0,8),40,97,50,54,55,51,50,41};
static C_char C_TLS li418[] C_aligned={C_lihdr(0,0,30),40,97,50,54,55,53,48,32,99,108,97,117,115,101,52,51,54,53,32,105,103,110,111,114,101,52,51,54,54,41,0,0,0,0,0,0};
static C_char C_TLS li419[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,52,51,54,50,32,99,108,97,117,115,101,115,52,51,54,51,32,111,112,115,52,51,54,52,41,0,0,0,0};
static C_char C_TLS li420[] C_aligned={C_lihdr(0,0,17),40,100,111,52,51,56,51,32,110,101,120,116,52,51,56,53,41,0};
static C_char C_TLS li421[] C_aligned={C_lihdr(0,0,56),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,52,51,54,56,32,99,108,97,117,115,101,115,52,51,54,57,32,111,112,115,52,51,55,48,41};
static C_char C_TLS li422[] C_aligned={C_lihdr(0,0,17),40,100,111,52,52,53,48,32,110,101,120,116,52,52,53,50,41,0};
static C_char C_TLS li423[] C_aligned={C_lihdr(0,0,55),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,52,52,52,48,32,99,108,97,117,115,101,115,52,52,52,49,32,111,112,115,52,52,52,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li424[] C_aligned={C_lihdr(0,0,26),40,100,111,52,52,56,56,32,110,101,101,100,52,52,57,48,32,110,101,120,116,52,52,57,49,41,0,0};
static C_char C_TLS li425[] C_aligned={C_lihdr(0,0,42),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,52,52,55,56,32,99,108,97,117,115,101,115,52,52,55,57,32,111,112,115,52,52,56,48,41,0,0};
static C_char C_TLS li426[] C_aligned={C_lihdr(0,0,8),40,100,111,52,53,51,50,41};
static C_char C_TLS li427[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,52,53,50,51,32,99,108,97,117,115,101,115,52,53,50,52,32,111,112,115,52,53,50,53,41};
static C_char C_TLS li428[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,52,53,52,50,32,99,108,97,117,115,101,115,52,53,52,51,32,111,112,115,52,53,52,52,41,0,0,0,0,0};
static C_char C_TLS li429[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,52,53,53,54,32,99,108,97,117,115,101,115,52,53,53,55,32,111,112,115,52,53,53,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li430[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,52,54,50,51,32,116,121,112,101,52,54,50,52,32,97,99,99,52,54,50,53,32,104,101,97,100,52,54,50,54,41,0,0};
static C_char C_TLS li431[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,52,54,50,55,41};
static C_char C_TLS li432[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,52,54,50,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li433[] C_aligned={C_lihdr(0,0,14),40,100,111,52,53,55,53,32,97,52,53,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li434[] C_aligned={C_lihdr(0,0,14),40,100,111,52,53,56,51,32,99,52,53,56,53,41,0,0,0,0,0,0};
static C_char C_TLS li435[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,52,54,48,50,32,99,108,97,117,115,101,115,52,54,48,51,32,111,112,115,52,54,48,52,41,0,0};
static C_char C_TLS li436[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,52,55,48,51,41,0,0,0,0,0,0};
static C_char C_TLS li437[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,52,55,48,52,32,99,108,97,117,115,101,115,52,55,48,53,32,111,112,115,52,55,48,54,41,0};
static C_char C_TLS li438[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,52,55,50,53,32,99,108,97,117,115,101,115,52,55,50,54,32,111,112,115,52,55,50,55,41,0,0,0,0,0};
static C_char C_TLS li439[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,52,55,52,49,32,99,108,97,117,115,101,115,52,55,52,50,32,111,112,115,52,55,52,51,41,0,0,0,0};
static C_char C_TLS li440[] C_aligned={C_lihdr(0,0,8),40,97,50,56,54,50,51,41};
static C_char C_TLS li441[] C_aligned={C_lihdr(0,0,20),40,97,50,56,54,51,54,32,97,52,55,54,56,32,98,52,55,54,57,41,0,0,0,0};
static C_char C_TLS li442[] C_aligned={C_lihdr(0,0,38),40,100,111,52,55,54,49,32,111,112,52,55,54,51,32,99,108,97,117,115,101,52,55,54,52,32,114,101,109,97,105,110,115,52,55,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li443[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,52,55,53,53,32,99,108,97,117,115,101,115,52,55,53,54,32,111,112,115,52,55,53,55,41,0,0};
static C_char C_TLS li444[] C_aligned={C_lihdr(0,0,8),40,97,50,56,55,56,55,41};
static C_char C_TLS li445[] C_aligned={C_lihdr(0,0,20),40,97,50,56,56,48,49,32,97,52,55,57,55,32,98,52,55,57,56,41,0,0,0,0};
static C_char C_TLS li446[] C_aligned={C_lihdr(0,0,8),40,97,50,56,56,54,53,41};
static C_char C_TLS li447[] C_aligned={C_lihdr(0,0,20),40,97,50,56,56,55,49,32,97,52,55,57,52,32,98,52,55,57,53,41,0,0,0,0};
static C_char C_TLS li448[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,52,55,56,49,32,99,108,97,117,115,101,115,52,55,56,50,32,111,112,115,52,55,56,51,41,0};
static C_char C_TLS li449[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,52,56,50,52,32,116,121,112,101,52,56,50,53,41,0,0};
static C_char C_TLS li450[] C_aligned={C_lihdr(0,0,8),40,97,50,57,48,49,51,41};
static C_char C_TLS li451[] C_aligned={C_lihdr(0,0,20),40,97,50,57,48,50,50,32,97,52,56,51,55,32,98,52,56,51,56,41,0,0,0,0};
static C_char C_TLS li452[] C_aligned={C_lihdr(0,0,47),40,100,111,52,56,50,56,32,111,112,52,56,51,48,32,99,108,97,117,115,101,52,56,51,49,32,114,101,109,97,105,110,115,52,56,51,50,32,98,111,100,121,52,56,51,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li453[] C_aligned={C_lihdr(0,0,46),40,112,97,114,115,101,45,105,116,101,114,97,116,105,111,110,32,99,97,108,108,101,114,52,56,53,48,32,102,111,114,109,115,52,56,53,49,32,111,112,115,52,56,53,50,41,0,0,0,0,0,0};
static C_char C_TLS li454[] C_aligned={C_lihdr(0,0,59),40,102,95,50,57,52,50,56,32,97,53,48,50,57,53,48,51,50,32,97,53,48,50,56,53,48,51,51,32,97,53,48,50,55,53,48,51,52,32,97,53,48,50,54,53,48,51,53,32,97,53,48,50,53,53,48,51,54,41,0,0,0};
static C_char C_TLS li455[] C_aligned={C_lihdr(0,0,23),40,109,109,58,109,97,107,101,45,111,110,32,46,32,97,114,103,115,52,57,50,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li456[] C_aligned={C_lihdr(0,0,29),40,102,95,51,48,49,52,50,32,97,53,48,52,53,53,48,52,57,32,97,53,48,52,52,53,48,53,48,41,0,0,0,0,0};
static C_char C_TLS li457[] C_aligned={C_lihdr(0,0,14),40,109,109,58,111,110,63,32,109,53,48,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li458[] C_aligned={C_lihdr(0,0,59),40,102,95,51,48,49,55,51,32,97,53,49,50,52,53,49,50,55,32,97,53,49,50,51,53,49,50,56,32,97,53,49,50,50,53,49,50,57,32,97,53,49,50,49,53,49,51,48,32,97,53,49,50,48,53,49,51,49,41,0,0,0};
static C_char C_TLS li459[] C_aligned={C_lihdr(0,0,24),40,109,109,58,109,97,107,101,45,111,102,102,32,46,32,97,114,103,115,53,48,53,50,41};
static C_char C_TLS li460[] C_aligned={C_lihdr(0,0,29),40,102,95,51,48,54,49,50,32,97,53,49,51,57,53,49,52,51,32,97,53,49,51,56,53,49,52,52,41,0,0,0,0,0};
static C_char C_TLS li461[] C_aligned={C_lihdr(0,0,15),40,109,109,58,111,102,102,63,32,109,53,49,51,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li462[] C_aligned={C_lihdr(0,0,59),40,102,95,51,48,54,52,54,32,97,53,50,53,53,53,50,53,56,32,97,53,50,53,52,53,50,53,57,32,97,53,50,53,51,53,50,54,48,32,97,53,50,53,50,53,50,54,49,32,97,53,50,53,49,53,50,54,50,41,0,0,0};
static C_char C_TLS li463[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,116,111,117,99,104,32,46,32,97,114,103,115,53,49,52,54,41,0,0};
static C_char C_TLS li464[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,51,54,48,32,97,53,50,55,49,53,50,55,53,32,97,53,50,55,48,53,50,55,54,41,0,0,0,0,0};
static C_char C_TLS li465[] C_aligned={C_lihdr(0,0,17),40,109,109,58,116,111,117,99,104,63,32,109,53,50,54,57,41,0};
static C_char C_TLS li466[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,51,57,52,32,97,53,51,56,55,53,51,57,48,32,97,53,51,56,54,53,51,57,49,32,97,53,51,56,53,53,51,57,50,32,97,53,51,56,52,53,51,57,51,32,97,53,51,56,51,53,51,57,52,41,0,0,0};
static C_char C_TLS li467[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,99,116,114,108,32,46,32,97,114,103,115,53,50,55,56,41,0};
static C_char C_TLS li468[] C_aligned={C_lihdr(0,0,29),40,102,95,51,50,49,48,56,32,97,53,52,48,51,53,52,48,55,32,97,53,52,48,50,53,52,48,56,41,0,0,0,0,0};
static C_char C_TLS li469[] C_aligned={C_lihdr(0,0,16),40,109,109,58,99,116,114,108,63,32,109,53,52,48,49,41};
static C_char C_TLS li470[] C_aligned={C_lihdr(0,0,59),40,102,95,51,50,49,51,57,32,97,53,52,56,50,53,52,56,53,32,97,53,52,56,49,53,52,56,54,32,97,53,52,56,48,53,52,56,55,32,97,53,52,55,57,53,52,56,56,32,97,53,52,55,56,53,52,56,57,41,0,0,0};
static C_char C_TLS li471[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,112,114,111,103,32,46,32,97,114,103,115,53,52,49,48,41,0};
static C_char C_TLS li472[] C_aligned={C_lihdr(0,0,29),40,102,95,51,50,53,55,56,32,97,53,52,57,55,53,53,48,49,32,97,53,52,57,54,53,53,48,50,41,0,0,0,0,0};
static C_char C_TLS li473[] C_aligned={C_lihdr(0,0,16),40,109,109,58,112,114,111,103,63,32,109,53,52,57,53,41};
static C_char C_TLS li474[] C_aligned={C_lihdr(0,0,59),40,102,95,51,50,54,48,57,32,97,53,53,55,54,53,53,55,57,32,97,53,53,55,53,53,53,56,48,32,97,53,53,55,52,53,53,56,49,32,97,53,53,55,51,53,53,56,50,32,97,53,53,55,50,53,53,56,51,41,0,0,0};
static C_char C_TLS li475[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,112,114,101,115,115,32,46,32,97,114,103,115,53,53,48,52,41,0,0};
static C_char C_TLS li476[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,48,52,56,32,97,53,53,57,49,53,53,57,53,32,97,53,53,57,48,53,53,57,54,41,0,0,0,0,0};
static C_char C_TLS li477[] C_aligned={C_lihdr(0,0,17),40,109,109,58,112,114,101,115,115,63,32,109,53,53,56,57,41,0};
static C_char C_TLS li478[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,48,55,57,32,97,53,54,55,48,53,54,55,51,32,97,53,54,54,57,53,54,55,52,32,97,53,54,54,56,53,54,55,53,32,97,53,54,54,55,53,54,55,54,32,97,53,54,54,54,53,54,55,55,41,0,0,0};
static C_char C_TLS li479[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,98,101,110,100,32,46,32,97,114,103,115,53,53,57,56,41,0};
static C_char C_TLS li480[] C_aligned={C_lihdr(0,0,19),40,102,95,51,51,53,52,48,32,97,53,54,57,51,53,54,57,55,41,0,0,0};
static C_char C_TLS li481[] C_aligned={C_lihdr(0,0,15),40,109,109,58,102,114,101,101,32,109,53,54,57,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li482[] C_aligned={C_lihdr(0,0,19),40,102,95,51,51,53,53,53,32,97,53,55,48,49,53,55,48,53,41,0,0,0};
static C_char C_TLS li483[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,111,112,121,32,109,53,55,48,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li484[] C_aligned={C_lihdr(0,0,19),40,102,95,51,51,53,55,48,32,97,53,55,48,57,53,55,49,51,41,0,0,0};
static C_char C_TLS li485[] C_aligned={C_lihdr(0,0,15),40,109,109,58,116,105,109,101,32,109,53,55,48,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li486[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,53,56,53,32,97,53,55,49,57,53,55,50,51,32,97,53,55,49,56,53,55,50,52,41,0,0,0,0,0};
static C_char C_TLS li487[] C_aligned={C_lihdr(0,0,26),40,109,109,58,116,105,109,101,45,115,101,116,33,32,109,53,55,49,54,32,116,53,55,49,55,41,0,0};
static C_char C_TLS li488[] C_aligned={C_lihdr(0,0,19),40,102,95,51,51,54,48,52,32,97,53,55,50,56,53,55,51,50,41,0,0,0};
static C_char C_TLS li489[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,104,97,110,32,109,53,55,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li490[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,54,49,57,32,97,53,55,51,55,53,55,52,49,32,97,53,55,51,54,53,55,52,50,41,0,0,0,0,0};
static C_char C_TLS li491[] C_aligned={C_lihdr(0,0,26),40,109,109,58,99,104,97,110,45,115,101,116,33,32,109,53,55,51,52,32,99,53,55,51,53,41,0,0};
static C_char C_TLS li492[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,54,51,56,32,97,53,55,52,55,53,55,53,49,32,97,53,55,52,54,53,55,53,50,41,0,0,0,0,0};
static C_char C_TLS li493[] C_aligned={C_lihdr(0,0,14),40,109,109,58,107,101,121,32,109,53,55,52,53,41,0,0,0,0,0,0};
static C_char C_TLS li494[] C_aligned={C_lihdr(0,0,39),40,102,95,51,51,54,53,55,32,97,53,55,53,56,53,55,54,50,32,97,53,55,53,55,53,55,54,51,32,97,53,55,53,54,53,55,54,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li495[] C_aligned={C_lihdr(0,0,25),40,109,109,58,107,101,121,45,115,101,116,33,32,109,53,55,53,52,32,107,53,55,53,53,41,0};
static C_char C_TLS li496[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,54,56,48,32,97,53,55,54,57,53,55,55,51,32,97,53,55,54,56,53,55,55,52,41,0,0,0,0,0};
static C_char C_TLS li497[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,101,108,32,109,53,55,54,55,41,0,0,0,0,0,0};
static C_char C_TLS li498[] C_aligned={C_lihdr(0,0,39),40,102,95,51,51,54,57,57,32,97,53,55,56,48,53,55,56,52,32,97,53,55,55,57,53,55,56,53,32,97,53,55,55,56,53,55,56,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li499[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,101,108,45,115,101,116,33,32,109,53,55,55,54,32,118,53,55,55,55,41,0};
static C_char C_TLS li500[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,55,51,49,32,97,53,55,57,51,53,55,57,55,32,97,53,55,57,50,53,55,57,56,41,0,0,0,0,0};
static C_char C_TLS li501[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,55,52,55,32,97,53,56,48,49,53,56,48,53,32,97,53,56,48,48,53,56,48,54,41,0,0,0,0,0};
static C_char C_TLS li502[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,97,108,32,109,53,55,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li503[] C_aligned={C_lihdr(0,0,39),40,102,95,51,51,55,55,56,32,97,53,56,49,52,53,56,49,56,32,97,53,56,49,51,53,56,49,57,32,97,53,56,49,50,53,56,50,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li504[] C_aligned={C_lihdr(0,0,39),40,102,95,51,51,55,57,56,32,97,53,56,50,52,53,56,50,56,32,97,53,56,50,51,53,56,50,57,32,97,53,56,50,50,53,56,51,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li505[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,97,108,45,115,101,116,33,32,109,53,56,48,56,32,118,53,56,48,57,41,0};
static C_char C_TLS li506[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,56,50,52,32,97,53,56,51,53,53,56,51,57,32,97,53,56,51,52,53,56,52,48,41,0,0,0,0,0};
static C_char C_TLS li507[] C_aligned={C_lihdr(0,0,14),40,109,109,58,110,117,109,32,109,53,56,51,51,41,0,0,0,0,0,0};
static C_char C_TLS li508[] C_aligned={C_lihdr(0,0,39),40,102,95,51,51,56,52,51,32,97,53,56,52,54,53,56,53,48,32,97,53,56,52,53,53,56,53,49,32,97,53,56,52,52,53,56,53,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li509[] C_aligned={C_lihdr(0,0,25),40,109,109,58,110,117,109,45,115,101,116,33,32,109,53,56,52,50,32,118,53,56,52,51,41,0};
static C_char C_TLS li510[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,56,54,54,32,97,53,56,54,52,53,56,54,55,32,97,53,56,54,51,53,56,54,56,32,97,53,56,54,50,53,56,54,57,32,97,53,56,54,49,53,56,55,48,32,97,53,56,54,48,53,56,55,49,41,0,0,0};
static C_char C_TLS li511[] C_aligned={C_lihdr(0,0,51),40,109,112,58,110,111,116,101,32,116,105,109,101,53,56,53,53,32,100,117,114,53,56,53,54,32,107,101,121,53,56,53,55,32,97,109,112,53,56,53,56,32,99,104,97,110,53,56,53,57,41,0,0,0};
static C_char C_TLS li512[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,56,57,52,32,97,53,56,56,49,53,56,56,52,32,97,53,56,56,48,53,56,56,53,32,97,53,56,55,57,53,56,56,54,32,97,53,56,55,56,53,56,56,55,32,97,53,56,55,55,53,56,56,56,41,0,0,0};
static C_char C_TLS li513[] C_aligned={C_lihdr(0,0,51),40,109,112,58,109,105,100,105,32,116,105,109,101,53,56,55,50,32,100,117,114,53,56,55,51,32,107,101,121,53,56,55,52,32,97,109,112,53,56,55,53,32,99,104,97,110,53,56,55,54,41,0,0,0};
static C_char C_TLS li514[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,57,50,50,32,97,53,56,57,54,53,56,57,57,32,97,53,56,57,53,53,57,48,48,32,97,53,56,57,52,53,57,48,49,32,97,53,56,57,51,53,57,48,50,32,97,53,56,57,50,53,57,48,51,41,0,0,0};
static C_char C_TLS li515[] C_aligned={C_lihdr(0,0,34),40,109,112,58,111,102,102,32,116,105,109,101,53,56,56,57,32,107,101,121,53,56,57,48,32,99,104,97,110,53,56,57,49,41,0,0};
static C_char C_TLS li516[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,57,53,48,32,97,53,57,49,50,53,57,49,53,32,97,53,57,49,49,53,57,49,54,32,97,53,57,49,48,53,57,49,55,32,97,53,57,48,57,53,57,49,56,32,97,53,57,48,56,53,57,49,57,41,0,0,0};
static C_char C_TLS li517[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,110,32,116,105,109,101,53,57,48,52,32,107,101,121,53,57,48,53,32,118,101,108,53,57,48,54,32,99,104,97,110,53,57,48,55,41,0};
static C_char C_TLS li518[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,57,55,56,32,97,53,57,50,56,53,57,51,49,32,97,53,57,50,55,53,57,51,50,32,97,53,57,50,54,53,57,51,51,32,97,53,57,50,53,53,57,51,52,32,97,53,57,50,52,53,57,51,53,41,0,0,0};
static C_char C_TLS li519[] C_aligned={C_lihdr(0,0,44),40,109,112,58,116,111,117,99,104,32,116,105,109,101,53,57,50,48,32,107,101,121,53,57,50,49,32,118,97,108,53,57,50,50,32,99,104,97,110,53,57,50,51,41,0,0,0,0};
static C_char C_TLS li520[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,48,48,54,32,97,53,57,52,52,53,57,52,55,32,97,53,57,52,51,53,57,52,56,32,97,53,57,52,50,53,57,52,57,32,97,53,57,52,49,53,57,53,48,32,97,53,57,52,48,53,57,53,49,41,0,0,0};
static C_char C_TLS li521[] C_aligned={C_lihdr(0,0,43),40,109,112,58,99,116,114,108,32,116,105,109,101,53,57,51,54,32,110,117,109,53,57,51,55,32,118,97,108,53,57,51,56,32,99,104,97,110,53,57,51,57,41,0,0,0};
static C_char C_TLS li522[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,48,51,52,32,97,53,57,53,57,53,57,54,50,32,97,53,57,53,56,53,57,54,51,32,97,53,57,53,55,53,57,54,52,32,97,53,57,53,54,53,57,54,53,32,97,53,57,53,53,53,57,54,54,41,0,0,0};
static C_char C_TLS li523[] C_aligned={C_lihdr(0,0,35),40,109,112,58,112,114,111,103,32,116,105,109,101,53,57,53,50,32,118,97,108,53,57,53,51,32,99,104,97,110,53,57,53,52,41,0,0,0};
static C_char C_TLS li524[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,48,54,50,32,97,53,57,55,52,53,57,55,55,32,97,53,57,55,51,53,57,55,56,32,97,53,57,55,50,53,57,55,57,32,97,53,57,55,49,53,57,56,48,32,97,53,57,55,48,53,57,56,49,41,0,0,0};
static C_char C_TLS li525[] C_aligned={C_lihdr(0,0,36),40,109,112,58,112,114,101,115,115,32,116,105,109,101,53,57,54,55,32,118,97,108,53,57,54,56,32,99,104,97,110,53,57,54,57,41,0,0,0,0};
static C_char C_TLS li526[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,48,57,48,32,97,53,57,56,57,53,57,57,50,32,97,53,57,56,56,53,57,57,51,32,97,53,57,56,55,53,57,57,52,32,97,53,57,56,54,53,57,57,53,32,97,53,57,56,53,53,57,57,54,41,0,0,0};
static C_char C_TLS li527[] C_aligned={C_lihdr(0,0,35),40,109,112,58,98,101,110,100,32,116,105,109,101,53,57,56,50,32,118,97,108,53,57,56,51,32,99,104,97,110,53,57,56,52,41,0,0,0};
static C_char C_TLS li528[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,49,49,56,32,97,53,57,57,56,54,48,48,50,41,0,0,0};
static C_char C_TLS li529[] C_aligned={C_lihdr(0,0,15),40,109,112,58,109,109,32,112,116,114,53,57,57,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li530[] C_aligned={C_lihdr(0,0,17),40,97,51,52,49,53,49,32,37,101,114,114,54,48,49,49,41,0};
static C_char C_TLS li531[] C_aligned={C_lihdr(0,0,8),40,97,51,52,49,55,49,41};
static C_char C_TLS li532[] C_aligned={C_lihdr(0,0,18),40,97,51,52,49,52,53,32,37,99,111,110,116,54,48,49,48,41,0,0};
static C_char C_TLS li533[] C_aligned={C_lihdr(0,0,17),40,97,51,52,49,51,57,32,37,109,115,103,54,48,48,57,41,0};
static C_char C_TLS li534[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,49,55,55,32,97,54,48,48,53,54,48,48,56,41,0,0,0};
static C_char C_TLS li535[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,49,56,50,32,97,54,48,49,52,54,48,49,55,41,0,0,0};
static C_char C_TLS li536[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,104,111,111,107,32,37,104,111,111,107,54,48,48,52,41,0,0,0,0,0};
static C_char C_TLS li537[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,50,51,57,32,97,54,48,55,48,54,48,55,51,32,97,54,48,54,57,54,48,55,52,32,97,54,48,54,56,54,48,55,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li538[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,54,48,54,55,41,0};
static C_char C_TLS li539[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,50,57,54,32,97,54,48,56,49,54,48,56,52,32,97,54,48,56,48,54,48,56,53,32,97,54,48,55,57,54,48,56,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li540[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,54,48,55,56,41,0};
static C_char C_TLS li541[] C_aligned={C_lihdr(0,0,9),40,102,95,51,52,51,51,55,41,0};
static C_char C_TLS li542[] C_aligned={C_lihdr(0,0,10),40,99,115,58,99,108,101,97,114,41,0,0};
static C_char C_TLS li543[] C_aligned={C_lihdr(0,0,14),40,100,111,54,49,49,49,32,120,54,49,49,51,41,0,0,0,0,0,0};
static C_char C_TLS li544[] C_aligned={C_lihdr(0,0,26),40,100,111,54,48,57,55,32,101,54,49,48,56,32,118,54,49,48,57,32,121,54,49,49,48,41,0,0};
static C_char C_TLS li545[] C_aligned={C_lihdr(0,0,18),40,99,109,45,108,111,103,111,32,118,101,114,115,54,48,57,54,41,0,0};
static C_char C_TLS li546[] C_aligned={C_lihdr(0,0,25),40,112,114,105,110,116,45,109,101,115,115,97,103,101,32,97,54,49,50,50,54,49,50,54,41,0};
static C_char C_TLS li547[] C_aligned={C_lihdr(0,0,23),40,112,114,105,110,116,45,101,114,114,111,114,32,97,54,49,50,56,54,49,51,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li548[] C_aligned={C_lihdr(0,0,27),40,99,117,114,114,101,110,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,41,0,0,0};
static C_char C_TLS li549[] C_aligned={C_lihdr(0,0,22),40,99,117,114,114,101,110,116,45,116,105,109,101,45,115,101,99,111,110,100,115,41,0,0,0,0,0,0};
static C_char C_TLS li550[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li551[] C_aligned={C_lihdr(0,0,43),40,115,99,104,101,100,117,108,101,114,45,115,101,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,32,97,54,49,52,52,54,49,52,55,41,0,0,0};
static C_char C_TLS li552[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li553[] C_aligned={C_lihdr(0,0,48),40,115,99,104,101,100,117,108,101,114,45,115,112,114,111,117,116,32,97,54,49,53,50,54,49,53,53,32,97,54,49,53,49,54,49,53,54,32,97,54,49,53,48,54,49,53,55,41};
static C_char C_TLS li554[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li555[] C_aligned={C_lihdr(0,0,26),40,115,99,104,101,100,117,108,101,114,45,115,116,111,112,32,97,54,49,55,50,54,49,55,53,41,0,0};
static C_char C_TLS li556[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,54,54,50,32,97,54,49,56,51,54,49,56,55,41,0,0,0};
static C_char C_TLS li557[] C_aligned={C_lihdr(0,0,24),40,108,111,97,100,45,115,97,108,45,102,105,108,101,32,102,105,108,101,54,49,56,50,41};
static C_char C_TLS li558[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li559[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li560[] C_aligned={C_lihdr(0,0,14),40,100,111,54,50,48,55,32,112,54,50,48,57,41,0,0,0,0,0,0};
static C_char C_TLS li561[] C_aligned={C_lihdr(0,0,27),40,98,111,100,121,54,49,57,51,32,115,116,97,114,116,54,49,57,57,32,105,100,54,50,48,48,41,0,0,0};
static C_char C_TLS li562[] C_aligned={C_lihdr(0,0,27),40,100,101,102,45,105,100,54,49,57,54,32,37,115,116,97,114,116,54,49,57,49,54,50,49,53,41,0,0,0};
static C_char C_TLS li563[] C_aligned={C_lihdr(0,0,15),40,100,101,102,45,115,116,97,114,116,54,49,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li564[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,54,49,56,57,32,46,32,97,114,103,115,54,49,57,48,41,0,0,0,0};
static C_char C_TLS li565[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li566[] C_aligned={C_lihdr(0,0,23),40,116,105,109,101,45,102,111,114,109,97,116,32,46,32,97,114,103,54,50,50,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li567[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li568[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li569[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li570[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li571[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li572[] C_aligned={C_lihdr(0,0,6),40,99,111,110,116,41,0,0,0,0,0,0};
static C_char C_TLS li573[] C_aligned={C_lihdr(0,0,17),40,100,111,54,50,51,54,32,116,97,105,108,54,50,51,56,41,0};
static C_char C_TLS li574[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,54,50,51,53,41,0,0,0};
static C_char C_TLS li575[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li576[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li577[] C_aligned={C_lihdr(0,0,47),40,114,117,110,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,54,50,52,51,32,99,108,97,117,115,101,115,54,50,52,52,32,111,112,115,54,50,52,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li578[] C_aligned={C_lihdr(0,0,44),40,112,114,111,99,101,115,115,45,99,111,100,101,45,116,101,114,109,105,110,97,116,101,115,63,32,99,111,100,101,54,50,55,51,32,115,116,111,112,54,50,55,52,41,0,0,0,0};
static C_char C_TLS li579[] C_aligned={C_lihdr(0,0,31),40,97,51,53,51,55,53,32,102,111,114,109,97,108,115,54,50,57,52,32,46,32,98,111,100,121,54,50,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li580[] C_aligned={C_lihdr(0,0,17),40,97,51,53,52,48,52,32,97,114,103,115,54,50,57,51,41,0};
static C_char C_TLS li581[] C_aligned={C_lihdr(0,0,16),40,100,111,54,50,54,54,32,111,112,115,54,50,54,56,41};
static C_char C_TLS li582[] C_aligned={C_lihdr(0,0,17),40,97,51,53,52,55,51,32,97,114,103,115,52,56,54,51,41,0};
static C_char C_TLS li583[] C_aligned={C_lihdr(0,0,16),40,97,51,53,54,49,53,32,115,121,109,52,49,55,54,41};
static C_char C_TLS li584[] C_aligned={C_lihdr(0,0,16),40,97,51,53,54,49,56,32,115,121,109,52,49,55,52,41};
static C_char C_TLS li585[] C_aligned={C_lihdr(0,0,24),40,97,51,53,54,52,55,32,118,97,108,52,49,55,50,32,115,121,109,52,49,55,51,41};
static C_char C_TLS li586[] C_aligned={C_lihdr(0,0,17),40,97,51,53,54,54,49,32,97,114,103,115,52,49,55,49,41,0};
static C_char C_TLS li587[] C_aligned={C_lihdr(0,0,26),40,97,51,53,54,55,53,32,97,114,103,115,51,57,55,55,32,101,114,114,102,51,57,55,56,41,0,0};
static C_char C_TLS li588[] C_aligned={C_lihdr(0,0,35),40,97,51,53,54,56,57,32,117,110,105,116,51,57,55,57,32,105,110,102,111,51,57,56,48,32,101,114,114,102,51,57,56,49,41,0,0,0};
static C_char C_TLS li589[] C_aligned={C_lihdr(0,0,26),40,97,51,53,55,57,53,32,97,114,103,115,51,57,50,54,32,101,114,114,102,51,57,50,55,41,0,0};
static C_char C_TLS li590[] C_aligned={C_lihdr(0,0,17),40,100,111,51,57,51,56,32,114,101,115,116,51,57,52,48,41,0};
static C_char C_TLS li591[] C_aligned={C_lihdr(0,0,26),40,100,111,51,57,54,52,32,97,114,103,115,51,57,54,54,32,116,97,105,108,51,57,54,55,41,0,0};
static C_char C_TLS li592[] C_aligned={C_lihdr(0,0,35),40,97,51,53,56,51,52,32,117,110,105,116,51,57,51,49,32,105,110,102,111,51,57,51,50,32,101,114,114,102,51,57,51,51,41,0,0,0};
static C_char C_TLS li593[] C_aligned={C_lihdr(0,0,26),40,97,51,54,50,53,50,32,97,114,103,115,51,57,49,57,32,101,114,114,102,51,57,50,48,41,0,0};
static C_char C_TLS li594[] C_aligned={C_lihdr(0,0,26),40,97,51,54,51,57,55,32,97,114,103,115,51,57,48,53,32,101,114,114,102,51,57,48,54,41,0,0};
static C_char C_TLS li595[] C_aligned={C_lihdr(0,0,17),40,100,111,51,56,55,55,32,116,97,105,108,51,56,55,57,41,0};
static C_char C_TLS li596[] C_aligned={C_lihdr(0,0,17),40,100,111,51,56,55,48,32,116,97,105,108,51,56,55,50,41,0};
static C_char C_TLS li597[] C_aligned={C_lihdr(0,0,20),40,100,111,51,56,53,56,32,99,108,97,117,115,101,115,51,56,54,48,41,0,0,0,0};
static C_char C_TLS li598[] C_aligned={C_lihdr(0,0,17),40,100,111,51,56,53,53,32,116,97,105,108,51,56,53,55,41,0};
static C_char C_TLS li599[] C_aligned={C_lihdr(0,0,35),40,97,51,54,52,52,51,32,117,110,105,116,51,57,49,53,32,105,110,102,111,51,57,49,54,32,101,114,114,102,51,57,49,55,41,0,0,0};
static C_char C_TLS li600[] C_aligned={C_lihdr(0,0,26),40,97,51,54,56,57,55,32,97,114,103,115,51,55,55,49,32,101,114,114,102,51,55,55,50,41,0,0};
static C_char C_TLS li601[] C_aligned={C_lihdr(0,0,35),40,97,51,54,57,54,53,32,117,110,105,116,51,55,56,51,32,105,110,102,111,51,55,56,52,32,101,114,114,102,51,55,56,53,41,0,0,0};
static C_char C_TLS li602[] C_aligned={C_lihdr(0,0,26),40,97,51,55,49,53,54,32,97,114,103,115,51,55,53,57,32,101,114,114,102,51,55,54,48,41,0,0};
static C_char C_TLS li603[] C_aligned={C_lihdr(0,0,35),40,97,51,55,49,56,50,32,117,110,105,116,51,55,54,52,32,105,110,102,111,51,55,54,53,32,101,114,114,102,51,55,54,54,41,0,0,0};
static C_char C_TLS li604[] C_aligned={C_lihdr(0,0,26),40,97,51,55,50,55,48,32,97,114,103,115,51,55,51,55,32,101,114,114,102,51,55,51,56,41,0,0};
static C_char C_TLS li605[] C_aligned={C_lihdr(0,0,17),40,100,111,51,55,52,53,32,105,116,101,114,51,55,52,55,41,0};
static C_char C_TLS li606[] C_aligned={C_lihdr(0,0,35),40,97,51,55,51,49,51,32,117,110,105,116,51,55,51,57,32,105,110,102,111,51,55,52,48,32,101,114,114,102,51,55,52,49,41,0,0,0};
static C_char C_TLS li607[] C_aligned={C_lihdr(0,0,26),40,97,51,55,53,53,48,32,97,114,103,115,51,55,51,52,32,101,114,114,102,51,55,51,53,41,0,0};
static C_char C_TLS li608[] C_aligned={C_lihdr(0,0,26),40,97,51,55,54,51,54,32,97,114,103,115,51,55,50,54,32,101,114,114,102,51,55,50,55,41,0,0};
static C_char C_TLS li609[] C_aligned={C_lihdr(0,0,14),40,97,51,55,54,56,56,32,101,51,55,51,50,41,0,0,0,0,0,0};
static C_char C_TLS li610[] C_aligned={C_lihdr(0,0,35),40,97,51,55,54,55,57,32,117,110,105,116,51,55,50,56,32,105,110,102,111,51,55,50,57,32,101,114,114,102,51,55,51,48,41,0,0,0};
static C_char C_TLS li611[] C_aligned={C_lihdr(0,0,26),40,97,51,55,55,51,56,32,97,114,103,115,51,55,49,57,32,101,114,114,102,51,55,50,48,41,0,0};
static C_char C_TLS li612[] C_aligned={C_lihdr(0,0,14),40,97,51,55,55,55,57,32,101,51,55,50,52,41,0,0,0,0,0,0};
static C_char C_TLS li613[] C_aligned={C_lihdr(0,0,35),40,97,51,55,55,55,51,32,117,110,105,116,51,55,50,49,32,105,110,102,111,51,55,50,50,32,101,114,114,102,51,55,50,51,41,0,0,0};
static C_char C_TLS li614[] C_aligned={C_lihdr(0,0,35),40,97,51,55,56,51,51,32,117,110,105,116,51,55,49,50,32,105,110,102,111,51,55,49,51,32,101,114,114,102,51,55,49,52,41,0,0,0};
static C_char C_TLS li615[] C_aligned={C_lihdr(0,0,35),40,97,51,55,56,57,52,32,117,110,105,116,51,55,48,54,32,105,110,102,111,51,55,48,55,32,101,114,114,102,51,55,48,56,41,0,0,0};
static C_char C_TLS li616[] C_aligned={C_lihdr(0,0,26),40,97,51,55,57,52,56,32,97,114,103,115,51,55,48,48,32,101,114,114,102,51,55,48,49,41,0,0};
static C_char C_TLS li617[] C_aligned={C_lihdr(0,0,35),40,97,51,55,57,55,56,32,117,110,105,116,51,55,48,50,32,105,110,102,111,51,55,48,51,32,101,114,114,102,51,55,48,52,41,0,0,0};
static C_char C_TLS li618[] C_aligned={C_lihdr(0,0,26),40,97,51,56,49,57,55,32,97,114,103,115,51,54,57,51,32,101,114,114,102,51,54,57,52,41,0,0};
static C_char C_TLS li619[] C_aligned={C_lihdr(0,0,26),40,97,51,56,50,50,51,32,97,114,103,115,51,54,56,48,32,101,114,114,102,51,54,56,49,41,0,0};
static C_char C_TLS li620[] C_aligned={C_lihdr(0,0,27),40,97,51,56,51,49,56,32,115,116,114,51,54,57,48,32,46,32,97,114,103,115,51,54,57,49,41,0,0,0};
static C_char C_TLS li621[] C_aligned={C_lihdr(0,0,35),40,97,51,56,50,57,56,32,117,110,105,116,51,54,56,53,32,105,110,102,111,51,54,56,54,32,101,114,114,102,51,54,56,55,41,0,0,0};
static C_char C_TLS li622[] C_aligned={C_lihdr(0,0,26),40,97,51,56,52,51,54,32,97,114,103,115,51,54,55,51,32,101,114,114,102,51,54,55,52,41,0,0};
static C_char C_TLS li623[] C_aligned={C_lihdr(0,0,35),40,97,51,56,52,53,56,32,117,110,105,116,51,54,55,53,32,105,110,102,111,51,54,55,54,32,101,114,114,102,51,54,55,55,41,0,0,0};
static C_char C_TLS li624[] C_aligned={C_lihdr(0,0,26),40,97,51,56,53,49,49,32,97,114,103,115,51,54,53,57,32,101,114,114,102,51,54,54,48,41,0,0};
static C_char C_TLS li625[] C_aligned={C_lihdr(0,0,17),40,100,111,51,54,54,54,32,97,114,103,115,51,54,54,56,41,0};
static C_char C_TLS li626[] C_aligned={C_lihdr(0,0,35),40,97,51,56,53,51,51,32,117,110,105,116,51,54,54,49,32,105,110,102,111,51,54,54,50,32,101,114,114,102,51,54,54,51,41,0,0,0};
static C_char C_TLS li627[] C_aligned={C_lihdr(0,0,26),40,97,51,56,54,54,53,32,97,114,103,115,51,54,53,50,32,101,114,114,102,51,54,53,51,41,0,0};
static C_char C_TLS li628[] C_aligned={C_lihdr(0,0,35),40,97,51,56,54,57,49,32,117,110,105,116,51,54,53,52,32,105,110,102,111,51,54,53,53,32,101,114,114,102,51,54,53,54,41,0,0,0};
static C_char C_TLS li629[] C_aligned={C_lihdr(0,0,26),40,97,51,56,56,48,49,32,97,114,103,115,51,54,52,56,32,101,114,114,102,51,54,52,57,41,0,0};
static C_char C_TLS li630[] C_aligned={C_lihdr(0,0,26),40,97,51,56,57,53,55,32,97,114,103,115,51,54,49,49,32,101,114,114,102,51,54,49,50,41,0,0};
static C_char C_TLS li631[] C_aligned={C_lihdr(0,0,35),40,97,51,56,57,55,53,32,117,110,105,116,51,54,49,51,32,105,110,102,111,51,54,49,52,32,101,114,114,102,51,54,49,53,41,0,0,0};
static C_char C_TLS li632[] C_aligned={C_lihdr(0,0,26),40,97,51,57,48,50,56,32,97,114,103,115,51,54,48,53,32,101,114,114,102,51,54,48,54,41,0,0};
static C_char C_TLS li633[] C_aligned={C_lihdr(0,0,26),40,97,51,57,49,56,48,32,97,114,103,115,51,54,48,50,32,101,114,114,102,51,54,48,51,41,0,0};
static C_char C_TLS li634[] C_aligned={C_lihdr(0,0,26),40,97,51,57,51,49,57,32,97,114,103,115,51,53,57,57,32,101,114,114,102,51,54,48,48,41,0,0};
static C_char C_TLS li635[] C_aligned={C_lihdr(0,0,26),40,97,51,57,52,51,57,32,97,114,103,115,51,53,55,56,32,101,114,114,102,51,53,55,57,41,0,0};
static C_char C_TLS li636[] C_aligned={C_lihdr(0,0,35),40,97,51,57,52,55,48,32,117,110,105,116,51,53,56,49,32,105,110,102,111,51,53,56,50,32,101,114,114,102,51,53,56,51,41,0,0,0};
static C_char C_TLS li637[] C_aligned={C_lihdr(0,0,26),40,97,51,57,53,54,50,32,97,114,103,115,51,53,55,50,32,101,114,114,102,51,53,55,51,41,0,0};
static C_char C_TLS li638[] C_aligned={C_lihdr(0,0,35),40,97,51,57,53,56,48,32,117,110,105,116,51,53,55,52,32,105,110,102,111,51,53,55,53,32,101,114,114,102,51,53,55,54,41,0,0,0};
static C_char C_TLS li639[] C_aligned={C_lihdr(0,0,35),40,97,51,57,54,53,52,32,117,110,105,116,51,53,54,49,32,105,110,102,111,51,53,54,50,32,101,114,114,102,51,53,54,51,41,0,0,0};
static C_char C_TLS li640[] C_aligned={C_lihdr(0,0,26),40,97,51,57,55,53,48,32,97,114,103,115,51,53,52,57,32,101,114,114,102,51,53,53,48,41,0,0};
static C_char C_TLS li641[] C_aligned={C_lihdr(0,0,35),40,97,51,57,55,54,48,32,117,110,105,116,51,53,53,49,32,105,110,102,111,51,53,53,50,32,101,114,114,102,51,53,53,51,41,0,0,0};
static C_char C_TLS li642[] C_aligned={C_lihdr(0,0,20),40,97,51,57,57,51,54,32,117,51,49,57,57,32,112,51,50,48,48,41,0,0,0,0};
static C_char C_TLS li643[] C_aligned={C_lihdr(0,0,20),40,97,51,57,57,54,50,32,101,51,49,55,49,32,112,51,49,55,50,41,0,0,0,0};
static C_char C_TLS li644[] C_aligned={C_lihdr(0,0,12),40,112,112,97,116,32,112,51,49,51,52,41,0,0,0,0};
static C_char C_TLS li645[] C_aligned={C_lihdr(0,0,35),40,97,51,57,57,55,54,32,116,121,112,51,49,51,48,32,112,97,116,51,49,51,49,32,46,32,97,114,103,115,51,49,51,50,41,0,0,0};
static C_char C_TLS li646[] C_aligned={C_lihdr(0,0,20),40,97,52,48,48,55,57,32,114,51,49,50,55,32,112,51,49,50,56,41,0,0,0,0};
static C_char C_TLS li647[] C_aligned={C_lihdr(0,0,20),40,97,52,48,48,56,57,32,116,51,48,55,56,32,112,51,48,55,57,41,0,0,0,0};
static C_char C_TLS li648[] C_aligned={C_lihdr(0,0,23),40,97,52,48,49,48,51,32,111,98,106,57,52,57,32,112,111,114,116,57,53,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li649[] C_aligned={C_lihdr(0,0,71),40,100,111,55,49,50,32,100,55,49,52,32,107,55,49,53,32,112,55,49,54,32,107,60,55,49,55,32,107,62,55,49,56,32,102,55,49,57,32,102,62,55,50,48,32,102,60,55,50,49,32,111,55,50,50,32,120,55,50,51,32,110,55,50,52,32,101,55,50,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li650[] C_aligned={C_lihdr(0,0,14),40,100,111,55,48,54,32,107,101,121,55,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li651[] C_aligned={C_lihdr(0,0,24),40,97,52,48,51,50,57,32,109,101,115,115,56,56,32,46,32,100,97,116,97,56,57,41};
static C_char C_TLS li652[] C_aligned={C_lihdr(0,0,22),40,97,52,48,51,51,53,32,102,117,110,99,51,56,32,105,110,102,111,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li653[] C_aligned={C_lihdr(0,0,24),40,97,52,48,51,56,55,32,115,112,101,99,51,54,32,46,32,98,111,100,121,51,55,41};
static C_char C_TLS li654[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from k34665 */
static C_word C_fcall stub6184(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6184(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
load_sal_file(t0);
return C_r;}

/* from k34650 in hush in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
C_noret_decl(stub6178)
static void C_ccall stub6178(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6178(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_hush();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k34644 */
C_noret_decl(stub6173)
static void C_ccall stub6173(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub6173(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_stop(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k34628 in cont in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
C_noret_decl(stub6168)
static void C_ccall stub6168(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6168(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_cont();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k34619 in pause in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
C_noret_decl(stub6164)
static void C_ccall stub6164(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6164(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_pause();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k34610 in paused? in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
C_noret_decl(stub6160)
static void C_ccall stub6160(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6160(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_paused());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k34604 */
C_noret_decl(stub6153)
static void C_ccall stub6153(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_noret;
static void C_ccall stub6153(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_sprout(t0,t1,t2);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k34584 in scheduler-set-time-milliseconds in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
C_noret_decl(stub6145)
static void C_ccall stub6145(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub6145(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_set_time_milliseconds(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k34575 in time-format in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
C_noret_decl(stub6140)
static void C_ccall stub6140(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6140(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_time_milliseconds());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from current-time-seconds in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub6137(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6137(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( (Time::getMillisecondCounterHiRes() / 1000.0) );
C_ret:
#undef return

return C_r;}

/* from current-time-milliseconds in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub6134(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6134(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( Time::getMillisecondCounterHiRes());
C_ret:
#undef return

return C_r;}

/* from k34556 in print-error in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static C_word C_fcall stub6129(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6129(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_error(t0);
return C_r;}

/* from k34542 in print-message in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static C_word C_fcall stub6123(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6123(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_message(t0);
return C_r;}

/* from f_34337 in cs:clear in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static C_word C_fcall stub6089(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6089(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cs_clear_score();
return C_r;}

/* from k34303 */
static C_word C_fcall stub6082(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub6082(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from k34246 */
static C_word C_fcall stub6071(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub6071(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from f_34182 in mp:inhook in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static C_word C_fcall stub6015(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6015(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from f_34177 in mp:inhook in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static C_word C_fcall stub6006(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6006(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from k34121 */
static C_word C_fcall stub5999(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5999(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mp_message(t0);
return C_r;}

/* from k34109 */
static C_word C_fcall stub5990(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5990(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34081 */
static C_word C_fcall stub5975(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5975(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34053 */
static C_word C_fcall stub5960(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5960(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34025 */
static C_word C_fcall stub5945(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5945(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k33997 */
static C_word C_fcall stub5929(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5929(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k33969 */
static C_word C_fcall stub5913(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5913(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k33941 */
static C_word C_fcall stub5897(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5897(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k33913 */
static C_word C_fcall stub5882(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5882(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k33885 */
static C_word C_fcall stub5865(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5865(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k33854 */
static C_word C_fcall stub5847(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5847(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k33831 */
static C_word C_fcall stub5836(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5836(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k33809 */
static C_word C_fcall stub5825(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5825(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k33789 */
static C_word C_fcall stub5815(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5815(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k33754 */
static C_word C_fcall stub5802(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5802(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k33738 */
static C_word C_fcall stub5794(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5794(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k33710 */
static C_word C_fcall stub5781(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5781(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k33687 */
static C_word C_fcall stub5770(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5770(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k33668 */
static C_word C_fcall stub5759(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5759(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k33645 */
static C_word C_fcall stub5748(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5748(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k33626 */
static C_word C_fcall stub5738(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5738(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
mm_set_chan(t0,t1);
return C_r;}

/* from k33607 */
static C_word C_fcall stub5729(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5729(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_fix((C_word)mm_chan(t0));
return C_r;}

/* from k33592 */
static C_word C_fcall stub5720(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5720(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
double t1=(double )C_c_double(C_a1);
mm_set_time(t0,t1);
return C_r;}

/* from k33573 */
static C_word C_fcall stub5710(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5710(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_flonum(&C_a,mm_time(t0));
return C_r;}

/* from k33558 */
static C_word C_fcall stub5702(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5702(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_mpointer_or_false(&C_a,(void*)mm_copy(t0));
return C_r;}

/* from k33543 */
static C_word C_fcall stub5694(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5694(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mm_free(t0);
return C_r;}

/* from k33525 */
static C_word C_fcall stub5686(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5686(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k33098 */
static C_word C_fcall stub5671(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5671(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k33055 */
static C_word C_fcall stub5592(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5592(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k32628 */
static C_word C_fcall stub5577(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5577(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k32585 */
static C_word C_fcall stub5498(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5498(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k32158 */
static C_word C_fcall stub5483(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5483(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k32115 */
static C_word C_fcall stub5404(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5404(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k31413 */
static C_word C_fcall stub5388(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5388(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k31367 */
static C_word C_fcall stub5272(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5272(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k30665 */
static C_word C_fcall stub5256(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5256(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k30619 */
static C_word C_fcall stub5140(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5140(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k30192 */
static C_word C_fcall stub5125(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5125(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k30149 */
static C_word C_fcall stub5046(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5046(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k29447 */
static C_word C_fcall stub5030(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5030(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k7963 */
static C_word C_fcall stub390(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub390(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,jn(t0,t1));
return C_r;}

/* from tb:ranbrown in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static C_word C_fcall stub383(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub383(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranbrown());
return C_r;}

/* from tb:ranpink in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static C_word C_fcall stub380(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub380(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranpink());
return C_r;}

/* from k7941 */
static C_word C_fcall stub377(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub377(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::ranpoisson(t0));
return C_r;}

/* from tb:rancauchy in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static C_word C_fcall stub373(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub373(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::rancauchy());
return C_r;}

/* from k7931 */
static C_word C_fcall stub369(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub369(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::rangamma(t0));
return C_r;}

/* from k7924 */
static C_word C_fcall stub363(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub363(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ranbeta(t0,t1));
return C_r;}

/* from k7913 */
static C_word C_fcall stub357(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub357(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ranexp(t0));
return C_r;}

/* from k7906 */
static C_word C_fcall stub351(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub351(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::rangauss(t0,t1));
return C_r;}

/* from tb:ranmiddle in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static C_word C_fcall stub346(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub346(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranmiddle());
return C_r;}

/* from tb:ranhigh in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static C_word C_fcall stub343(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub343(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranhigh());
return C_r;}

/* from tb:ranlow in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static C_word C_fcall stub340(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub340(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranlow());
return C_r;}

/* from k7886 */
static C_word C_fcall stub335(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub335(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ran(t0,t1));
return C_r;}

/* from k7875 */
static C_word C_fcall stub329(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub329(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)Toolbox::ran(t0,t1));
return C_r;}

/* from k7864 */
static C_word C_fcall stub323(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub323(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ran(t0));
return C_r;}

/* from k7857 */
static C_word C_fcall stub319(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub319(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)Toolbox::ran(t0));
return C_r;}

/* from tb:ran-set! in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static C_word C_fcall stub315(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub315(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
Toolbox::ranstate_set(t0);
return C_r;}

/* from k7847 */
static C_word C_fcall stub310(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub310(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::hertz_to_keynum(t0));
return C_r;}

/* from k7840 */
static C_word C_fcall stub306(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub306(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::keynum_to_pc(t0));
return C_r;}

/* from k7833 */
static C_word C_fcall stub301(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub301(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::keynum_to_hertz(t0));
return C_r;}

/* from k7826 */
static C_word C_fcall stub293(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub293(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,Toolbox::geoseg(t0,t1,t2,t3));
return C_r;}

/* from k7807 */
static C_word C_fcall stub282(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub282(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,Toolbox::explseg(t0,t1,t2,t3));
return C_r;}

/* from k7788 */
static C_word C_fcall stub275(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub275(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::scaler_to_cents(t0));
return C_r;}

/* from k7781 */
static C_word C_fcall stub270(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub270(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,Toolbox::cents_to_scaler(t0));
return C_r;}

/* from k7774 */
static C_word C_fcall stub263(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub263(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
C_r=C_flonum(&C_a,Toolbox::rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k7759 */
static C_word C_fcall stub255(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub255(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::quantize(t0,t1));
return C_r;}

/* from k7748 */
static C_word C_fcall stub250(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub250(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::float_to_fixnum(t0));
return C_r;}

/* from k7741 */
static C_word C_fcall stub241(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub241(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_fix((C_word)Toolbox::discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k7714 */
static C_word C_fcall stub226(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub226(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_flonum(&C_a,Toolbox::rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k6979 */
static C_word C_fcall stub95(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub95(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
set_current_directory(t0);
return C_r;}

/* from f_6961 in cwd in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static C_word C_fcall stub90(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub90(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)get_current_directory());
return C_r;}

C_noret_decl(C_grace_toplevel)
C_externexport void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6354)
static void C_ccall f_6354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6357)
static void C_ccall f_6357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6360)
static void C_ccall f_6360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6363)
static void C_ccall f_6363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40388)
static void C_ccall f_40388(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_40388)
static void C_ccall f_40388r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6654)
static void C_ccall f_6654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6658)
static void C_ccall f_6658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40336)
static void C_ccall f_40336(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40383)
static void C_ccall f_40383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40373)
static void C_ccall f_40373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40340)
static void C_ccall f_40340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6661)
static void C_ccall f_6661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40330)
static void C_ccall f_40330(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_40330)
static void C_ccall f_40330r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6954)
static void C_ccall f_6954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10022)
static void C_ccall f_10022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40114)
static void C_fcall f_40114(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40328)
static void C_ccall f_40328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40148)
static void C_ccall f_40148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40160)
static void C_ccall f_40160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40164)
static void C_ccall f_40164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40168)
static void C_ccall f_40168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40312)
static void C_ccall f_40312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40174)
static void C_fcall f_40174(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13) C_noret;
C_noret_decl(f_40194)
static void C_fcall f_40194(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40197)
static void C_fcall f_40197(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40205)
static void C_ccall f_40205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40212)
static void C_ccall f_40212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40215)
static void C_ccall f_40215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40219)
static void C_ccall f_40219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40226)
static void C_ccall f_40226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40229)
static void C_ccall f_40229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40233)
static void C_ccall f_40233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40240)
static void C_ccall f_40240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40184)
static void C_ccall f_40184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40137)
static void C_ccall f_40137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40127)
static void C_ccall f_40127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40130)
static void C_ccall f_40130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10025)
static void C_ccall f_10025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40104)
static void C_ccall f_40104(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40112)
static void C_ccall f_40112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11090)
static void C_ccall f_11090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40090)
static void C_ccall f_40090(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40098)
static void C_ccall f_40098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40102)
static void C_ccall f_40102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22245)
static void C_ccall f_22245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22296)
static void C_ccall f_22296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40080)
static void C_ccall f_40080(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40088)
static void C_ccall f_40088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22401)
static void C_ccall f_22401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39977)
static void C_ccall f_39977(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_39977)
static void C_ccall f_39977r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_40040)
static void C_ccall f_40040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40044)
static void C_ccall f_40044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40058)
static void C_fcall f_40058(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39980)
static void C_fcall f_39980(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40000)
static void C_ccall f_40000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40004)
static void C_ccall f_40004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22404)
static void C_ccall f_22404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39963)
static void C_ccall f_39963(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39971)
static void C_ccall f_39971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39975)
static void C_ccall f_39975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22597)
static void C_ccall f_22597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39937)
static void C_ccall f_39937(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39941)
static void C_ccall f_39941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39947)
static void C_ccall f_39947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39958)
static void C_ccall f_39958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39954)
static void C_ccall f_39954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22666)
static void C_ccall f_22666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39915)
static void C_ccall f_39915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23911)
static void C_ccall f_23911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39895)
static void C_ccall f_39895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23914)
static void C_ccall f_23914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39855)
static void C_ccall f_39855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23917)
static void C_ccall f_23917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39761)
static void C_ccall f_39761(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39765)
static void C_ccall f_39765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39768)
static void C_ccall f_39768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39786)
static void C_ccall f_39786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39789)
static void C_ccall f_39789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39820)
static void C_ccall f_39820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39792)
static void C_fcall f_39792(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39798)
static void C_ccall f_39798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39751)
static void C_ccall f_39751(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39745)
static void C_ccall f_39745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23920)
static void C_ccall f_23920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39653)
static void C_ccall f_39653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39655)
static void C_ccall f_39655(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39659)
static void C_ccall f_39659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39662)
static void C_ccall f_39662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39665)
static void C_ccall f_39665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39705)
static void C_ccall f_39705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39697)
static void C_ccall f_39697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39668)
static void C_ccall f_39668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39671)
static void C_ccall f_39671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39674)
static void C_ccall f_39674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39645)
static void C_ccall f_39645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23923)
static void C_ccall f_23923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39617)
static void C_ccall f_39617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23926)
static void C_ccall f_23926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39581)
static void C_ccall f_39581(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39593)
static void C_ccall f_39593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39589)
static void C_ccall f_39589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39563)
static void C_ccall f_39563(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39557)
static void C_ccall f_39557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23929)
static void C_ccall f_23929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39471)
static void C_ccall f_39471(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39475)
static void C_ccall f_39475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39478)
static void C_ccall f_39478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39481)
static void C_ccall f_39481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39494)
static void C_ccall f_39494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39440)
static void C_ccall f_39440(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39444)
static void C_ccall f_39444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39459)
static void C_ccall f_39459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39434)
static void C_ccall f_39434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23932)
static void C_ccall f_23932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39320)
static void C_ccall f_39320(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39336)
static void C_ccall f_39336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39347)
static void C_ccall f_39347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39314)
static void C_ccall f_39314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23988)
static void C_ccall f_23988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39181)
static void C_ccall f_39181(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39204)
static void C_ccall f_39204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39201)
static void C_ccall f_39201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39175)
static void C_ccall f_39175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23991)
static void C_ccall f_23991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39029)
static void C_ccall f_39029(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39047)
static void C_ccall f_39047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39056)
static void C_ccall f_39056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39023)
static void C_ccall f_39023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23994)
static void C_ccall f_23994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38976)
static void C_ccall f_38976(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38980)
static void C_ccall f_38980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38983)
static void C_ccall f_38983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38999)
static void C_ccall f_38999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38958)
static void C_ccall f_38958(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38952)
static void C_ccall f_38952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23997)
static void C_ccall f_23997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38876)
static void C_ccall f_38876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24136)
static void C_ccall f_24136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38802)
static void C_ccall f_38802(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38809)
static void C_ccall f_38809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38796)
static void C_ccall f_38796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24139)
static void C_ccall f_24139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38692)
static void C_ccall f_38692(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38700)
static void C_ccall f_38700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38666)
static void C_ccall f_38666(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38683)
static void C_ccall f_38683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38674)
static void C_fcall f_38674(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38660)
static void C_ccall f_38660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24142)
static void C_ccall f_24142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38616)
static void C_ccall f_38616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24145)
static void C_ccall f_24145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38534)
static void C_ccall f_38534(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38545)
static void C_ccall f_38545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38547)
static void C_fcall f_38547(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38576)
static void C_ccall f_38576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38512)
static void C_ccall f_38512(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38528)
static void C_ccall f_38528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38506)
static void C_ccall f_38506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24148)
static void C_ccall f_24148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38459)
static void C_ccall f_38459(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38463)
static void C_ccall f_38463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38470)
static void C_ccall f_38470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38437)
static void C_ccall f_38437(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38453)
static void C_ccall f_38453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38431)
static void C_ccall f_38431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24151)
static void C_ccall f_24151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38299)
static void C_ccall f_38299(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38339)
static void C_ccall f_38339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38303)
static void C_ccall f_38303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38319)
static void C_ccall f_38319(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_38319)
static void C_ccall f_38319r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_38331)
static void C_ccall f_38331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38335)
static void C_ccall f_38335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38327)
static void C_ccall f_38327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38224)
static void C_ccall f_38224(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38267)
static void C_ccall f_38267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38271)
static void C_ccall f_38271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38231)
static void C_fcall f_38231(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38242)
static void C_ccall f_38242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38218)
static void C_ccall f_38218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24154)
static void C_ccall f_24154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38198)
static void C_ccall f_38198(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38192)
static void C_ccall f_38192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24157)
static void C_ccall f_24157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38172)
static void C_ccall f_38172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38176)
static void C_ccall f_38176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38164)
static void C_ccall f_38164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24160)
static void C_ccall f_24160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38144)
static void C_ccall f_38144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38148)
static void C_ccall f_38148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38136)
static void C_ccall f_38136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24163)
static void C_ccall f_24163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38116)
static void C_ccall f_38116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38120)
static void C_ccall f_38120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38108)
static void C_ccall f_38108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24166)
static void C_ccall f_24166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38088)
static void C_ccall f_38088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38092)
static void C_ccall f_38092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38080)
static void C_ccall f_38080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24169)
static void C_ccall f_24169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37979)
static void C_ccall f_37979(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37949)
static void C_ccall f_37949(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37973)
static void C_ccall f_37973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37943)
static void C_ccall f_37943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24172)
static void C_ccall f_24172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37893)
static void C_ccall f_37893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37895)
static void C_ccall f_37895(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37899)
static void C_ccall f_37899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37927)
static void C_ccall f_37927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37919)
static void C_ccall f_37919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37915)
static void C_ccall f_37915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37902)
static void C_ccall f_37902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37885)
static void C_ccall f_37885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24175)
static void C_ccall f_24175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37832)
static void C_ccall f_37832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37834)
static void C_ccall f_37834(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37838)
static void C_ccall f_37838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37869)
static void C_ccall f_37869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37861)
static void C_ccall f_37861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37857)
static void C_ccall f_37857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37841)
static void C_ccall f_37841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37844)
static void C_ccall f_37844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37824)
static void C_ccall f_37824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24178)
static void C_ccall f_24178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37774)
static void C_ccall f_37774(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37788)
static void C_ccall f_37788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37780)
static void C_ccall f_37780(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37739)
static void C_ccall f_37739(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37772)
static void C_ccall f_37772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37733)
static void C_ccall f_37733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24181)
static void C_ccall f_24181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37680)
static void C_ccall f_37680(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37684)
static void C_ccall f_37684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37697)
static void C_ccall f_37697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37689)
static void C_ccall f_37689(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37637)
static void C_ccall f_37637(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37670)
static void C_ccall f_37670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37631)
static void C_ccall f_37631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24184)
static void C_ccall f_24184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37551)
static void C_ccall f_37551(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37545)
static void C_ccall f_37545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24187)
static void C_ccall f_24187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37314)
static void C_ccall f_37314(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37318)
static void C_ccall f_37318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37326)
static void C_fcall f_37326(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37349)
static void C_ccall f_37349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37352)
static void C_ccall f_37352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37355)
static void C_ccall f_37355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37358)
static void C_ccall f_37358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37418)
static void C_ccall f_37418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37425)
static void C_ccall f_37425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37435)
static void C_ccall f_37435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37445)
static void C_ccall f_37445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37459)
static void C_ccall f_37459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37469)
static void C_ccall f_37469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37479)
static void C_ccall f_37479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37489)
static void C_ccall f_37489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37361)
static void C_fcall f_37361(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37385)
static void C_fcall f_37385(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37364)
static void C_fcall f_37364(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37271)
static void C_ccall f_37271(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37304)
static void C_ccall f_37304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37265)
static void C_ccall f_37265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24190)
static void C_ccall f_24190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37183)
static void C_ccall f_37183(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37187)
static void C_ccall f_37187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37193)
static void C_ccall f_37193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37213)
static void C_ccall f_37213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37157)
static void C_ccall f_37157(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37167)
static void C_fcall f_37167(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37151)
static void C_ccall f_37151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24193)
static void C_ccall f_24193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36966)
static void C_ccall f_36966(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36970)
static void C_ccall f_36970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36976)
static void C_ccall f_36976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36985)
static void C_ccall f_36985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37023)
static void C_ccall f_37023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37015)
static void C_ccall f_37015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36992)
static void C_ccall f_36992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36996)
static void C_ccall f_36996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36898)
static void C_ccall f_36898(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36917)
static void C_ccall f_36917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36952)
static void C_ccall f_36952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36923)
static void C_fcall f_36923(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36927)
static void C_ccall f_36927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36941)
static void C_ccall f_36941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36930)
static void C_fcall f_36930(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36911)
static void C_fcall f_36911(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36892)
static void C_ccall f_36892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24196)
static void C_ccall f_24196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36620)
static void C_ccall f_36620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24719)
static void C_ccall f_24719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36572)
static void C_ccall f_36572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36564)
static void C_ccall f_36564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24722)
static void C_ccall f_24722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36444)
static void C_ccall f_36444(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24728)
static void C_ccall f_24728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25264)
static void C_ccall f_25264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25298)
static void C_ccall f_25298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25290)
static void C_ccall f_25290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25286)
static void C_ccall f_25286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25271)
static void C_ccall f_25271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25275)
static void C_ccall f_25275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25268)
static void C_ccall f_25268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24746)
static void C_fcall f_24746(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25257)
static void C_ccall f_25257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25253)
static void C_ccall f_25253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24753)
static void C_fcall f_24753(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25128)
static void C_fcall f_25128(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25149)
static void C_ccall f_25149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25151)
static void C_fcall f_25151(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25165)
static void C_ccall f_25165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25218)
static void C_ccall f_25218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25168)
static void C_fcall f_25168(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25203)
static void C_ccall f_25203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25171)
static void C_fcall f_25171(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25184)
static void C_ccall f_25184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25196)
static void C_ccall f_25196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25188)
static void C_ccall f_25188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25174)
static void C_fcall f_25174(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25138)
static void C_ccall f_25138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24756)
static void C_ccall f_24756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25092)
static void C_fcall f_25092(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25118)
static void C_ccall f_25118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25103)
static void C_ccall f_25103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24762)
static void C_ccall f_24762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24766)
static void C_ccall f_24766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24969)
static void C_ccall f_24969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24973)
static void C_ccall f_24973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24977)
static void C_ccall f_24977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25020)
static void C_fcall f_25020(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25030)
static void C_ccall f_25030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25033)
static void C_ccall f_25033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25054)
static void C_ccall f_25054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25036)
static void C_fcall f_25036(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25040)
static void C_ccall f_25040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24980)
static void C_ccall f_24980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24983)
static void C_fcall f_24983(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24769)
static void C_fcall f_24769(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24773)
static void C_ccall f_24773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24776)
static void C_fcall f_24776(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24929)
static void C_ccall f_24929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24937)
static void C_ccall f_24937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24933)
static void C_ccall f_24933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24779)
static void C_fcall f_24779(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24807)
static void C_ccall f_24807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24810)
static void C_ccall f_24810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24813)
static void C_ccall f_24813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24816)
static void C_ccall f_24816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24819)
static void C_ccall f_24819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24878)
static void C_ccall f_24878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36398)
static void C_ccall f_36398(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36414)
static void C_ccall f_36414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36417)
static void C_ccall f_36417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36420)
static void C_fcall f_36420(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36423)
static void C_fcall f_36423(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36434)
static void C_ccall f_36434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36392)
static void C_ccall f_36392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25305)
static void C_ccall f_25305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36253)
static void C_ccall f_36253(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36292)
static void C_ccall f_36292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36266)
static void C_fcall f_36266(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36247)
static void C_ccall f_36247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25308)
static void C_ccall f_25308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35835)
static void C_ccall f_35835(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35839)
static void C_ccall f_35839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35851)
static void C_ccall f_35851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35909)
static void C_ccall f_35909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35912)
static void C_ccall f_35912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35915)
static void C_ccall f_35915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36127)
static void C_ccall f_36127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36065)
static void C_ccall f_36065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36099)
static void C_ccall f_36099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36074)
static void C_fcall f_36074(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36085)
static void C_ccall f_36085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36081)
static void C_ccall f_36081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35924)
static void C_fcall f_35924(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36002)
static void C_ccall f_36002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36043)
static void C_ccall f_36043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36047)
static void C_ccall f_36047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36051)
static void C_ccall f_36051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36006)
static void C_ccall f_36006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36010)
static void C_ccall f_36010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36037)
static void C_ccall f_36037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36013)
static void C_fcall f_36013(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35927)
static void C_fcall f_35927(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35999)
static void C_ccall f_35999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35941)
static void C_ccall f_35941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35943)
static void C_fcall f_35943(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35991)
static void C_ccall f_35991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35962)
static void C_ccall f_35962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35979)
static void C_ccall f_35979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35965)
static void C_fcall f_35965(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35958)
static void C_ccall f_35958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35930)
static void C_ccall f_35930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35860)
static void C_fcall f_35860(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35870)
static void C_ccall f_35870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35876)
static void C_ccall f_35876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35848)
static void C_ccall f_35848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35796)
static void C_ccall f_35796(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35813)
static void C_ccall f_35813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35829)
static void C_ccall f_35829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35807)
static void C_fcall f_35807(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35790)
static void C_ccall f_35790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25311)
static void C_ccall f_25311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35714)
static void C_ccall f_35714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25314)
static void C_ccall f_25314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35690)
static void C_ccall f_35690(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35702)
static void C_ccall f_35702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35698)
static void C_ccall f_35698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35676)
static void C_ccall f_35676(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35684)
static void C_ccall f_35684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35670)
static void C_ccall f_35670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25317)
static void C_ccall f_25317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35662)
static void C_ccall f_35662(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29088)
static void C_ccall f_29088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29091)
static void C_ccall f_29091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29257)
static void C_ccall f_29257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29253)
static void C_ccall f_29253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29243)
static void C_fcall f_29243(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29098)
static void C_ccall f_29098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29102)
static void C_ccall f_29102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29105)
static void C_fcall f_29105(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29116)
static void C_ccall f_29116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29124)
static void C_ccall f_29124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29196)
static void C_ccall f_29196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29204)
static void C_ccall f_29204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29200)
static void C_ccall f_29200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29192)
static void C_ccall f_29192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29188)
static void C_ccall f_29188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29160)
static void C_ccall f_29160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29156)
static void C_ccall f_29156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29120)
static void C_ccall f_29120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25735)
static void C_ccall f_25735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35648)
static void C_ccall f_35648(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25738)
static void C_ccall f_25738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35619)
static void C_ccall f_35619(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35623)
static void C_ccall f_35623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25741)
static void C_ccall f_25741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35616)
static void C_ccall f_35616(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25744)
static void C_ccall f_25744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35474)
static void C_ccall f_35474(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29270)
static void C_ccall f_29270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29402)
static void C_ccall f_29402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29273)
static void C_ccall f_29273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29284)
static void C_ccall f_29284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29292)
static void C_ccall f_29292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29316)
static void C_ccall f_29316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29319)
static void C_fcall f_29319(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29327)
static void C_ccall f_29327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29335)
static void C_ccall f_29335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29355)
static void C_ccall f_29355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29351)
static void C_ccall f_29351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29331)
static void C_ccall f_29331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29323)
static void C_ccall f_29323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29312)
static void C_ccall f_29312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29288)
static void C_ccall f_29288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29264)
static void C_ccall f_29264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34186)
static void C_ccall f_34186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34189)
static void C_ccall f_34189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34192)
static void C_ccall f_34192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34195)
static void C_ccall f_34195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34198)
static void C_ccall f_34198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34201)
static void C_ccall f_34201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34204)
static void C_ccall f_34204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34207)
static void C_ccall f_34207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34210)
static void C_ccall f_34210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34213)
static void C_ccall f_34213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34216)
static void C_ccall f_34216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34341)
static void C_ccall f_34341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34344)
static void C_ccall f_34344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34347)
static void C_ccall f_34347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35411)
static void C_fcall f_35411(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35439)
static void C_fcall f_35439(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35078)
static void C_ccall f_35078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35405)
static void C_ccall f_35405(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35123)
static void C_ccall f_35123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35129)
static void C_ccall f_35129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35132)
static void C_ccall f_35132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35135)
static void C_ccall f_35135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35139)
static void C_ccall f_35139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35349)
static void C_ccall f_35349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35361)
static void C_ccall f_35361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35357)
static void C_ccall f_35357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35142)
static void C_fcall f_35142(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35306)
static void C_fcall f_35306(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35342)
static void C_ccall f_35342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35335)
static void C_ccall f_35335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35145)
static void C_ccall f_35145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35244)
static void C_ccall f_35244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35252)
static void C_ccall f_35252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35248)
static void C_ccall f_35248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35240)
static void C_ccall f_35240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35236)
static void C_ccall f_35236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35192)
static void C_ccall f_35192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35188)
static void C_ccall f_35188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35155)
static void C_fcall f_35155(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35166)
static void C_ccall f_35166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35174)
static void C_ccall f_35174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35170)
static void C_ccall f_35170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35368)
static void C_ccall f_35368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35376)
static void C_ccall f_35376(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_35376)
static void C_ccall f_35376r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_35390)
static void C_fcall f_35390(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35380)
static void C_ccall f_35380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35371)
static void C_ccall f_35371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35374)
static void C_ccall f_35374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35080)
static void C_fcall f_35080(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35096)
static void C_ccall f_35096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35007)
static void C_ccall f_35007(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35018)
static void C_ccall f_35018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35021)
static void C_fcall f_35021(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35028)
static void C_ccall f_35028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34997)
static void C_ccall f_34997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34652)
static void C_ccall f_34652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35001)
static void C_ccall f_35001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34939)
static void C_ccall f_34939(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34939)
static void C_ccall f_34939r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34957)
static void C_fcall f_34957(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34967)
static void C_ccall f_34967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34943)
static void C_ccall f_34943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34930)
static void C_ccall f_34930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34630)
static void C_ccall f_34630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34934)
static void C_ccall f_34934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34924)
static void C_ccall f_34924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34612)
static void C_ccall f_34612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34915)
static void C_ccall f_34915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34621)
static void C_ccall f_34621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34919)
static void C_ccall f_34919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34852)
static void C_ccall f_34852(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34852)
static void C_ccall f_34852r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34877)
static void C_fcall f_34877(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34577)
static void C_ccall f_34577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34865)
static void C_ccall f_34865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34676)
static void C_ccall f_34676(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_34676)
static void C_ccall f_34676r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_34803)
static void C_fcall f_34803(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34798)
static void C_fcall f_34798(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34678)
static void C_fcall f_34678(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34797)
static void C_ccall f_34797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34793)
static void C_ccall f_34793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34785)
static void C_ccall f_34785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34749)
static void C_fcall f_34749(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34782)
static void C_ccall f_34782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34778)
static void C_ccall f_34778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34759)
static void C_ccall f_34759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34738)
static void C_ccall f_34738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34708)
static void C_fcall f_34708(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34680)
static void C_fcall f_34680(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34657)
static void C_ccall f_34657(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34662)
static void C_ccall f_34662(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34667)
static void C_ccall f_34667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34635)
static void C_fcall f_34635(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34639)
static void C_ccall f_34639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34591)
static void C_fcall f_34591(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34595)
static void C_ccall f_34595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34582)
static void C_fcall f_34582(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34586)
static void C_ccall f_34586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34570)
static void C_ccall f_34570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34567)
static void C_ccall f_34567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34553)
static void C_ccall f_34553(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34558)
static void C_ccall f_34558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34539)
static void C_ccall f_34539(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34544)
static void C_ccall f_34544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34349)
static void C_ccall f_34349(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34410)
static void C_ccall f_34410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34412)
static void C_fcall f_34412(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34422)
static void C_ccall f_34422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34441)
static void C_fcall f_34441(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34481)
static void C_ccall f_34481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34523)
static void C_ccall f_34523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34493)
static void C_ccall f_34493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34478)
static void C_fcall f_34478(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34396)
static void C_ccall f_34396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34361)
static void C_ccall f_34361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34388)
static void C_ccall f_34388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34369)
static void C_ccall f_34369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34376)
static void C_ccall f_34376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34380)
static void C_ccall f_34380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34384)
static void C_ccall f_34384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34461)
static void C_ccall f_34461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34439)
static void C_ccall f_34439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34425)
static void C_ccall f_34425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34428)
static void C_ccall f_34428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34403)
static void C_ccall f_34403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34332)
static void C_ccall f_34332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34337)
static void C_ccall f_34337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34275)
static void C_ccall f_34275(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34275)
static void C_ccall f_34275r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34308)
static void C_fcall f_34308(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34288)
static void C_fcall f_34288(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34296)
static void C_ccall f_34296(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34279)
static void C_ccall f_34279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34218)
static void C_ccall f_34218(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34218)
static void C_ccall f_34218r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34251)
static void C_fcall f_34251(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34231)
static void C_fcall f_34231(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34239)
static void C_ccall f_34239(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34222)
static void C_ccall f_34222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34128)
static void C_ccall f_34128(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34182)
static void C_ccall f_34182(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34177)
static void C_ccall f_34177(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34140)
static void C_ccall f_34140(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34146)
static void C_ccall f_34146(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34172)
static void C_ccall f_34172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34176)
static void C_ccall f_34176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34152)
static void C_ccall f_34152(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34170)
static void C_ccall f_34170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34167)
static void C_ccall f_34167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34163)
static void C_ccall f_34163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34156)
static void C_ccall f_34156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34113)
static void C_ccall f_34113(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34118)
static void C_ccall f_34118(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34085)
static void C_ccall f_34085(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34090)
static void C_ccall f_34090(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34057)
static void C_ccall f_34057(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34062)
static void C_ccall f_34062(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34029)
static void C_ccall f_34029(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34034)
static void C_ccall f_34034(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34001)
static void C_ccall f_34001(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_34006)
static void C_ccall f_34006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33973)
static void C_ccall f_33973(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_33978)
static void C_ccall f_33978(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33945)
static void C_ccall f_33945(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_33950)
static void C_ccall f_33950(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33917)
static void C_ccall f_33917(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33922)
static void C_ccall f_33922(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33889)
static void C_ccall f_33889(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33894)
static void C_ccall f_33894(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33861)
static void C_ccall f_33861(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33866)
static void C_ccall f_33866(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33838)
static void C_ccall f_33838(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33843)
static void C_ccall f_33843(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33842)
static void C_ccall f_33842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33819)
static void C_ccall f_33819(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33824)
static void C_ccall f_33824(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33764)
static void C_ccall f_33764(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33771)
static void C_ccall f_33771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33774)
static void C_ccall f_33774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33798)
static void C_ccall f_33798(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33778)
static void C_ccall f_33778(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33768)
static void C_ccall f_33768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33717)
static void C_ccall f_33717(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33724)
static void C_ccall f_33724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33727)
static void C_ccall f_33727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33747)
static void C_ccall f_33747(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33731)
static void C_ccall f_33731(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33694)
static void C_ccall f_33694(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33699)
static void C_ccall f_33699(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33698)
static void C_ccall f_33698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33675)
static void C_ccall f_33675(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33680)
static void C_ccall f_33680(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33652)
static void C_ccall f_33652(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33657)
static void C_ccall f_33657(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33656)
static void C_ccall f_33656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33633)
static void C_ccall f_33633(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33638)
static void C_ccall f_33638(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33614)
static void C_ccall f_33614(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33619)
static void C_ccall f_33619(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33618)
static void C_ccall f_33618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33599)
static void C_ccall f_33599(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33604)
static void C_ccall f_33604(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33580)
static void C_ccall f_33580(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33585)
static void C_ccall f_33585(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33584)
static void C_ccall f_33584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33565)
static void C_ccall f_33565(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33570)
static void C_ccall f_33570(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33550)
static void C_ccall f_33550(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33555)
static void C_ccall f_33555(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33532)
static void C_ccall f_33532(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33540)
static void C_ccall f_33540(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33536)
static void C_ccall f_33536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33062)
static void C_ccall f_33062(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_33062)
static void C_ccall f_33062r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_33490)
static void C_ccall f_33490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33505)
static void C_ccall f_33505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33497)
static void C_ccall f_33497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33461)
static void C_ccall f_33461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33465)
static void C_ccall f_33465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33426)
static void C_ccall f_33426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33430)
static void C_ccall f_33430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33391)
static void C_ccall f_33391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33395)
static void C_ccall f_33395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33066)
static void C_fcall f_33066(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33355)
static void C_ccall f_33355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33370)
static void C_ccall f_33370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33362)
static void C_ccall f_33362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33326)
static void C_ccall f_33326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33330)
static void C_ccall f_33330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33291)
static void C_ccall f_33291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33295)
static void C_ccall f_33295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33256)
static void C_ccall f_33256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33260)
static void C_ccall f_33260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33069)
static void C_fcall f_33069(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33220)
static void C_ccall f_33220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33235)
static void C_ccall f_33235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33227)
static void C_ccall f_33227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33191)
static void C_ccall f_33191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33195)
static void C_ccall f_33195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33156)
static void C_ccall f_33156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33160)
static void C_ccall f_33160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33121)
static void C_ccall f_33121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33125)
static void C_ccall f_33125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33072)
static void C_fcall f_33072(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33075)
static void C_ccall f_33075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33079)
static void C_ccall f_33079(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33043)
static void C_ccall f_33043(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33048)
static void C_ccall f_33048(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32592)
static void C_ccall f_32592(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32592)
static void C_ccall f_32592r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_33020)
static void C_ccall f_33020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33035)
static void C_ccall f_33035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33027)
static void C_ccall f_33027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32991)
static void C_ccall f_32991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32995)
static void C_ccall f_32995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32956)
static void C_ccall f_32956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32960)
static void C_ccall f_32960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32921)
static void C_ccall f_32921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32925)
static void C_ccall f_32925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32596)
static void C_fcall f_32596(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32885)
static void C_ccall f_32885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32900)
static void C_ccall f_32900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32892)
static void C_ccall f_32892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32856)
static void C_ccall f_32856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32860)
static void C_ccall f_32860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32821)
static void C_ccall f_32821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32825)
static void C_ccall f_32825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32786)
static void C_ccall f_32786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32790)
static void C_ccall f_32790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32599)
static void C_fcall f_32599(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32750)
static void C_ccall f_32750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32765)
static void C_ccall f_32765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32757)
static void C_ccall f_32757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32721)
static void C_ccall f_32721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32725)
static void C_ccall f_32725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32686)
static void C_ccall f_32686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32690)
static void C_ccall f_32690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32651)
static void C_ccall f_32651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32655)
static void C_ccall f_32655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32602)
static void C_fcall f_32602(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32605)
static void C_ccall f_32605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32609)
static void C_ccall f_32609(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_32573)
static void C_ccall f_32573(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32578)
static void C_ccall f_32578(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32122)
static void C_ccall f_32122(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32122)
static void C_ccall f_32122r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32550)
static void C_ccall f_32550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32565)
static void C_ccall f_32565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32557)
static void C_ccall f_32557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32521)
static void C_ccall f_32521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32525)
static void C_ccall f_32525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32486)
static void C_ccall f_32486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32490)
static void C_ccall f_32490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32451)
static void C_ccall f_32451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32455)
static void C_ccall f_32455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32126)
static void C_fcall f_32126(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32415)
static void C_ccall f_32415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32430)
static void C_ccall f_32430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32422)
static void C_ccall f_32422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32386)
static void C_ccall f_32386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32390)
static void C_ccall f_32390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32351)
static void C_ccall f_32351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32355)
static void C_ccall f_32355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32316)
static void C_ccall f_32316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32320)
static void C_ccall f_32320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32129)
static void C_fcall f_32129(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32280)
static void C_ccall f_32280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32295)
static void C_ccall f_32295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32287)
static void C_ccall f_32287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32251)
static void C_ccall f_32251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32255)
static void C_ccall f_32255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32216)
static void C_ccall f_32216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32220)
static void C_ccall f_32220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32181)
static void C_ccall f_32181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32185)
static void C_ccall f_32185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32132)
static void C_fcall f_32132(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32135)
static void C_ccall f_32135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32139)
static void C_ccall f_32139(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_32103)
static void C_ccall f_32103(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32108)
static void C_ccall f_32108(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31374)
static void C_ccall f_31374(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_31374)
static void C_ccall f_31374r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32080)
static void C_ccall f_32080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32095)
static void C_ccall f_32095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32087)
static void C_ccall f_32087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32051)
static void C_ccall f_32051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32055)
static void C_ccall f_32055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32016)
static void C_ccall f_32016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32020)
static void C_ccall f_32020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31981)
static void C_ccall f_31981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31985)
static void C_ccall f_31985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31946)
static void C_ccall f_31946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31950)
static void C_ccall f_31950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31378)
static void C_fcall f_31378(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31910)
static void C_ccall f_31910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31925)
static void C_ccall f_31925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31917)
static void C_ccall f_31917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31881)
static void C_ccall f_31881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31885)
static void C_ccall f_31885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31846)
static void C_ccall f_31846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31850)
static void C_ccall f_31850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31811)
static void C_ccall f_31811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31815)
static void C_ccall f_31815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31776)
static void C_ccall f_31776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31780)
static void C_ccall f_31780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31381)
static void C_fcall f_31381(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31740)
static void C_ccall f_31740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31755)
static void C_ccall f_31755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31747)
static void C_ccall f_31747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31711)
static void C_ccall f_31711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31715)
static void C_ccall f_31715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31676)
static void C_ccall f_31676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31680)
static void C_ccall f_31680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31641)
static void C_ccall f_31641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31645)
static void C_ccall f_31645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31606)
static void C_ccall f_31606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31610)
static void C_ccall f_31610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31384)
static void C_fcall f_31384(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31570)
static void C_ccall f_31570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31585)
static void C_ccall f_31585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31577)
static void C_ccall f_31577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31541)
static void C_ccall f_31541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31545)
static void C_ccall f_31545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31506)
static void C_ccall f_31506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31510)
static void C_ccall f_31510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31471)
static void C_ccall f_31471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31475)
static void C_ccall f_31475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31436)
static void C_ccall f_31436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31440)
static void C_ccall f_31440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31387)
static void C_fcall f_31387(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31390)
static void C_ccall f_31390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31394)
static void C_ccall f_31394(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31355)
static void C_ccall f_31355(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31360)
static void C_ccall f_31360(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30626)
static void C_ccall f_30626(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_30626)
static void C_ccall f_30626r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_31332)
static void C_ccall f_31332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31347)
static void C_ccall f_31347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31339)
static void C_ccall f_31339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31303)
static void C_ccall f_31303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31307)
static void C_ccall f_31307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31268)
static void C_ccall f_31268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31272)
static void C_ccall f_31272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31233)
static void C_ccall f_31233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31237)
static void C_ccall f_31237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31198)
static void C_ccall f_31198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31202)
static void C_ccall f_31202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30630)
static void C_fcall f_30630(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31162)
static void C_ccall f_31162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31177)
static void C_ccall f_31177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31169)
static void C_ccall f_31169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31133)
static void C_ccall f_31133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31137)
static void C_ccall f_31137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31098)
static void C_ccall f_31098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31102)
static void C_ccall f_31102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31063)
static void C_ccall f_31063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31067)
static void C_ccall f_31067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31028)
static void C_ccall f_31028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31032)
static void C_ccall f_31032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30633)
static void C_fcall f_30633(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30992)
static void C_ccall f_30992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31007)
static void C_ccall f_31007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30999)
static void C_ccall f_30999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30963)
static void C_ccall f_30963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30967)
static void C_ccall f_30967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30928)
static void C_ccall f_30928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30932)
static void C_ccall f_30932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30893)
static void C_ccall f_30893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30897)
static void C_ccall f_30897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30858)
static void C_ccall f_30858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30862)
static void C_ccall f_30862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30636)
static void C_fcall f_30636(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30822)
static void C_ccall f_30822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30837)
static void C_ccall f_30837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30829)
static void C_ccall f_30829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30793)
static void C_ccall f_30793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30797)
static void C_ccall f_30797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30758)
static void C_ccall f_30758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30762)
static void C_ccall f_30762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30723)
static void C_ccall f_30723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30727)
static void C_ccall f_30727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30688)
static void C_ccall f_30688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30692)
static void C_ccall f_30692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30639)
static void C_fcall f_30639(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30642)
static void C_ccall f_30642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30646)
static void C_ccall f_30646(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_30607)
static void C_ccall f_30607(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30612)
static void C_ccall f_30612(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30156)
static void C_ccall f_30156(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_30156)
static void C_ccall f_30156r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_30584)
static void C_ccall f_30584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30599)
static void C_ccall f_30599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30591)
static void C_ccall f_30591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30555)
static void C_ccall f_30555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30559)
static void C_ccall f_30559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30520)
static void C_ccall f_30520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30524)
static void C_ccall f_30524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30485)
static void C_ccall f_30485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30489)
static void C_ccall f_30489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30160)
static void C_fcall f_30160(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30449)
static void C_ccall f_30449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30464)
static void C_ccall f_30464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30456)
static void C_ccall f_30456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30420)
static void C_ccall f_30420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30424)
static void C_ccall f_30424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30385)
static void C_ccall f_30385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30389)
static void C_ccall f_30389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30350)
static void C_ccall f_30350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30354)
static void C_ccall f_30354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30163)
static void C_fcall f_30163(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30314)
static void C_ccall f_30314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30329)
static void C_ccall f_30329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30321)
static void C_ccall f_30321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30285)
static void C_ccall f_30285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30289)
static void C_ccall f_30289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30250)
static void C_ccall f_30250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30254)
static void C_ccall f_30254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30215)
static void C_ccall f_30215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30219)
static void C_ccall f_30219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30166)
static void C_fcall f_30166(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30169)
static void C_ccall f_30169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30173)
static void C_ccall f_30173(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_30137)
static void C_ccall f_30137(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30142)
static void C_ccall f_30142(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29408)
static void C_ccall f_29408(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_29408)
static void C_ccall f_29408r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_30114)
static void C_ccall f_30114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30129)
static void C_ccall f_30129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30121)
static void C_ccall f_30121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30085)
static void C_ccall f_30085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30089)
static void C_ccall f_30089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30050)
static void C_ccall f_30050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30054)
static void C_ccall f_30054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30015)
static void C_ccall f_30015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30019)
static void C_ccall f_30019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29980)
static void C_ccall f_29980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29984)
static void C_ccall f_29984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29412)
static void C_fcall f_29412(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29944)
static void C_ccall f_29944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29959)
static void C_ccall f_29959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29951)
static void C_ccall f_29951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29915)
static void C_ccall f_29915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29919)
static void C_ccall f_29919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29880)
static void C_ccall f_29880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29884)
static void C_ccall f_29884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29845)
static void C_ccall f_29845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29849)
static void C_ccall f_29849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29810)
static void C_ccall f_29810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29814)
static void C_ccall f_29814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29415)
static void C_fcall f_29415(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29774)
static void C_ccall f_29774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29789)
static void C_ccall f_29789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29781)
static void C_ccall f_29781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29745)
static void C_ccall f_29745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29749)
static void C_ccall f_29749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29710)
static void C_ccall f_29710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29714)
static void C_ccall f_29714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29675)
static void C_ccall f_29675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29679)
static void C_ccall f_29679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29640)
static void C_ccall f_29640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29644)
static void C_ccall f_29644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29418)
static void C_fcall f_29418(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29604)
static void C_ccall f_29604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29619)
static void C_ccall f_29619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29611)
static void C_ccall f_29611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29575)
static void C_ccall f_29575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29579)
static void C_ccall f_29579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29540)
static void C_ccall f_29540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29544)
static void C_ccall f_29544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29505)
static void C_ccall f_29505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29509)
static void C_ccall f_29509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29470)
static void C_ccall f_29470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29474)
static void C_ccall f_29474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29421)
static void C_fcall f_29421(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29424)
static void C_ccall f_29424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29428)
static void C_ccall f_29428(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_29070)
static void C_fcall f_29070(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28910)
static void C_fcall f_28910(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28945)
static void C_fcall f_28945(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_28955)
static void C_fcall f_28955(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28959)
static void C_ccall f_28959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28962)
static void C_ccall f_28962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29023)
static void C_ccall f_29023(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29014)
static void C_ccall f_29014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28965)
static void C_ccall f_28965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28984)
static void C_ccall f_28984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28991)
static void C_ccall f_28991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28968)
static void C_ccall f_28968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28974)
static void C_ccall f_28974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28943)
static void C_ccall f_28943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28918)
static void C_fcall f_28918(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28917)
static void C_ccall f_28917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29078)
static void C_fcall f_29078(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28656)
static void C_ccall f_28656(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28678)
static void C_ccall f_28678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28693)
static void C_ccall f_28693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28696)
static void C_fcall f_28696(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28872)
static void C_ccall f_28872(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28866)
static void C_ccall f_28866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28699)
static void C_ccall f_28699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28848)
static void C_ccall f_28848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28702)
static void C_fcall f_28702(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28705)
static void C_ccall f_28705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28841)
static void C_ccall f_28841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28829)
static void C_ccall f_28829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28725)
static void C_fcall f_28725(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28732)
static void C_ccall f_28732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28802)
static void C_ccall f_28802(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28788)
static void C_ccall f_28788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28796)
static void C_ccall f_28796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28735)
static void C_ccall f_28735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28774)
static void C_ccall f_28774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28738)
static void C_fcall f_28738(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28767)
static void C_ccall f_28767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28744)
static void C_ccall f_28744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28747)
static void C_ccall f_28747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28751)
static void C_ccall f_28751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28712)
static void C_fcall f_28712(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28715)
static void C_ccall f_28715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28525)
static void C_fcall f_28525(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28534)
static void C_fcall f_28534(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28482)
static void C_ccall f_28482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28488)
static void C_fcall f_28488(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28551)
static void C_ccall f_28551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28637)
static void C_ccall f_28637(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28624)
static void C_ccall f_28624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28632)
static void C_ccall f_28632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28554)
static void C_ccall f_28554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28558)
static void C_ccall f_28558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28601)
static void C_ccall f_28601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28563)
static void C_ccall f_28563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28529)
static void C_ccall f_28529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28424)
static void C_ccall f_28424(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28431)
static void C_ccall f_28431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28462)
static void C_ccall f_28462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28458)
static void C_ccall f_28458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28450)
static void C_ccall f_28450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28333)
static void C_ccall f_28333(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28340)
static void C_ccall f_28340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28408)
static void C_ccall f_28408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28351)
static void C_fcall f_28351(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28378)
static void C_ccall f_28378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28362)
static void C_ccall f_28362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28267)
static void C_ccall f_28267(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28278)
static void C_ccall f_28278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28281)
static void C_fcall f_28281(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28288)
static void C_ccall f_28288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28261)
static void C_ccall f_28261(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27715)
static void C_ccall f_27715(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27746)
static void C_ccall f_27746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28210)
static void C_ccall f_28210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28216)
static void C_ccall f_28216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27757)
static void C_ccall f_27757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27642)
static void C_fcall f_27642(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27667)
static void C_ccall f_27667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27602)
static void C_fcall f_27602(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27615)
static void C_fcall f_27615(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27656)
static void C_ccall f_27656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27761)
static void C_ccall f_27761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28198)
static void C_ccall f_28198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28194)
static void C_fcall f_28194(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28190)
static void C_ccall f_28190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27764)
static void C_ccall f_27764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27984)
static void C_fcall f_27984(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28093)
static void C_ccall f_28093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28158)
static void C_ccall f_28158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28100)
static void C_fcall f_28100(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28104)
static void C_ccall f_28104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28108)
static void C_ccall f_28108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28150)
static void C_ccall f_28150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28146)
static void C_ccall f_28146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28124)
static void C_ccall f_28124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27987)
static void C_fcall f_27987(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27990)
static void C_fcall f_27990(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27889)
static void C_ccall f_27889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27972)
static void C_ccall f_27972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27939)
static void C_ccall f_27939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27965)
static void C_ccall f_27965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27947)
static void C_ccall f_27947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27895)
static void C_fcall f_27895(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27935)
static void C_ccall f_27935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27877)
static void C_ccall f_27877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27848)
static void C_ccall f_27848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27870)
static void C_ccall f_27870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27856)
static void C_ccall f_27856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27810)
static void C_fcall f_27810(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27767)
static void C_fcall f_27767(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27778)
static void C_ccall f_27778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27782)
static void C_ccall f_27782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27786)
static void C_ccall f_27786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27790)
static void C_ccall f_27790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27774)
static void C_ccall f_27774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27734)
static void C_fcall f_27734(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27729)
static void C_fcall f_27729(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27724)
static void C_fcall f_27724(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27556)
static void C_ccall f_27556(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27567)
static void C_ccall f_27567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27582)
static void C_ccall f_27582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27518)
static void C_ccall f_27518(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27529)
static void C_ccall f_27529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27544)
static void C_ccall f_27544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27451)
static void C_ccall f_27451(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27471)
static void C_fcall f_27471(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27481)
static void C_ccall f_27481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27494)
static void C_ccall f_27494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27462)
static void C_ccall f_27462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27469)
static void C_ccall f_27469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27258)
static void C_ccall f_27258(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27318)
static void C_fcall f_27318(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27328)
static void C_ccall f_27328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27442)
static void C_ccall f_27442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27407)
static void C_ccall f_27407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27399)
static void C_ccall f_27399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27370)
static void C_ccall f_27370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27348)
static void C_ccall f_27348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27351)
static void C_ccall f_27351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27339)
static void C_ccall f_27339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27265)
static void C_ccall f_27265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27316)
static void C_ccall f_27316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27308)
static void C_ccall f_27308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27268)
static void C_ccall f_27268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27279)
static void C_ccall f_27279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27283)
static void C_ccall f_27283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27275)
static void C_ccall f_27275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27116)
static void C_ccall f_27116(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27164)
static void C_fcall f_27164(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27174)
static void C_ccall f_27174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27185)
static void C_ccall f_27185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27222)
static void C_ccall f_27222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27197)
static void C_ccall f_27197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27188)
static void C_ccall f_27188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27126)
static void C_ccall f_27126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27162)
static void C_ccall f_27162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27133)
static void C_ccall f_27133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26765)
static void C_ccall f_26765(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26772)
static void C_ccall f_26772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27006)
static void C_fcall f_27006(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27016)
static void C_ccall f_27016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27027)
static void C_ccall f_27027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27039)
static void C_fcall f_27039(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27042)
static void C_ccall f_27042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27030)
static void C_ccall f_27030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26778)
static void C_ccall f_26778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27004)
static void C_ccall f_27004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27000)
static void C_ccall f_27000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26946)
static void C_fcall f_26946(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26911)
static void C_fcall f_26911(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26927)
static void C_fcall f_26927(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26882)
static void C_fcall f_26882(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26806)
static void C_ccall f_26806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26809)
static void C_ccall f_26809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26873)
static void C_ccall f_26873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26869)
static void C_ccall f_26869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26789)
static void C_fcall f_26789(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26800)
static void C_ccall f_26800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26796)
static void C_ccall f_26796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26718)
static void C_ccall f_26718(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26751)
static void C_ccall f_26751(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26733)
static void C_ccall f_26733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26745)
static void C_ccall f_26745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26336)
static void C_ccall f_26336(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26545)
static void C_fcall f_26545(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26555)
static void C_ccall f_26555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26566)
static void C_ccall f_26566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26686)
static void C_ccall f_26686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26665)
static void C_ccall f_26665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26644)
static void C_ccall f_26644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26623)
static void C_ccall f_26623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26602)
static void C_ccall f_26602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26581)
static void C_ccall f_26581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26569)
static void C_ccall f_26569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26346)
static void C_ccall f_26346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26349)
static void C_fcall f_26349(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26512)
static void C_fcall f_26512(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26352)
static void C_fcall f_26352(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26503)
static void C_ccall f_26503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26483)
static void C_ccall f_26483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26355)
static void C_fcall f_26355(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26448)
static void C_ccall f_26448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26465)
static void C_ccall f_26465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26358)
static void C_fcall f_26358(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26397)
static void C_ccall f_26397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26431)
static void C_ccall f_26431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26415)
static void C_ccall f_26415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26400)
static void C_fcall f_26400(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26365)
static void C_fcall f_26365(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26376)
static void C_ccall f_26376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26380)
static void C_ccall f_26380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26372)
static void C_ccall f_26372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26254)
static void C_ccall f_26254(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26258)
static void C_ccall f_26258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26276)
static void C_ccall f_26276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26094)
static void C_fcall f_26094(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26102)
static void C_fcall f_26102(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26112)
static void C_ccall f_26112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26150)
static void C_ccall f_26150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26153)
static void C_ccall f_26153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26156)
static void C_ccall f_26156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26231)
static void C_fcall f_26231(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26241)
static void C_ccall f_26241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26159)
static void C_ccall f_26159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26162)
static void C_ccall f_26162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26165)
static void C_ccall f_26165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26185)
static void C_fcall f_26185(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26195)
static void C_ccall f_26195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26198)
static void C_ccall f_26198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26201)
static void C_ccall f_26201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26168)
static void C_ccall f_26168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26171)
static void C_ccall f_26171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26088)
static void C_fcall f_26088(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26082)
static void C_fcall f_26082(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26076)
static void C_fcall f_26076(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26005)
static void C_fcall f_26005(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26046)
static void C_ccall f_26046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26050)
static void C_ccall f_26050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26054)
static void C_ccall f_26054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26058)
static void C_ccall f_26058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26062)
static void C_ccall f_26062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26066)
static void C_ccall f_26066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26070)
static void C_ccall f_26070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26074)
static void C_ccall f_26074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26007)
static void C_fcall f_26007(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26013)
static void C_fcall f_26013(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26035)
static void C_ccall f_26035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26024)
static void C_ccall f_26024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25854)
static void C_fcall f_25854(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25869)
static void C_fcall f_25869(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25882)
static void C_ccall f_25882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25842)
static void C_ccall f_25842(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25830)
static void C_ccall f_25830(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25818)
static void C_ccall f_25818(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25812)
static void C_fcall f_25812(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25806)
static void C_ccall f_25806(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25794)
static void C_ccall f_25794(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25782)
static void C_ccall f_25782(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25770)
static void C_ccall f_25770(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25758)
static void C_ccall f_25758(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25752)
static void C_fcall f_25752(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25716)
static void C_ccall f_25716(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25710)
static void C_ccall f_25710(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25663)
static void C_ccall f_25663(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25667)
static void C_ccall f_25667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25683)
static void C_ccall f_25683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25692)
static void C_ccall f_25692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25670)
static void C_ccall f_25670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25654)
static void C_ccall f_25654(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25658)
static void C_ccall f_25658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25501)
static void C_ccall f_25501(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25501)
static void C_ccall f_25501r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_25628)
static void C_fcall f_25628(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25641)
static void C_ccall f_25641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25623)
static void C_ccall f_25623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25504)
static void C_fcall f_25504(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25620)
static void C_ccall f_25620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25604)
static void C_ccall f_25604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25532)
static void C_ccall f_25532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25540)
static void C_fcall f_25540(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25550)
static void C_ccall f_25550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25553)
static void C_ccall f_25553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25535)
static void C_ccall f_25535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25324)
static void C_ccall f_25324(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_25328)
static void C_ccall f_25328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25333)
static void C_ccall f_25333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25336)
static void C_fcall f_25336(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23071)
static void C_ccall f_23071(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23084)
static void C_ccall f_23084(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23091)
static void C_fcall f_23091(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23098)
static void C_ccall f_23098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23077)
static void C_ccall f_23077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25340)
static void C_ccall f_25340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25377)
static void C_ccall f_25377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25470)
static void C_fcall f_25470(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25480)
static void C_fcall f_25480(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25383)
static void C_ccall f_25383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25440)
static void C_fcall f_25440(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25450)
static void C_fcall f_25450(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25391)
static void C_ccall f_25391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25405)
static void C_ccall f_25405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25409)
static void C_ccall f_25409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25413)
static void C_ccall f_25413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25417)
static void C_ccall f_25417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25424)
static void C_ccall f_25424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25401)
static void C_ccall f_25401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25394)
static void C_ccall f_25394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25343)
static void C_ccall f_25343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24198)
static void C_ccall f_24198(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24211)
static void C_ccall f_24211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24261)
static void C_ccall f_24261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24358)
static void C_ccall f_24358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24426)
static void C_ccall f_24426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24683)
static void C_ccall f_24683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24433)
static void C_fcall f_24433(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24671)
static void C_ccall f_24671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24622)
static void C_ccall f_24622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24628)
static void C_ccall f_24628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24652)
static void C_ccall f_24652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24648)
static void C_ccall f_24648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24636)
static void C_ccall f_24636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24436)
static void C_fcall f_24436(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24598)
static void C_ccall f_24598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24602)
static void C_ccall f_24602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24439)
static void C_fcall f_24439(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24575)
static void C_ccall f_24575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24579)
static void C_ccall f_24579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24442)
static void C_fcall f_24442(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24552)
static void C_ccall f_24552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24556)
static void C_ccall f_24556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24445)
static void C_fcall f_24445(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24477)
static void C_ccall f_24477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24495)
static void C_ccall f_24495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24513)
static void C_ccall f_24513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24531)
static void C_ccall f_24531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24448)
static void C_fcall f_24448(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24452)
static void C_ccall f_24452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24362)
static void C_ccall f_24362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24366)
static void C_ccall f_24366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24370)
static void C_ccall f_24370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24265)
static void C_ccall f_24265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24269)
static void C_ccall f_24269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24273)
static void C_ccall f_24273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24292)
static void C_ccall f_24292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24296)
static void C_ccall f_24296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24276)
static void C_fcall f_24276(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24280)
static void C_ccall f_24280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24215)
static void C_ccall f_24215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24219)
static void C_ccall f_24219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24223)
static void C_ccall f_24223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24205)
static void C_fcall f_24205(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24020)
static void C_fcall f_24020(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24032)
static void C_fcall f_24032(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24051)
static void C_ccall f_24051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24069)
static void C_fcall f_24069(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24101)
static void C_ccall f_24101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24104)
static void C_fcall f_24104(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24097)
static void C_ccall f_24097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24083)
static void C_ccall f_24083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24054)
static void C_ccall f_24054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23999)
static void C_fcall f_23999(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24006)
static void C_ccall f_24006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24009)
static void C_ccall f_24009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24015)
static void C_ccall f_24015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23934)
static void C_fcall f_23934(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23943)
static void C_fcall f_23943(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23966)
static void C_ccall f_23966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23956)
static void C_fcall f_23956(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23890)
static void C_fcall f_23890(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23878)
static void C_fcall f_23878(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23776)
static void C_fcall f_23776(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23728)
static void C_fcall f_23728(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23109)
static void C_fcall f_23109(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_23113)
static void C_ccall f_23113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23116)
static void C_ccall f_23116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23542)
static void C_ccall f_23542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23538)
static void C_ccall f_23538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23534)
static void C_ccall f_23534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23119)
static void C_fcall f_23119(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23242)
static void C_ccall f_23242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22475)
static void C_ccall f_22475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23248)
static void C_fcall f_23248(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22491)
static void C_ccall f_22491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23336)
static void C_fcall f_23336(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23406)
static void C_ccall f_23406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22507)
static void C_ccall f_22507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23409)
static void C_fcall f_23409(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22539)
static void C_ccall f_22539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23487)
static void C_fcall f_23487(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23513)
static void C_ccall f_23513(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23507)
static void C_ccall f_23507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23496)
static void C_ccall f_23496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23438)
static void C_fcall f_23438(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23448)
static void C_ccall f_23448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23474)
static void C_ccall f_23474(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23468)
static void C_ccall f_23468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23451)
static void C_ccall f_23451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23461)
static void C_ccall f_23461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23454)
static void C_fcall f_23454(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23415)
static void C_ccall f_23415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23424)
static void C_ccall f_23424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23418)
static void C_fcall f_23418(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23342)
static void C_ccall f_23342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23360)
static void C_fcall f_23360(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23393)
static void C_ccall f_23393(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23379)
static void C_ccall f_23379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23387)
static void C_ccall f_23387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23370)
static void C_ccall f_23370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23345)
static void C_ccall f_23345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23257)
static void C_ccall f_23257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23279)
static void C_fcall f_23279(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23326)
static void C_ccall f_23326(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23312)
static void C_ccall f_23312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23320)
static void C_ccall f_23320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23292)
static void C_ccall f_23292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23295)
static void C_fcall f_23295(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23260)
static void C_ccall f_23260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23277)
static void C_ccall f_23277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23263)
static void C_fcall f_23263(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23128)
static void C_ccall f_23128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23134)
static void C_ccall f_23134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23192)
static void C_ccall f_23192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23195)
static void C_ccall f_23195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23216)
static void C_ccall f_23216(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23227)
static void C_ccall f_23227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23206)
static void C_ccall f_23206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23140)
static void C_ccall f_23140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23150)
static void C_ccall f_23150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23186)
static void C_ccall f_23186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23156)
static void C_ccall f_23156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23171)
static void C_ccall f_23171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23175)
static void C_ccall f_23175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23179)
static void C_ccall f_23179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23163)
static void C_ccall f_23163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23005)
static void C_fcall f_23005(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23007)
static void C_ccall f_23007(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23055)
static void C_ccall f_23055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23011)
static void C_ccall f_23011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23014)
static void C_fcall f_23014(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23019)
static void C_fcall f_23019(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23040)
static void C_ccall f_23040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22997)
static void C_fcall f_22997(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22999)
static void C_ccall f_22999(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22820)
static void C_ccall f_22820(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22820)
static void C_ccall f_22820r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22828)
static void C_ccall f_22828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22789)
static void C_fcall f_22789(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22806)
static void C_ccall f_22806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22810)
static void C_ccall f_22810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22756)
static void C_fcall f_22756(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22763)
static void C_ccall f_22763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22707)
static void C_ccall f_22707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22714)
static void C_ccall f_22714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22772)
static void C_ccall f_22772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22995)
static void C_ccall f_22995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22972)
static void C_ccall f_22972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22988)
static void C_ccall f_22988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22834)
static void C_ccall f_22834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22837)
static void C_ccall f_22837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22861)
static void C_ccall f_22861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22918)
static void C_ccall f_22918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22924)
static void C_ccall f_22924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22933)
static void C_ccall f_22933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22942)
static void C_ccall f_22942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22951)
static void C_ccall f_22951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22960)
static void C_ccall f_22960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22912)
static void C_ccall f_22912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22867)
static void C_ccall f_22867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22873)
static void C_ccall f_22873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22879)
static void C_ccall f_22879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22885)
static void C_ccall f_22885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22891)
static void C_ccall f_22891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22897)
static void C_ccall f_22897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22738)
static void C_fcall f_22738(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22745)
static void C_ccall f_22745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22728)
static void C_fcall f_22728(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22716)
static void C_fcall f_22716(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22684)
static void C_fcall f_22684(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22691)
static void C_ccall f_22691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22698)
static void C_ccall f_22698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22668)
static void C_fcall f_22668(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22675)
static void C_ccall f_22675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22682)
static void C_ccall f_22682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22656)
static void C_fcall f_22656(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22638)
static void C_fcall f_22638(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22620)
static void C_fcall f_22620(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22605)
static void C_fcall f_22605(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22599)
static void C_fcall f_22599(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22587)
static void C_fcall f_22587(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22569)
static void C_fcall f_22569(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22548)
static void C_fcall f_22548(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22516)
static void C_fcall f_22516(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22523)
static void C_ccall f_22523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22458)
static void C_fcall f_22458(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22466)
static void C_ccall f_22466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22448)
static void C_fcall f_22448(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22456)
static void C_ccall f_22456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22442)
static void C_fcall f_22442(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22430)
static void C_fcall f_22430(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22427)
static void C_ccall f_22427(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22406)
static void C_fcall f_22406(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22319)
static void C_fcall f_22319(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22298)
static void C_fcall f_22298(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_22288)
static void C_fcall f_22288(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22276)
static void C_fcall f_22276(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22247)
static void C_ccall f_22247(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22235)
static void C_fcall f_22235(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22217)
static void C_fcall f_22217(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22199)
static void C_fcall f_22199(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22178)
static void C_ccall f_22178(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21156)
static void C_ccall f_21156(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_21156)
static void C_ccall f_21156r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_22155)
static void C_ccall f_22155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22170)
static void C_ccall f_22170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22162)
static void C_ccall f_22162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22126)
static void C_ccall f_22126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22130)
static void C_ccall f_22130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22091)
static void C_ccall f_22091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22095)
static void C_ccall f_22095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21166)
static void C_fcall f_21166(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22055)
static void C_ccall f_22055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22070)
static void C_ccall f_22070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22062)
static void C_ccall f_22062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22026)
static void C_ccall f_22026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22030)
static void C_ccall f_22030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21991)
static void C_ccall f_21991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21995)
static void C_ccall f_21995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21169)
static void C_fcall f_21169(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21172)
static void C_ccall f_21172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21177)
static void C_ccall f_21177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21884)
static void C_fcall f_21884(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21907)
static void C_fcall f_21907(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21960)
static void C_ccall f_21960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21942)
static void C_fcall f_21942(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21935)
static void C_ccall f_21935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21917)
static void C_ccall f_21917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21894)
static void C_ccall f_21894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21371)
static void C_ccall f_21371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21846)
static void C_fcall f_21846(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21868)
static void C_ccall f_21868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21852)
static void C_ccall f_21852(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21860)
static void C_ccall f_21860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21864)
static void C_ccall f_21864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21850)
static void C_ccall f_21850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21840)
static void C_ccall f_21840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21374)
static void C_fcall f_21374(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21717)
static void C_fcall f_21717(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21741)
static void C_ccall f_21741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21803)
static void C_fcall f_21803(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21744)
static void C_ccall f_21744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21760)
static void C_fcall f_21760(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21785)
static void C_ccall f_21785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21751)
static void C_ccall f_21751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21728)
static void C_ccall f_21728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21377)
static void C_ccall f_21377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21703)
static void C_ccall f_21703(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21381)
static void C_ccall f_21381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21425)
static void C_ccall f_21425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21428)
static void C_ccall f_21428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21684)
static void C_fcall f_21684(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21694)
static void C_ccall f_21694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21431)
static void C_ccall f_21431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21622)
static void C_fcall f_21622(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21632)
static void C_ccall f_21632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21635)
static void C_ccall f_21635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21655)
static void C_ccall f_21655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21657)
static void C_fcall f_21657(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21667)
static void C_ccall f_21667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21641)
static void C_ccall f_21641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21644)
static void C_ccall f_21644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21434)
static void C_ccall f_21434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21442)
static void C_fcall f_21442(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21455)
static void C_ccall f_21455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21329)
static void C_ccall f_21329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21338)
static void C_fcall f_21338(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21360)
static void C_ccall f_21360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21349)
static void C_ccall f_21349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21458)
static void C_ccall f_21458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21593)
static void C_ccall f_21593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21595)
static void C_fcall f_21595(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21605)
static void C_ccall f_21605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21464)
static void C_ccall f_21464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21566)
static void C_ccall f_21566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21568)
static void C_fcall f_21568(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21578)
static void C_ccall f_21578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21467)
static void C_ccall f_21467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21479)
static void C_fcall f_21479(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21505)
static void C_ccall f_21505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21511)
static void C_ccall f_21511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21517)
static void C_ccall f_21517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21527)
static void C_ccall f_21527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21529)
static void C_fcall f_21529(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21539)
static void C_ccall f_21539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21520)
static void C_ccall f_21520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21492)
static void C_ccall f_21492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21470)
static void C_ccall f_21470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21437)
static void C_ccall f_21437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21384)
static void C_ccall f_21384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21407)
static void C_ccall f_21407(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21396)
static void C_ccall f_21396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21261)
static void C_fcall f_21261(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21309)
static void C_ccall f_21309(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21271)
static void C_ccall f_21271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21299)
static void C_ccall f_21299(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21274)
static void C_ccall f_21274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21179)
static void C_fcall f_21179(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21251)
static void C_ccall f_21251(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21183)
static void C_ccall f_21183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21201)
static void C_ccall f_21201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21233)
static void C_ccall f_21233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21062)
static void C_ccall f_21062(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21066)
static void C_ccall f_21066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21095)
static void C_ccall f_21095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21100)
static void C_fcall f_21100(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21125)
static void C_fcall f_21125(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21110)
static void C_ccall f_21110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20544)
static void C_ccall f_20544(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_20544)
static void C_ccall f_20544r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_20815)
static void C_ccall f_20815(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20819)
static void C_ccall f_20819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20824)
static void C_ccall f_20824(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_20824)
static void C_ccall f_20824r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_21030)
static void C_ccall f_21030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21045)
static void C_ccall f_21045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21037)
static void C_ccall f_21037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21001)
static void C_ccall f_21001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21005)
static void C_ccall f_21005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20966)
static void C_ccall f_20966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20970)
static void C_ccall f_20970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20828)
static void C_fcall f_20828(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20930)
static void C_ccall f_20930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20945)
static void C_ccall f_20945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20937)
static void C_ccall f_20937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20901)
static void C_ccall f_20901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20905)
static void C_ccall f_20905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20866)
static void C_ccall f_20866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20870)
static void C_ccall f_20870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20831)
static void C_fcall f_20831(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20834)
static void C_ccall f_20834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20837)
static void C_fcall f_20837(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20806)
static void C_ccall f_20806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20548)
static void C_ccall f_20548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20775)
static void C_ccall f_20775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20790)
static void C_ccall f_20790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20782)
static void C_ccall f_20782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20746)
static void C_ccall f_20746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20750)
static void C_ccall f_20750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20711)
static void C_ccall f_20711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20715)
static void C_ccall f_20715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20551)
static void C_fcall f_20551(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20675)
static void C_ccall f_20675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20690)
static void C_ccall f_20690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20682)
static void C_ccall f_20682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20646)
static void C_ccall f_20646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20650)
static void C_ccall f_20650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20611)
static void C_ccall f_20611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20615)
static void C_ccall f_20615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20554)
static void C_fcall f_20554(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20557)
static void C_ccall f_20557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20560)
static void C_ccall f_20560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20572)
static void C_ccall f_20572(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20590)
static void C_ccall f_20590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20578)
static void C_ccall f_20578(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20566)
static void C_ccall f_20566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20481)
static void C_fcall f_20481(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20141)
static void C_ccall f_20141(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20323)
static void C_ccall f_20323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20327)
static void C_ccall f_20327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20329)
static void C_fcall f_20329(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20254)
static void C_fcall f_20254(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20264)
static void C_fcall f_20264(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20271)
static void C_fcall f_20271(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20339)
static void C_ccall f_20339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20342)
static void C_ccall f_20342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20346)
static void C_ccall f_20346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20366)
static void C_fcall f_20366(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20382)
static void C_ccall f_20382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20349)
static void C_ccall f_20349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20144)
static void C_fcall f_20144(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20156)
static void C_fcall f_20156(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20192)
static void C_ccall f_20192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20212)
static void C_ccall f_20212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20217)
static void C_fcall f_20217(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19654)
static void C_ccall f_19654(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_19654)
static void C_ccall f_19654r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_19581)
static void C_fcall f_19581(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_19426)
static void C_ccall f_19426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19432)
static void C_ccall f_19432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19517)
static void C_fcall f_19517(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19444)
static void C_ccall f_19444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19460)
static void C_ccall f_19460(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19464)
static void C_fcall f_19464(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19467)
static void C_fcall f_19467(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19447)
static void C_ccall f_19447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19458)
static void C_ccall f_19458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19598)
static void C_ccall f_19598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20135)
static void C_ccall f_20135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19658)
static void C_ccall f_19658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20104)
static void C_ccall f_20104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20119)
static void C_ccall f_20119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20111)
static void C_ccall f_20111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20075)
static void C_ccall f_20075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20079)
static void C_ccall f_20079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20040)
static void C_ccall f_20040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20044)
static void C_ccall f_20044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20005)
static void C_ccall f_20005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20009)
static void C_ccall f_20009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19661)
static void C_fcall f_19661(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19969)
static void C_ccall f_19969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19984)
static void C_ccall f_19984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19976)
static void C_ccall f_19976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19940)
static void C_ccall f_19940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19944)
static void C_ccall f_19944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19905)
static void C_ccall f_19905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19909)
static void C_ccall f_19909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19870)
static void C_ccall f_19870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19874)
static void C_ccall f_19874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19664)
static void C_fcall f_19664(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19834)
static void C_ccall f_19834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19849)
static void C_ccall f_19849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19841)
static void C_ccall f_19841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19805)
static void C_ccall f_19805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19809)
static void C_ccall f_19809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19770)
static void C_ccall f_19770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19774)
static void C_ccall f_19774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19735)
static void C_ccall f_19735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19739)
static void C_ccall f_19739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19667)
static void C_fcall f_19667(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19670)
static void C_ccall f_19670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19673)
static void C_ccall f_19673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19706)
static void C_ccall f_19706(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19714)
static void C_ccall f_19714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19679)
static void C_ccall f_19679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19692)
static void C_ccall f_19692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19682)
static void C_fcall f_19682(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19685)
static void C_ccall f_19685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19221)
static void C_ccall f_19221(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19225)
static void C_ccall f_19225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19228)
static void C_ccall f_19228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19231)
static void C_ccall f_19231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19400)
static void C_ccall f_19400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19413)
static void C_ccall f_19413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19417)
static void C_ccall f_19417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19237)
static void C_ccall f_19237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19393)
static void C_ccall f_19393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19374)
static void C_ccall f_19374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19381)
static void C_ccall f_19381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19385)
static void C_ccall f_19385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19243)
static void C_fcall f_19243(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19249)
static void C_ccall f_19249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19333)
static void C_ccall f_19333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19335)
static void C_fcall f_19335(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19357)
static void C_ccall f_19357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19364)
static void C_ccall f_19364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19368)
static void C_ccall f_19368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19354)
static void C_fcall f_19354(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19350)
static void C_ccall f_19350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19291)
static void C_ccall f_19291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19308)
static void C_fcall f_19308(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19318)
static void C_ccall f_19318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19294)
static void C_ccall f_19294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19253)
static void C_fcall f_19253(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19261)
static void C_ccall f_19261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19263)
static void C_fcall f_19263(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19284)
static void C_ccall f_19284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19109)
static void C_fcall f_19109(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19219)
static void C_ccall f_19219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19178)
static void C_fcall f_19178(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19211)
static void C_ccall f_19211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19207)
static void C_ccall f_19207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19192)
static void C_ccall f_19192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19116)
static void C_ccall f_19116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19124)
static void C_fcall f_19124(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19169)
static void C_ccall f_19169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19157)
static void C_ccall f_19157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19141)
static void C_ccall f_19141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18342)
static void C_ccall f_18342(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18342)
static void C_ccall f_18342r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_18659)
static void C_ccall f_18659(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18666)
static void C_fcall f_18666(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19071)
static void C_ccall f_19071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19086)
static void C_ccall f_19086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19078)
static void C_ccall f_19078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19042)
static void C_ccall f_19042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19046)
static void C_ccall f_19046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19007)
static void C_ccall f_19007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19011)
static void C_ccall f_19011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18972)
static void C_ccall f_18972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18976)
static void C_ccall f_18976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18669)
static void C_fcall f_18669(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18936)
static void C_ccall f_18936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18951)
static void C_ccall f_18951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18943)
static void C_ccall f_18943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18907)
static void C_ccall f_18907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18911)
static void C_ccall f_18911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18872)
static void C_ccall f_18872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18876)
static void C_ccall f_18876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18837)
static void C_ccall f_18837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18841)
static void C_ccall f_18841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18672)
static void C_fcall f_18672(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18801)
static void C_ccall f_18801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18816)
static void C_ccall f_18816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18808)
static void C_ccall f_18808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18772)
static void C_ccall f_18772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18776)
static void C_ccall f_18776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18737)
static void C_ccall f_18737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18741)
static void C_ccall f_18741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18702)
static void C_ccall f_18702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18706)
static void C_ccall f_18706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18675)
static void C_fcall f_18675(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18678)
static void C_ccall f_18678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18346)
static void C_ccall f_18346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18349)
static void C_ccall f_18349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18623)
static void C_ccall f_18623(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18627)
static void C_ccall f_18627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18630)
static void C_ccall f_18630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18633)
static void C_ccall f_18633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18636)
static void C_ccall f_18636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18649)
static void C_ccall f_18649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18639)
static void C_fcall f_18639(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18355)
static void C_ccall f_18355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18362)
static void C_fcall f_18362(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18593)
static void C_ccall f_18593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18608)
static void C_ccall f_18608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18600)
static void C_ccall f_18600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18564)
static void C_ccall f_18564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18568)
static void C_ccall f_18568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18529)
static void C_ccall f_18529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18533)
static void C_ccall f_18533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18365)
static void C_fcall f_18365(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18493)
static void C_ccall f_18493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18508)
static void C_ccall f_18508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18500)
static void C_ccall f_18500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18464)
static void C_ccall f_18464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18468)
static void C_ccall f_18468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18429)
static void C_ccall f_18429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18433)
static void C_ccall f_18433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18368)
static void C_fcall f_18368(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18371)
static void C_ccall f_18371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18386)
static void C_ccall f_18386(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18408)
static void C_ccall f_18408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18392)
static void C_ccall f_18392(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18400)
static void C_ccall f_18400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18374)
static void C_ccall f_18374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18377)
static void C_ccall f_18377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18259)
static void C_fcall f_18259(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18250)
static void C_fcall f_18250(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18241)
static void C_fcall f_18241(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18223)
static void C_fcall f_18223(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18205)
static void C_fcall f_18205(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18187)
static void C_fcall f_18187(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18178)
static void C_fcall f_18178(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18169)
static void C_fcall f_18169(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17947)
static void C_ccall f_17947(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17997)
static void C_ccall f_17997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18142)
static void C_ccall f_18142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18023)
static void C_ccall f_18023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18138)
static void C_ccall f_18138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18123)
static void C_ccall f_18123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18104)
static void C_ccall f_18104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18077)
static void C_ccall f_18077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18030)
static void C_ccall f_18030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18000)
static void C_fcall f_18000(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17950)
static void C_ccall f_17950(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_17956)
static void C_fcall f_17956(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17972)
static void C_ccall f_17972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17975)
static void C_ccall f_17975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17473)
static void C_ccall f_17473(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_17473)
static void C_ccall f_17473r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_17937)
static void C_ccall f_17937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17477)
static void C_fcall f_17477(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17909)
static void C_ccall f_17909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17924)
static void C_ccall f_17924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17916)
static void C_ccall f_17916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17880)
static void C_ccall f_17880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17884)
static void C_ccall f_17884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17845)
static void C_ccall f_17845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17849)
static void C_ccall f_17849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17810)
static void C_ccall f_17810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17814)
static void C_ccall f_17814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17480)
static void C_fcall f_17480(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17774)
static void C_ccall f_17774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17789)
static void C_ccall f_17789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17781)
static void C_ccall f_17781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17745)
static void C_ccall f_17745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17749)
static void C_ccall f_17749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17710)
static void C_ccall f_17710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17714)
static void C_ccall f_17714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17675)
static void C_ccall f_17675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17679)
static void C_ccall f_17679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17483)
static void C_fcall f_17483(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17639)
static void C_ccall f_17639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17654)
static void C_ccall f_17654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17646)
static void C_ccall f_17646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17610)
static void C_ccall f_17610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17614)
static void C_ccall f_17614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17575)
static void C_ccall f_17575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17579)
static void C_ccall f_17579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17540)
static void C_ccall f_17540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17544)
static void C_ccall f_17544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17486)
static void C_fcall f_17486(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17489)
static void C_ccall f_17489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17492)
static void C_ccall f_17492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17507)
static void C_ccall f_17507(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17519)
static void C_ccall f_17519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17498)
static void C_ccall f_17498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17501)
static void C_ccall f_17501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17397)
static void C_ccall f_17397(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17401)
static void C_ccall f_17401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17420)
static void C_ccall f_17420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17430)
static void C_ccall f_17430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17432)
static void C_fcall f_17432(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17449)
static void C_ccall f_17449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17452)
static void C_ccall f_17452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17463)
static void C_ccall f_17463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17404)
static void C_ccall f_17404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17134)
static void C_ccall f_17134(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_17134)
static void C_ccall f_17134r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_17387)
static void C_ccall f_17387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17138)
static void C_fcall f_17138(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17359)
static void C_ccall f_17359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17374)
static void C_ccall f_17374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17366)
static void C_ccall f_17366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17330)
static void C_ccall f_17330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17334)
static void C_ccall f_17334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17295)
static void C_ccall f_17295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17299)
static void C_ccall f_17299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17141)
static void C_fcall f_17141(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17259)
static void C_ccall f_17259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17274)
static void C_ccall f_17274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17266)
static void C_ccall f_17266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17230)
static void C_ccall f_17230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17234)
static void C_ccall f_17234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17195)
static void C_ccall f_17195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17199)
static void C_ccall f_17199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17144)
static void C_fcall f_17144(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17147)
static void C_ccall f_17147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17150)
static void C_ccall f_17150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17162)
static void C_ccall f_17162(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17174)
static void C_ccall f_17174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17156)
static void C_ccall f_17156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17098)
static void C_ccall f_17098(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17102)
static void C_ccall f_17102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17124)
static void C_ccall f_17124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17118)
static void C_ccall f_17118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17111)
static void C_ccall f_17111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16851)
static void C_ccall f_16851(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16851)
static void C_ccall f_16851r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16855)
static void C_fcall f_16855(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17068)
static void C_ccall f_17068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17083)
static void C_ccall f_17083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17075)
static void C_ccall f_17075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17039)
static void C_ccall f_17039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17043)
static void C_ccall f_17043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17004)
static void C_ccall f_17004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17008)
static void C_ccall f_17008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16858)
static void C_fcall f_16858(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16968)
static void C_ccall f_16968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16983)
static void C_ccall f_16983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16975)
static void C_ccall f_16975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16939)
static void C_ccall f_16939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16943)
static void C_ccall f_16943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16904)
static void C_ccall f_16904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16908)
static void C_ccall f_16908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16861)
static void C_fcall f_16861(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16864)
static void C_ccall f_16864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16867)
static void C_ccall f_16867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16875)
static void C_ccall f_16875(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16883)
static void C_ccall f_16883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16873)
static void C_ccall f_16873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16636)
static void C_ccall f_16636(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16640)
static void C_ccall f_16640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16849)
static void C_ccall f_16849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16802)
static void C_ccall f_16802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16814)
static void C_fcall f_16814(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16670)
static void C_ccall f_16670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16673)
static void C_ccall f_16673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16679)
static void C_ccall f_16679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16682)
static void C_ccall f_16682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16770)
static void C_fcall f_16770(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16685)
static void C_fcall f_16685(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16764)
static void C_ccall f_16764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16691)
static void C_ccall f_16691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16694)
static void C_ccall f_16694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16646)
static void C_ccall f_16646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16649)
static void C_ccall f_16649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16656)
static void C_ccall f_16656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16166)
static void C_ccall f_16166(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16166)
static void C_ccall f_16166r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16170)
static void C_fcall f_16170(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16606)
static void C_ccall f_16606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16621)
static void C_ccall f_16621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16613)
static void C_ccall f_16613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16577)
static void C_ccall f_16577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16581)
static void C_ccall f_16581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16542)
static void C_ccall f_16542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16546)
static void C_ccall f_16546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16507)
static void C_ccall f_16507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16511)
static void C_ccall f_16511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16173)
static void C_fcall f_16173(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16471)
static void C_ccall f_16471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16486)
static void C_ccall f_16486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16478)
static void C_ccall f_16478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16442)
static void C_ccall f_16442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16446)
static void C_ccall f_16446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16407)
static void C_ccall f_16407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16411)
static void C_ccall f_16411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16372)
static void C_ccall f_16372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16376)
static void C_ccall f_16376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16176)
static void C_fcall f_16176(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16336)
static void C_ccall f_16336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16351)
static void C_ccall f_16351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16343)
static void C_ccall f_16343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16307)
static void C_ccall f_16307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16311)
static void C_ccall f_16311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16272)
static void C_ccall f_16272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16276)
static void C_ccall f_16276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16237)
static void C_ccall f_16237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16241)
static void C_ccall f_16241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16179)
static void C_fcall f_16179(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16182)
static void C_ccall f_16182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16185)
static void C_ccall f_16185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16208)
static void C_ccall f_16208(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16216)
static void C_ccall f_16216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16191)
static void C_ccall f_16191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16194)
static void C_ccall f_16194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16086)
static void C_fcall f_16086(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16077)
static void C_fcall f_16077(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16005)
static void C_ccall f_16005(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16009)
static void C_ccall f_16009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16012)
static void C_fcall f_16012(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15750)
static void C_ccall f_15750(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15750)
static void C_ccall f_15750r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15754)
static void C_fcall f_15754(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15975)
static void C_ccall f_15975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15990)
static void C_ccall f_15990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15982)
static void C_ccall f_15982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15946)
static void C_ccall f_15946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15950)
static void C_ccall f_15950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15911)
static void C_ccall f_15911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15915)
static void C_ccall f_15915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15757)
static void C_fcall f_15757(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15875)
static void C_ccall f_15875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15890)
static void C_ccall f_15890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15882)
static void C_ccall f_15882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15846)
static void C_ccall f_15846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15850)
static void C_ccall f_15850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15811)
static void C_ccall f_15811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15815)
static void C_ccall f_15815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15760)
static void C_fcall f_15760(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15763)
static void C_ccall f_15763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15766)
static void C_ccall f_15766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15778)
static void C_ccall f_15778(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15790)
static void C_ccall f_15790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15772)
static void C_ccall f_15772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15635)
static void C_fcall f_15635(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15748)
static void C_ccall f_15748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15645)
static void C_ccall f_15645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15733)
static void C_ccall f_15733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15744)
static void C_ccall f_15744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15740)
static void C_ccall f_15740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15648)
static void C_ccall f_15648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15730)
static void C_ccall f_15730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15656)
static void C_ccall f_15656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15720)
static void C_ccall f_15720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15665)
static void C_ccall f_15665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15684)
static void C_ccall f_15684(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15713)
static void C_ccall f_15713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15694)
static void C_ccall f_15694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15709)
static void C_ccall f_15709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15697)
static void C_ccall f_15697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15668)
static void C_ccall f_15668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15678)
static void C_ccall f_15678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15659)
static void C_fcall f_15659(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15662)
static void C_ccall f_15662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15589)
static void C_fcall f_15589(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15580)
static void C_fcall f_15580(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15279)
static void C_fcall f_15279(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15286)
static void C_ccall f_15286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15575)
static void C_ccall f_15575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15289)
static void C_ccall f_15289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15560)
static void C_ccall f_15560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15552)
static void C_ccall f_15552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15544)
static void C_ccall f_15544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15547)
static void C_ccall f_15547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15515)
static void C_fcall f_15515(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15538)
static void C_ccall f_15538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15521)
static void C_fcall f_15521(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15525)
static void C_ccall f_15525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15292)
static void C_ccall f_15292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15298)
static void C_ccall f_15298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15390)
static void C_ccall f_15390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15502)
static void C_ccall f_15502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15509)
static void C_ccall f_15509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15413)
static void C_fcall f_15413(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15415)
static void C_fcall f_15415(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15464)
static void C_fcall f_15464(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15499)
static void C_ccall f_15499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15488)
static void C_ccall f_15488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15633)
static void C_ccall f_15633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15608)
static void C_ccall f_15608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15629)
static void C_ccall f_15629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15625)
static void C_ccall f_15625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15617)
static void C_ccall f_15617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15481)
static void C_ccall f_15481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15474)
static void C_ccall f_15474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15422)
static void C_ccall f_15422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15462)
static void C_ccall f_15462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15426)
static void C_ccall f_15426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15458)
static void C_ccall f_15458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15445)
static void C_ccall f_15445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15453)
static void C_ccall f_15453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15449)
static void C_ccall f_15449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15429)
static void C_fcall f_15429(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15432)
static void C_ccall f_15432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15406)
static void C_ccall f_15406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15393)
static void C_ccall f_15393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15402)
static void C_ccall f_15402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15397)
static void C_ccall f_15397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15304)
static void C_ccall f_15304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15384)
static void C_ccall f_15384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15364)
static void C_ccall f_15364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15370)
static void C_ccall f_15370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15381)
static void C_ccall f_15381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15361)
static void C_ccall f_15361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15349)
static void C_ccall f_15349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15352)
static void C_ccall f_15352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15307)
static void C_ccall f_15307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15343)
static void C_ccall f_15343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15338)
static void C_ccall f_15338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15310)
static void C_ccall f_15310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15323)
static void C_ccall f_15323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15313)
static void C_fcall f_15313(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15316)
static void C_ccall f_15316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15319)
static void C_ccall f_15319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15156)
static void C_ccall f_15156(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15156)
static void C_ccall f_15156r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15215)
static void C_ccall f_15215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15225)
static void C_ccall f_15225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15227)
static void C_fcall f_15227(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15256)
static void C_ccall f_15256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15261)
static void C_ccall f_15261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15246)
static void C_fcall f_15246(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15177)
static void C_fcall f_15177(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15209)
static void C_ccall f_15209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15137)
static void C_ccall f_15137(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15144)
static void C_ccall f_15144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15151)
static void C_ccall f_15151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15118)
static void C_ccall f_15118(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15125)
static void C_ccall f_15125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15132)
static void C_ccall f_15132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14938)
static void C_fcall f_14938(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9) C_noret;
C_noret_decl(f_14942)
static void C_ccall f_14942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14945)
static void C_ccall f_14945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14948)
static void C_ccall f_14948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14951)
static void C_ccall f_14951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15108)
static void C_ccall f_15108(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15115)
static void C_ccall f_15115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14954)
static void C_ccall f_14954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14957)
static void C_fcall f_14957(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14963)
static void C_ccall f_14963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14969)
static void C_ccall f_14969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15032)
static void C_ccall f_15032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15046)
static void C_ccall f_15046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14972)
static void C_fcall f_14972(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14975)
static void C_ccall f_14975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14981)
static void C_fcall f_14981(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14994)
static void C_ccall f_14994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14984)
static void C_ccall f_14984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14987)
static void C_ccall f_14987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14928)
static void C_fcall f_14928(C_word t0) C_noret;
C_noret_decl(f_14873)
static void C_fcall f_14873(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14864)
static void C_fcall f_14864(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14747)
static void C_fcall f_14747(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14738)
static void C_fcall f_14738(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14729)
static void C_ccall f_14729(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14720)
static void C_fcall f_14720(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14711)
static void C_fcall f_14711(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14693)
static void C_fcall f_14693(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14684)
static void C_fcall f_14684(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14675)
static void C_fcall f_14675(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14657)
static void C_fcall f_14657(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14648)
static void C_fcall f_14648(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14639)
static void C_fcall f_14639(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14624)
static void C_fcall f_14624(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14579)
static void C_fcall f_14579(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14561)
static void C_fcall f_14561(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14552)
static void C_fcall f_14552(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14525)
static void C_fcall f_14525(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14507)
static void C_fcall f_14507(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14489)
static void C_fcall f_14489(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14480)
static void C_fcall f_14480(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14468)
static void C_fcall f_14468(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_14342)
static void C_ccall f_14342(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14348)
static void C_ccall f_14348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14352)
static void C_ccall f_14352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14370)
static void C_ccall f_14370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14373)
static void C_ccall f_14373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14377)
static void C_ccall f_14377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14380)
static void C_ccall f_14380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14432)
static void C_fcall f_14432(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14443)
static void C_ccall f_14443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14383)
static void C_ccall f_14383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14393)
static void C_ccall f_14393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14395)
static void C_fcall f_14395(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14239)
static void C_ccall f_14239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14263)
static void C_ccall f_14263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14267)
static void C_ccall f_14267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14293)
static void C_fcall f_14293(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14303)
static void C_ccall f_14303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14340)
static void C_ccall f_14340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14332)
static void C_ccall f_14332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14270)
static void C_ccall f_14270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14240)
static void C_fcall f_14240(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14244)
static void C_ccall f_14244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14247)
static void C_ccall f_14247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14409)
static void C_ccall f_14409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14412)
static void C_fcall f_14412(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14419)
static void C_ccall f_14419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14353)
static void C_fcall f_14353(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14357)
static void C_ccall f_14357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14360)
static void C_ccall f_14360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13829)
static void C_ccall f_13829(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_13829)
static void C_ccall f_13829r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_14208)
static void C_fcall f_14208(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14202)
static void C_ccall f_14202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13833)
static void C_ccall f_13833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14186)
static void C_ccall f_14186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13836)
static void C_ccall f_13836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14172)
static void C_ccall f_14172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14168)
static void C_ccall f_14168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13839)
static void C_fcall f_13839(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14161)
static void C_ccall f_14161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14157)
static void C_ccall f_14157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13842)
static void C_fcall f_13842(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13845)
static void C_fcall f_13845(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14145)
static void C_ccall f_14145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14137)
static void C_ccall f_14137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14141)
static void C_ccall f_14141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14129)
static void C_ccall f_14129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14133)
static void C_ccall f_14133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14003)
static void C_fcall f_14003(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14118)
static void C_ccall f_14118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14122)
static void C_ccall f_14122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14110)
static void C_ccall f_14110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14114)
static void C_ccall f_14114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14006)
static void C_fcall f_14006(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14010)
static void C_ccall f_14010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14015)
static void C_fcall f_14015(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14025)
static void C_fcall f_14025(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14028)
static void C_ccall f_14028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13909)
static void C_ccall f_13909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13972)
static void C_fcall f_13972(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13993)
static void C_ccall f_13993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13934)
static void C_fcall f_13934(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13963)
static void C_ccall f_13963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13912)
static void C_ccall f_13912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13929)
static void C_ccall f_13929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13925)
static void C_ccall f_13925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13375)
static void C_ccall f_13375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13379)
static void C_ccall f_13379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13367)
static void C_ccall f_13367(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13292)
static void C_ccall f_13292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13353)
static void C_ccall f_13353(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13296)
static void C_ccall f_13296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13304)
static void C_fcall f_13304(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13337)
static void C_ccall f_13337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13314)
static void C_ccall f_13314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13317)
static void C_ccall f_13317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13889)
static void C_fcall f_13889(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13859)
static void C_fcall f_13859(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13848)
static void C_ccall f_13848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13772)
static void C_ccall f_13772(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13780)
static void C_ccall f_13780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13784)
static void C_ccall f_13784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13788)
static void C_ccall f_13788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13794)
static void C_fcall f_13794(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_13804)
static void C_ccall f_13804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13560)
static void C_ccall f_13560(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13628)
static void C_ccall f_13628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13631)
static void C_ccall f_13631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13634)
static void C_ccall f_13634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13637)
static void C_ccall f_13637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13640)
static void C_ccall f_13640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13738)
static void C_fcall f_13738(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13748)
static void C_ccall f_13748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13706)
static void C_fcall f_13706(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13716)
static void C_ccall f_13716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13657)
static void C_fcall f_13657(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13676)
static void C_fcall f_13676(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13686)
static void C_ccall f_13686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13667)
static void C_ccall f_13667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13643)
static void C_ccall f_13643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13596)
static void C_fcall f_13596(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13606)
static void C_ccall f_13606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13579)
static void C_fcall f_13579(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13586)
static void C_ccall f_13586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13562)
static void C_fcall f_13562(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13569)
static void C_ccall f_13569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13381)
static void C_ccall f_13381(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13389)
static void C_ccall f_13389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13393)
static void C_ccall f_13393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13395)
static void C_fcall f_13395(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_13405)
static void C_fcall f_13405(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13536)
static void C_ccall f_13536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13485)
static void C_ccall f_13485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13488)
static void C_ccall f_13488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13499)
static void C_ccall f_13499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13451)
static void C_ccall f_13451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13420)
static void C_ccall f_13420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13423)
static void C_ccall f_13423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13408)
static void C_ccall f_13408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12969)
static void C_ccall f_12969(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13286)
static void C_ccall f_13286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13215)
static void C_ccall f_13215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13217)
static void C_fcall f_13217(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7956)
static void C_ccall f_7956(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13236)
static void C_ccall f_13236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13239)
static void C_fcall f_13239(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12982)
static void C_ccall f_12982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13058)
static void C_fcall f_13058(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13211)
static void C_ccall f_13211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13195)
static void C_ccall f_13195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13147)
static void C_fcall f_13147(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13161)
static void C_fcall f_13161(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13114)
static void C_ccall f_13114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13089)
static void C_fcall f_13089(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12985)
static void C_ccall f_12985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12993)
static void C_fcall f_12993(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13026)
static void C_ccall f_13026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11496)
static void C_ccall f_11496(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11496)
static void C_ccall f_11496r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_12946)
static void C_ccall f_12946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12961)
static void C_ccall f_12961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12953)
static void C_ccall f_12953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12917)
static void C_ccall f_12917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12921)
static void C_ccall f_12921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12882)
static void C_ccall f_12882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12886)
static void C_ccall f_12886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12847)
static void C_ccall f_12847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12851)
static void C_ccall f_12851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12812)
static void C_ccall f_12812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12816)
static void C_ccall f_12816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12777)
static void C_ccall f_12777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12781)
static void C_ccall f_12781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12742)
static void C_ccall f_12742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12746)
static void C_ccall f_12746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11500)
static void C_fcall f_11500(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12706)
static void C_ccall f_12706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12721)
static void C_ccall f_12721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12713)
static void C_ccall f_12713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12677)
static void C_ccall f_12677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12681)
static void C_ccall f_12681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12642)
static void C_ccall f_12642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12646)
static void C_ccall f_12646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12607)
static void C_ccall f_12607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12611)
static void C_ccall f_12611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12572)
static void C_ccall f_12572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12576)
static void C_ccall f_12576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12537)
static void C_ccall f_12537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12541)
static void C_ccall f_12541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12502)
static void C_ccall f_12502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12506)
static void C_ccall f_12506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11503)
static void C_fcall f_11503(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12466)
static void C_ccall f_12466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12481)
static void C_ccall f_12481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12473)
static void C_ccall f_12473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12437)
static void C_ccall f_12437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12441)
static void C_ccall f_12441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12402)
static void C_ccall f_12402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12406)
static void C_ccall f_12406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12367)
static void C_ccall f_12367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12371)
static void C_ccall f_12371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12332)
static void C_ccall f_12332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12336)
static void C_ccall f_12336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12297)
static void C_ccall f_12297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12301)
static void C_ccall f_12301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12262)
static void C_ccall f_12262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12266)
static void C_ccall f_12266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11506)
static void C_fcall f_11506(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12226)
static void C_ccall f_12226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12241)
static void C_ccall f_12241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12233)
static void C_ccall f_12233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12197)
static void C_ccall f_12197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12201)
static void C_ccall f_12201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12162)
static void C_ccall f_12162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12166)
static void C_ccall f_12166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12127)
static void C_ccall f_12127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12131)
static void C_ccall f_12131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12092)
static void C_ccall f_12092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12096)
static void C_ccall f_12096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12057)
static void C_ccall f_12057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12061)
static void C_ccall f_12061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12022)
static void C_ccall f_12022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12026)
static void C_ccall f_12026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11509)
static void C_fcall f_11509(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11986)
static void C_ccall f_11986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12001)
static void C_ccall f_12001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11993)
static void C_ccall f_11993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11957)
static void C_ccall f_11957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11961)
static void C_ccall f_11961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11922)
static void C_ccall f_11922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11926)
static void C_ccall f_11926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11887)
static void C_ccall f_11887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11891)
static void C_ccall f_11891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11852)
static void C_ccall f_11852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11856)
static void C_ccall f_11856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11817)
static void C_ccall f_11817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11821)
static void C_ccall f_11821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11782)
static void C_ccall f_11782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11786)
static void C_ccall f_11786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11512)
static void C_fcall f_11512(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11746)
static void C_ccall f_11746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11761)
static void C_ccall f_11761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11753)
static void C_ccall f_11753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11717)
static void C_ccall f_11717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11721)
static void C_ccall f_11721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11682)
static void C_ccall f_11682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11686)
static void C_ccall f_11686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11647)
static void C_ccall f_11647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11651)
static void C_ccall f_11651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11612)
static void C_ccall f_11612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11616)
static void C_ccall f_11616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11577)
static void C_ccall f_11577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11581)
static void C_ccall f_11581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11542)
static void C_ccall f_11542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11546)
static void C_ccall f_11546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11515)
static void C_fcall f_11515(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11518)
static void C_ccall f_11518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11277)
static void C_fcall f_11277(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11286)
static void C_ccall f_11286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11290)
static void C_ccall f_11290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11477)
static void C_ccall f_11477(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11462)
static void C_ccall f_11462(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11427)
static void C_ccall f_11427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11407)
static void C_ccall f_11407(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11411)
static void C_ccall f_11411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11397)
static void C_ccall f_11397(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11405)
static void C_ccall f_11405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11364)
static void C_ccall f_11364(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11292)
static void C_ccall f_11292(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11359)
static void C_ccall f_11359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11296)
static void C_ccall f_11296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11332)
static void C_fcall f_11332(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11307)
static void C_fcall f_11307(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11248)
static void C_ccall f_11248(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11252)
static void C_ccall f_11252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11263)
static void C_ccall f_11263(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11261)
static void C_ccall f_11261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11217)
static void C_ccall f_11217(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11221)
static void C_ccall f_11221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11232)
static void C_ccall f_11232(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11230)
static void C_ccall f_11230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11199)
static void C_ccall f_11199(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11207)
static void C_ccall f_11207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11215)
static void C_ccall f_11215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11189)
static void C_ccall f_11189(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11197)
static void C_ccall f_11197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11130)
static void C_ccall f_11130(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11137)
static void C_ccall f_11137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11140)
static void C_ccall f_11140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11143)
static void C_ccall f_11143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11148)
static void C_fcall f_11148(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11092)
static void C_ccall f_11092(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11100)
static void C_ccall f_11100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11104)
static void C_ccall f_11104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11124)
static void C_ccall f_11124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11108)
static void C_ccall f_11108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11116)
static void C_ccall f_11116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11112)
static void C_ccall f_11112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11080)
static void C_ccall f_11080(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11071)
static void C_fcall f_11071(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11062)
static void C_ccall f_11062(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11053)
static void C_fcall f_11053(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11044)
static void C_ccall f_11044(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11035)
static void C_fcall f_11035(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11026)
static void C_ccall f_11026(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11011)
static void C_fcall f_11011(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11005)
static void C_fcall f_11005(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10863)
static void C_ccall f_10863(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_10863)
static void C_ccall f_10863r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_10867)
static void C_fcall f_10867(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10936)
static void C_ccall f_10936(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10979)
static void C_ccall f_10979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10983)
static void C_ccall f_10983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10972)
static void C_ccall f_10972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10959)
static void C_ccall f_10959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10878)
static void C_ccall f_10878(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10921)
static void C_ccall f_10921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10925)
static void C_ccall f_10925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10914)
static void C_ccall f_10914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10901)
static void C_ccall f_10901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10697)
static void C_ccall f_10697(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10798)
static void C_ccall f_10798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10847)
static void C_ccall f_10847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10843)
static void C_ccall f_10843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10815)
static void C_ccall f_10815(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10750)
static void C_fcall f_10750(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10759)
static void C_fcall f_10759(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10743)
static void C_ccall f_10743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10562)
static void C_ccall f_10562(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10688)
static void C_ccall f_10688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10684)
static void C_ccall f_10684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10662)
static void C_ccall f_10662(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10592)
static void C_fcall f_10592(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10608)
static void C_fcall f_10608(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10517)
static void C_ccall f_10517(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10560)
static void C_ccall f_10560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10549)
static void C_ccall f_10549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10401)
static void C_ccall f_10401(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10515)
static void C_ccall f_10515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10416)
static void C_fcall f_10416(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_10446)
static void C_fcall f_10446(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10465)
static void C_ccall f_10465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10450)
static void C_ccall f_10450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10429)
static void C_fcall f_10429(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10279)
static void C_ccall f_10279(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10399)
static void C_ccall f_10399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10294)
static void C_fcall f_10294(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_10324)
static void C_fcall f_10324(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10343)
static void C_ccall f_10343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10328)
static void C_ccall f_10328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10307)
static void C_fcall f_10307(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10182)
static void C_ccall f_10182(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10277)
static void C_ccall f_10277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10197)
static void C_fcall f_10197(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_10243)
static void C_ccall f_10243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10228)
static void C_ccall f_10228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10210)
static void C_fcall f_10210(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10129)
static void C_fcall f_10129(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10167)
static void C_ccall f_10167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10174)
static void C_ccall f_10174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10152)
static void C_ccall f_10152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10127)
static void C_ccall f_10127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10099)
static void C_fcall f_10099(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10101)
static void C_ccall f_10101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10079)
static void C_ccall f_10079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10027)
static void C_fcall f_10027(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10064)
static void C_ccall f_10064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10031)
static void C_ccall f_10031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10047)
static void C_ccall f_10047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10049)
static void C_ccall f_10049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9813)
static void C_ccall f_9813(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_9813)
static void C_ccall f_9813r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_9826)
static void C_fcall f_9826(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9908)
static void C_fcall f_9908(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9911)
static void C_ccall f_9911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9919)
static void C_fcall f_9919(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9931)
static void C_fcall f_9931(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9952)
static void C_ccall f_9952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9960)
static void C_ccall f_9960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9847)
static void C_ccall f_9847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9852)
static void C_fcall f_9852(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9884)
static void C_ccall f_9884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9792)
static void C_ccall f_9792(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9792)
static void C_ccall f_9792r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9773)
static void C_ccall f_9773(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9773)
static void C_ccall f_9773r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9732)
static void C_ccall f_9732(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9732)
static void C_ccall f_9732r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9713)
static void C_ccall f_9713(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9713)
static void C_ccall f_9713r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9485)
static void C_ccall f_9485(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9485)
static void C_ccall f_9485r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9690)
static void C_ccall f_9690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9705)
static void C_ccall f_9705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9697)
static void C_ccall f_9697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9661)
static void C_ccall f_9661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9665)
static void C_ccall f_9665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9626)
static void C_ccall f_9626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9630)
static void C_ccall f_9630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9489)
static void C_fcall f_9489(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9590)
static void C_ccall f_9590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9605)
static void C_ccall f_9605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9597)
static void C_ccall f_9597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9561)
static void C_ccall f_9561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9565)
static void C_ccall f_9565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9526)
static void C_ccall f_9526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9530)
static void C_ccall f_9530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9492)
static void C_fcall f_9492(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9495)
static void C_ccall f_9495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9498)
static void C_fcall f_9498(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9443)
static void C_ccall f_9443(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9443)
static void C_ccall f_9443r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9472)
static void C_ccall f_9472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9457)
static void C_ccall f_9457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9388)
static void C_ccall f_9388(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9399)
static void C_ccall f_9399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9401)
static void C_fcall f_9401(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9429)
static void C_ccall f_9429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9289)
static void C_ccall f_9289(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_9289)
static void C_ccall f_9289r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_9293)
static void C_fcall f_9293(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9296)
static void C_ccall f_9296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9361)
static void C_ccall f_9361(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9298)
static void C_fcall f_9298(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9314)
static void C_ccall f_9314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9061)
static void C_ccall f_9061(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_9061)
static void C_ccall f_9061r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_9266)
static void C_ccall f_9266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9281)
static void C_ccall f_9281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9273)
static void C_ccall f_9273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9237)
static void C_ccall f_9237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9241)
static void C_ccall f_9241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9202)
static void C_ccall f_9202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9206)
static void C_ccall f_9206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9065)
static void C_fcall f_9065(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9166)
static void C_ccall f_9166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9181)
static void C_ccall f_9181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9173)
static void C_ccall f_9173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9137)
static void C_ccall f_9137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9141)
static void C_ccall f_9141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9102)
static void C_ccall f_9102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9106)
static void C_ccall f_9106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9068)
static void C_fcall f_9068(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9071)
static void C_ccall f_9071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9081)
static void C_ccall f_9081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9018)
static void C_ccall f_9018(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9018)
static void C_ccall f_9018r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9051)
static void C_ccall f_9051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9036)
static void C_ccall f_9036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8997)
static void C_ccall f_8997(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8962)
static void C_ccall f_8962(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8962)
static void C_ccall f_8962r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8966)
static void C_fcall f_8966(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8854)
static void C_ccall f_8854(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8854)
static void C_ccall f_8854r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8941)
static void C_ccall f_8941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8861)
static void C_fcall f_8861(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8870)
static void C_fcall f_8870(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8917)
static void C_ccall f_8917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8883)
static void C_fcall f_8883(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8909)
static void C_ccall f_8909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8721)
static void C_ccall f_8721(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_8721)
static void C_ccall f_8721r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_8725)
static void C_fcall f_8725(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8728)
static void C_fcall f_8728(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8832)
static void C_ccall f_8832(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8730)
static void C_fcall f_8730(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8737)
static void C_ccall f_8737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8779)
static void C_ccall f_8779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8786)
static void C_ccall f_8786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8760)
static void C_ccall f_8760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8654)
static void C_ccall f_8654(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_8654)
static void C_ccall f_8654r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_8658)
static void C_fcall f_8658(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8704)
static void C_ccall f_8704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8661)
static void C_fcall f_8661(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8697)
static void C_ccall f_8697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8664)
static void C_fcall f_8664(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8677)
static void C_ccall f_8677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8608)
static void C_ccall f_8608(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8608)
static void C_ccall f_8608r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8612)
static void C_ccall f_8612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8522)
static void C_fcall f_8522(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8526)
static void C_ccall f_8526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8529)
static void C_ccall f_8529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8538)
static void C_fcall f_8538(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8560)
static void C_ccall f_8560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8507)
static void C_ccall f_8507(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8492)
static void C_ccall f_8492(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8256)
static void C_ccall f_8256(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8256)
static void C_ccall f_8256r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8469)
static void C_ccall f_8469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8484)
static void C_ccall f_8484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8476)
static void C_ccall f_8476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8440)
static void C_ccall f_8440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8444)
static void C_ccall f_8444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8405)
static void C_ccall f_8405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8409)
static void C_ccall f_8409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8260)
static void C_fcall f_8260(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8369)
static void C_ccall f_8369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8384)
static void C_ccall f_8384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8376)
static void C_ccall f_8376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8340)
static void C_ccall f_8340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8344)
static void C_ccall f_8344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8305)
static void C_ccall f_8305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8309)
static void C_ccall f_8309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8263)
static void C_fcall f_8263(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8266)
static void C_ccall f_8266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8277)
static void C_ccall f_8277(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8216)
static void C_ccall f_8216(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8220)
static void C_ccall f_8220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8250)
static void C_ccall f_8250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8231)
static void C_ccall f_8231(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8239)
static void C_ccall f_8239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8195)
static void C_ccall f_8195(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8207)
static void C_ccall f_8207(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8169)
static void C_ccall f_8169(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8169)
static void C_ccall f_8169r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8127)
static void C_ccall f_8127(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8127)
static void C_ccall f_8127r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8112)
static void C_ccall f_8112(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8001)
static void C_ccall f_8001(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_8001)
static void C_ccall f_8001r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_8076)
static void C_ccall f_8076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8005)
static void C_fcall f_8005(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8045)
static void C_ccall f_8045(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8034)
static void C_ccall f_8034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8019)
static void C_ccall f_8019(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8027)
static void C_ccall f_8027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7967)
static void C_ccall f_7967(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_7967)
static void C_ccall f_7967r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_7979)
static void C_ccall f_7979(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7948)
static void C_ccall f_7948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7945)
static void C_ccall f_7945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7938)
static void C_fcall f_7938(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7935)
static void C_ccall f_7935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7928)
static void C_fcall f_7928(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7910)
static void C_fcall f_7910(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7899)
static void C_fcall f_7899(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7896)
static void C_ccall f_7896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7893)
static void C_ccall f_7893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7890)
static void C_ccall f_7890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7861)
static void C_fcall f_7861(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7854)
static void C_fcall f_7854(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7851)
static void C_ccall f_7851(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7830)
static void C_fcall f_7830(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7811)
static void C_ccall f_7811(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7792)
static void C_ccall f_7792(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7785)
static void C_ccall f_7785(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7778)
static void C_ccall f_7778(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7763)
static void C_fcall f_7763(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7752)
static void C_fcall f_7752(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7745)
static void C_ccall f_7745(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7718)
static void C_fcall f_7718(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_7691)
static void C_fcall f_7691(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_7650)
static void C_fcall f_7650(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7656)
static void C_fcall f_7656(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7666)
static void C_fcall f_7666(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7564)
static void C_ccall f_7564(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_7564)
static void C_ccall f_7564r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_7525)
static void C_ccall f_7525(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7531)
static void C_fcall f_7531(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7554)
static void C_ccall f_7554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7544)
static void C_fcall f_7544(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7486)
static void C_ccall f_7486(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7492)
static void C_fcall f_7492(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7512)
static void C_ccall f_7512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7502)
static void C_fcall f_7502(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7446)
static void C_ccall f_7446(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7452)
static void C_fcall f_7452(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7476)
static void C_ccall f_7476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7462)
static void C_fcall f_7462(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7347)
static void C_ccall f_7347(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7347)
static void C_ccall f_7347r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7351)
static void C_ccall f_7351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7376)
static void C_fcall f_7376(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7393)
static void C_ccall f_7393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7397)
static void C_ccall f_7397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7353)
static void C_fcall f_7353(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7370)
static void C_ccall f_7370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7286)
static void C_ccall f_7286(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7299)
static void C_fcall f_7299(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7276)
static void C_ccall f_7276(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7236)
static void C_ccall f_7236(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7236)
static void C_ccall f_7236r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7266)
static void C_ccall f_7266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7146)
static void C_ccall f_7146(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7098)
static void C_ccall f_7098(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7132)
static void C_ccall f_7132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7075)
static void C_ccall f_7075(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7069)
static void C_ccall f_7069(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7054)
static void C_ccall f_7054(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7040)
static void C_ccall f_7040(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7030)
static void C_ccall f_7030(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7020)
static void C_ccall f_7020(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7010)
static void C_ccall f_7010(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7000)
static void C_ccall f_7000(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6967)
static void C_ccall f_6967(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6967)
static void C_ccall f_6967r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6976)
static void C_ccall f_6976(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6981)
static void C_ccall f_6981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6956)
static void C_ccall f_6956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6961)
static void C_ccall f_6961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6663)
static void C_ccall f_6663(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6673)
static void C_ccall f_6673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6924)
static void C_ccall f_6924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6676)
static void C_ccall f_6676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6679)
static void C_ccall f_6679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6694)
static void C_fcall f_6694(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6704)
static void C_ccall f_6704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6706)
static void C_fcall f_6706(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_6765)
static void C_ccall f_6765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6775)
static void C_ccall f_6775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6892)
static void C_ccall f_6892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6880)
static void C_ccall f_6880(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6878)
static void C_ccall f_6878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6865)
static void C_ccall f_6865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6819)
static void C_ccall f_6819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6846)
static void C_ccall f_6846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6825)
static void C_ccall f_6825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6759)
static void C_fcall f_6759(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6718)
static void C_fcall f_6718(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6731)
static void C_fcall f_6731(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6941)
static void C_ccall f_6941(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6932)
static void C_ccall f_6932(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6940)
static void C_ccall f_6940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6943)
static void C_ccall f_6943(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6943)
static void C_ccall f_6943r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6951)
static void C_ccall f_6951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6365)
static void C_ccall f_6365(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6618)
static void C_ccall f_6618(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6651)
static void C_ccall f_6651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6647)
static void C_ccall f_6647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6636)
static void C_ccall f_6636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6632)
static void C_ccall f_6632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6526)
static void C_ccall f_6526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6529)
static void C_ccall f_6529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6532)
static void C_ccall f_6532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6612)
static void C_ccall f_6612(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6437)
static void C_ccall f_6437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6378)
static void C_ccall f_6378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6535)
static void C_ccall f_6535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6542)
static void C_ccall f_6542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6602)
static void C_ccall f_6602(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6588)
static void C_ccall f_6588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6554)
static void C_ccall f_6554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6580)
static void C_ccall f_6580(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6515)
static void C_ccall f_6515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6562)
static void C_ccall f_6562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6558)
static void C_ccall f_6558(C_word c,C_word t0,C_word t1) C_noret;

C_noret_decl(trf_40114)
static void C_fcall trf_40114(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40114(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_40114(t0,t1,t2);}

C_noret_decl(trf_40174)
static void C_fcall trf_40174(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40174(void *dummy){
C_word t13=C_pick(0);
C_word t12=C_pick(1);
C_word t11=C_pick(2);
C_word t10=C_pick(3);
C_word t9=C_pick(4);
C_word t8=C_pick(5);
C_word t7=C_pick(6);
C_word t6=C_pick(7);
C_word t5=C_pick(8);
C_word t4=C_pick(9);
C_word t3=C_pick(10);
C_word t2=C_pick(11);
C_word t1=C_pick(12);
C_word t0=C_pick(13);
C_adjust_stack(-14);
f_40174(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}

C_noret_decl(trf_40194)
static void C_fcall trf_40194(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40194(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40194(t0,t1);}

C_noret_decl(trf_40197)
static void C_fcall trf_40197(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40197(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40197(t0,t1);}

C_noret_decl(trf_40058)
static void C_fcall trf_40058(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40058(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40058(t0,t1);}

C_noret_decl(trf_39980)
static void C_fcall trf_39980(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39980(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39980(t0,t1,t2);}

C_noret_decl(trf_39792)
static void C_fcall trf_39792(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39792(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39792(t0,t1);}

C_noret_decl(trf_38674)
static void C_fcall trf_38674(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38674(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38674(t0,t1);}

C_noret_decl(trf_38547)
static void C_fcall trf_38547(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38547(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_38547(t0,t1,t2);}

C_noret_decl(trf_38231)
static void C_fcall trf_38231(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38231(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38231(t0,t1);}

C_noret_decl(trf_37326)
static void C_fcall trf_37326(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37326(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_37326(t0,t1,t2);}

C_noret_decl(trf_37361)
static void C_fcall trf_37361(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37361(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37361(t0,t1);}

C_noret_decl(trf_37385)
static void C_fcall trf_37385(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37385(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37385(t0,t1);}

C_noret_decl(trf_37364)
static void C_fcall trf_37364(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37364(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37364(t0,t1);}

C_noret_decl(trf_37167)
static void C_fcall trf_37167(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37167(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37167(t0,t1);}

C_noret_decl(trf_36923)
static void C_fcall trf_36923(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36923(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36923(t0,t1);}

C_noret_decl(trf_36930)
static void C_fcall trf_36930(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36930(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36930(t0,t1);}

C_noret_decl(trf_36911)
static void C_fcall trf_36911(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36911(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36911(t0,t1);}

C_noret_decl(trf_24746)
static void C_fcall trf_24746(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24746(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24746(t0,t1);}

C_noret_decl(trf_24753)
static void C_fcall trf_24753(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24753(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24753(t0,t1);}

C_noret_decl(trf_25128)
static void C_fcall trf_25128(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25128(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25128(t0,t1,t2);}

C_noret_decl(trf_25151)
static void C_fcall trf_25151(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25151(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25151(t0,t1,t2);}

C_noret_decl(trf_25168)
static void C_fcall trf_25168(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25168(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25168(t0,t1);}

C_noret_decl(trf_25171)
static void C_fcall trf_25171(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25171(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25171(t0,t1);}

C_noret_decl(trf_25174)
static void C_fcall trf_25174(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25174(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25174(t0,t1);}

C_noret_decl(trf_25092)
static void C_fcall trf_25092(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25092(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25092(t0,t1,t2);}

C_noret_decl(trf_25020)
static void C_fcall trf_25020(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25020(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25020(t0,t1,t2);}

C_noret_decl(trf_25036)
static void C_fcall trf_25036(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25036(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25036(t0,t1);}

C_noret_decl(trf_24983)
static void C_fcall trf_24983(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24983(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24983(t0,t1);}

C_noret_decl(trf_24769)
static void C_fcall trf_24769(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24769(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24769(t0,t1);}

C_noret_decl(trf_24776)
static void C_fcall trf_24776(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24776(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24776(t0,t1);}

C_noret_decl(trf_24779)
static void C_fcall trf_24779(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24779(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24779(t0,t1);}

C_noret_decl(trf_36420)
static void C_fcall trf_36420(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36420(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36420(t0,t1);}

C_noret_decl(trf_36423)
static void C_fcall trf_36423(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36423(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36423(t0,t1);}

C_noret_decl(trf_36266)
static void C_fcall trf_36266(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36266(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36266(t0,t1);}

C_noret_decl(trf_36074)
static void C_fcall trf_36074(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36074(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36074(t0,t1);}

C_noret_decl(trf_35924)
static void C_fcall trf_35924(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35924(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35924(t0,t1);}

C_noret_decl(trf_36013)
static void C_fcall trf_36013(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36013(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36013(t0,t1);}

C_noret_decl(trf_35927)
static void C_fcall trf_35927(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35927(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35927(t0,t1);}

C_noret_decl(trf_35943)
static void C_fcall trf_35943(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35943(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_35943(t0,t1,t2,t3);}

C_noret_decl(trf_35965)
static void C_fcall trf_35965(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35965(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35965(t0,t1);}

C_noret_decl(trf_35860)
static void C_fcall trf_35860(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35860(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_35860(t0,t1,t2);}

C_noret_decl(trf_35807)
static void C_fcall trf_35807(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35807(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35807(t0,t1);}

C_noret_decl(trf_29243)
static void C_fcall trf_29243(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29243(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29243(t0,t1);}

C_noret_decl(trf_29105)
static void C_fcall trf_29105(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29105(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29105(t0,t1);}

C_noret_decl(trf_29319)
static void C_fcall trf_29319(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29319(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29319(t0,t1);}

C_noret_decl(trf_35411)
static void C_fcall trf_35411(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35411(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_35411(t0,t1,t2);}

C_noret_decl(trf_35439)
static void C_fcall trf_35439(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35439(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35439(t0,t1);}

C_noret_decl(trf_35142)
static void C_fcall trf_35142(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35142(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35142(t0,t1);}

C_noret_decl(trf_35306)
static void C_fcall trf_35306(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35306(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35306(t0,t1);}

C_noret_decl(trf_35155)
static void C_fcall trf_35155(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35155(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35155(t0,t1);}

C_noret_decl(trf_35390)
static void C_fcall trf_35390(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35390(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35390(t0,t1);}

C_noret_decl(trf_35080)
static void C_fcall trf_35080(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35080(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_35080(t0,t1,t2);}

C_noret_decl(trf_35021)
static void C_fcall trf_35021(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35021(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35021(t0,t1);}

C_noret_decl(trf_34957)
static void C_fcall trf_34957(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34957(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_34957(t0,t1,t2);}

C_noret_decl(trf_34877)
static void C_fcall trf_34877(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34877(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34877(t0,t1);}

C_noret_decl(trf_34803)
static void C_fcall trf_34803(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34803(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34803(t0,t1);}

C_noret_decl(trf_34798)
static void C_fcall trf_34798(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34798(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_34798(t0,t1,t2);}

C_noret_decl(trf_34678)
static void C_fcall trf_34678(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34678(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_34678(t0,t1,t2,t3);}

C_noret_decl(trf_34749)
static void C_fcall trf_34749(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34749(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_34749(t0,t1,t2);}

C_noret_decl(trf_34708)
static void C_fcall trf_34708(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34708(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34708(t0,t1);}

C_noret_decl(trf_34680)
static void C_fcall trf_34680(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34680(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34680(t0,t1);}

C_noret_decl(trf_34635)
static void C_fcall trf_34635(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34635(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34635(t0,t1);}

C_noret_decl(trf_34591)
static void C_fcall trf_34591(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34591(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_34591(t0,t1,t2,t3);}

C_noret_decl(trf_34582)
static void C_fcall trf_34582(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34582(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34582(t0,t1);}

C_noret_decl(trf_34412)
static void C_fcall trf_34412(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34412(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_34412(t0,t1,t2,t3,t4);}

C_noret_decl(trf_34441)
static void C_fcall trf_34441(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34441(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_34441(t0,t1,t2);}

C_noret_decl(trf_34478)
static void C_fcall trf_34478(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34478(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34478(t0,t1);}

C_noret_decl(trf_34308)
static void C_fcall trf_34308(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34308(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34308(t0,t1);}

C_noret_decl(trf_34288)
static void C_fcall trf_34288(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34288(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34288(t0,t1);}

C_noret_decl(trf_34251)
static void C_fcall trf_34251(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34251(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34251(t0,t1);}

C_noret_decl(trf_34231)
static void C_fcall trf_34231(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34231(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34231(t0,t1);}

C_noret_decl(trf_33066)
static void C_fcall trf_33066(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33066(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33066(t0,t1);}

C_noret_decl(trf_33069)
static void C_fcall trf_33069(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33069(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33069(t0,t1);}

C_noret_decl(trf_33072)
static void C_fcall trf_33072(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33072(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33072(t0,t1);}

C_noret_decl(trf_32596)
static void C_fcall trf_32596(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32596(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32596(t0,t1);}

C_noret_decl(trf_32599)
static void C_fcall trf_32599(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32599(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32599(t0,t1);}

C_noret_decl(trf_32602)
static void C_fcall trf_32602(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32602(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32602(t0,t1);}

C_noret_decl(trf_32126)
static void C_fcall trf_32126(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32126(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32126(t0,t1);}

C_noret_decl(trf_32129)
static void C_fcall trf_32129(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32129(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32129(t0,t1);}

C_noret_decl(trf_32132)
static void C_fcall trf_32132(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32132(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32132(t0,t1);}

C_noret_decl(trf_31378)
static void C_fcall trf_31378(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31378(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31378(t0,t1);}

C_noret_decl(trf_31381)
static void C_fcall trf_31381(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31381(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31381(t0,t1);}

C_noret_decl(trf_31384)
static void C_fcall trf_31384(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31384(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31384(t0,t1);}

C_noret_decl(trf_31387)
static void C_fcall trf_31387(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31387(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31387(t0,t1);}

C_noret_decl(trf_30630)
static void C_fcall trf_30630(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30630(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30630(t0,t1);}

C_noret_decl(trf_30633)
static void C_fcall trf_30633(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30633(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30633(t0,t1);}

C_noret_decl(trf_30636)
static void C_fcall trf_30636(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30636(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30636(t0,t1);}

C_noret_decl(trf_30639)
static void C_fcall trf_30639(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30639(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30639(t0,t1);}

C_noret_decl(trf_30160)
static void C_fcall trf_30160(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30160(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30160(t0,t1);}

C_noret_decl(trf_30163)
static void C_fcall trf_30163(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30163(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30163(t0,t1);}

C_noret_decl(trf_30166)
static void C_fcall trf_30166(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30166(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30166(t0,t1);}

C_noret_decl(trf_29412)
static void C_fcall trf_29412(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29412(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29412(t0,t1);}

C_noret_decl(trf_29415)
static void C_fcall trf_29415(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29415(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29415(t0,t1);}

C_noret_decl(trf_29418)
static void C_fcall trf_29418(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29418(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29418(t0,t1);}

C_noret_decl(trf_29421)
static void C_fcall trf_29421(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29421(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29421(t0,t1);}

C_noret_decl(trf_29070)
static void C_fcall trf_29070(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29070(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29070(t0,t1,t2,t3);}

C_noret_decl(trf_28910)
static void C_fcall trf_28910(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28910(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28910(t0,t1);}

C_noret_decl(trf_28945)
static void C_fcall trf_28945(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28945(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_28945(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_28955)
static void C_fcall trf_28955(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28955(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28955(t0,t1);}

C_noret_decl(trf_28918)
static void C_fcall trf_28918(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28918(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28918(t0,t1,t2);}

C_noret_decl(trf_29078)
static void C_fcall trf_29078(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29078(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29078(t0,t1);}

C_noret_decl(trf_28696)
static void C_fcall trf_28696(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28696(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28696(t0,t1);}

C_noret_decl(trf_28702)
static void C_fcall trf_28702(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28702(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28702(t0,t1);}

C_noret_decl(trf_28725)
static void C_fcall trf_28725(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28725(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28725(t0,t1);}

C_noret_decl(trf_28738)
static void C_fcall trf_28738(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28738(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28738(t0,t1);}

C_noret_decl(trf_28712)
static void C_fcall trf_28712(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28712(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28712(t0,t1);}

C_noret_decl(trf_28525)
static void C_fcall trf_28525(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28525(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28525(t0,t1,t2,t3);}

C_noret_decl(trf_28534)
static void C_fcall trf_28534(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28534(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_28534(t0,t1,t2,t3,t4);}

C_noret_decl(trf_28488)
static void C_fcall trf_28488(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28488(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28488(t0,t1);}

C_noret_decl(trf_28351)
static void C_fcall trf_28351(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28351(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28351(t0,t1);}

C_noret_decl(trf_28281)
static void C_fcall trf_28281(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28281(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28281(t0,t1);}

C_noret_decl(trf_27642)
static void C_fcall trf_27642(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27642(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27642(t0,t1,t2);}

C_noret_decl(trf_27602)
static void C_fcall trf_27602(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27602(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27602(t0,t1,t2);}

C_noret_decl(trf_27615)
static void C_fcall trf_27615(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27615(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27615(t0,t1);}

C_noret_decl(trf_28194)
static void C_fcall trf_28194(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28194(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28194(t0,t1);}

C_noret_decl(trf_27984)
static void C_fcall trf_27984(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27984(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27984(t0,t1);}

C_noret_decl(trf_28100)
static void C_fcall trf_28100(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28100(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28100(t0,t1);}

C_noret_decl(trf_27987)
static void C_fcall trf_27987(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27987(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27987(t0,t1);}

C_noret_decl(trf_27990)
static void C_fcall trf_27990(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27990(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27990(t0,t1);}

C_noret_decl(trf_27895)
static void C_fcall trf_27895(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27895(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27895(t0,t1);}

C_noret_decl(trf_27810)
static void C_fcall trf_27810(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27810(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27810(t0,t1);}

C_noret_decl(trf_27767)
static void C_fcall trf_27767(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27767(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27767(t0,t1);}

C_noret_decl(trf_27734)
static void C_fcall trf_27734(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27734(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27734(t0,t1);}

C_noret_decl(trf_27729)
static void C_fcall trf_27729(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27729(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27729(t0,t1);}

C_noret_decl(trf_27724)
static void C_fcall trf_27724(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27724(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_27724(t0,t1,t2,t3,t4);}

C_noret_decl(trf_27471)
static void C_fcall trf_27471(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27471(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27471(t0,t1);}

C_noret_decl(trf_27318)
static void C_fcall trf_27318(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27318(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27318(t0,t1,t2,t3);}

C_noret_decl(trf_27164)
static void C_fcall trf_27164(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27164(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27164(t0,t1,t2);}

C_noret_decl(trf_27006)
static void C_fcall trf_27006(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27006(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27006(t0,t1,t2);}

C_noret_decl(trf_27039)
static void C_fcall trf_27039(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27039(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27039(t0,t1);}

C_noret_decl(trf_26946)
static void C_fcall trf_26946(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26946(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26946(t0,t1);}

C_noret_decl(trf_26911)
static void C_fcall trf_26911(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26911(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26911(t0,t1);}

C_noret_decl(trf_26927)
static void C_fcall trf_26927(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26927(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26927(t0,t1);}

C_noret_decl(trf_26882)
static void C_fcall trf_26882(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26882(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26882(t0,t1);}

C_noret_decl(trf_26789)
static void C_fcall trf_26789(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26789(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26789(t0,t1);}

C_noret_decl(trf_26545)
static void C_fcall trf_26545(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26545(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26545(t0,t1,t2);}

C_noret_decl(trf_26349)
static void C_fcall trf_26349(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26349(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26349(t0,t1);}

C_noret_decl(trf_26512)
static void C_fcall trf_26512(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26512(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26512(t0,t1);}

C_noret_decl(trf_26352)
static void C_fcall trf_26352(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26352(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26352(t0,t1);}

C_noret_decl(trf_26355)
static void C_fcall trf_26355(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26355(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26355(t0,t1);}

C_noret_decl(trf_26358)
static void C_fcall trf_26358(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26358(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26358(t0,t1);}

C_noret_decl(trf_26400)
static void C_fcall trf_26400(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26400(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26400(t0,t1);}

C_noret_decl(trf_26365)
static void C_fcall trf_26365(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26365(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26365(t0,t1);}

C_noret_decl(trf_26094)
static void C_fcall trf_26094(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26094(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26094(t0,t1,t2,t3);}

C_noret_decl(trf_26102)
static void C_fcall trf_26102(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26102(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26102(t0,t1,t2,t3);}

C_noret_decl(trf_26231)
static void C_fcall trf_26231(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26231(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26231(t0,t1,t2);}

C_noret_decl(trf_26185)
static void C_fcall trf_26185(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26185(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26185(t0,t1,t2);}

C_noret_decl(trf_26088)
static void C_fcall trf_26088(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26088(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26088(t0,t1,t2);}

C_noret_decl(trf_26082)
static void C_fcall trf_26082(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26082(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26082(t0,t1);}

C_noret_decl(trf_26076)
static void C_fcall trf_26076(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26076(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26076(t0,t1,t2);}

C_noret_decl(trf_26005)
static void C_fcall trf_26005(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26005(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26005(t0,t1,t2);}

C_noret_decl(trf_26007)
static void C_fcall trf_26007(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26007(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26007(t0,t1,t2);}

C_noret_decl(trf_26013)
static void C_fcall trf_26013(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26013(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26013(t0,t1,t2);}

C_noret_decl(trf_25854)
static void C_fcall trf_25854(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25854(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25854(t0,t1);}

C_noret_decl(trf_25869)
static void C_fcall trf_25869(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25869(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25869(t0,t1,t2);}

C_noret_decl(trf_25812)
static void C_fcall trf_25812(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25812(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25812(t0,t1,t2);}

C_noret_decl(trf_25752)
static void C_fcall trf_25752(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25752(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25752(t0,t1,t2);}

C_noret_decl(trf_25628)
static void C_fcall trf_25628(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25628(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25628(t0,t1,t2);}

C_noret_decl(trf_25504)
static void C_fcall trf_25504(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25504(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_25504(t0,t1,t2,t3);}

C_noret_decl(trf_25540)
static void C_fcall trf_25540(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25540(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25540(t0,t1,t2);}

C_noret_decl(trf_25336)
static void C_fcall trf_25336(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25336(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25336(t0,t1);}

C_noret_decl(trf_23091)
static void C_fcall trf_23091(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23091(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23091(t0,t1);}

C_noret_decl(trf_25470)
static void C_fcall trf_25470(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25470(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25470(t0,t1,t2);}

C_noret_decl(trf_25480)
static void C_fcall trf_25480(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25480(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25480(t0,t1);}

C_noret_decl(trf_25440)
static void C_fcall trf_25440(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25440(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25440(t0,t1,t2);}

C_noret_decl(trf_25450)
static void C_fcall trf_25450(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25450(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25450(t0,t1);}

C_noret_decl(trf_24433)
static void C_fcall trf_24433(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24433(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24433(t0,t1);}

C_noret_decl(trf_24436)
static void C_fcall trf_24436(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24436(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24436(t0,t1);}

C_noret_decl(trf_24439)
static void C_fcall trf_24439(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24439(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24439(t0,t1);}

C_noret_decl(trf_24442)
static void C_fcall trf_24442(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24442(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24442(t0,t1);}

C_noret_decl(trf_24445)
static void C_fcall trf_24445(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24445(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24445(t0,t1);}

C_noret_decl(trf_24448)
static void C_fcall trf_24448(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24448(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24448(t0,t1);}

C_noret_decl(trf_24276)
static void C_fcall trf_24276(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24276(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24276(t0,t1);}

C_noret_decl(trf_24205)
static void C_fcall trf_24205(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24205(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24205(t0,t1);}

C_noret_decl(trf_24020)
static void C_fcall trf_24020(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24020(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24020(t0,t1);}

C_noret_decl(trf_24032)
static void C_fcall trf_24032(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24032(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24032(t0,t1);}

C_noret_decl(trf_24069)
static void C_fcall trf_24069(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24069(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_24069(t0,t1,t2,t3,t4);}

C_noret_decl(trf_24104)
static void C_fcall trf_24104(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24104(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24104(t0,t1);}

C_noret_decl(trf_23999)
static void C_fcall trf_23999(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23999(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23999(t0,t1);}

C_noret_decl(trf_23934)
static void C_fcall trf_23934(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23934(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23934(t0,t1,t2);}

C_noret_decl(trf_23943)
static void C_fcall trf_23943(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23943(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23943(t0,t1,t2);}

C_noret_decl(trf_23956)
static void C_fcall trf_23956(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23956(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23956(t0,t1);}

C_noret_decl(trf_23890)
static void C_fcall trf_23890(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23890(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23890(t0,t1,t2);}

C_noret_decl(trf_23878)
static void C_fcall trf_23878(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23878(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23878(t0,t1);}

C_noret_decl(trf_23776)
static void C_fcall trf_23776(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23776(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23776(t0,t1);}

C_noret_decl(trf_23728)
static void C_fcall trf_23728(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23728(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23728(t0,t1);}

C_noret_decl(trf_23109)
static void C_fcall trf_23109(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23109(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_23109(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_23119)
static void C_fcall trf_23119(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23119(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23119(t0,t1);}

C_noret_decl(trf_23248)
static void C_fcall trf_23248(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23248(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23248(t0,t1);}

C_noret_decl(trf_23336)
static void C_fcall trf_23336(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23336(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23336(t0,t1);}

C_noret_decl(trf_23409)
static void C_fcall trf_23409(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23409(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23409(t0,t1);}

C_noret_decl(trf_23487)
static void C_fcall trf_23487(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23487(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23487(t0,t1);}

C_noret_decl(trf_23438)
static void C_fcall trf_23438(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23438(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23438(t0,t1);}

C_noret_decl(trf_23454)
static void C_fcall trf_23454(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23454(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23454(t0,t1);}

C_noret_decl(trf_23418)
static void C_fcall trf_23418(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23418(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23418(t0,t1);}

C_noret_decl(trf_23360)
static void C_fcall trf_23360(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23360(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23360(t0,t1,t2);}

C_noret_decl(trf_23279)
static void C_fcall trf_23279(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23279(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23279(t0,t1,t2);}

C_noret_decl(trf_23295)
static void C_fcall trf_23295(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23295(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23295(t0,t1);}

C_noret_decl(trf_23263)
static void C_fcall trf_23263(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23263(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23263(t0,t1);}

C_noret_decl(trf_23005)
static void C_fcall trf_23005(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23005(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23005(t0,t1);}

C_noret_decl(trf_23014)
static void C_fcall trf_23014(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23014(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23014(t0,t1);}

C_noret_decl(trf_23019)
static void C_fcall trf_23019(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23019(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23019(t0,t1,t2);}

C_noret_decl(trf_22997)
static void C_fcall trf_22997(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22997(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22997(t0,t1);}

C_noret_decl(trf_22789)
static void C_fcall trf_22789(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22789(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22789(t0,t1,t2,t3);}

C_noret_decl(trf_22756)
static void C_fcall trf_22756(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22756(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22756(t0,t1,t2,t3);}

C_noret_decl(trf_22738)
static void C_fcall trf_22738(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22738(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22738(t0,t1,t2,t3);}

C_noret_decl(trf_22728)
static void C_fcall trf_22728(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22728(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22728(t0,t1,t2,t3);}

C_noret_decl(trf_22716)
static void C_fcall trf_22716(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22716(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22716(t0,t1,t2);}

C_noret_decl(trf_22684)
static void C_fcall trf_22684(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22684(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22684(t0,t1,t2);}

C_noret_decl(trf_22668)
static void C_fcall trf_22668(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22668(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22668(t0,t1);}

C_noret_decl(trf_22656)
static void C_fcall trf_22656(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22656(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22656(t0,t1);}

C_noret_decl(trf_22638)
static void C_fcall trf_22638(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22638(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22638(t0,t1);}

C_noret_decl(trf_22620)
static void C_fcall trf_22620(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22620(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22620(t0,t1);}

C_noret_decl(trf_22605)
static void C_fcall trf_22605(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22605(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22605(t0,t1);}

C_noret_decl(trf_22599)
static void C_fcall trf_22599(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22599(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22599(t0,t1,t2,t3);}

C_noret_decl(trf_22587)
static void C_fcall trf_22587(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22587(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22587(t0,t1);}

C_noret_decl(trf_22569)
static void C_fcall trf_22569(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22569(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22569(t0,t1);}

C_noret_decl(trf_22548)
static void C_fcall trf_22548(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22548(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22548(t0,t1,t2);}

C_noret_decl(trf_22516)
static void C_fcall trf_22516(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22516(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22516(t0,t1);}

C_noret_decl(trf_22458)
static void C_fcall trf_22458(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22458(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22458(t0,t1,t2);}

C_noret_decl(trf_22448)
static void C_fcall trf_22448(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22448(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22448(t0,t1);}

C_noret_decl(trf_22442)
static void C_fcall trf_22442(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22442(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22442(t0,t1);}

C_noret_decl(trf_22430)
static void C_fcall trf_22430(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22430(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22430(t0,t1);}

C_noret_decl(trf_22406)
static void C_fcall trf_22406(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22406(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22406(t0,t1,t2);}

C_noret_decl(trf_22319)
static void C_fcall trf_22319(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22319(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22319(t0,t1);}

C_noret_decl(trf_22298)
static void C_fcall trf_22298(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22298(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_22298(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_22288)
static void C_fcall trf_22288(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22288(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22288(t0,t1);}

C_noret_decl(trf_22276)
static void C_fcall trf_22276(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22276(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22276(t0,t1);}

C_noret_decl(trf_22235)
static void C_fcall trf_22235(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22235(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22235(t0,t1);}

C_noret_decl(trf_22217)
static void C_fcall trf_22217(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22217(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22217(t0,t1);}

C_noret_decl(trf_22199)
static void C_fcall trf_22199(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22199(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22199(t0,t1);}

C_noret_decl(trf_21166)
static void C_fcall trf_21166(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21166(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21166(t0,t1);}

C_noret_decl(trf_21169)
static void C_fcall trf_21169(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21169(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21169(t0,t1);}

C_noret_decl(trf_21884)
static void C_fcall trf_21884(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21884(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21884(t0,t1,t2);}

C_noret_decl(trf_21907)
static void C_fcall trf_21907(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21907(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21907(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21942)
static void C_fcall trf_21942(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21942(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21942(t0,t1);}

C_noret_decl(trf_21846)
static void C_fcall trf_21846(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21846(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21846(t0,t1);}

C_noret_decl(trf_21374)
static void C_fcall trf_21374(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21374(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21374(t0,t1);}

C_noret_decl(trf_21717)
static void C_fcall trf_21717(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21717(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21717(t0,t1,t2,t3);}

C_noret_decl(trf_21803)
static void C_fcall trf_21803(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21803(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21803(t0,t1,t2,t3);}

C_noret_decl(trf_21760)
static void C_fcall trf_21760(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21760(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21760(t0,t1,t2);}

C_noret_decl(trf_21684)
static void C_fcall trf_21684(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21684(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21684(t0,t1,t2);}

C_noret_decl(trf_21622)
static void C_fcall trf_21622(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21622(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21622(t0,t1,t2);}

C_noret_decl(trf_21657)
static void C_fcall trf_21657(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21657(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21657(t0,t1,t2,t3);}

C_noret_decl(trf_21442)
static void C_fcall trf_21442(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21442(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21442(t0,t1,t2);}

C_noret_decl(trf_21338)
static void C_fcall trf_21338(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21338(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21338(t0,t1,t2);}

C_noret_decl(trf_21595)
static void C_fcall trf_21595(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21595(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21595(t0,t1,t2,t3);}

C_noret_decl(trf_21568)
static void C_fcall trf_21568(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21568(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21568(t0,t1,t2,t3);}

C_noret_decl(trf_21479)
static void C_fcall trf_21479(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21479(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21479(t0,t1,t2);}

C_noret_decl(trf_21529)
static void C_fcall trf_21529(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21529(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21529(t0,t1,t2,t3);}

C_noret_decl(trf_21261)
static void C_fcall trf_21261(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21261(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21261(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21179)
static void C_fcall trf_21179(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21179(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21179(t0,t1,t2,t3);}

C_noret_decl(trf_21100)
static void C_fcall trf_21100(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21100(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21100(t0,t1,t2);}

C_noret_decl(trf_21125)
static void C_fcall trf_21125(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21125(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21125(t0,t1);}

C_noret_decl(trf_20828)
static void C_fcall trf_20828(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20828(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20828(t0,t1);}

C_noret_decl(trf_20831)
static void C_fcall trf_20831(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20831(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20831(t0,t1);}

C_noret_decl(trf_20837)
static void C_fcall trf_20837(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20837(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20837(t0,t1);}

C_noret_decl(trf_20551)
static void C_fcall trf_20551(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20551(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20551(t0,t1);}

C_noret_decl(trf_20554)
static void C_fcall trf_20554(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20554(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20554(t0,t1);}

C_noret_decl(trf_20481)
static void C_fcall trf_20481(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20481(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20481(t0,t1);}

C_noret_decl(trf_20329)
static void C_fcall trf_20329(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20329(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20329(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20254)
static void C_fcall trf_20254(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20254(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20254(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20264)
static void C_fcall trf_20264(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20264(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20264(t0,t1);}

C_noret_decl(trf_20271)
static void C_fcall trf_20271(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20271(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20271(t0,t1);}

C_noret_decl(trf_20366)
static void C_fcall trf_20366(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20366(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20366(t0,t1,t2);}

C_noret_decl(trf_20144)
static void C_fcall trf_20144(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20144(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20144(t0,t1,t2,t3);}

C_noret_decl(trf_20156)
static void C_fcall trf_20156(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20156(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20156(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20217)
static void C_fcall trf_20217(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20217(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20217(t0,t1,t2);}

C_noret_decl(trf_19581)
static void C_fcall trf_19581(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19581(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_19581(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_19517)
static void C_fcall trf_19517(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19517(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19517(t0,t1);}

C_noret_decl(trf_19464)
static void C_fcall trf_19464(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19464(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19464(t0,t1);}

C_noret_decl(trf_19467)
static void C_fcall trf_19467(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19467(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19467(t0,t1);}

C_noret_decl(trf_19661)
static void C_fcall trf_19661(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19661(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19661(t0,t1);}

C_noret_decl(trf_19664)
static void C_fcall trf_19664(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19664(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19664(t0,t1);}

C_noret_decl(trf_19667)
static void C_fcall trf_19667(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19667(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19667(t0,t1);}

C_noret_decl(trf_19682)
static void C_fcall trf_19682(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19682(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19682(t0,t1);}

C_noret_decl(trf_19243)
static void C_fcall trf_19243(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19243(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19243(t0,t1);}

C_noret_decl(trf_19335)
static void C_fcall trf_19335(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19335(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19335(t0,t1,t2);}

C_noret_decl(trf_19354)
static void C_fcall trf_19354(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19354(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19354(t0,t1);}

C_noret_decl(trf_19308)
static void C_fcall trf_19308(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19308(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19308(t0,t1,t2);}

C_noret_decl(trf_19253)
static void C_fcall trf_19253(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19253(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19253(t0,t1,t2);}

C_noret_decl(trf_19263)
static void C_fcall trf_19263(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19263(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19263(t0,t1,t2,t3);}

C_noret_decl(trf_19109)
static void C_fcall trf_19109(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19109(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19109(t0,t1,t2);}

C_noret_decl(trf_19178)
static void C_fcall trf_19178(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19178(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19178(t0,t1,t2);}

C_noret_decl(trf_19124)
static void C_fcall trf_19124(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19124(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_19124(t0,t1,t2,t3,t4);}

C_noret_decl(trf_18666)
static void C_fcall trf_18666(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18666(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18666(t0,t1);}

C_noret_decl(trf_18669)
static void C_fcall trf_18669(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18669(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18669(t0,t1);}

C_noret_decl(trf_18672)
static void C_fcall trf_18672(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18672(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18672(t0,t1);}

C_noret_decl(trf_18675)
static void C_fcall trf_18675(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18675(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18675(t0,t1);}

C_noret_decl(trf_18639)
static void C_fcall trf_18639(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18639(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18639(t0,t1);}

C_noret_decl(trf_18362)
static void C_fcall trf_18362(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18362(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18362(t0,t1);}

C_noret_decl(trf_18365)
static void C_fcall trf_18365(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18365(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18365(t0,t1);}

C_noret_decl(trf_18368)
static void C_fcall trf_18368(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18368(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18368(t0,t1);}

C_noret_decl(trf_18259)
static void C_fcall trf_18259(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18259(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18259(t0,t1);}

C_noret_decl(trf_18250)
static void C_fcall trf_18250(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18250(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18250(t0,t1,t2);}

C_noret_decl(trf_18241)
static void C_fcall trf_18241(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18241(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18241(t0,t1);}

C_noret_decl(trf_18223)
static void C_fcall trf_18223(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18223(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18223(t0,t1);}

C_noret_decl(trf_18205)
static void C_fcall trf_18205(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18205(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18205(t0,t1);}

C_noret_decl(trf_18187)
static void C_fcall trf_18187(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18187(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18187(t0,t1);}

C_noret_decl(trf_18178)
static void C_fcall trf_18178(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18178(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18178(t0,t1,t2);}

C_noret_decl(trf_18169)
static void C_fcall trf_18169(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18169(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18169(t0,t1);}

C_noret_decl(trf_18000)
static void C_fcall trf_18000(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18000(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18000(t0,t1);}

C_noret_decl(trf_17956)
static void C_fcall trf_17956(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17956(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17956(t0,t1,t2);}

C_noret_decl(trf_17477)
static void C_fcall trf_17477(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17477(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17477(t0,t1);}

C_noret_decl(trf_17480)
static void C_fcall trf_17480(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17480(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17480(t0,t1);}

C_noret_decl(trf_17483)
static void C_fcall trf_17483(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17483(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17483(t0,t1);}

C_noret_decl(trf_17486)
static void C_fcall trf_17486(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17486(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17486(t0,t1);}

C_noret_decl(trf_17432)
static void C_fcall trf_17432(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17432(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17432(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17138)
static void C_fcall trf_17138(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17138(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17138(t0,t1);}

C_noret_decl(trf_17141)
static void C_fcall trf_17141(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17141(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17141(t0,t1);}

C_noret_decl(trf_17144)
static void C_fcall trf_17144(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17144(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17144(t0,t1);}

C_noret_decl(trf_16855)
static void C_fcall trf_16855(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16855(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16855(t0,t1);}

C_noret_decl(trf_16858)
static void C_fcall trf_16858(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16858(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16858(t0,t1);}

C_noret_decl(trf_16861)
static void C_fcall trf_16861(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16861(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16861(t0,t1);}

C_noret_decl(trf_16814)
static void C_fcall trf_16814(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16814(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16814(t0,t1);}

C_noret_decl(trf_16770)
static void C_fcall trf_16770(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16770(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16770(t0,t1);}

C_noret_decl(trf_16685)
static void C_fcall trf_16685(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16685(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16685(t0,t1);}

C_noret_decl(trf_16170)
static void C_fcall trf_16170(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16170(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16170(t0,t1);}

C_noret_decl(trf_16173)
static void C_fcall trf_16173(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16173(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16173(t0,t1);}

C_noret_decl(trf_16176)
static void C_fcall trf_16176(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16176(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16176(t0,t1);}

C_noret_decl(trf_16179)
static void C_fcall trf_16179(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16179(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16179(t0,t1);}

C_noret_decl(trf_16086)
static void C_fcall trf_16086(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16086(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16086(t0,t1,t2);}

C_noret_decl(trf_16077)
static void C_fcall trf_16077(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16077(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16077(t0,t1);}

C_noret_decl(trf_16012)
static void C_fcall trf_16012(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16012(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16012(t0,t1);}

C_noret_decl(trf_15754)
static void C_fcall trf_15754(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15754(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15754(t0,t1);}

C_noret_decl(trf_15757)
static void C_fcall trf_15757(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15757(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15757(t0,t1);}

C_noret_decl(trf_15760)
static void C_fcall trf_15760(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15760(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15760(t0,t1);}

C_noret_decl(trf_15635)
static void C_fcall trf_15635(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15635(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15635(t0,t1);}

C_noret_decl(trf_15659)
static void C_fcall trf_15659(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15659(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15659(t0,t1);}

C_noret_decl(trf_15589)
static void C_fcall trf_15589(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15589(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15589(t0,t1,t2);}

C_noret_decl(trf_15580)
static void C_fcall trf_15580(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15580(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15580(t0,t1);}

C_noret_decl(trf_15279)
static void C_fcall trf_15279(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15279(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15279(t0,t1);}

C_noret_decl(trf_15515)
static void C_fcall trf_15515(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15515(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15515(t0,t1);}

C_noret_decl(trf_15521)
static void C_fcall trf_15521(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15521(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15521(t0,t1);}

C_noret_decl(trf_15413)
static void C_fcall trf_15413(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15413(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15413(t0,t1);}

C_noret_decl(trf_15415)
static void C_fcall trf_15415(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15415(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15415(t0,t1,t2,t3);}

C_noret_decl(trf_15464)
static void C_fcall trf_15464(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15464(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15464(t0,t1);}

C_noret_decl(trf_15429)
static void C_fcall trf_15429(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15429(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15429(t0,t1);}

C_noret_decl(trf_15313)
static void C_fcall trf_15313(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15313(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15313(t0,t1);}

C_noret_decl(trf_15227)
static void C_fcall trf_15227(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15227(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_15227(t0,t1,t2,t3,t4);}

C_noret_decl(trf_15246)
static void C_fcall trf_15246(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15246(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15246(t0,t1);}

C_noret_decl(trf_15177)
static void C_fcall trf_15177(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15177(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15177(t0,t1,t2,t3);}

C_noret_decl(trf_14938)
static void C_fcall trf_14938(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14938(void *dummy){
C_word t9=C_pick(0);
C_word t8=C_pick(1);
C_word t7=C_pick(2);
C_word t6=C_pick(3);
C_word t5=C_pick(4);
C_word t4=C_pick(5);
C_word t3=C_pick(6);
C_word t2=C_pick(7);
C_word t1=C_pick(8);
C_word t0=C_pick(9);
C_adjust_stack(-10);
f_14938(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9);}

C_noret_decl(trf_14957)
static void C_fcall trf_14957(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14957(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14957(t0,t1);}

C_noret_decl(trf_14972)
static void C_fcall trf_14972(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14972(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14972(t0,t1);}

C_noret_decl(trf_14981)
static void C_fcall trf_14981(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14981(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14981(t0,t1);}

C_noret_decl(trf_14928)
static void C_fcall trf_14928(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14928(void *dummy){
C_word t0=C_pick(0);
C_adjust_stack(-1);
f_14928(t0);}

C_noret_decl(trf_14873)
static void C_fcall trf_14873(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14873(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14873(t0,t1);}

C_noret_decl(trf_14864)
static void C_fcall trf_14864(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14864(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14864(t0,t1,t2);}

C_noret_decl(trf_14747)
static void C_fcall trf_14747(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14747(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14747(t0,t1);}

C_noret_decl(trf_14738)
static void C_fcall trf_14738(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14738(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14738(t0,t1,t2);}

C_noret_decl(trf_14720)
static void C_fcall trf_14720(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14720(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14720(t0,t1,t2);}

C_noret_decl(trf_14711)
static void C_fcall trf_14711(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14711(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14711(t0,t1);}

C_noret_decl(trf_14693)
static void C_fcall trf_14693(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14693(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14693(t0,t1);}

C_noret_decl(trf_14684)
static void C_fcall trf_14684(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14684(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14684(t0,t1,t2);}

C_noret_decl(trf_14675)
static void C_fcall trf_14675(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14675(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14675(t0,t1);}

C_noret_decl(trf_14657)
static void C_fcall trf_14657(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14657(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14657(t0,t1);}

C_noret_decl(trf_14648)
static void C_fcall trf_14648(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14648(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14648(t0,t1,t2);}

C_noret_decl(trf_14639)
static void C_fcall trf_14639(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14639(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14639(t0,t1);}

C_noret_decl(trf_14624)
static void C_fcall trf_14624(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14624(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14624(t0,t1);}

C_noret_decl(trf_14579)
static void C_fcall trf_14579(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14579(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14579(t0,t1);}

C_noret_decl(trf_14561)
static void C_fcall trf_14561(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14561(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14561(t0,t1);}

C_noret_decl(trf_14552)
static void C_fcall trf_14552(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14552(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14552(t0,t1,t2);}

C_noret_decl(trf_14525)
static void C_fcall trf_14525(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14525(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14525(t0,t1);}

C_noret_decl(trf_14507)
static void C_fcall trf_14507(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14507(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14507(t0,t1);}

C_noret_decl(trf_14489)
static void C_fcall trf_14489(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14489(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14489(t0,t1);}

C_noret_decl(trf_14480)
static void C_fcall trf_14480(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14480(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14480(t0,t1,t2);}

C_noret_decl(trf_14468)
static void C_fcall trf_14468(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14468(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_14468(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_14432)
static void C_fcall trf_14432(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14432(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14432(t0,t1);}

C_noret_decl(trf_14395)
static void C_fcall trf_14395(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14395(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14395(t0,t1,t2,t3);}

C_noret_decl(trf_14293)
static void C_fcall trf_14293(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14293(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_14293(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14240)
static void C_fcall trf_14240(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14240(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14240(t0,t1,t2);}

C_noret_decl(trf_14412)
static void C_fcall trf_14412(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14412(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14412(t0,t1);}

C_noret_decl(trf_14353)
static void C_fcall trf_14353(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14353(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14353(t0,t1);}

C_noret_decl(trf_14208)
static void C_fcall trf_14208(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14208(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14208(t0,t1);}

C_noret_decl(trf_13839)
static void C_fcall trf_13839(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13839(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13839(t0,t1);}

C_noret_decl(trf_13842)
static void C_fcall trf_13842(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13842(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13842(t0,t1);}

C_noret_decl(trf_13845)
static void C_fcall trf_13845(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13845(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13845(t0,t1);}

C_noret_decl(trf_14003)
static void C_fcall trf_14003(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14003(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14003(t0,t1);}

C_noret_decl(trf_14006)
static void C_fcall trf_14006(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14006(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14006(t0,t1);}

C_noret_decl(trf_14015)
static void C_fcall trf_14015(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14015(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14015(t0,t1,t2);}

C_noret_decl(trf_14025)
static void C_fcall trf_14025(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14025(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14025(t0,t1);}

C_noret_decl(trf_13972)
static void C_fcall trf_13972(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13972(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13972(t0,t1,t2);}

C_noret_decl(trf_13934)
static void C_fcall trf_13934(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13934(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13934(t0,t1,t2);}

C_noret_decl(trf_13304)
static void C_fcall trf_13304(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13304(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13304(t0,t1,t2,t3);}

C_noret_decl(trf_13889)
static void C_fcall trf_13889(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13889(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13889(t0,t1,t2);}

C_noret_decl(trf_13859)
static void C_fcall trf_13859(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13859(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13859(t0,t1,t2);}

C_noret_decl(trf_13794)
static void C_fcall trf_13794(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13794(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_13794(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_13738)
static void C_fcall trf_13738(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13738(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13738(t0,t1,t2);}

C_noret_decl(trf_13706)
static void C_fcall trf_13706(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13706(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13706(t0,t1,t2);}

C_noret_decl(trf_13657)
static void C_fcall trf_13657(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13657(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13657(t0,t1,t2);}

C_noret_decl(trf_13676)
static void C_fcall trf_13676(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13676(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13676(t0,t1,t2);}

C_noret_decl(trf_13596)
static void C_fcall trf_13596(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13596(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13596(t0,t1,t2,t3);}

C_noret_decl(trf_13579)
static void C_fcall trf_13579(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13579(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13579(t0,t1);}

C_noret_decl(trf_13562)
static void C_fcall trf_13562(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13562(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13562(t0,t1);}

C_noret_decl(trf_13395)
static void C_fcall trf_13395(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13395(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_13395(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_13405)
static void C_fcall trf_13405(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13405(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13405(t0,t1);}

C_noret_decl(trf_13217)
static void C_fcall trf_13217(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13217(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13217(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13239)
static void C_fcall trf_13239(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13239(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13239(t0,t1);}

C_noret_decl(trf_13058)
static void C_fcall trf_13058(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13058(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13058(t0,t1,t2,t3);}

C_noret_decl(trf_13147)
static void C_fcall trf_13147(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13147(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13147(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13161)
static void C_fcall trf_13161(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13161(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13161(t0,t1);}

C_noret_decl(trf_13089)
static void C_fcall trf_13089(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13089(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13089(t0,t1);}

C_noret_decl(trf_12993)
static void C_fcall trf_12993(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12993(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_12993(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11500)
static void C_fcall trf_11500(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11500(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11500(t0,t1);}

C_noret_decl(trf_11503)
static void C_fcall trf_11503(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11503(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11503(t0,t1);}

C_noret_decl(trf_11506)
static void C_fcall trf_11506(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11506(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11506(t0,t1);}

C_noret_decl(trf_11509)
static void C_fcall trf_11509(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11509(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11509(t0,t1);}

C_noret_decl(trf_11512)
static void C_fcall trf_11512(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11512(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11512(t0,t1);}

C_noret_decl(trf_11515)
static void C_fcall trf_11515(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11515(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11515(t0,t1);}

C_noret_decl(trf_11277)
static void C_fcall trf_11277(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11277(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11277(t0,t1);}

C_noret_decl(trf_11332)
static void C_fcall trf_11332(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11332(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11332(t0,t1);}

C_noret_decl(trf_11307)
static void C_fcall trf_11307(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11307(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11307(t0,t1);}

C_noret_decl(trf_11148)
static void C_fcall trf_11148(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11148(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11148(t0,t1,t2);}

C_noret_decl(trf_11071)
static void C_fcall trf_11071(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11071(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11071(t0,t1,t2);}

C_noret_decl(trf_11053)
static void C_fcall trf_11053(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11053(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11053(t0,t1,t2);}

C_noret_decl(trf_11035)
static void C_fcall trf_11035(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11035(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11035(t0,t1,t2);}

C_noret_decl(trf_11011)
static void C_fcall trf_11011(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11011(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11011(t0,t1);}

C_noret_decl(trf_11005)
static void C_fcall trf_11005(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11005(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_11005(t0,t1,t2,t3,t4);}

C_noret_decl(trf_10867)
static void C_fcall trf_10867(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10867(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10867(t0,t1);}

C_noret_decl(trf_10750)
static void C_fcall trf_10750(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10750(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10750(t0,t1,t2);}

C_noret_decl(trf_10759)
static void C_fcall trf_10759(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10759(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10759(t0,t1,t2,t3);}

C_noret_decl(trf_10592)
static void C_fcall trf_10592(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10592(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10592(t0,t1);}

C_noret_decl(trf_10608)
static void C_fcall trf_10608(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10608(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10608(t0,t1,t2,t3);}

C_noret_decl(trf_10416)
static void C_fcall trf_10416(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10416(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_10416(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_10446)
static void C_fcall trf_10446(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10446(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10446(t0,t1);}

C_noret_decl(trf_10429)
static void C_fcall trf_10429(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10429(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10429(t0,t1);}

C_noret_decl(trf_10294)
static void C_fcall trf_10294(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10294(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_10294(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_10324)
static void C_fcall trf_10324(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10324(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10324(t0,t1);}

C_noret_decl(trf_10307)
static void C_fcall trf_10307(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10307(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10307(t0,t1);}

C_noret_decl(trf_10197)
static void C_fcall trf_10197(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10197(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_10197(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_10210)
static void C_fcall trf_10210(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10210(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10210(t0,t1);}

C_noret_decl(trf_10129)
static void C_fcall trf_10129(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10129(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10129(t0,t1,t2,t3);}

C_noret_decl(trf_10099)
static void C_fcall trf_10099(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10099(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10099(t0,t1);}

C_noret_decl(trf_10027)
static void C_fcall trf_10027(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10027(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10027(t0,t1,t2,t3);}

C_noret_decl(trf_9826)
static void C_fcall trf_9826(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9826(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9826(t0,t1);}

C_noret_decl(trf_9908)
static void C_fcall trf_9908(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9908(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9908(t0,t1);}

C_noret_decl(trf_9919)
static void C_fcall trf_9919(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9919(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9919(t0,t1,t2,t3);}

C_noret_decl(trf_9931)
static void C_fcall trf_9931(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9931(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9931(t0,t1,t2);}

C_noret_decl(trf_9852)
static void C_fcall trf_9852(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9852(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9852(t0,t1,t2);}

C_noret_decl(trf_9489)
static void C_fcall trf_9489(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9489(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9489(t0,t1);}

C_noret_decl(trf_9492)
static void C_fcall trf_9492(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9492(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9492(t0,t1);}

C_noret_decl(trf_9498)
static void C_fcall trf_9498(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9498(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9498(t0,t1);}

C_noret_decl(trf_9401)
static void C_fcall trf_9401(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9401(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_9401(t0,t1,t2,t3,t4);}

C_noret_decl(trf_9293)
static void C_fcall trf_9293(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9293(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9293(t0,t1);}

C_noret_decl(trf_9298)
static void C_fcall trf_9298(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9298(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9298(t0,t1,t2,t3);}

C_noret_decl(trf_9065)
static void C_fcall trf_9065(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9065(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9065(t0,t1);}

C_noret_decl(trf_9068)
static void C_fcall trf_9068(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9068(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9068(t0,t1);}

C_noret_decl(trf_8966)
static void C_fcall trf_8966(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8966(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8966(t0,t1);}

C_noret_decl(trf_8861)
static void C_fcall trf_8861(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8861(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8861(t0,t1);}

C_noret_decl(trf_8870)
static void C_fcall trf_8870(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8870(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8870(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8883)
static void C_fcall trf_8883(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8883(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8883(t0,t1);}

C_noret_decl(trf_8725)
static void C_fcall trf_8725(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8725(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8725(t0,t1);}

C_noret_decl(trf_8728)
static void C_fcall trf_8728(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8728(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8728(t0,t1);}

C_noret_decl(trf_8730)
static void C_fcall trf_8730(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8730(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8730(t0,t1,t2,t3,t4);}

C_noret_decl(trf_8658)
static void C_fcall trf_8658(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8658(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8658(t0,t1);}

C_noret_decl(trf_8661)
static void C_fcall trf_8661(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8661(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8661(t0,t1);}

C_noret_decl(trf_8664)
static void C_fcall trf_8664(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8664(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8664(t0,t1);}

C_noret_decl(trf_8522)
static void C_fcall trf_8522(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8522(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8522(t0,t1,t2,t3);}

C_noret_decl(trf_8538)
static void C_fcall trf_8538(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8538(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8538(t0,t1,t2);}

C_noret_decl(trf_8260)
static void C_fcall trf_8260(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8260(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8260(t0,t1);}

C_noret_decl(trf_8263)
static void C_fcall trf_8263(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8263(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8263(t0,t1);}

C_noret_decl(trf_8005)
static void C_fcall trf_8005(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8005(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8005(t0,t1);}

C_noret_decl(trf_7938)
static void C_fcall trf_7938(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7938(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7938(t0,t1);}

C_noret_decl(trf_7928)
static void C_fcall trf_7928(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7928(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7928(t0,t1);}

C_noret_decl(trf_7910)
static void C_fcall trf_7910(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7910(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7910(t0,t1);}

C_noret_decl(trf_7899)
static void C_fcall trf_7899(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7899(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7899(t0,t1,t2);}

C_noret_decl(trf_7861)
static void C_fcall trf_7861(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7861(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7861(t0,t1);}

C_noret_decl(trf_7854)
static void C_fcall trf_7854(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7854(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7854(t0,t1);}

C_noret_decl(trf_7830)
static void C_fcall trf_7830(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7830(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7830(t0,t1);}

C_noret_decl(trf_7763)
static void C_fcall trf_7763(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7763(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7763(t0,t1,t2,t3);}

C_noret_decl(trf_7752)
static void C_fcall trf_7752(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7752(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7752(t0,t1,t2);}

C_noret_decl(trf_7718)
static void C_fcall trf_7718(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7718(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_7718(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_7691)
static void C_fcall trf_7691(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7691(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_7691(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_7650)
static void C_fcall trf_7650(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7650(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7650(t0,t1,t2);}

C_noret_decl(trf_7656)
static void C_fcall trf_7656(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7656(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7656(t0,t1,t2);}

C_noret_decl(trf_7666)
static void C_fcall trf_7666(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7666(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7666(t0,t1);}

C_noret_decl(trf_7531)
static void C_fcall trf_7531(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7531(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7531(t0,t1,t2,t3);}

C_noret_decl(trf_7544)
static void C_fcall trf_7544(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7544(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7544(t0,t1);}

C_noret_decl(trf_7492)
static void C_fcall trf_7492(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7492(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7492(t0,t1,t2,t3,t4);}

C_noret_decl(trf_7502)
static void C_fcall trf_7502(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7502(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7502(t0,t1);}

C_noret_decl(trf_7452)
static void C_fcall trf_7452(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7452(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7452(t0,t1,t2,t3,t4);}

C_noret_decl(trf_7462)
static void C_fcall trf_7462(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7462(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7462(t0,t1);}

C_noret_decl(trf_7376)
static void C_fcall trf_7376(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7376(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7376(t0,t1,t2,t3);}

C_noret_decl(trf_7353)
static void C_fcall trf_7353(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7353(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7353(t0,t1,t2,t3);}

C_noret_decl(trf_7299)
static void C_fcall trf_7299(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7299(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7299(t0,t1,t2,t3,t4);}

C_noret_decl(trf_6694)
static void C_fcall trf_6694(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6694(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6694(t0,t1);}

C_noret_decl(trf_6706)
static void C_fcall trf_6706(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6706(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_6706(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_6759)
static void C_fcall trf_6759(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6759(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6759(t0,t1);}

C_noret_decl(trf_6718)
static void C_fcall trf_6718(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6718(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6718(t0,t1,t2);}

C_noret_decl(trf_6731)
static void C_fcall trf_6731(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6731(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6731(t0,t1);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr7r)
static void C_fcall tr7r(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7r(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n*3);
t7=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr5r)
static void C_fcall tr5r(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5r(C_proc5 k){
int n;
C_word *a,t5;
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
n=C_rest_count(0);
a=C_alloc(n*3);
t5=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_grace_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("grace_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(5585)){
C_save(t1);
C_rereclaim2(5585*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,950);
lf[0]=C_h_intern(&lf[0],14,"expand-optkeys");
lf[1]=C_h_intern(&lf[1],3,"let");
lf[2]=C_h_intern(&lf[2],4,"let*");
lf[3]=C_h_intern(&lf[3],5,"null\077");
lf[4]=C_h_intern(&lf[4],5,"error");
lf[5]=C_decode_literal(C_heaptop,"\376B\000\000\022Too many arguments");
lf[6]=C_h_intern(&lf[6],6,"unless");
lf[7]=C_h_intern(&lf[7],10,"\003sysappend");
lf[8]=C_h_intern(&lf[8],3,"car");
lf[9]=C_h_intern(&lf[9],4,"case");
lf[10]=C_decode_literal(C_heaptop,"\376B\000\000\031Positional after keywords");
lf[11]=C_h_intern(&lf[11],4,"when");
lf[12]=C_h_intern(&lf[12],4,"set!");
lf[13]=C_h_intern(&lf[13],8,"keyword\077");
lf[14]=C_decode_literal(C_heaptop,"\376B\000\000\017Unknown keyword");
lf[15]=C_h_intern(&lf[15],3,"cdr");
lf[16]=C_h_intern(&lf[16],4,"else");
lf[17]=C_h_intern(&lf[17],7,"\003sysmap");
lf[18]=C_h_intern(&lf[18],6,"append");
lf[19]=C_decode_literal(C_heaptop,"\376B\000\000\021Redundant keyword");
lf[20]=C_h_intern(&lf[20],2,"if");
lf[21]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing keyword value in");
lf[22]=C_h_intern(&lf[22],4,"cadr");
lf[23]=C_h_intern(&lf[23],4,"cddr");
lf[24]=C_h_intern(&lf[24],15,"string->keyword");
lf[25]=C_h_intern(&lf[25],14,"symbol->string");
lf[26]=C_h_intern(&lf[26],6,"gensym");
lf[27]=C_decode_literal(C_heaptop,"\376B\000\000\004keyp");
lf[28]=C_decode_literal(C_heaptop,"\376B\000\000\004args");
lf[29]=C_h_intern(&lf[29],10,"*messages*");
lf[30]=C_h_intern(&lf[30],11,"expand-send");
lf[31]=C_h_intern(&lf[31],7,"sprintf");
lf[32]=C_decode_literal(C_heaptop,"\376B\000\000\003~A:");
lf[33]=C_h_intern(&lf[33],15,"keyword->string");
lf[34]=C_decode_literal(C_heaptop,"\376B\000\000\031~S duplicate keyword \047~S\047");
lf[35]=C_decode_literal(C_heaptop,"\376B\000\000!~S missing value for keyword \047~A\047");
lf[36]=C_decode_literal(C_heaptop,"\376B\000\000/~S invalid keyword \047~A\047~%Available keywords: ~A");
lf[37]=C_decode_literal(C_heaptop,"\376B\000\000 ~S expected keyword but got \047~S\047");
lf[38]=C_decode_literal(C_heaptop,"\376B\000\000#~S expected ~A arguments but got ~A");
lf[39]=C_h_intern(&lf[39],5,"&rest");
lf[40]=C_decode_literal(C_heaptop,"\376B\000\000\030~S is an invalid message");
lf[41]=C_h_intern(&lf[41],14,"hash-table-ref");
lf[42]=C_h_intern(&lf[42],3,"cwd");
lf[43]=C_h_intern(&lf[43],17,"\003syspeek-c-string");
lf[44]=C_h_intern(&lf[44],5,"chdir");
lf[45]=C_decode_literal(C_heaptop,"\376B\000\000\002~/");
lf[46]=C_h_intern(&lf[46],17,"\003sysmake-c-string");
lf[47]=C_h_intern(&lf[47],5,"first");
lf[48]=C_h_intern(&lf[48],6,"second");
lf[49]=C_h_intern(&lf[49],5,"third");
lf[50]=C_h_intern(&lf[50],5,"caddr");
lf[51]=C_h_intern(&lf[51],6,"fourth");
lf[52]=C_h_intern(&lf[52],6,"cadddr");
lf[53]=C_h_intern(&lf[53],5,"fifth");
lf[54]=C_h_intern(&lf[54],5,"sixth");
lf[55]=C_h_intern(&lf[55],7,"seventh");
lf[56]=C_h_intern(&lf[56],6,"eighth");
lf[57]=C_h_intern(&lf[57],5,"ninth");
lf[58]=C_h_intern(&lf[58],5,"tenth");
lf[59]=C_h_intern(&lf[59],3,"nth");
lf[60]=C_h_intern(&lf[60],8,"list-ref");
lf[61]=C_h_intern(&lf[61],4,"rest");
lf[62]=C_h_intern(&lf[62],4,"last");
lf[63]=C_h_intern(&lf[63],7,"butlast");
lf[64]=C_h_intern(&lf[64],4,"tail");
lf[65]=C_h_intern(&lf[65],5,"list*");
lf[66]=C_decode_literal(C_heaptop,"\376B\000\000&>>> Error: too few arguments to list*.");
lf[67]=C_h_intern(&lf[67],9,"list-set!");
lf[68]=C_h_intern(&lf[68],8,"reverse!");
lf[69]=C_h_intern(&lf[69],9,"make-list");
lf[70]=C_decode_literal(C_heaptop,"\376B\000\000\034Negative length to make-list");
lf[71]=C_h_intern(&lf[71],10,"list-index");
lf[72]=C_h_intern(&lf[72],9,"list-find");
lf[73]=C_h_intern(&lf[73],6,"every\077");
lf[99]=C_h_intern(&lf[99],7,"rescale");
lf[100]=C_h_intern(&lf[100],8,"discrete");
lf[101]=C_h_intern(&lf[101],4,"not\077");
lf[102]=C_h_intern(&lf[102],3,"int");
lf[103]=C_h_intern(&lf[103],4,"plus");
lf[104]=C_h_intern(&lf[104],1,"+");
lf[105]=C_h_intern(&lf[105],5,"minus");
lf[106]=C_h_intern(&lf[106],1,"-");
lf[107]=C_h_intern(&lf[107],5,"times");
lf[108]=C_h_intern(&lf[108],1,"*");
lf[109]=C_h_intern(&lf[109],6,"divide");
lf[110]=C_h_intern(&lf[110],1,"/");
lf[111]=C_h_intern(&lf[111],8,"quantize");
lf[112]=C_h_intern(&lf[112],8,"decimals");
lf[113]=C_h_intern(&lf[113],5,"round");
lf[114]=C_h_intern(&lf[114],4,"expt");
lf[115]=C_decode_literal(C_heaptop,"\376U10.0\000");
lf[116]=C_h_intern(&lf[116],15,"rhythm->seconds");
lf[117]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[118]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[119]=C_h_intern(&lf[119],6,"\000tempo");
lf[120]=C_h_intern(&lf[120],5,"\000beat");
lf[121]=C_h_intern(&lf[121],12,"cents->ratio");
lf[122]=C_h_intern(&lf[122],12,"ratio->cents");
lf[124]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[125]=C_h_intern(&lf[125],3,"err");
lf[126]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[127]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[128]=C_h_intern(&lf[128],6,"interp");
lf[129]=C_decode_literal(C_heaptop,"\376B\000\000\027missing x y coordinates");
lf[130]=C_h_intern(&lf[130],8,"tendency");
lf[131]=C_h_intern(&lf[131],3,"ran");
lf[132]=C_h_intern(&lf[132],3,"fit");
lf[133]=C_h_intern(&lf[133],9,"remainder");
lf[134]=C_decode_literal(C_heaptop,"\376B\000\000\021mode not 1 2 or 3");
lf[135]=C_h_intern(&lf[135],5,"scale");
lf[136]=C_h_intern(&lf[136],6,"modulo");
lf[137]=C_decode_literal(C_heaptop,"\376B\000\000\023limit same as start");
lf[138]=C_h_intern(&lf[138],8,"ran-set!");
lf[139]=C_h_intern(&lf[139],7,"between");
lf[140]=C_h_intern(&lf[140],4,"pick");
lf[141]=C_h_intern(&lf[141],4,"odds");
lf[142]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[143]=C_h_intern(&lf[143],5,"\000true");
lf[144]=C_h_intern(&lf[144],6,"\000false");
lf[145]=C_h_intern(&lf[145],4,"vary");
lf[146]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[147]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[148]=C_h_intern(&lf[148],8,"shuffle!");
lf[149]=C_h_intern(&lf[149],7,"shuffle");
lf[150]=C_h_intern(&lf[150],6,"ranlow");
lf[151]=C_h_intern(&lf[151],7,"ranhigh");
lf[152]=C_h_intern(&lf[152],9,"ranmiddle");
lf[153]=C_h_intern(&lf[153],7,"ranbeta");
lf[154]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[155]=C_h_intern(&lf[155],2,"\000a");
lf[156]=C_h_intern(&lf[156],2,"\000b");
lf[157]=C_h_intern(&lf[157],6,"ranexp");
lf[158]=C_h_intern(&lf[158],8,"rangauss");
lf[159]=C_h_intern(&lf[159],9,"rancauchy");
lf[160]=C_h_intern(&lf[160],10,"ranpoisson");
lf[161]=C_h_intern(&lf[161],3,"arg");
lf[162]=C_h_intern(&lf[162],8,"rangamma");
lf[163]=C_h_intern(&lf[163],8,"ranbrown");
lf[164]=C_h_intern(&lf[164],7,"ranpink");
lf[165]=C_h_intern(&lf[165],4,"segs");
lf[166]=C_decode_literal(C_heaptop,"\376B\000\000\014Illegal base");
lf[167]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[170]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[171]=C_h_intern(&lf[171],13,"string-append");
lf[172]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[174]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[175]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[176]=C_decode_literal(C_heaptop,"\376U0.333333333333333\000");
lf[177]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[178]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[179]=C_h_intern(&lf[179],5,"floor");
lf[180]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[181]=C_h_intern(&lf[181],4,"note");
lf[182]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[183]=C_h_intern(&lf[183],3,"key");
lf[184]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[185]=C_h_intern(&lf[185],2,"hz");
lf[186]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[187]=C_h_intern(&lf[187],2,"pc");
lf[188]=C_h_intern(&lf[188],6,"invert");
lf[189]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[190]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[191]=C_h_intern(&lf[191],9,"transpose");
lf[192]=C_decode_literal(C_heaptop,"\376B\000\000\022No transposion for");
lf[193]=C_h_intern(&lf[193],10,"retrograde");
lf[194]=C_h_intern(&lf[194],7,"reverse");
lf[195]=C_h_intern(&lf[195],11,"scale-order");
lf[196]=C_h_intern(&lf[196],4,"sort");
lf[197]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[199]=C_h_intern(&lf[199],8,"spectrum");
lf[201]=C_h_intern(&lf[201],13,"spectrum-time");
lf[203]=C_h_intern(&lf[203],14,"\003sysblock-set!");
lf[204]=C_h_intern(&lf[204],13,"spectrum-size");
lf[206]=C_h_intern(&lf[206],14,"spectrum-freqs");
lf[208]=C_h_intern(&lf[208],13,"spectrum-amps");
lf[209]=C_h_intern(&lf[209],13,"spectrum-copy");
lf[210]=C_h_intern(&lf[210],14,"spectrum-pairs");
lf[211]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[212]=C_h_intern(&lf[212],16,"spectrum-minfreq");
lf[213]=C_h_intern(&lf[213],16,"spectrum-maxfreq");
lf[214]=C_h_intern(&lf[214],15,"spectrum-minamp");
lf[215]=C_h_intern(&lf[215],12,"\003sysfor-each");
lf[216]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[217]=C_h_intern(&lf[217],15,"spectrum-maxamp");
lf[218]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[219]=C_h_intern(&lf[219],13,"spectrum-keys");
lf[220]=C_h_intern(&lf[220],8,"for-each");
lf[221]=C_h_intern(&lf[221],6,"\000order");
lf[222]=C_h_intern(&lf[222],7,"\000thresh");
lf[223]=C_h_intern(&lf[223],6,"\000quant");
lf[224]=C_h_intern(&lf[224],7,"\000unique");
lf[225]=C_h_intern(&lf[225],4,"\000min");
lf[226]=C_h_intern(&lf[226],4,"\000max");
lf[227]=C_h_intern(&lf[227],11,"fm-spectrum");
lf[228]=C_h_intern(&lf[228],8,"set-car!");
lf[229]=C_h_intern(&lf[229],4,"caar");
lf[230]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[231]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[232]=C_h_intern(&lf[232],13,"spectrum-add!");
lf[233]=C_h_intern(&lf[233],11,"rm-spectrum");
lf[234]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[235]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[236]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[237]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[238]=C_h_intern(&lf[238],14,"spectrum-flip!");
lf[239]=C_h_intern(&lf[239],17,"spectrum-rescale!");
lf[240]=C_h_intern(&lf[240],5,"sort!");
lf[241]=C_h_intern(&lf[241],3,"map");
lf[242]=C_h_intern(&lf[242],2,"<=");
lf[243]=C_decode_literal(C_heaptop,"\376B\000\000\037Non-numerical y can\047t be scaler");
lf[244]=C_h_intern(&lf[244],7,"number\077");
lf[245]=C_decode_literal(C_heaptop,"\376B\000\000\014Mode not 1-8");
lf[246]=C_decode_literal(C_heaptop,"\376B\000\000%Need a scaler, envelope or x y values");
lf[247]=C_decode_literal(C_heaptop,"\376B\000\000\024Not a number or pair");
lf[248]=C_h_intern(&lf[248],19,"import-spear-frames");
lf[249]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[250]=C_h_intern(&lf[250],9,"read-line");
lf[251]=C_decode_literal(C_heaptop,"\376B\000\000\016Bad frame data");
lf[252]=C_h_intern(&lf[252],4,"read");
lf[253]=C_h_intern(&lf[253],17,"open-input-string");
lf[254]=C_decode_literal(C_heaptop,"\376B\000\000\012frame-data");
lf[255]=C_decode_literal(C_heaptop,"\376B\000\000$point-type index frequency amplitude");
lf[256]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[257]=C_decode_literal(C_heaptop,"\376B\000\000\025par-text-frame-format");
lf[258]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[259]=C_h_intern(&lf[259],18,"current-input-port");
lf[260]=C_h_intern(&lf[260],20,"with-input-from-file");
lf[262]=C_h_intern(&lf[262],6,"period");
lf[271]=C_h_intern(&lf[271],7,"pattern");
lf[286]=C_h_intern(&lf[286],4,"\000nad");
lf[287]=C_h_intern(&lf[287],8,"\000periods");
lf[288]=C_h_intern(&lf[288],12,"\000depth-first");
lf[290]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[291]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[292]=C_h_intern(&lf[292],14,"\000breadth-first");
lf[293]=C_decode_literal(C_heaptop,"\376B\000\000\026Illegal for traversing");
lf[294]=C_h_intern(&lf[294],7,"\000values");
lf[295]=C_decode_literal(C_heaptop,"\376B\000\000\024Illegal for counting");
lf[297]=C_h_intern(&lf[297],4,"eop\077");
lf[298]=C_h_intern(&lf[298],4,"\000eop");
lf[299]=C_h_intern(&lf[299],4,"eod\077");
lf[300]=C_h_intern(&lf[300],4,"\000eod");
lf[301]=C_h_intern(&lf[301],4,"next");
lf[305]=C_h_intern(&lf[305],5,"force");
lf[306]=C_h_intern(&lf[306],8,"promise\077");
lf[307]=C_h_intern(&lf[307],3,"max");
lf[308]=C_h_intern(&lf[308],10,"make-cycle");
lf[310]=C_h_intern(&lf[310],4,"\000for");
lf[311]=C_h_intern(&lf[311],7,"\000repeat");
lf[313]=C_h_intern(&lf[313],5,"palin");
lf[315]=C_h_intern(&lf[315],15,"make-palindrome");
lf[317]=C_h_intern(&lf[317],6,"\000elide");
lf[318]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\000\376\003\000\000\002\376\377\006\001\376\377\016");
lf[319]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\001\376\003\000\000\002\376\377\006\000\376\377\016");
lf[320]=C_h_intern(&lf[320],9,"make-line");
lf[322]=C_h_intern(&lf[322],9,"make-heap");
lf[324]=C_h_intern(&lf[324],13,"make-rotation");
lf[326]=C_h_intern(&lf[326],7,"\000rotate");
lf[328]=C_h_intern(&lf[328],11,"random-item");
lf[336]=C_h_intern(&lf[336],14,"make-weighting");
lf[339]=C_h_intern(&lf[339],7,"\000weight");
lf[340]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[341]=C_h_intern(&lf[341],11,"make-markov");
lf[343]=C_h_intern(&lf[343],5,"\000past");
lf[344]=C_h_intern(&lf[344],2,"->");
lf[345]=C_decode_literal(C_heaptop,"\376B\000\000.Left hand sides have different number of items");
lf[346]=C_h_intern(&lf[346],3,"\000->");
lf[347]=C_decode_literal(C_heaptop,"\376B\000\000\042Transition missing right hand side");
lf[348]=C_decode_literal(C_heaptop,"\376B\000\000\030Transition is not a list");
lf[349]=C_decode_literal(C_heaptop,"\376B\000\000 Not a list of Markov transitions");
lf[350]=C_decode_literal(C_heaptop,"\376B\000\000\032No transition matches past");
lf[352]=C_h_intern(&lf[352],10,"graph-node");
lf[353]=C_h_intern(&lf[353],10,"make-graph");
lf[355]=C_h_intern(&lf[355],3,"\000to");
lf[356]=C_h_intern(&lf[356],3,"\000id");
lf[357]=C_decode_literal(C_heaptop,"\376B\000\000\025Graph node not a list");
lf[358]=C_decode_literal(C_heaptop,"\376B\000\000\016Not graph data");
lf[359]=C_decode_literal(C_heaptop,"\376B\000\000\024No graph node for id");
lf[360]=C_h_intern(&lf[360],14,"markov-analyze");
lf[361]=C_h_intern(&lf[361],6,"format");
lf[362]=C_decode_literal(C_heaptop,"\376B\000\000\002~s");
lf[363]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002->\376\377\016");
lf[364]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[365]=C_h_intern(&lf[365],7,"newline");
lf[366]=C_h_intern(&lf[366],7,"display");
lf[367]=C_h_intern(&lf[367],19,"\003syswrite-char/port");
lf[368]=C_h_intern(&lf[368],19,"\003sysstandard-output");
lf[369]=C_h_intern(&lf[369],3,"min");
lf[370]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[371]=C_decode_literal(C_heaptop,"\376B\000\000\003 ~a");
lf[372]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[373]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[374]=C_h_intern(&lf[374],11,"make-string");
lf[375]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[376]=C_h_intern(&lf[376],1,"<");
lf[377]=C_h_intern(&lf[377],11,"string-ci<\077");
lf[378]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[379]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[380]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[381]=C_h_intern(&lf[381],5,"\000mode");
lf[383]=C_h_intern(&lf[383],5,"token");
lf[388]=C_h_intern(&lf[388],1,"t");
lf[393]=C_h_intern(&lf[393],4,"rule");
lf[396]=C_h_intern(&lf[396],22,"hash-table-ref/default");
lf[403]=C_h_intern(&lf[403],11,"parse-error");
lf[407]=C_h_intern(&lf[407],10,"parse-unit");
lf[419]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[421]=C_h_intern(&lf[421],14,"string->symbol");
lf[422]=C_h_intern(&lf[422],5,"equal");
lf[423]=C_h_intern(&lf[423],3,"and");
lf[424]=C_h_intern(&lf[424],2,"or");
lf[425]=C_h_intern(&lf[425],3,"not");
lf[426]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[427]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[430]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[432]=C_h_intern(&lf[432],2,"!=");
lf[433]=C_h_intern(&lf[433],1,"=");
lf[438]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[439]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[440]=C_h_intern(&lf[440],1,"@");
lf[441]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[442]=C_h_intern(&lf[442],6,"printf");
lf[443]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[448]=C_h_intern(&lf[448],2,">=");
lf[449]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[450]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[451]=C_h_intern(&lf[451],5,"begin");
lf[452]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[453]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[454]=C_h_intern(&lf[454],1,">");
lf[455]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[456]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[457]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[461]=C_h_intern(&lf[461],17,"*sal-trace-input*");
lf[462]=C_h_intern(&lf[462],3,"sal");
lf[463]=C_h_intern(&lf[463],11,"print-error");
lf[464]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[465]=C_h_intern(&lf[465],9,"substring");
lf[466]=C_h_intern(&lf[466],2,"pp");
lf[467]=C_h_intern(&lf[467],4,"eval");
lf[468]=C_h_intern(&lf[468],7,"\000syntax");
lf[469]=C_h_intern(&lf[469],7,"\000scheme");
lf[470]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[471]=C_h_intern(&lf[471],7,"call/cc");
lf[472]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[473]=C_h_intern(&lf[473],9,"sal:print");
lf[474]=C_h_intern(&lf[474],13,"print-message");
lf[475]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[476]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[477]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[478]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[479]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[480]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[481]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[482]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[483]=C_h_intern(&lf[483],9,"sal:chdir");
lf[484]=C_h_intern(&lf[484],8,"sal:load");
lf[485]=C_h_intern(&lf[485],13,"load-sal-file");
lf[486]=C_h_intern(&lf[486],4,"load");
lf[487]=C_h_intern(&lf[487],15,"\003syssubstring=\077");
lf[488]=C_decode_literal(C_heaptop,"\376B\000\000\004.sal");
lf[489]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[490]=C_decode_literal(C_heaptop,"\376B\000\000\020\042does not exist\012");
lf[491]=C_h_intern(&lf[491],12,"file-exists\077");
lf[492]=C_h_intern(&lf[492],8,"sal:open");
lf[493]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[494]=C_h_intern(&lf[494],10,"sal:output");
lf[495]=C_decode_literal(C_heaptop,"\376B\000\000+>>> Error: output command not implemented.\012");
lf[507]=C_h_intern(&lf[507],8,"operator");
lf[508]=C_h_intern(&lf[508],8,"bindings");
lf[509]=C_h_intern(&lf[509],10,"collectors");
lf[510]=C_h_intern(&lf[510],9,"initially");
lf[511]=C_h_intern(&lf[511],9,"end-tests");
lf[512]=C_h_intern(&lf[512],7,"looping");
lf[513]=C_h_intern(&lf[513],8,"stepping");
lf[514]=C_h_intern(&lf[514],7,"finally");
lf[515]=C_h_intern(&lf[515],9,"returning");
lf[521]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[522]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[523]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[524]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[525]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[526]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[527]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[529]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[530]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[531]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[532]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[533]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[534]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[535]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[537]=C_h_intern(&lf[537],3,"for");
lf[538]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[539]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[540]=C_h_intern(&lf[540],8,"downfrom");
lf[541]=C_h_intern(&lf[541],5,"above");
lf[542]=C_h_intern(&lf[542],5,"below");
lf[543]=C_h_intern(&lf[543],6,"downto");
lf[544]=C_h_intern(&lf[544],4,"from");
lf[545]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[546]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[547]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[548]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[549]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[550]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[551]=C_h_intern(&lf[551],2,"to");
lf[552]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[553]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[554]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[555]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[556]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[557]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[558]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[559]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[560]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[561]=C_h_intern(&lf[561],2,"by");
lf[562]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[563]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[564]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[565]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[567]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[568]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[570]=C_h_intern(&lf[570],6,"across");
lf[571]=C_h_intern(&lf[571],13,"vector-length");
lf[572]=C_h_intern(&lf[572],10,"vector-ref");
lf[573]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[574]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[575]=C_h_intern(&lf[575],4,"over");
lf[576]=C_h_intern(&lf[576],2,"in");
lf[577]=C_h_intern(&lf[577],5,"quote");
lf[578]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[579]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[580]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[581]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[582]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[583]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[584]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[585]=C_h_intern(&lf[585],2,"on");
lf[586]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[587]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[589]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[590]=C_h_intern(&lf[590],4,"then");
lf[591]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[592]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[593]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[594]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[596]=C_h_intern(&lf[596],4,"with");
lf[597]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[598]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[599]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[600]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[601]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[602]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[603]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[604]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[605]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[606]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[607]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[608]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[610]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[611]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[613]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[614]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[616]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[617]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[619]=C_h_intern(&lf[619],3,"sum");
lf[620]=C_h_intern(&lf[620],5,"count");
lf[621]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[622]=C_h_intern(&lf[622],8,"minimize");
lf[623]=C_h_intern(&lf[623],8,"maximize");
lf[624]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[625]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[626]=C_h_intern(&lf[626],4,"list");
lf[627]=C_h_intern(&lf[627],8,"set-cdr!");
lf[628]=C_h_intern(&lf[628],9,"last-pair");
lf[629]=C_h_intern(&lf[629],7,"collect");
lf[630]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[631]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[632]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[633]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[634]=C_h_intern(&lf[634],5,"nconc");
lf[635]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[636]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[637]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[638]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[639]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[640]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[641]=C_h_intern(&lf[641],4,"into");
lf[642]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[643]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[644]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[645]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[646]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[648]=C_h_intern(&lf[648],6,"return");
lf[650]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[651]=C_h_intern(&lf[651],5,"until");
lf[652]=C_h_intern(&lf[652],5,"while");
lf[653]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[654]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[656]=C_h_intern(&lf[656],7,"thereis");
lf[657]=C_h_intern(&lf[657],6,"always");
lf[658]=C_h_intern(&lf[658],5,"never");
lf[659]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[660]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[662]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[663]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[665]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[666]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[667]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[668]=C_h_intern(&lf[668],4,"task");
lf[669]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[671]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[672]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[673]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[674]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[675]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[677]=C_h_intern(&lf[677],2,"do");
lf[678]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[679]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[680]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[681]=C_h_intern(&lf[681],4,"iter");
lf[682]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[683]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[684]=C_h_intern(&lf[684],6,"repeat");
lf[685]=C_h_intern(&lf[685],2,"as");
lf[687]=C_h_intern(&lf[687],10,"mm:make-on");
lf[688]=C_h_intern(&lf[688],5,"\000time");
lf[689]=C_h_intern(&lf[689],4,"\000key");
lf[690]=C_h_intern(&lf[690],4,"\000vel");
lf[691]=C_h_intern(&lf[691],5,"\000chan");
lf[692]=C_h_intern(&lf[692],6,"mm:on\077");
lf[693]=C_h_intern(&lf[693],11,"mm:make-off");
lf[694]=C_h_intern(&lf[694],7,"mm:off\077");
lf[695]=C_h_intern(&lf[695],13,"mm:make-touch");
lf[696]=C_h_intern(&lf[696],4,"\000val");
lf[697]=C_h_intern(&lf[697],9,"mm:touch\077");
lf[698]=C_h_intern(&lf[698],12,"mm:make-ctrl");
lf[699]=C_h_intern(&lf[699],4,"\000num");
lf[700]=C_h_intern(&lf[700],8,"mm:ctrl\077");
lf[701]=C_h_intern(&lf[701],12,"mm:make-prog");
lf[702]=C_h_intern(&lf[702],8,"mm:prog\077");
lf[703]=C_h_intern(&lf[703],13,"mm:make-press");
lf[704]=C_h_intern(&lf[704],9,"mm:press\077");
lf[705]=C_h_intern(&lf[705],12,"mm:make-bend");
lf[706]=C_h_intern(&lf[706],7,"mm:free");
lf[707]=C_h_intern(&lf[707],7,"mm:copy");
lf[708]=C_h_intern(&lf[708],7,"mm:time");
lf[709]=C_h_intern(&lf[709],12,"mm:time-set!");
lf[710]=C_h_intern(&lf[710],7,"mm:chan");
lf[711]=C_h_intern(&lf[711],12,"mm:chan-set!");
lf[712]=C_h_intern(&lf[712],6,"mm:key");
lf[713]=C_h_intern(&lf[713],11,"mm:key-set!");
lf[714]=C_h_intern(&lf[714],6,"mm:vel");
lf[715]=C_h_intern(&lf[715],11,"mm:vel-set!");
lf[716]=C_h_intern(&lf[716],6,"mm:val");
lf[717]=C_h_intern(&lf[717],11,"mm:val-set!");
lf[718]=C_h_intern(&lf[718],1,"k");
lf[719]=C_h_intern(&lf[719],6,"mm:num");
lf[720]=C_h_intern(&lf[720],11,"mm:num-set!");
lf[721]=C_h_intern(&lf[721],7,"mp:note");
lf[722]=C_h_intern(&lf[722],7,"mp:midi");
lf[723]=C_h_intern(&lf[723],6,"mp:off");
lf[724]=C_h_intern(&lf[724],5,"mp:on");
lf[725]=C_h_intern(&lf[725],8,"mp:touch");
lf[726]=C_h_intern(&lf[726],7,"mp:ctrl");
lf[727]=C_h_intern(&lf[727],7,"mp:prog");
lf[728]=C_h_intern(&lf[728],8,"mp:press");
lf[729]=C_h_intern(&lf[729],7,"mp:bend");
lf[730]=C_h_intern(&lf[730],5,"mp:mm");
lf[731]=C_h_intern(&lf[731],9,"mp:inhook");
lf[732]=C_decode_literal(C_heaptop,"\376B\000\000*>>> Error: ~A~%    Aborting MIDI inhook.~%");
lf[733]=C_h_intern(&lf[733],27,"condition-property-accessor");
lf[734]=C_h_intern(&lf[734],3,"exn");
lf[735]=C_h_intern(&lf[735],7,"message");
lf[736]=C_h_intern(&lf[736],22,"with-exception-handler");
lf[737]=C_h_intern(&lf[737],30,"call-with-current-continuation");
lf[738]=C_h_intern(&lf[738],4,"cs:i");
lf[739]=C_h_intern(&lf[739],4,"cs:f");
lf[740]=C_h_intern(&lf[740],8,"cs:clear");
lf[741]=C_h_intern(&lf[741],7,"cm-logo");
lf[742]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[743]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[744]=C_decode_literal(C_heaptop,"\376B\000\000\015Common Music ");
lf[745]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[746]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[747]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[748]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[749]=C_h_intern(&lf[749],25,"current-time-milliseconds");
lf[750]=C_h_intern(&lf[750],20,"current-time-seconds");
lf[752]=C_h_intern(&lf[752],6,"\003sysgc");
lf[755]=C_h_intern(&lf[755],6,"sprout");
lf[756]=C_h_intern(&lf[756],9,"\003syserror");
lf[757]=C_decode_literal(C_heaptop,"\376B\000\000\033too many optional arguments");
lf[758]=C_h_intern(&lf[758],3,"now");
lf[759]=C_h_intern(&lf[759],11,"time-format");
lf[760]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[761]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[762]=C_h_intern(&lf[762],1,"m");
lf[763]=C_decode_literal(C_heaptop,"\376B\000\000\021not a time-format");
lf[764]=C_h_intern(&lf[764],1,"s");
lf[765]=C_h_intern(&lf[765],5,"pause");
lf[766]=C_h_intern(&lf[766],7,"paused\077");
lf[767]=C_h_intern(&lf[767],4,"cont");
lf[768]=C_h_intern(&lf[768],4,"stop");
lf[769]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[770]=C_h_intern(&lf[770],4,"hush");
lf[772]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\014%%stopproc%%\376\003\000\000\002\376\377\001\377\377\377\377\376\377\016");
lf[774]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[775]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[778]=C_h_intern(&lf[778],14,"return-to-host");
lf[779]=C_h_intern(&lf[779],6,"define");
lf[780]=C_decode_literal(C_heaptop,"\376B\000\000\027Illegal process formals");
lf[781]=C_h_intern(&lf[781],18,"\003sysregister-macro");
lf[782]=C_h_intern(&lf[782],14,"define-process");
lf[783]=C_h_intern(&lf[783],6,"lambda");
lf[784]=C_h_intern(&lf[784],7,"elapsed");
lf[785]=C_h_intern(&lf[785],1,"x");
lf[786]=C_h_intern(&lf[786],4,"wait");
lf[787]=C_h_intern(&lf[787],18,"current-error-port");
lf[788]=C_h_intern(&lf[788],19,"print-error-message");
lf[789]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[790]=C_decode_literal(C_heaptop,"\376B\000\000*Warning: possible non-terminating process.");
lf[791]=C_decode_literal(C_heaptop,"\376B\000\000\003err");
lf[792]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[793]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[794]=C_h_intern(&lf[794],3,"run");
lf[795]=C_h_intern(&lf[795],20,"\003sysregister-macro-2");
lf[796]=C_h_intern(&lf[796],15,"hash-table-set!");
lf[797]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:clear");
lf[798]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:clear\376\377\016");
lf[799]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[800]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:f\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[801]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[802]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:i\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[803]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[804]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011mp:inhook\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000func\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[805]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[806]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:mm\376\003\000\000\002\376\003\000\000\002\376\001\000\000\003\000mm\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[807]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[808]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:bend\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000 \000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[809]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[810]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:press\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[811]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[812]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:prog\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[813]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[814]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:ctrl\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000num\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[815]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[816]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:touch\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[817]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[818]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:on\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000"
"<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000vel\376\003\000\000\002\376\377\001\000\000\000@\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[819]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[820]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006mp:off\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000"
"\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[821]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[822]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:midi\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[823]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:note");
lf[824]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:note\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[825]=C_h_intern(&lf[825],5,":loop");
lf[826]=C_h_intern(&lf[826],7,"tagbody");
lf[827]=C_h_intern(&lf[827],5,"block");
lf[828]=C_h_intern(&lf[828],3,"nil");
lf[829]=C_h_intern(&lf[829],2,"go");
lf[830]=C_h_intern(&lf[830],8,"function");
lf[831]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[832]=C_h_intern(&lf[832],3,"pop");
lf[833]=C_h_intern(&lf[833],4,"cons");
lf[834]=C_h_intern(&lf[834],4,"push");
lf[835]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[836]=C_h_intern(&lf[836],4,"loop");
lf[837]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[838]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[839]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[840]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[841]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[842]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[843]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[844]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[845]=C_h_intern(&lf[845],7,"\000return");
lf[846]=C_h_intern(&lf[846],9,"\000function");
lf[847]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[848]=C_h_intern(&lf[848],8,"\000process");
lf[849]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[850]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[851]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[852]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[853]=C_h_intern(&lf[853],4,"cond");
lf[854]=C_decode_literal(C_heaptop,"\376B\000\000\005abort");
lf[855]=C_decode_literal(C_heaptop,"\376B\000\000\005error");
lf[856]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[857]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[858]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[859]=C_decode_literal(C_heaptop,"\376B\000\000\004halt");
lf[860]=C_h_intern(&lf[860],5,"\000loop");
lf[861]=C_h_intern(&lf[861],4,"\000run");
lf[862]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[863]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[864]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[865]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[866]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[867]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[868]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[869]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[870]=C_h_intern(&lf[870],9,"list-tail");
lf[871]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[872]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[873]=C_h_intern(&lf[873],9,"\000bindings");
lf[874]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[875]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[876]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[877]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[878]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[879]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[880]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[881]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[882]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[883]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[884]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[885]=C_h_intern(&lf[885],10,"sal:system");
lf[886]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[887]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[888]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[889]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[890]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[891]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[892]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[893]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[894]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[895]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[896]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[897]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[898]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[899]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[900]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[901]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[902]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[903]=C_h_intern(&lf[903],7,"unquote");
lf[904]=C_h_intern(&lf[904],16,"unquote-splicing");
lf[905]=C_h_intern(&lf[905],5,"\000list");
lf[906]=C_h_intern(&lf[906],8,"\000unquote");
lf[907]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[908]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[909]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[910]=C_h_intern(&lf[910],10,"quasiquote");
lf[911]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[912]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[913]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[914]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[915]=C_h_intern(&lf[915],7,"fprintf");
lf[916]=C_decode_literal(C_heaptop,"\376B\000\000\007#<u ~A>");
lf[917]=C_decode_literal(C_heaptop,"\376B\000\000\010#<u x~X>");
lf[918]=C_h_intern(&lf[918],27,"\003sysregister-record-printer");
lf[919]=C_decode_literal(C_heaptop,"\376B\000\000\030#<parse-error ~S (@ ~S)>");
lf[920]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[921]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\001+\376\003\000\000\002\376\001\000\000\001*\376\003\000\000\002\376\001\000\000\001@\376\003\000\000\002\376\001\000\000\003and\376\003\000\000\002\376\001\000\000\002or\376\377\016");
lf[922]=C_h_intern(&lf[922],6,"ruleid");
lf[923]=C_h_intern(&lf[923],9,"make-rule");
lf[924]=C_h_intern(&lf[924],7,"*rules*");
lf[925]=C_h_intern(&lf[925],7,"defrule");
lf[926]=C_decode_literal(C_heaptop,"\376B\000\000\007#<r ~A>");
lf[927]=C_h_intern(&lf[927],15,"make-hash-table");
lf[928]=C_h_intern(&lf[928],3,"eq\077");
lf[929]=C_decode_literal(C_heaptop,"\376B\000\000\013#<t x~X ~S>");
lf[930]=C_decode_literal(C_heaptop,"\376B\000\000\016#<spectrum ~S>");
lf[931]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[932]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[933]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[934]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001c\376\003\000\000\002\376B\000\000\002bs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002df\376\003\000\000\002\376B\000\000\002cs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001d\376"
"\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002ef\376\003\000\000\002\376B\000\000\002ds\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001e\376\003\000\000\002\376B\000\000\002ff\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001"
"f\376\003\000\000\002\376B\000\000\002es\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002fs\376\003\000\000\002\376B\000\000\002gf\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001g\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000"
"\000\002af\376\003\000\000\002\376B\000\000\002gs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001a\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002bf\376\003\000\000\002\376B\000\000\002as\376\377\016\376\003\000\000\002\376\003\000\000\002"
"\376B\000\000\001b\376\003\000\000\002\376B\000\000\002cf\376\377\016\376\377\016");
lf[935]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[936]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[937]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376B\000\000\00200\376\003\000\000\002\376B\000\000\0010\376\003\000\000\002\376B\000\000\0011\376\003\000\000\002\376B\000\000\0012\376\003\000\000\002\376B\000\000\0013\376\003\000\000\002\376B\000\000\0014\376\003\000\000\002\376B\000\000\0015\376\003"
"\000\000\002\376B\000\000\0016\376\003\000\000\002\376B\000\000\0017\376\003\000\000\002\376B\000\000\0018\376\003\000\000\002\376B\000\000\0019\376\377\016");
lf[938]=C_decode_literal(C_heaptop,"\376B\000\000\001>");
lf[939]=C_decode_literal(C_heaptop,"\376B\000\000\001<");
lf[940]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[941]=C_decode_literal(C_heaptop,"\376B\000\000\002cf");
lf[942]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[943]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[944]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[945]=C_h_intern(&lf[945],6,"equal\077");
lf[946]=C_h_intern(&lf[946],4,"send");
lf[947]=C_decode_literal(C_heaptop,"\376B\000\0003message function not string, symbol or list of both");
lf[948]=C_h_intern(&lf[948],19,"define-send-message");
lf[949]=C_h_intern(&lf[949],12,"with-optkeys");
C_register_lf2(lf,950,create_ptable());
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6354,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6352 */
static void C_ccall f_6354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6354,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6357,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6355 in k6352 */
static void C_ccall f_6357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6357,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6360,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6358 in k6355 in k6352 */
static void C_ccall f_6360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6360,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6363,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6363,2,t0,t1);}
t2=C_mutate((C_word*)lf[0]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6365,a[2]=((C_word)li4),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6654,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40388,a[2]=((C_word)li653),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 249  ##sys#register-macro");
t5=C_retrieve(lf[781]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[949],t4);}

/* a40387 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40388(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_40388r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_40388r(t0,t1,t2,t3);}}

static void C_ccall f_40388r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 250  expand-optkeys");
t6=*((C_word*)lf[0]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t1,t4,t5,t3);}

/* k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6654,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6658,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 256  make-hash-table");
t3=C_retrieve(lf[927]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,*((C_word*)lf[945]+1));}

/* k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6658,2,t0,t1);}
t2=C_mutate((C_word*)lf[29]+1,t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6661,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40336,a[2]=((C_word)li652),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 258  ##sys#register-macro");
t5=C_retrieve(lf[781]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[948],t4);}

/* a40335 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40336(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[18],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40336,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40340,a[2]=t6,a[3]=t1,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t8=(C_word)C_i_car(((C_word*)t4)[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cadr(((C_word*)t4)[1]);
t11=C_set_block_item(t4,0,t10);
t12=t7;
f_40340(2,t12,t11);}
else{
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t8=C_set_block_item(t6,0,((C_word*)t4)[1]);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40373,a[2]=t7,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  string->symbol");
t10=*((C_word*)lf[421]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)t4)[1]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t4)[1]))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40383,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 267  symbol->string");
t9=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t4)[1]);}
else{
C_trace("ChickenBridge.scm: 269  error");
t8=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[947]);}}}}

/* k40381 in a40335 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_40340(2,t3,t2);}

/* k40371 in a40335 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_40340(2,t3,t2);}

/* k40338 in a40335 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40340,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,lf[577],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,4,lf[796],lf[29],((C_word*)((C_word*)t0)[2])[1],t3));}

/* k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6661,2,t0,t1);}
t2=C_mutate((C_word*)lf[30]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6663,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6954,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40330,a[2]=((C_word)li651),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 354  ##sys#register-macro");
t5=C_retrieve(lf[781]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[946],t4);}

/* a40329 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40330(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_40330r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_40330r(t0,t1,t2,t3);}}

static void C_ccall f_40330r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 355  expand-send");
t4=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word t81;
C_word t82;
C_word t83;
C_word t84;
C_word t85;
C_word t86;
C_word t87;
C_word t88;
C_word t89;
C_word ab[219],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6954,2,t0,t1);}
t2=C_mutate((C_word*)lf[42]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6956,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[44]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6967,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[47]+1,*((C_word*)lf[8]+1));
t5=C_mutate((C_word*)lf[48]+1,*((C_word*)lf[22]+1));
t6=C_mutate((C_word*)lf[49]+1,*((C_word*)lf[50]+1));
t7=C_mutate((C_word*)lf[51]+1,*((C_word*)lf[52]+1));
t8=C_mutate((C_word*)lf[53]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7000,a[2]=((C_word)li17),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[54]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7010,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[55]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7020,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[56]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7030,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[57]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7040,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[58]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7054,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[59]+1,*((C_word*)lf[60]+1));
t15=C_mutate((C_word*)lf[61]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7069,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[62]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7075,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[63]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7098,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[64]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7146,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[65]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7236,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[67]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7276,a[2]=((C_word)li28),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[68]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7286,a[2]=((C_word)li30),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[69]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7347,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[71]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7446,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[72]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7486,a[2]=((C_word)li37),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[73]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7525,a[2]=((C_word)li39),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[74],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7564,a[2]=((C_word)li40),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[75],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7650,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[76],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7691,a[2]=((C_word)li43),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[77],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7718,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[78],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7745,a[2]=((C_word)li45),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[79],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7752,a[2]=((C_word)li46),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[80],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7763,a[2]=((C_word)li47),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[81],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7778,a[2]=((C_word)li48),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[82],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7785,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[83],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7792,a[2]=((C_word)li50),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[84],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7811,a[2]=((C_word)li51),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[85],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7830,a[2]=((C_word)li52),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[86],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7851,a[2]=((C_word)li53),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[87],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7854,a[2]=((C_word)li54),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[88],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7861,a[2]=((C_word)li55),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate(&lf[89],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7890,a[2]=((C_word)li56),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate(&lf[90],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7893,a[2]=((C_word)li57),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[91],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7896,a[2]=((C_word)li58),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[92],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7899,a[2]=((C_word)li59),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[93],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7910,a[2]=((C_word)li60),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate(&lf[94],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7928,a[2]=((C_word)li61),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[95],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7935,a[2]=((C_word)li62),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate(&lf[96],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7938,a[2]=((C_word)li63),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate(&lf[97],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7945,a[2]=((C_word)li64),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate(&lf[98],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7948,a[2]=((C_word)li65),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[99]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7967,a[2]=((C_word)li67),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[100]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8001,a[2]=((C_word)li70),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[102]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8112,a[2]=((C_word)li71),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[103]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8127,a[2]=((C_word)li72),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[105]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8169,a[2]=((C_word)li73),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[107]+1,*((C_word*)lf[108]+1));
t57=C_mutate((C_word*)lf[109]+1,*((C_word*)lf[110]+1));
t58=C_mutate((C_word*)lf[111]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8195,a[2]=((C_word)li75),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate((C_word*)lf[112]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8216,a[2]=((C_word)li77),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate((C_word*)lf[116]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8256,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate((C_word*)lf[121]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8492,a[2]=((C_word)li80),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate((C_word*)lf[122]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8507,a[2]=((C_word)li81),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate(&lf[123],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8522,a[2]=((C_word)li83),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate((C_word*)lf[128]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8608,a[2]=((C_word)li84),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[130]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8654,a[2]=((C_word)li85),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate((C_word*)lf[132]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8721,a[2]=((C_word)li88),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate((C_word*)lf[135]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8854,a[2]=((C_word)li90),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[138]+1,C_retrieve2(lf[86],"tb:ran-set!"));
t69=C_mutate((C_word*)lf[131]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8962,a[2]=((C_word)li91),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate((C_word*)lf[139]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8997,a[2]=((C_word)li92),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate((C_word*)lf[140]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9018,a[2]=((C_word)li93),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate((C_word*)lf[141]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9061,a[2]=((C_word)li94),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate((C_word*)lf[145]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9289,a[2]=((C_word)li97),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate((C_word*)lf[148]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9388,a[2]=((C_word)li99),tmp=(C_word)a,a+=3,tmp));
t75=C_mutate((C_word*)lf[149]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9443,a[2]=((C_word)li100),tmp=(C_word)a,a+=3,tmp));
t76=C_mutate((C_word*)lf[150]+1,C_retrieve2(lf[89],"tb:ranlow"));
t77=C_mutate((C_word*)lf[151]+1,C_retrieve2(lf[90],"tb:ranhigh"));
t78=C_mutate((C_word*)lf[152]+1,C_retrieve2(lf[91],"tb:ranmiddle"));
t79=C_mutate((C_word*)lf[153]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9485,a[2]=((C_word)li101),tmp=(C_word)a,a+=3,tmp));
t80=C_mutate((C_word*)lf[157]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9713,a[2]=((C_word)li102),tmp=(C_word)a,a+=3,tmp));
t81=C_mutate((C_word*)lf[158]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9732,a[2]=((C_word)li103),tmp=(C_word)a,a+=3,tmp));
t82=C_mutate((C_word*)lf[159]+1,C_retrieve2(lf[95],"tb:rancauchy"));
t83=C_mutate((C_word*)lf[160]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9773,a[2]=((C_word)li104),tmp=(C_word)a,a+=3,tmp));
t84=C_mutate((C_word*)lf[162]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9792,a[2]=((C_word)li105),tmp=(C_word)a,a+=3,tmp));
t85=C_mutate((C_word*)lf[163]+1,C_retrieve2(lf[98],"tb:ranbrown"));
t86=C_mutate((C_word*)lf[164]+1,C_retrieve2(lf[97],"tb:ranpink"));
t87=C_mutate((C_word*)lf[165]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9813,a[2]=((C_word)li109),tmp=(C_word)a,a+=3,tmp));
t88=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10022,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  make-hash-table");
t89=C_retrieve(lf[927]);
((C_proc3)C_retrieve_proc(t89))(3,t89,t88,*((C_word*)lf[945]+1));}

/* k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10022,2,t0,t1);}
t2=C_mutate(&lf[168],t1);
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10025,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40114,a[2]=t7,a[3]=t4,a[4]=((C_word)li650),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_40114(t9,t5,C_fix(0));}

/* do706 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_40114(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40114,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(128)))){
t3=(C_word)C_a_i_list(&a,5,lf[931],C_fix(-1),lf[932],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40127,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t5=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[168],"*notes*"),lf[933],t3);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40328,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  modulo");
t4=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(12));}}

/* k40326 in do706 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40328,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[934],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40137,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40148,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  modulo");
t6=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t0)[4],C_fix(12));}

/* k40146 in k40326 in do706 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40148,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],lf[935]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],lf[936]);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40160,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 376  tb:keynum->hertz");
f_7830(t4,((C_word*)t0)[4]);}

/* k40158 in k40146 in k40326 in do706 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40160,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_40164,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],lf[944]);
C_trace("ChickenBridge.scm: 376  tb:keynum->hertz");
f_7830(t2,t3);}

/* k40162 in k40158 in k40146 in k40326 in do706 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40164,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_40168,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],lf[943]);
C_trace("ChickenBridge.scm: 376  tb:keynum->hertz");
f_7830(t2,t3);}

/* k40166 in k40162 in k40158 in k40146 in k40326 in do706 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40168,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_40312,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[7],C_fix(12));
C_trace("ChickenBridge.scm: 376  floor");
t4=*((C_word*)lf[179]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k40310 in k40166 in k40162 in k40158 in k40146 in k40326 in do706 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40312,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40174,a[2]=((C_word*)t0)[10],a[3]=t4,a[4]=((C_word)li649),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_40174(t6,((C_word*)t0)[9],((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do712 in k40310 in k40166 in k40162 in k40158 in k40146 in k40326 in do706 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_40174(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13){
C_word tmp;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[40],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40174,NULL,14,t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}
t14=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t18=t1;
((C_proc2)(void*)(*((C_word*)t18+1)))(2,t18,C_SCHEME_FALSE);}
else{
t18=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_40184,a[2]=t17,a[3]=t16,a[4]=t15,a[5]=t14,a[6]=t9,a[7]=t8,a[8]=t7,a[9]=t6,a[10]=t5,a[11]=t4,a[12]=t3,a[13]=t1,a[14]=((C_word*)t0)[3],a[15]=t2,tmp=(C_word)a,a+=16,tmp);
t19=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_40194,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t8,a[5]=t6,a[6]=t9,a[7]=t5,a[8]=t17,a[9]=t4,a[10]=t7,a[11]=t3,a[12]=t16,a[13]=t15,a[14]=t14,a[15]=t18,tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t20=(C_word)C_i_car(t2);
t21=t19;
f_40194(t21,(C_word)C_i_string_equal_p(t20,lf[942]));}
else{
t20=t19;
f_40194(t20,C_SCHEME_FALSE);}}}

/* k40192 in do712 in k40310 in k40166 in k40162 in k40158 in k40146 in k40326 in do706 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_40194(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40194,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[15];
f_40184(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_40197,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],tmp=(C_word)a,a+=16,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t3,lf[940]))){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[14])+1,t4);
t6=t2;
f_40197(t6,t5);}
else{
t4=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t4,lf[941]))){
t5=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t6=C_mutate(((C_word *)((C_word*)t0)[14])+1,t5);
t7=t2;
f_40197(t7,t6);}
else{
t5=t2;
f_40197(t5,C_SCHEME_UNDEFINED);}}}}

/* k40195 in k40192 in do712 in k40310 in k40166 in k40162 in k40158 in k40146 in k40326 in do706 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_40197(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40197,NULL,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[937],((C_word*)((C_word*)t0)[15])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[14])+1,t2);
t4=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_40205,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[14],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],tmp=(C_word)a,a+=15,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  string-append");
t6=*((C_word*)lf[171]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[14])[1]);}

/* k40203 in k40195 in k40192 in do712 in k40310 in k40166 in k40162 in k40158 in k40146 in k40326 in do706 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40205,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[14])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[14])[1],((C_word*)t0)[13],((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)((C_word*)t0)[10])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_40212,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t6=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[168],"*notes*"),((C_word*)((C_word*)t0)[14])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k40210 in k40203 in k40195 in k40192 in do712 in k40310 in k40166 in k40162 in k40158 in k40146 in k40326 in do706 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40212,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_40215,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t4=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[168],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}
else{
t4=t2;
f_40215(2,t4,C_SCHEME_UNDEFINED);}}

/* k40213 in k40210 in k40203 in k40195 in k40192 in do712 in k40310 in k40166 in k40162 in k40158 in k40146 in k40326 in do706 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40215,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_40219,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  string-append");
t4=*((C_word*)lf[171]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[939],((C_word*)((C_word*)t0)[8])[1]);}

/* k40217 in k40213 in k40210 in k40203 in k40195 in k40192 in do712 in k40310 in k40166 in k40162 in k40158 in k40146 in k40326 in do706 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40219,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10],((C_word*)t0)[9],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_40226,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t6=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[168],"*notes*"),((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k40224 in k40217 in k40213 in k40210 in k40203 in k40195 in k40192 in do712 in k40310 in k40166 in k40162 in k40158 in k40146 in k40326 in do706 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40226,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_40229,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t4=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[168],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=t2;
f_40229(2,t4,C_SCHEME_UNDEFINED);}}

/* k40227 in k40224 in k40217 in k40213 in k40210 in k40203 in k40195 in k40192 in do712 in k40310 in k40166 in k40162 in k40158 in k40146 in k40326 in do706 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40229,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_40233,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  string-append");
t4=*((C_word*)lf[171]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[938],((C_word*)((C_word*)t0)[6])[1]);}

/* k40231 in k40227 in k40224 in k40217 in k40213 in k40210 in k40203 in k40195 in k40192 in do712 in k40310 in k40166 in k40162 in k40158 in k40146 in k40326 in do706 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40233,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8],((C_word*)t0)[7],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_40240,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t6=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[168],"*notes*"),((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[5])[1]);}

/* k40238 in k40231 in k40227 in k40224 in k40217 in k40213 in k40210 in k40203 in k40195 in k40192 in do712 in k40310 in k40166 in k40162 in k40158 in k40146 in k40326 in do706 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t3=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],C_retrieve2(lf[168],"*notes*"),((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=((C_word*)t0)[4];
f_40184(2,t3,C_SCHEME_UNDEFINED);}}

/* k40182 in do712 in k40310 in k40166 in k40162 in k40158 in k40146 in k40326 in do706 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[15]);
t3=((C_word*)((C_word*)t0)[14])[1];
f_40174(t3,((C_word*)t0)[13],t2,((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)t0)[10],((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k40135 in k40326 in do706 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40137,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_40114(t3,((C_word*)t0)[2],t2);}

/* k40125 in do706 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40127,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40130,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t3=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[168],"*notes*"),C_fix(-1),((C_word*)t0)[2]);}

/* k40128 in k40125 in do706 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}

/* k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[60],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10025,2,t0,t1);}
t2=C_mutate(&lf[169],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10027,a[2]=((C_word)li112),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[173],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10129,a[2]=((C_word)li115),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[181]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10182,a[2]=((C_word)li117),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[183]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10279,a[2]=((C_word)li119),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[185]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10401,a[2]=((C_word)li121),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[187]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10517,a[2]=((C_word)li122),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[188]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10562,a[2]=((C_word)li126),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[191]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10697,a[2]=((C_word)li130),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[193]+1,*((C_word*)lf[194]+1));
t11=C_mutate((C_word*)lf[195]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10863,a[2]=((C_word)li133),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[198],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11005,a[2]=((C_word)li134),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[200],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11011,a[2]=((C_word)li135),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[201]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11026,a[2]=((C_word)li136),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[202],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11035,a[2]=((C_word)li137),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[204]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11044,a[2]=((C_word)li138),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[205],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11053,a[2]=((C_word)li139),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[206]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11062,a[2]=((C_word)li140),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[207],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11071,a[2]=((C_word)li141),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[208]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11080,a[2]=((C_word)li142),tmp=(C_word)a,a+=3,tmp));
t21=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11090,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40104,a[2]=((C_word)li648),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  ##sys#register-record-printer");
t23=C_retrieve(lf[918]);
((C_proc4)C_retrieve_proc(t23))(4,t23,t21,lf[199],t22);}

/* a40103 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40104(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40104,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40112,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t5=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k40110 in a40103 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  fprintf");
t2=C_retrieve(lf[915]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[930],t1);}

/* k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word t81;
C_word ab[237],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11090,2,t0,t1);}
t2=C_mutate((C_word*)lf[209]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11092,a[2]=((C_word)li143),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[210]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11130,a[2]=((C_word)li145),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[212]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11189,a[2]=((C_word)li146),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[213]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11199,a[2]=((C_word)li147),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[214]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11217,a[2]=((C_word)li149),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[217]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11248,a[2]=((C_word)li151),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[219]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11496,a[2]=((C_word)li160),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[227]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12969,a[2]=((C_word)li166),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[232]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13381,a[2]=((C_word)li168),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[233]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13560,a[2]=((C_word)li176),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[238]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13772,a[2]=((C_word)li178),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[239]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13829,a[2]=((C_word)li187),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[248]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14342,a[2]=((C_word)li194),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[261],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14468,a[2]=((C_word)li195),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[263],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14480,a[2]=((C_word)li196),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[264],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14489,a[2]=((C_word)li197),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[265],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14507,a[2]=((C_word)li198),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[266],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14525,a[2]=((C_word)li199),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[267],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14552,a[2]=((C_word)li200),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[268],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14561,a[2]=((C_word)li201),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[269],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14579,a[2]=((C_word)li202),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[270],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14624,a[2]=((C_word)li203),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[272],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14639,a[2]=((C_word)li204),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[273],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14648,a[2]=((C_word)li205),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[274],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14657,a[2]=((C_word)li206),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[275],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14675,a[2]=((C_word)li207),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[276],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14684,a[2]=((C_word)li208),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[277],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14693,a[2]=((C_word)li209),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[278],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14711,a[2]=((C_word)li210),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[279],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14720,a[2]=((C_word)li211),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[280],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14729,a[2]=((C_word)li212),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[281],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14738,a[2]=((C_word)li213),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[282],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14747,a[2]=((C_word)li214),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[283],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14864,a[2]=((C_word)li215),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[284],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14873,a[2]=((C_word)li216),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[285],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14928,a[2]=((C_word)li217),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[289],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14938,a[2]=((C_word)li219),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[297]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15118,a[2]=((C_word)li220),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate((C_word*)lf[299]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15137,a[2]=((C_word)li221),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[301]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15156,a[2]=((C_word)li224),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate(&lf[302],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15279,a[2]=((C_word)li227),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[303],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15580,a[2]=((C_word)li228),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[296],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15589,a[2]=((C_word)li229),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[304],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15635,a[2]=((C_word)li231),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[308]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15750,a[2]=((C_word)li233),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[309],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16005,a[2]=((C_word)li234),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate(&lf[312],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16077,a[2]=((C_word)li235),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate(&lf[314],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16086,a[2]=((C_word)li236),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[315]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16166,a[2]=((C_word)li238),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate(&lf[316],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16636,a[2]=((C_word)li239),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[320]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16851,a[2]=((C_word)li241),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate(&lf[321],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17098,a[2]=((C_word)li242),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[322]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17134,a[2]=((C_word)li244),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate(&lf[323],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17397,a[2]=((C_word)li246),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[324]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17473,a[2]=((C_word)li248),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate(&lf[325],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17947,a[2]=((C_word)li251),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[327],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18169,a[2]=((C_word)li252),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[329],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18178,a[2]=((C_word)li253),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[330],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18187,a[2]=((C_word)li254),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate(&lf[331],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18205,a[2]=((C_word)li255),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate(&lf[332],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18223,a[2]=((C_word)li256),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate(&lf[333],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18241,a[2]=((C_word)li257),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate(&lf[334],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18250,a[2]=((C_word)li258),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate(&lf[335],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18259,a[2]=((C_word)li259),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate((C_word*)lf[336]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18342,a[2]=((C_word)li264),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate(&lf[337],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19109,a[2]=((C_word)li267),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate(&lf[338],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19221,a[2]=((C_word)li272),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate((C_word*)lf[341]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19654,a[2]=((C_word)li277),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate(&lf[342],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20141,a[2]=((C_word)li284),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate(&lf[351],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20481,a[2]=((C_word)li285),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate((C_word*)lf[353]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20544,a[2]=((C_word)li290),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate(&lf[354],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21062,a[2]=((C_word)li292),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate((C_word*)lf[360]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21156,a[2]=((C_word)li315),tmp=(C_word)a,a+=3,tmp));
t75=C_mutate(&lf[382],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22178,a[2]=((C_word)li316),tmp=(C_word)a,a+=3,tmp));
t76=C_mutate(&lf[384],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22199,a[2]=((C_word)li317),tmp=(C_word)a,a+=3,tmp));
t77=C_mutate(&lf[385],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22217,a[2]=((C_word)li318),tmp=(C_word)a,a+=3,tmp));
t78=C_mutate(&lf[386],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22235,a[2]=((C_word)li319),tmp=(C_word)a,a+=3,tmp));
t79=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22245,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t80=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40090,a[2]=((C_word)li647),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-record-printer");
t81=C_retrieve(lf[918]);
((C_proc4)C_retrieve_proc(t81))(4,t81,t79,lf[383],t80);}

/* a40089 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40090(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40090,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40098,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-type");
f_22199(t4,t2);}

/* k40096 in a40089 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40098,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40102,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-string");
f_22217(t2,((C_word*)t0)[2]);}

/* k40100 in k40096 in a40089 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  fprintf");
t2=C_retrieve(lf[915]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[929],((C_word*)t0)[2],t1);}

/* k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22245,2,t0,t1);}
t2=C_mutate(&lf[387],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22247,a[2]=((C_word)li320),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[389],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22276,a[2]=((C_word)li321),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[390],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22288,a[2]=((C_word)li322),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22296,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-hash-table");
t6=C_retrieve(lf[927]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,*((C_word*)lf[928]+1));}

/* k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22296,2,t0,t1);}
t2=C_mutate(&lf[391],t1);
t3=C_mutate(&lf[392],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22298,a[2]=((C_word)li323),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[394],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22319,a[2]=((C_word)li324),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22401,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40080,a[2]=((C_word)li646),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-record-printer");
t7=C_retrieve(lf[918]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[393],t6);}

/* a40079 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40080(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40080,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40088,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  rule-name");
f_22319(t4,t2);}

/* k40086 in a40079 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  fprintf");
t2=C_retrieve(lf[915]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[926],t1);}

/* k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22401,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22404,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39977,a[2]=((C_word)li645),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-macro");
t4=C_retrieve(lf[781]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[925],t3);}

/* a39976 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39977(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr4r,(void*)f_39977r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_39977r(t0,t1,t2,t3,t4);}}

static void C_ccall f_39977r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(22);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39980,a[2]=t6,a[3]=((C_word)li644),tmp=(C_word)a,a+=4,tmp));
t8=(C_word)C_a_i_list(&a,2,lf[922],t2);
t9=(C_word)C_a_i_list(&a,1,t8);
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_40040,a[2]=t3,a[3]=t6,a[4]=t9,a[5]=t1,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k40038 in a39976 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40040,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40044,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  ppat");
t3=((C_word*)((C_word*)t0)[3])[1];
f_39980(t3,t2,((C_word*)t0)[2]);}

/* k40042 in k40038 in a39976 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40044,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)t0)[5]);
t3=(C_truep(t2)?C_SCHEME_FALSE:(C_word)C_i_car(((C_word*)t0)[5]));
t4=(C_word)C_i_nullp(((C_word*)t0)[5]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40058,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_40058(t6,t4);}
else{
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=t5;
f_40058(t7,(C_word)C_i_nullp(t6));}}

/* k40056 in k40042 in k40038 in a39976 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_40058(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40058,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_SCHEME_FALSE:(C_word)C_i_cadr(((C_word*)t0)[7]));
t3=(C_word)C_a_i_list(&a,6,lf[923],((C_word*)t0)[6],lf[922],((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_list(&a,4,lf[796],lf[924],lf[922],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[1],((C_word*)t0)[2],t4));}

/* ppat in a39976 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_39980(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_39980,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[920]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40000,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  ppat");
t7=t3;
t8=t4;
t1=t7;
t2=t8;
goto loop;}
else{
t3=(C_word)C_i_member(t2,lf[921]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_list(&a,2,lf[577],t2):t2));}}}

/* k39998 in ppat in a39976 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40000,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40004,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  ppat");
t4=((C_word*)((C_word*)t0)[2])[1];
f_39980(t4,t2,t3);}

/* k40002 in k39998 in ppat in a39976 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_40004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40004,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[833],((C_word*)t0)[2],t1));}

/* k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22404,2,t0,t1);}
t2=C_mutate(&lf[395],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22406,a[2]=((C_word)li325),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[280],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22427,a[2]=((C_word)li326),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[397],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22430,a[2]=((C_word)li327),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[398],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22442,a[2]=((C_word)li328),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[399],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22448,a[2]=((C_word)li329),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[400],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22458,a[2]=((C_word)li330),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[401],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22516,a[2]=((C_word)li331),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[402],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22548,a[2]=((C_word)li332),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[404],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22569,a[2]=((C_word)li333),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[405],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22587,a[2]=((C_word)li334),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22597,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39963,a[2]=((C_word)li643),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-record-printer");
t14=C_retrieve(lf[918]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[403],t13);}

/* a39962 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39963(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39963,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39971,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-error-string");
f_22569(t4,t2);}

/* k39969 in a39962 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39971,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39975,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-error-position");
f_22587(t2,((C_word*)t0)[2]);}

/* k39973 in k39969 in a39962 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  fprintf");
t2=C_retrieve(lf[915]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[919],((C_word*)t0)[2],t1);}

/* k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22597,2,t0,t1);}
t2=C_mutate(&lf[406],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22599,a[2]=((C_word)li335),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[408],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22605,a[2]=((C_word)li336),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[409],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22620,a[2]=((C_word)li337),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[410],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22638,a[2]=((C_word)li338),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[411],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22656,a[2]=((C_word)li339),tmp=(C_word)a,a+=3,tmp));
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22666,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39937,a[2]=((C_word)li642),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-record-printer");
t9=C_retrieve(lf[918]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,lf[407],t8);}

/* a39936 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39937(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39937,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39941,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22620(t4,t2);}

/* k39939 in a39936 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39941,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39947,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalRuleType?");
f_23878(t2,t1);}

/* k39945 in k39939 in a39936 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39947,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39954,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39958,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  get-rule");
f_22406(t3,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 379  fprintf");
t2=C_retrieve(lf[915]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[917],((C_word*)t0)[2]);}}

/* k39956 in k39945 in k39939 in a39936 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  rule-name");
f_22319(((C_word*)t0)[2],t1);}

/* k39952 in k39945 in k39939 in a39936 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  fprintf");
t2=C_retrieve(lf[915]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[916],t1);}

/* k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22666,2,t0,t1);}
t2=C_mutate(&lf[412],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22668,a[2]=((C_word)li340),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[414],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22684,a[2]=((C_word)li341),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[416],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22716,a[2]=((C_word)li342),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[417],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22728,a[2]=((C_word)li343),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[418],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22738,a[2]=((C_word)li344),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[420],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22756,a[2]=((C_word)li345),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[429],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22789,a[2]=((C_word)li346),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[432]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22820,a[2]=((C_word)li347),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[434],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22997,a[2]=((C_word)li349),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[435],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23005,a[2]=((C_word)li352),tmp=(C_word)a,a+=3,tmp));
t12=lf[436]=C_SCHEME_FALSE;;
t13=C_mutate(&lf[437],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23109,a[2]=((C_word)li366),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[413],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23728,a[2]=((C_word)li367),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[428],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23776,a[2]=((C_word)li368),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[431],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23878,a[2]=((C_word)li369),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[415],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23890,a[2]=((C_word)li370),tmp=(C_word)a,a+=3,tmp));
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23911,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t19=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39915,a[2]=t18,tmp=(C_word)a,a+=3,tmp);
t20=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t21=(C_word)C_a_i_cons(&a,2,C_fix(3328),t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(2816),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[424],t22);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t19,lf[914],C_fix(25856),t23,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k39913 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(25856),t1);}

/* k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23911,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23914,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39895,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[424],t5);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[913],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k39893 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(26112),t1);}

/* k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23914,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23917,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39855,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[424],t10);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[912],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k39853 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(26368),t1);}

/* k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23917,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23920,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39745,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[108],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[423],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39751,a[2]=((C_word)li640),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39761,a[2]=((C_word)li641),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[911],C_fix(26624),t9,t10,t11);}

/* a39760 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39761(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39761,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39765,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22716(t5,lf[905],t3);}

/* k39763 in a39760 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39765,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39768,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t2,((C_word*)t0)[2]);}

/* k39766 in k39763 in a39760 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39768,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 379  emit");
f_22756(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[626]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39786,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_22728(t3,lf[905],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k39784 in k39766 in k39763 in a39760 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39786,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39789,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k39787 in k39784 in k39766 in k39763 in a39760 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39789,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39792,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39820,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22716(t5,lf[905],((C_word*)t0)[2]);}

/* k39818 in k39787 in k39784 in k39766 in k39763 in a39760 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39820,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[906]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[910],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_39792(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[577],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_39792(t5,t4);}}

/* k39790 in k39787 in k39784 in k39766 in k39763 in a39760 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_39792(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39792,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39798,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22716(t2,lf[873],((C_word*)t0)[2]);}

/* k39796 in k39790 in k39787 in k39784 in k39766 in k39763 in a39760 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39798,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[626]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a39750 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39751(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39751,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k39743 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(26624),t1);}

/* k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23920,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23923,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39645,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[424],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[423],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39653,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_22997(t10,C_fix(27648));}

/* k39651 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39653,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39655,a[2]=((C_word)li639),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(((C_word*)t0)[3],lf[909],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a39654 in k39651 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39655(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39655,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39659,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t5,t2);}

/* k39657 in a39654 in k39651 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39659,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39662,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t2,t3,C_fix(5376));}

/* k39660 in k39657 in a39654 in k39651 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39662,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39665,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22716(t2,lf[905],((C_word*)t0)[4]);}

/* k39663 in k39660 in k39657 in a39654 in k39651 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39665,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39668,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_39668(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39697,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[907]:lf[908]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39705,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22656(t5,t6);}}

/* k39703 in k39663 in k39660 in k39657 in a39654 in k39651 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_22548(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k39695 in k39663 in k39660 in k39657 in a39654 in k39651 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39666 in k39663 in k39660 in k39657 in a39654 in k39651 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39668,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39671,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t2,t3,((C_word*)t0)[4],((C_word*)t0)[2]);}

/* k39669 in k39666 in k39663 in k39660 in k39657 in a39654 in k39651 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39671,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39674,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  set-emit-info!");
f_22738(t2,lf[905],lf[906],((C_word*)t0)[2]);}

/* k39672 in k39669 in k39666 in k39663 in k39660 in k39657 in a39654 in k39651 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39674,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[903],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[904],((C_word*)t0)[2])));}

/* k39643 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(27648),t1);}

/* k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23923,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23926,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39617,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[424],t7);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[902],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k39615 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(26880),t1);}

/* k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23926,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23929,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39557,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[423],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39563,a[2]=((C_word)li637),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39581,a[2]=((C_word)li638),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[901],C_fix(27136),t8,t9,t10);}

/* a39580 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39581(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39581,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39589,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39593,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t6,t2);}

/* k39591 in a39580 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22756(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39587 in a39580 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39589,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[60],t1));}

/* a39562 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39563(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39563,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k39555 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(27136),t1);}

/* k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23929,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23932,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39434,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[440],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[423],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39440,a[2]=((C_word)li635),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39471,a[2]=((C_word)li636),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[900],C_fix(27392),t14,t15,t16);}

/* a39470 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39471(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39471,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39475,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t5,t2);}

/* k39473 in a39470 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39475,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39478,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39476 in k39473 in a39470 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39478,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39481,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39479 in k39476 in k39473 in a39470 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39481,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39494,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k39492 in k39479 in k39476 in k39473 in a39470 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39494,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a39439 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39440(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39440,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39444,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  sixth");
t5=C_retrieve(lf[54]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k39442 in a39439 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39444,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39459,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k39457 in k39442 in a39439 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39459,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k39432 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(27392),t1);}

/* k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23932,2,t0,t1);}
t2=C_mutate(&lf[444],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23934,a[2]=((C_word)li372),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23988,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39314,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[104],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[423],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[424],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39320,a[2]=((C_word)li634),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t4,lf[899],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a39319 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39320(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39320,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39336,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t4,t8,C_fix(256));}
else{
t7=t4;
f_39336(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_39336(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k39334 in a39319 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39336,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39347,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_23934(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k39345 in k39334 in a39319 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39347,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k39312 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(28416),t1);}

/* k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23988,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23991,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39175,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[104],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[423],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[423],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[424],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39181,a[2]=((C_word)li633),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[898],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a39180 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39181(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39181,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39201,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39204,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t7,t11,C_fix(256));}
else{
t10=t7;
f_39204(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_39204(2,t9,C_SCHEME_FALSE);}}

/* k39202 in a39180 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_23934(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_39201(2,t2,C_SCHEME_END_OF_LIST);}}

/* k39199 in a39180 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39201,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k39173 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(28672),t1);}

/* k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23991,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23994,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39023,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[423],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[423],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[423],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[424],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39029,a[2]=((C_word)li632),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[897],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a39028 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39029(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39029,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39047,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t10,t7,C_fix(768));}

/* k39045 in a39028 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39047,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39056,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t2,t3,C_fix(256));}}

/* k39054 in k39045 in a39028 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k39021 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_39023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(28160),t1);}

/* k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23994,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23997,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38952,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38958,a[2]=((C_word)li630),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38976,a[2]=((C_word)li631),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[896],C_fix(27904),t6,t7,t8);}

/* a38975 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38976(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38976,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38980,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t5,t2);}

/* k38978 in a38975 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38980,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38983,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38981 in k38978 in a38975 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38983,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38999,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38997 in k38981 in k38978 in a38975 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38999,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a38957 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38958(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38958,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k38950 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(27904),t1);}

/* k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23997,2,t0,t1);}
t2=C_mutate(&lf[445],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23999,a[2]=((C_word)li373),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[446],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24020,a[2]=((C_word)li376),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24136,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38876,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[424],t21);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t5,lf[895],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k38874 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(28928),t1);}

/* k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24136,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24139,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38796,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[108],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[423],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38802,a[2]=((C_word)li629),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[894],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a38801 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38802(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38802,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38809,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 379  is-op?");
f_23999(t4,t7);}
else{
t6=t4;
f_38809(2,t6,C_SCHEME_FALSE);}}

/* k38807 in a38801 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38809,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 379  inf->pre");
f_24020(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k38794 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(29184),t1);}

/* k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24139,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24142,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38660,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[423],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[423],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[424],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38666,a[2]=((C_word)li627),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38692,a[2]=((C_word)li628),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[893],C_fix(29440),t23,t24,t25);}

/* a38691 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38692(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38692,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38700,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t5,t2);}

/* k38698 in a38691 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22756(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a38665 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38666(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38666,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38674,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38683,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t5,t6,C_fix(512));}
else{
t5=t4;
f_38674(t5,t2);}}

/* k38681 in a38665 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_38674(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k38672 in a38665 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_38674(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k38658 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(29440),t1);}

/* k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24142,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24145,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38616,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[424],t11);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[892],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k38614 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(29696),t1);}

/* k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24145,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24148,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38506,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[108],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[423],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38512,a[2]=((C_word)li624),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38534,a[2]=((C_word)li626),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[891],C_fix(33536),t10,t11,t12);}

/* a38533 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38534(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38534,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[473]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38545,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t8,t2);}

/* k38543 in a38533 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38545,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38547,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li625),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_38547(t5,((C_word*)t0)[2],t1);}

/* do3666 in k38543 in a38533 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_38547(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38547,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38576,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k38574 in do3666 in k38543 in a38533 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38576,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_38547(t7,((C_word*)t0)[2],t6);}

/* a38511 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38512(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38512,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38528,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_23934(t5,t6,C_fix(256));}

/* k38526 in a38511 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38528,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k38504 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(33536),t1);}

/* k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24148,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24151,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38431,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[108],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16896),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[423],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38437,a[2]=((C_word)li622),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38459,a[2]=((C_word)li623),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[890],C_fix(34560),t10,t11,t12);}

/* a38458 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38459(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38459,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38463,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t5,t2);}

/* k38461 in a38458 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38463,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38470,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38468 in k38461 in a38458 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38470,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[755],t1));}

/* a38436 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38437(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38437,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38453,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_23934(t5,t6,C_fix(256));}

/* k38451 in a38436 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38453,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k38429 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(34560),t1);}

/* k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24151,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24154,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38218,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[424],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[423],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[424],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[440],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[423],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38224,a[2]=((C_word)li619),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38299,a[2]=((C_word)li621),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[889],C_fix(34304),t21,t22,t23);}

/* a38298 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38299(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38299,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38303,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38339,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t6,t2);}

/* k38337 in a38298 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22756(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38301 in a38298 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38303,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38319,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li620),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  expand-send");
t6=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t6))(5,t6,((C_word*)t0)[2],t3,t4,t5);}

/* a38318 in k38301 in a38298 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38319(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr3r,(void*)f_38319r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_38319r(t0,t1,t2,t3);}}

static void C_ccall f_38319r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(8);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38327,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38331,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[31]),t2,t3);}

/* k38329 in a38318 in k38301 in a38298 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38331,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38335,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22656(t2,((C_word*)t0)[2]);}

/* k38333 in k38329 in a38318 in k38301 in a38298 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_22548(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k38325 in a38318 in k38301 in a38298 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a38223 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38224(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38224,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38231,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38267,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=t11;
f_38267(2,t13,C_SCHEME_FALSE);}
else{
t13=(C_word)C_i_cadr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t11,t13,C_fix(256));}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_38231(t10,t9);}}

/* k38265 in a38223 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38267,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38271,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,t3,t4);}
else{
t2=((C_word*)t0)[2];
f_38231(t2,C_SCHEME_UNDEFINED);}}

/* k38269 in k38265 in a38223 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38231(t3,t2);}

/* k38229 in a38223 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_38231(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38231,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38242,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22656(t4,t5);}

/* k38240 in k38229 in a38223 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k38216 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(34304),t1);}

/* k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24154,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24157,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38192,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38198,a[2]=((C_word)li618),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[888],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a38197 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38198(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38198,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k38190 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(33792),t1);}

/* k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24157,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24160,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38164,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38172,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_22997(t7,C_fix(35072));}

/* k38170 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38172,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38176,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-emitter");
f_23005(t2,lf[484]);}

/* k38174 in k38170 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(((C_word*)t0)[4],lf[887],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k38162 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(35072),t1);}

/* k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24160,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24163,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38136,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38144,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_22997(t7,C_fix(35584));}

/* k38142 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38144,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38148,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-emitter");
f_23005(t2,lf[483]);}

/* k38146 in k38142 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(((C_word*)t0)[4],lf[886],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k38134 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(35584),t1);}

/* k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24163,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24166,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38108,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38116,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_22997(t7,C_fix(35328));}

/* k38114 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38116,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38120,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-emitter");
f_23005(t2,lf[885]);}

/* k38118 in k38114 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(((C_word*)t0)[4],lf[884],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k38106 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(35328),t1);}

/* k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24166,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24169,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38080,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38088,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_22997(t7,C_fix(34816));}

/* k38086 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38088,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38092,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-emitter");
f_23005(t2,lf[494]);}

/* k38090 in k38086 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(((C_word*)t0)[4],lf[883],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k38078 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_38080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(34816),t1);}

/* k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24169,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24172,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37943,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[424],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[423],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[424],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[108],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[423],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37949,a[2]=((C_word)li616),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37979,a[2]=((C_word)li617),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[882],C_fix(36096),t22,t23,t24);}

/* a37978 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37979(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37979,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[881]);}

/* a37948 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37949(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37949,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37973,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_23934(t6,t7,C_fix(256));}

/* k37971 in a37948 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37973,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k37941 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(36096),t1);}

/* k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24172,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24175,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37885,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37893,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_22997(t7,C_fix(31744));}

/* k37891 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37893,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37895,a[2]=((C_word)li615),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(((C_word*)t0)[3],lf[880],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a37894 in k37891 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37895(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37895,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37899,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t5,t2);}

/* k37897 in a37894 in k37891 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37899,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37902,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37927,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22716(t3,lf[861],((C_word*)t0)[3]);}

/* k37925 in k37897 in a37894 in k37891 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37927,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_37902(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37915,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37919,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22656(t3,t4);}}

/* k37917 in k37925 in k37897 in a37894 in k37891 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_22548(((C_word*)t0)[2],lf[879],t1);}

/* k37913 in k37925 in k37897 in a37894 in k37891 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k37900 in k37897 in a37894 in k37891 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22756(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k37883 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(31744),t1);}

/* k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24175,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24178,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37824,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37832,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_22997(t7,C_fix(31488));}

/* k37830 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37832,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37834,a[2]=((C_word)li614),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(((C_word*)t0)[3],lf[878],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a37833 in k37830 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37834(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37834,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37838,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t5,t2);}

/* k37836 in a37833 in k37830 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37838,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37841,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37869,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22716(t3,lf[846],((C_word*)t0)[3]);}

/* k37867 in k37836 in a37833 in k37830 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37869,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_37841(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37857,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37861,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22656(t3,t4);}}

/* k37859 in k37867 in k37836 in a37833 in k37830 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_22548(((C_word*)t0)[2],lf[877],t1);}

/* k37855 in k37867 in k37836 in a37833 in k37830 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k37839 in k37836 in a37833 in k37830 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37841,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37844,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  set-emit-info!");
f_22738(t2,lf[846],lf[845],((C_word*)t0)[3]);}

/* k37842 in k37839 in k37836 in a37833 in k37830 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22756(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k37822 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(31488),t1);}

/* k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24178,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24181,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37733,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[423],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[424],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37739,a[2]=((C_word)li611),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37774,a[2]=((C_word)li613),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[876],C_fix(30208),t10,t11,t12);}

/* a37773 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37774(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37774,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37780,a[2]=t4,a[3]=t3,a[4]=((C_word)li612),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37788,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t6,t2);}

/* k37786 in a37773 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a37779 in a37773 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37780(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_37780,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a37738 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37739(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37739,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37772,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(t4,C_fix(4608),lf[875],C_SCHEME_FALSE);}}

/* k37770 in a37738 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37772,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k37731 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(30208),t1);}

/* k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24181,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24184,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37631,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[108],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[423],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37637,a[2]=((C_word)li608),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37680,a[2]=((C_word)li610),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[874],C_fix(29952),t10,t11,t12);}

/* a37679 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37680(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37680,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37684,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_22728(t5,lf[873],C_SCHEME_TRUE,t3);}

/* k37682 in a37679 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37684,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37689,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li609),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37697,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t3,((C_word*)t0)[2]);}

/* k37695 in k37682 in a37679 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a37688 in k37682 in a37679 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37689(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_37689,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a37636 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37637(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37637,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37670,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_23934(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k37668 in a37636 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37670,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k37629 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(29952),t1);}

/* k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24184,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24187,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37545,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[424],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[424],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[423],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37551,a[2]=((C_word)li607),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[872],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a37550 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37551(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37551,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k37543 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(30720),t1);}

/* k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24187,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24190,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37265,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[108],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[423],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37271,a[2]=((C_word)li604),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37314,a[2]=((C_word)li606),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[871],C_fix(30464),t10,t11,t12);}

/* a37313 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37314(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37314,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37318,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t5,t2);}

/* k37316 in a37313 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37318,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[451]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37326,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li605),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_37326(t8,((C_word*)t0)[2],t1);}

/* do3745 in k37316 in a37313 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_37326(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37326,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37349,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t3,t4);}}

/* k37347 in do3745 in k37316 in a37313 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37349,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37352,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k37350 in k37347 in do3745 in k37316 in a37313 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37352,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_37355,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22620(t2,t3);}

/* k37353 in k37350 in k37347 in do3745 in k37316 in a37313 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37355,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37358,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k37356 in k37353 in k37350 in k37347 in do3745 in k37316 in a37313 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37358,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37361,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37418,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23890(t5,((C_word*)t0)[2],C_fix(10756));}

/* k37416 in k37356 in k37353 in k37350 in k37347 in do3745 in k37316 in a37313 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37418,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_37361(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37425,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23890(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k37423 in k37416 in k37356 in k37353 in k37350 in k37347 in do3745 in k37316 in a37313 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37425,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[104],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_37361(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37435,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23890(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k37433 in k37423 in k37416 in k37356 in k37353 in k37350 in k37347 in do3745 in k37316 in a37313 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37435,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[108],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_37361(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37445,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23890(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k37443 in k37433 in k37423 in k37416 in k37356 in k37353 in k37350 in k37347 in do3745 in k37316 in a37313 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37445,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[626],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_37361(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37459,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23890(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k37457 in k37443 in k37433 in k37423 in k37416 in k37356 in k37353 in k37350 in k37347 in do3745 in k37316 in a37313 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37459,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[833],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_37361(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37469,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23890(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k37467 in k37457 in k37443 in k37433 in k37423 in k37416 in k37356 in k37353 in k37350 in k37347 in do3745 in k37316 in a37313 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37469,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_37361(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37479,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23890(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k37477 in k37467 in k37457 in k37443 in k37433 in k37423 in k37416 in k37356 in k37353 in k37350 in k37347 in do3745 in k37316 in a37313 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37479,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[369],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_37361(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37489,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23890(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k37487 in k37477 in k37467 in k37457 in k37443 in k37433 in k37423 in k37416 in k37356 in k37353 in k37350 in k37347 in do3745 in k37316 in a37313 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37489,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[307],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_37361(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_37361(t2,C_SCHEME_UNDEFINED);}}

/* k37359 in k37356 in k37353 in k37350 in k37347 in do3745 in k37316 in a37313 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_37361(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37361,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37364,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37385,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_37385(t5,(C_word)C_eqp(t4,lf[60]));}
else{
t4=t3;
f_37385(t4,C_SCHEME_FALSE);}}

/* k37383 in k37359 in k37356 in k37353 in k37350 in k37347 in do3745 in k37316 in a37313 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_37385(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37385,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[870],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[228],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37364(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_37364(t4,t3);}}

/* k37362 in k37359 in k37356 in k37353 in k37350 in k37347 in do3745 in k37316 in a37313 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_37364(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37364,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_37326(t7,((C_word*)t0)[2],t6);}

/* a37270 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37271(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37271,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37304,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_23934(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k37302 in a37270 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37304,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k37263 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(30464),t1);}

/* k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24190,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24193,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37151,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[440],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[108],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[423],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37157,a[2]=((C_word)li602),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37183,a[2]=((C_word)li603),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[869],C_fix(32000),t12,t13,t14);}

/* a37182 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37183(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37183,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37187,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t5,t2);}

/* k37185 in a37182 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37187,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37193,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k37191 in k37185 in a37182 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37193,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37213,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[451],t1));}}

/* k37211 in k37191 in k37185 in a37182 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37213,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* a37156 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37157(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37157,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37167,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_37167(t12,t11);}
else{
t10=t8;
f_37167(t10,C_SCHEME_FALSE);}}

/* k37165 in a37156 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_37167(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37167,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k37149 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(32000),t1);}

/* k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24193,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24196,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36892,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[440],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[440],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[423],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[423],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[423],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[424],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36898,a[2]=((C_word)li600),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36966,a[2]=((C_word)li601),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[868],C_fix(32256),t26,t27,t28);}

/* a36965 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36966(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_36966,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36970,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t5,t2);}

/* k36968 in a36965 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36970,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36976,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t2,t3,C_fix(14336));}

/* k36974 in k36968 in a36965 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36976,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  emit");
f_22756(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36985,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t2,t3,C_fix(19968));}}

/* k36983 in k36974 in k36968 in a36965 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36985,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36992,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37023,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k37021 in k36983 in k36974 in k36968 in a36965 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37023,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[425],t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37015,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k37013 in k37021 in k36983 in k36974 in k36968 in a36965 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_37015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37015,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[2],t1));}

/* k36990 in k36983 in k36974 in k36968 in a36965 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36992,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36996,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k36994 in k36990 in k36983 in k36974 in k36968 in a36965 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36996,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[2],t1));}

/* a36897 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36898(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36898,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36911,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36917,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t9,t4,C_fix(14336));}

/* k36915 in a36897 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36917,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_36923,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_36923(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36952,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(t11,C_fix(4608),lf[867],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36911(t5,t4);}}

/* k36950 in k36915 in a36897 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_36923(t3,t2);}

/* k36921 in k36915 in a36897 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_36923(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36923,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36927,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t3=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k36925 in k36921 in k36915 in a36897 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36927,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36930,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_36930(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36941,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(t5,C_fix(4608),lf[866],C_SCHEME_FALSE);}}

/* k36939 in k36925 in k36921 in k36915 in a36897 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_36930(t3,t2);}

/* k36928 in k36925 in k36921 in k36915 in a36897 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_36930(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36930,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_36911(t4,t3);}

/* k36909 in a36897 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_36911(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k36890 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(32256),t1);}

/* k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24196,2,t0,t1);}
t2=C_mutate(&lf[447],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24198,a[2]=((C_word)li377),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24719,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36620,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[423],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[440],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[423],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[423],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[424],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[440],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[440],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[423],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[424],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[440],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[423],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[424],t58);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t4,lf[865],C_fix(33024),t59,C_retrieve2(lf[447],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k36618 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(33024),t1);}

/* k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24719,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24722,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36564,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[423],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[424],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36572,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_22997(t13,C_fix(33280));}

/* k36570 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(((C_word*)t0)[3],lf[864],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k36562 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(33280),t1);}

/* k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24722,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25305,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36392,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[424],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[440],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[108],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[108],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[104],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[440],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[423],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36398,a[2]=((C_word)li594),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36444,a[2]=((C_word)li599),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[863],C_fix(32512),t25,t26,t27);}

/* a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36444(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_36444,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24728,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t7,t2);}

/* k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24728,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24746,a[2]=t11,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t13,a[9]=t5,a[10]=t9,a[11]=t3,tmp=(C_word)a,a+=12,tmp);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25264,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t16,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t17,t18,C_fix(14864));}

/* k25262 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25264,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25268,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_22728(t2,lf[860],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25271,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25298,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22716(t3,lf[848],((C_word*)((C_word*)t0)[6])[1]);}}

/* k25296 in k25262 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25298,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_25271(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25286,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25290,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22656(t3,t4);}}

/* k25288 in k25296 in k25262 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_22548(((C_word*)t0)[2],lf[862],t1);}

/* k25284 in k25296 in k25262 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k25269 in k25262 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25271,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25275,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_22728(t2,lf[861],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k25273 in k25269 in k25262 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_24746(t4,t3);}

/* k25266 in k25262 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24746(t3,t2);}

/* k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_24746(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24746,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24753,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25253,a[2]=t4,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25257,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t6,t7,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}
else{
t5=t4;
f_24753(t5,C_SCHEME_UNDEFINED);}}

/* k25255 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k25251 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24753(t3,t2);}

/* k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_24753(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24753,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24756,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25128,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=t5,a[7]=((C_word)li598),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_25128(t7,t2,t3);}

/* do3855 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_25128(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25128,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25138,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25149,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t4,t5);}}

/* k25147 in do3855 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25149,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25151,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li597),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_25151(t5,((C_word*)t0)[2],t1);}

/* do3858 in k25147 in do3855 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_25151(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25151,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25165,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 379  append");
t9=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k25163 in do3858 in k25147 in do3855 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25165,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25168,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25218,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 379  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_25168(t4,C_SCHEME_UNDEFINED);}}

/* k25216 in k25163 in do3858 in k25147 in do3855 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25168(t3,t2);}

/* k25166 in k25163 in do3858 in k25147 in do3855 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_25168(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25168,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25171,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25203,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 379  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_25171(t3,C_SCHEME_UNDEFINED);}}

/* k25201 in k25166 in k25163 in do3858 in k25147 in do3855 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25171(t3,t2);}

/* k25169 in k25166 in k25163 in do3858 in k25147 in do3855 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_25171(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25171,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25174,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25184,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k25182 in k25169 in k25166 in k25163 in do3858 in k25147 in do3855 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25184,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25188,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25196,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_25174(t2,C_SCHEME_UNDEFINED);}}

/* k25194 in k25182 in k25169 in k25166 in k25163 in do3858 in k25147 in do3855 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25196,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k25186 in k25182 in k25169 in k25166 in k25163 in do3858 in k25147 in do3855 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25174(t3,t2);}

/* k25172 in k25169 in k25166 in k25163 in do3858 in k25147 in do3855 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_25174(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_25151(t3,((C_word*)t0)[2],t2);}

/* k25136 in do3855 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_25128(t3,((C_word*)t0)[2],t2);}

/* k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24756,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24762,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=t3,tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25092,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t7,a[5]=t3,a[6]=((C_word)li596),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_25092(t9,t4,t5);}

/* do3870 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_25092(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25092,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25103,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25118,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k25116 in do3870 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25118,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k25101 in do3870 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_25092(t4,((C_word*)t0)[2],t3);}

/* k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24762,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24766,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[12])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24766,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24769,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_pairp(t4))){
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24969,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t6,a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[5],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[859]);}
else{
t5=t3;
f_24769(t5,C_SCHEME_UNDEFINED);}}

/* k24967 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24969,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24973,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_list(&a,2,t1,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[9])[1],t4);}

/* k24971 in k24967 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24973,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24977,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,((C_word*)((C_word*)t0)[9])[1],t4);}

/* k24975 in k24971 in k24967 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24977,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24980,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25020,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t6,a[5]=((C_word*)t0)[6],a[6]=((C_word)li595),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_25020(t8,t3,t4);}

/* do3877 in k24975 in k24971 in k24967 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_25020(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25020,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25030,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t3,t4);}}

/* k25028 in do3877 in k24975 in k24971 in k24967 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25030,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25033,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k25031 in k25028 in do3877 in k24975 in k24971 in k24967 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25033,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25036,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25054,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t5,t6,C_fix(20224));}

/* k25052 in k25031 in k25028 in do3877 in k24975 in k24971 in k24967 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25054,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[425],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_25036(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_25036(t2,C_SCHEME_UNDEFINED);}}

/* k25034 in k25031 in k25028 in do3877 in k24975 in k24971 in k24967 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_25036(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25036,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25040,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 379  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k25038 in k25034 in k25031 in k25028 in do3877 in k24975 in k24971 in k24967 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_25020(t4,((C_word*)t0)[2],t3);}

/* k24978 in k24975 in k24971 in k24967 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24980,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24983,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_24983(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[424],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_24983(t6,t5);}}

/* k24981 in k24978 in k24975 in k24971 in k24967 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_24983(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24983,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],C_SCHEME_TRUE);
t3=(C_word)C_a_i_cons(&a,2,lf[451],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[3])[1],t2,t3);
t5=(C_word)C_a_i_list(&a,1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[2];
f_24769(t7,t6);}

/* k24767 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_24769(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24769,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24773,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k24771 in k24767 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24773,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24776,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[8])[1]))){
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=t3;
f_24776(t7,t6);}
else{
t5=(C_word)C_a_i_cons(&a,2,lf[424],((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=t3;
f_24776(t7,t6);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t5=t3;
f_24776(t5,t4);}}

/* k24774 in k24771 in k24767 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_24776(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24776,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24779,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24929,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k24927 in k24774 in k24771 in k24767 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24929,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24933,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24937,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_24779(t3,t2);}}

/* k24935 in k24927 in k24774 in k24771 in k24767 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22756(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k24931 in k24927 in k24774 in k24771 in k24767 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24779(t3,t2);}

/* k24777 in k24774 in k24771 in k24767 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_24779(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24779,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24807,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[858]);}
else{
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t4);
t6=(C_word)C_a_i_cons(&a,2,lf[677],t5);
t7=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[3])[1],t6));}}

/* k24805 in k24777 in k24774 in k24771 in k24767 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24807,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24810,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[857]);}

/* k24808 in k24805 in k24777 in k24774 in k24771 in k24767 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24810,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24813,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[856]);}

/* k24811 in k24808 in k24805 in k24777 in k24774 in k24771 in k24767 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24813,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24816,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[855]);}

/* k24814 in k24811 in k24808 in k24805 in k24777 in k24774 in k24771 in k24767 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24816,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24819,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[854]);}

/* k24817 in k24814 in k24811 in k24808 in k24805 in k24777 in k24774 in k24771 in k24767 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24819,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[9],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[783],C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,2,lf[784],t4);
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],((C_word*)t0)[8]);
t8=(C_word)C_a_i_list(&a,3,lf[783],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[786],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,t1);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,1,lf[787]);
t14=(C_word)C_a_i_list(&a,4,lf[788],((C_word*)t0)[7],t13,lf[852]);
t15=(C_word)C_a_i_list(&a,2,t1,C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[783],t12,t14,t15);
t17=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t18=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24878,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t10,a[6]=t11,a[7]=t16,a[8]=t17,tmp=(C_word)a,a+=9,tmp);
t19=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
C_trace("##sys#append");
t20=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t20+1)))(4,t20,t18,((C_word*)((C_word*)t0)[2])[1],t19);}

/* k24876 in k24817 in k24814 in k24811 in k24808 in k24805 in k24777 in k24774 in k24771 in k24767 in k24764 in k24760 in k24754 in k24751 in k24744 in k24726 in a36443 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24878,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[16],t1);
t3=(C_word)C_a_i_list(&a,3,lf[853],((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_list(&a,3,lf[783],C_SCHEME_END_OF_LIST,t3);
t5=(C_word)C_a_i_list(&a,3,lf[736],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,3,lf[783],((C_word*)t0)[6],t5);
t7=(C_word)C_a_i_list(&a,2,lf[737],t6);
t8=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[5],t7);
t9=(C_word)C_a_i_list(&a,3,lf[783],((C_word*)t0)[4],t8);
t10=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[2])[1],t9));}

/* a36397 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36398(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36398,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36414,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t11=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k36412 in a36397 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36414,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36417,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  sixth");
t3=C_retrieve(lf[54]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k36415 in k36412 in a36397 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36417,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36420,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_36420(t7,t6);}
else{
t5=t4;
f_36420(t5,C_SCHEME_UNDEFINED);}}

/* k36418 in k36415 in k36412 in a36397 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_36420(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36420,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36423,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_36423(t5,t4);}
else{
t3=t2;
f_36423(t3,C_SCHEME_UNDEFINED);}}

/* k36421 in k36418 in k36415 in k36412 in a36397 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_36423(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36423,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36434,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22656(t3,((C_word*)t0)[8]);}

/* k36432 in k36421 in k36418 in k36415 in k36412 in a36397 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k36390 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(32512),t1);}

/* k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25305,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25308,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36247,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[423],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[108],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[423],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[424],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[423],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36253,a[2]=((C_word)li593),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[851],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a36252 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36253(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36253,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36266,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_36266(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36292,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_23934(t12,t13,C_fix(256));}}

/* k36290 in a36252 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36292,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_36266(t4,t3);}

/* k36264 in a36252 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_36266(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36266,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k36245 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(37632),t1);}

/* k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25308,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25311,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35790,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[108],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[423],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[423],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[423],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[424],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[423],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35796,a[2]=((C_word)li589),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35835,a[2]=((C_word)li592),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[850],C_fix(36352),t23,t24,t25);}

/* a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35835(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35835,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35839,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t6,t2);}

/* k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35839,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[451]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35848,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35851,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t7,t2,C_fix(24576));}

/* k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35851,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35860,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li590),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_35860(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35909,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t2,t3);}}

/* k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35909,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35912,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35912,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35915,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35915,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_36127,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36127,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_35924,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_35924(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36065,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 379  symbol->string");
t15=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k36063 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36065,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36074,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36099,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 379  substring");
t6=*((C_word*)lf[465]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_36074(t4,C_SCHEME_FALSE);}}

/* k36097 in k36063 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_36074(t2,(C_word)C_i_string_equal_p(t1,lf[849]));}

/* k36072 in k36063 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_36074(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36074,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36081,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36085,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 379  substring");
t5=*((C_word*)lf[465]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_35924(t2,C_SCHEME_UNDEFINED);}}

/* k36083 in k36072 in k36063 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  string->symbol");
t2=*((C_word*)lf[421]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k36079 in k36072 in k36063 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_35924(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k35922 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_35924(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35924,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35927,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_36002,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t3,((C_word*)t0)[2],C_fix(24064));}

/* k36000 in k35922 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36002,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36006,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_22728(t2,lf[846],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36043,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k36041 in k36000 in k35922 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36043,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36047,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_22728(t2,lf[848],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_35927(t2,C_SCHEME_UNDEFINED);}}

/* k36045 in k36041 in k36000 in k35922 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36047,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36051,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k36049 in k36045 in k36041 in k36000 in k35922 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36051,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[779],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[847]);
t6=((C_word*)t0)[2];
f_35927(t6,t5);}

/* k36004 in k36000 in k35922 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36006,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36010,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k36008 in k36004 in k36000 in k35922 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36010,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36013,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36037,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22716(t4,lf[846],((C_word*)((C_word*)t0)[2])[1]);}

/* k36035 in k36008 in k36004 in k36000 in k35922 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_36037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36037,2,t0,t1);}
t2=(C_word)C_eqp(lf[845],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[648]);
t4=(C_word)C_a_i_list(&a,3,lf[783],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[737],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36013(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_36013(t3,C_SCHEME_UNDEFINED);}}

/* k36011 in k36008 in k36004 in k36000 in k35922 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_36013(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36013,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[779],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[844]);
t5=((C_word*)t0)[2];
f_35927(t5,t4);}

/* k35925 in k35922 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_35927(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35927,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35930,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35941,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35999,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k35997 in k35925 in k35922 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  string-append");
t2=*((C_word*)lf[171]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[843]);}

/* k35939 in k35925 in k35922 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35941,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35943,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li591),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_35943(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do3964 in k35939 in k35925 in k35922 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_35943(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35943,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35958,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  string-append");
t6=*((C_word*)lf[171]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[841]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35962,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35991,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 379  symbol->string");
t8=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k35989 in do3964 in k35939 in k35925 in k35922 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  string-append");
t2=*((C_word*)lf[171]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k35960 in do3964 in k35939 in k35925 in k35922 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35962,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35965,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_35965(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35979,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  string-append");
t6=*((C_word*)lf[171]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[842]);}}

/* k35977 in k35960 in do3964 in k35939 in k35925 in k35922 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_35965(t3,t2);}

/* k35963 in k35960 in do3964 in k35939 in k35925 in k35922 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_35965(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_35943(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k35956 in do3964 in k35939 in k35925 in k35922 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35958,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[474],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k35928 in k35925 in k35922 in k36125 in k35913 in k35910 in k35907 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35930,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_35848(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do3938 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_35860(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35860,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35870,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k35868 in do3938 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35870,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35876,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  sprintf");
t4=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[840],t2);}

/* k35874 in k35868 in do3938 in k35849 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35876,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[779],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[473],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_35860(t9,((C_word*)t0)[2],t8);}

/* k35846 in k35837 in a35834 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a35795 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35796(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35796,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35807,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35813,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t9,t7,C_fix(24576));}

/* k35811 in a35795 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35813,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35829,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_23934(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_35807(t2,C_SCHEME_UNDEFINED);}}

/* k35827 in k35811 in a35795 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35829,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35807(t5,t4);}

/* k35805 in a35795 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_35807(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k35788 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(36352),t1);}

/* k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25311,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25314,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35714,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[424],t19);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[839],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k35712 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(36608),t1);}

/* k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25314,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25317,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35670,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[104],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35676,a[2]=((C_word)li587),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35690,a[2]=((C_word)li588),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_22298(t3,lf[838],C_fix(36864),t5,t6,t7);}

/* a35689 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35690(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35690,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35698,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35702,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t6,t2);}

/* k35700 in a35689 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22756(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k35696 in a35689 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35698,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[451],t1));}

/* a35675 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35676(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35676,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35684,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22656(t4,t5);}

/* k35682 in a35675 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k35668 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[391],"*rules*"),C_fix(36864),t1);}

/* k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25317,2,t0,t1);}
t2=lf[458]=C_SCHEME_FALSE;;
t3=lf[459]=C_SCHEME_FALSE;;
t4=lf[460]=C_SCHEME_FALSE;;
t5=C_set_block_item(lf[461],0,C_SCHEME_FALSE);
t6=C_mutate((C_word*)lf[462]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25324,a[2]=((C_word)li383),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[473]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25501,a[2]=((C_word)li387),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[483]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25654,a[2]=((C_word)li388),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[484]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25663,a[2]=((C_word)li389),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[492]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25710,a[2]=((C_word)li390),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[494]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25716,a[2]=((C_word)li391),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25735,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35662,a[2]=((C_word)li586),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-macro-2");
t14=C_retrieve(lf[795]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[836],t13);}

/* a35661 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35662(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35662,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29088,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[837]);}

/* k29086 in a35661 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29088,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29091,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  parse-iteration");
f_29070(t2,lf[836],((C_word*)t0)[2],C_retrieve2(lf[686],"*loop-operators*"));}

/* k29089 in k29086 in a35661 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29091,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_assoc(lf[648],C_retrieve2(lf[686],"*loop-operators*"));
t7=(C_word)C_i_cadddr(t6);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29098,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29243,a[2]=t8,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29257,a[2]=t1,a[3]=t9,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  loop-returning");
t11=C_retrieve2(lf[505],"loop-returning");
f_25842(3,t11,t10,t1);}

/* k29255 in k29089 in k29086 in a35661 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29257,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[3];
f_29243(t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29253,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  loop-returning");
t3=C_retrieve2(lf[505],"loop-returning");
f_25842(3,t3,t2,((C_word*)t0)[2]);}}

/* k29251 in k29255 in k29089 in k29086 in a35661 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_29243(t2,(C_word)C_i_car(t1));}

/* k29241 in k29089 in k29086 in a35661 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_29243(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  returnfn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k29096 in k29089 in k29086 in a35661 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29098,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29102,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  loop-end-tests");
t4=C_retrieve2(lf[500],"loop-end-tests");
f_25794(3,t4,t3,((C_word*)t0)[2]);}

/* k29100 in k29096 in k29089 in k29086 in a35661 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29102,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29105,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(t1))){
t3=t2;
f_29105(t3,C_SCHEME_END_OF_LIST);}
else{
t3=(C_word)C_i_cdr(t1);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(t1):(C_word)C_a_i_cons(&a,2,lf[424],t1));
t6=(C_word)C_a_i_list(&a,4,lf[20],t5,lf[835],C_SCHEME_FALSE);
t7=t2;
f_29105(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k29103 in k29100 in k29096 in k29089 in k29086 in a35661 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_29105(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29105,NULL,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29116,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  loop-bindings");
t4=C_retrieve2(lf[497],"loop-bindings");
f_25758(3,t4,t3,((C_word*)t0)[2]);}

/* k29114 in k29103 in k29100 in k29096 in k29089 in k29086 in a35661 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29116,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29120,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29124,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  loop-initially");
t4=C_retrieve2(lf[499],"loop-initially");
f_25782(3,t4,t3,((C_word*)t0)[3]);}

/* k29122 in k29114 in k29103 in k29100 in k29096 in k29089 in k29086 in a35661 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29124,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[648]);
t3=(C_word)C_a_i_list(&a,1,lf[829]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29188,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t3,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29192,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29196,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping");
t7=C_retrieve2(lf[501],"loop-looping");
f_25806(3,t7,t6,((C_word*)t0)[3]);}

/* k29194 in k29122 in k29114 in k29103 in k29100 in k29096 in k29089 in k29086 in a35661 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29196,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29200,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29204,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  loop-stepping");
t4=C_retrieve2(lf[503],"loop-stepping");
f_25818(3,t4,t3,((C_word*)t0)[2]);}

/* k29202 in k29194 in k29122 in k29114 in k29103 in k29100 in k29096 in k29089 in k29086 in a35661 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29204,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
C_trace("ChickenBridge.scm: 380  ##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t1,t3);}

/* k29198 in k29194 in k29122 in k29114 in k29103 in k29100 in k29096 in k29089 in k29086 in a35661 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k29190 in k29122 in k29114 in k29103 in k29100 in k29096 in k29089 in k29086 in a35661 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k29186 in k29122 in k29114 in k29103 in k29100 in k29096 in k29089 in k29086 in a35661 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29188,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[783],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[737],t5);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29156,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29160,a[2]=t7,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  loop-finally");
t9=C_retrieve2(lf[504],"loop-finally");
f_25830(3,t9,t8,((C_word*)t0)[2]);}

/* k29158 in k29186 in k29122 in k29114 in k29103 in k29100 in k29096 in k29089 in k29086 in a35661 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29160,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k29154 in k29186 in k29122 in k29114 in k29103 in k29100 in k29096 in k29089 in k29086 in a35661 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29156,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[783],t3);
t5=(C_word)C_a_i_list(&a,2,lf[737],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 380  ##sys#append");
t7=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],((C_word*)t0)[2],t6);}

/* k29118 in k29114 in k29103 in k29100 in k29096 in k29089 in k29086 in a35661 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29120,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25735,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25738,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35648,a[2]=((C_word)li585),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-macro");
t4=C_retrieve(lf[781]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[834],t3);}

/* a35647 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35648(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35648,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,3,lf[833],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],t3,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,3,lf[451],t5,t3));}

/* k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25738,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25741,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35619,a[2]=((C_word)li584),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-macro");
t4=C_retrieve(lf[781]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[832],t3);}

/* a35618 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35619(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35619,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35623,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[831]);}

/* k35621 in a35618 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35623,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,2,t1,t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[3]);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,4,lf[1],t4,t6,t1));}

/* k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25741,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25744,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35616,a[2]=((C_word)li583),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-macro");
t4=C_retrieve(lf[781]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[830],t3);}

/* a35615 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35616(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35616,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[492],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25744,2,t0,t1);}
t2=C_mutate(&lf[496],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25752,a[2]=((C_word)li392),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[497],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25758,a[2]=((C_word)li393),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[498],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25770,a[2]=((C_word)li394),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[499],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25782,a[2]=((C_word)li395),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[500],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25794,a[2]=((C_word)li396),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[501],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25806,a[2]=((C_word)li397),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[502],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25812,a[2]=((C_word)li398),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[503],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25818,a[2]=((C_word)li399),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[504],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25830,a[2]=((C_word)li400),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[505],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25842,a[2]=((C_word)li401),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[506],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25854,a[2]=((C_word)li403),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[516],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26005,a[2]=((C_word)li406),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[517],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26076,a[2]=((C_word)li407),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[518],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26082,a[2]=((C_word)li408),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[519],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26088,a[2]=((C_word)li409),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[520],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26094,a[2]=((C_word)li413),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[528],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26254,a[2]=((C_word)li414),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[536],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26336,a[2]=((C_word)li416),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[566],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26718,a[2]=((C_word)li419),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[569],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26765,a[2]=((C_word)li421),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[588],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27116,a[2]=((C_word)li423),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[595],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27258,a[2]=((C_word)li425),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[609],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27451,a[2]=((C_word)li427),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[612],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27518,a[2]=((C_word)li428),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[615],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27556,a[2]=((C_word)li429),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[618],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27715,a[2]=((C_word)li435),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[647],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28261,a[2]=((C_word)li436),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[649],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28267,a[2]=((C_word)li437),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[655],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28333,a[2]=((C_word)li438),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[661],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28424,a[2]=((C_word)li439),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[664],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28525,a[2]=((C_word)li443),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[670],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28656,a[2]=((C_word)li448),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[676],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29070,a[2]=((C_word)li453),tmp=(C_word)a,a+=3,tmp));
t35=(C_word)C_a_i_list(&a,3,lf[596],C_retrieve2(lf[595],"parse-with"),C_SCHEME_FALSE);
t36=(C_word)C_a_i_list(&a,3,lf[510],C_retrieve2(lf[615],"parse-initially"),C_SCHEME_FALSE);
t37=(C_word)C_a_i_list(&a,3,lf[684],C_retrieve2(lf[566],"parse-repeat"),lf[681]);
t38=(C_word)C_a_i_list(&a,2,lf[544],C_retrieve2(lf[536],"parse-numerical-for"));
t39=(C_word)C_a_i_list(&a,2,lf[540],C_retrieve2(lf[536],"parse-numerical-for"));
t40=(C_word)C_a_i_list(&a,2,lf[542],C_retrieve2(lf[536],"parse-numerical-for"));
t41=(C_word)C_a_i_list(&a,2,lf[551],C_retrieve2(lf[536],"parse-numerical-for"));
t42=(C_word)C_a_i_list(&a,2,lf[541],C_retrieve2(lf[536],"parse-numerical-for"));
t43=(C_word)C_a_i_list(&a,2,lf[543],C_retrieve2(lf[536],"parse-numerical-for"));
t44=(C_word)C_a_i_list(&a,2,lf[576],C_retrieve2(lf[569],"parse-sequence-iteration"));
t45=(C_word)C_a_i_list(&a,2,lf[585],C_retrieve2(lf[569],"parse-sequence-iteration"));
t46=(C_word)C_a_i_list(&a,2,lf[570],C_retrieve2(lf[569],"parse-sequence-iteration"));
t47=(C_word)C_a_i_list(&a,2,lf[433],C_retrieve2(lf[588],"parse-general-iteration"));
t48=(C_word)C_a_i_list(&a,2,lf[575],C_retrieve2(lf[569],"parse-sequence-iteration"));
t49=(C_word)C_a_i_list(&a,14,lf[537],C_retrieve2(lf[528],"parse-for"),lf[681],t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48);
t50=(C_word)C_a_i_list(&a,3,lf[685],C_retrieve2(lf[528],"parse-for"),lf[681]);
t51=(C_word)C_a_i_list(&a,3,lf[677],C_retrieve2(lf[609],"parse-do"),lf[668]);
t52=(C_word)C_a_i_list(&a,3,lf[629],C_retrieve2(lf[618],"parse-accumulation"),lf[668]);
t53=(C_word)C_a_i_list(&a,3,lf[18],C_retrieve2(lf[618],"parse-accumulation"),lf[668]);
t54=(C_word)C_a_i_list(&a,3,lf[634],C_retrieve2(lf[618],"parse-accumulation"),lf[668]);
t55=(C_word)C_a_i_list(&a,3,lf[619],C_retrieve2(lf[618],"parse-accumulation"),lf[668]);
t56=(C_word)C_a_i_list(&a,3,lf[620],C_retrieve2(lf[618],"parse-accumulation"),lf[668]);
t57=(C_word)C_a_i_list(&a,3,lf[622],C_retrieve2(lf[618],"parse-accumulation"),lf[668]);
t58=(C_word)C_a_i_list(&a,3,lf[623],C_retrieve2(lf[618],"parse-accumulation"),lf[668]);
t59=(C_word)C_a_i_list(&a,4,lf[656],C_retrieve2(lf[655],"parse-thereis"),lf[668],C_retrieve2(lf[647],"loop-return"));
t60=(C_word)C_a_i_list(&a,4,lf[657],C_retrieve2(lf[655],"parse-thereis"),lf[668],C_retrieve2(lf[647],"loop-return"));
t61=(C_word)C_a_i_list(&a,4,lf[658],C_retrieve2(lf[655],"parse-thereis"),lf[668],C_retrieve2(lf[647],"loop-return"));
t62=(C_word)C_a_i_list(&a,4,lf[648],C_retrieve2(lf[661],"parse-return"),lf[668],C_retrieve2(lf[647],"loop-return"));
t63=(C_word)C_a_i_list(&a,3,lf[652],C_retrieve2(lf[649],"parse-while-until"),C_SCHEME_FALSE);
t64=(C_word)C_a_i_list(&a,3,lf[651],C_retrieve2(lf[649],"parse-while-until"),C_SCHEME_FALSE);
t65=(C_word)C_a_i_list(&a,3,lf[11],C_retrieve2(lf[670],"parse-conditional"),lf[668]);
t66=(C_word)C_a_i_list(&a,3,lf[6],C_retrieve2(lf[670],"parse-conditional"),lf[668]);
t67=(C_word)C_a_i_list(&a,3,lf[20],C_retrieve2(lf[670],"parse-conditional"),lf[668]);
t68=(C_word)C_a_i_list(&a,3,lf[514],C_retrieve2(lf[612],"parse-finally"),C_SCHEME_FALSE);
t69=(C_word)C_a_i_list(&a,23,t35,t36,t37,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68);
t70=C_mutate(&lf[686],t69);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29264,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35474,a[2]=((C_word)li582),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-macro-2");
t73=C_retrieve(lf[795]);
((C_proc4)C_retrieve_proc(t73))(4,t73,t71,lf[681],t72);}

/* a35473 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35474(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35474,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29270,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  parse-iteration");
f_29070(t3,lf[681],t2,C_retrieve2(lf[686],"*loop-operators*"));}

/* k29268 in a35473 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29270,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29273,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_assoc(lf[648],C_retrieve2(lf[686],"*loop-operators*"));
t4=(C_word)C_i_cadddr(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29402,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  loop-returning");
t6=C_retrieve2(lf[505],"loop-returning");
f_25842(3,t6,t5,t1);}

/* k29400 in k29268 in a35473 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29402,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,t2);
C_apply(4,0,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k29271 in k29268 in a35473 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29273,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29284,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-bindings");
t3=C_retrieve2(lf[497],"loop-bindings");
f_25758(3,t3,t2,((C_word*)t0)[2]);}

/* k29282 in k29271 in k29268 in a35473 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29284,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29288,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29292,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-initially");
t4=C_retrieve2(lf[499],"loop-initially");
f_25782(3,t4,t3,((C_word*)t0)[2]);}

/* k29290 in k29282 in k29271 in k29268 in a35473 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29292,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29312,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29316,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-end-tests");
t4=C_retrieve2(lf[500],"loop-end-tests");
f_25794(3,t4,t3,((C_word*)t0)[2]);}

/* k29314 in k29290 in k29282 in k29271 in k29268 in a35473 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29316,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29319,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cdr(t1);
t4=(C_truep(t3)?(C_word)C_a_i_cons(&a,2,lf[424],t1):(C_word)C_i_car(t1));
t5=(C_word)C_a_i_list(&a,2,lf[829],lf[388]);
t6=(C_word)C_a_i_list(&a,3,lf[20],t4,t5);
t7=t2;
f_29319(t7,(C_word)C_a_i_list(&a,1,t6));}
else{
t3=t2;
f_29319(t3,C_SCHEME_END_OF_LIST);}}

/* k29317 in k29314 in k29290 in k29282 in k29271 in k29268 in a35473 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_29319(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29319,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29323,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29327,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping");
t4=C_retrieve2(lf[501],"loop-looping");
f_25806(3,t4,t3,((C_word*)t0)[2]);}

/* k29325 in k29317 in k29314 in k29290 in k29282 in k29271 in k29268 in a35473 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29327,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29331,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29335,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-stepping");
t4=C_retrieve2(lf[503],"loop-stepping");
f_25818(3,t4,t3,((C_word*)t0)[2]);}

/* k29333 in k29325 in k29317 in k29314 in k29290 in k29282 in k29271 in k29268 in a35473 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29335,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[829],lf[825]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29351,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29355,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  loop-finally");
t5=C_retrieve2(lf[504],"loop-finally");
f_25830(3,t5,t4,((C_word*)t0)[2]);}

/* k29353 in k29333 in k29325 in k29317 in k29314 in k29290 in k29282 in k29271 in k29268 in a35473 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29355,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k29349 in k29333 in k29325 in k29317 in k29314 in k29290 in k29282 in k29271 in k29268 in a35473 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29351,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[388],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
C_trace("##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k29329 in k29325 in k29317 in k29314 in k29290 in k29282 in k29271 in k29268 in a35473 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k29321 in k29317 in k29314 in k29290 in k29282 in k29271 in k29268 in a35473 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k29310 in k29290 in k29282 in k29271 in k29268 in a35473 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29312,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[825],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[826],t2);
t4=(C_word)C_a_i_list(&a,3,lf[827],lf[828],t3);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[3],((C_word*)t0)[2],t5);}

/* k29286 in k29282 in k29271 in k29268 in a35473 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29288,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29264,2,t0,t1);}
t2=C_mutate((C_word*)lf[687]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29408,a[2]=((C_word)li455),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[692]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30137,a[2]=((C_word)li457),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[693]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30156,a[2]=((C_word)li459),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[694]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30607,a[2]=((C_word)li461),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[695]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30626,a[2]=((C_word)li463),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[697]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31355,a[2]=((C_word)li465),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[698]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31374,a[2]=((C_word)li467),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[700]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32103,a[2]=((C_word)li469),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[701]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32122,a[2]=((C_word)li471),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[702]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32573,a[2]=((C_word)li473),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[703]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32592,a[2]=((C_word)li475),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[704]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33043,a[2]=((C_word)li477),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[705]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33062,a[2]=((C_word)li479),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[706]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33532,a[2]=((C_word)li481),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[707]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33550,a[2]=((C_word)li483),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[708]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33565,a[2]=((C_word)li485),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[709]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33580,a[2]=((C_word)li487),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[710]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33599,a[2]=((C_word)li489),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[711]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33614,a[2]=((C_word)li491),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[712]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33633,a[2]=((C_word)li493),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[713]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33652,a[2]=((C_word)li495),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[714]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33675,a[2]=((C_word)li497),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[715]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33694,a[2]=((C_word)li499),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[716]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33717,a[2]=((C_word)li502),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[717]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33764,a[2]=((C_word)li505),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[719]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33819,a[2]=((C_word)li507),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[720]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33838,a[2]=((C_word)li509),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[721]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33861,a[2]=((C_word)li511),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[722]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33889,a[2]=((C_word)li513),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[723]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33917,a[2]=((C_word)li515),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[724]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33945,a[2]=((C_word)li517),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[725]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33973,a[2]=((C_word)li519),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[726]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34001,a[2]=((C_word)li521),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[727]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34029,a[2]=((C_word)li523),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[728]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34057,a[2]=((C_word)li525),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[729]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34085,a[2]=((C_word)li527),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[730]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34113,a[2]=((C_word)li529),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[731]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34128,a[2]=((C_word)li536),tmp=(C_word)a,a+=3,tmp));
t40=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34186,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t41=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t41))(5,t41,t40,C_retrieve(lf[29]),lf[823],lf[824]);}

/* k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34186,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34189,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[821],lf[822]);}

/* k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34189,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34192,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[819],lf[820]);}

/* k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34192,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34195,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[817],lf[818]);}

/* k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34195,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34198,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[815],lf[816]);}

/* k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34198,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34201,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[813],lf[814]);}

/* k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34201,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34204,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[811],lf[812]);}

/* k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34204,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34207,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[809],lf[810]);}

/* k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34207,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34210,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[807],lf[808]);}

/* k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34210,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34213,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[805],lf[806]);}

/* k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34213,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34216,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[803],lf[804]);}

/* k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34216,2,t0,t1);}
t2=C_mutate((C_word*)lf[738]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34218,a[2]=((C_word)li538),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[739]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34275,a[2]=((C_word)li540),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[740]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34332,a[2]=((C_word)li542),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34341,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t6=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve(lf[29]),lf[801],lf[802]);}

/* k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34341,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34344,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[799],lf[800]);}

/* k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34344,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34347,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[796]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[797],lf[798]);}

/* k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[67],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34347,2,t0,t1);}
t2=C_mutate((C_word*)lf[741]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34349,a[2]=((C_word)li545),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[474]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34539,a[2]=((C_word)li546),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[463]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34553,a[2]=((C_word)li547),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[749]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34567,a[2]=((C_word)li548),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[750]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34570,a[2]=((C_word)li549),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[751],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34582,a[2]=((C_word)li551),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[753],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34591,a[2]=((C_word)li553),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[754],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34635,a[2]=((C_word)li555),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[485]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34657,a[2]=((C_word)li557),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[755]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34676,a[2]=((C_word)li564),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[758]+1,C_retrieve(lf[750]));
t13=C_mutate((C_word*)lf[759]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34852,a[2]=((C_word)li566),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[765]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34915,a[2]=((C_word)li568),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[766]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34924,a[2]=((C_word)li570),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[767]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34930,a[2]=((C_word)li572),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[768]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34939,a[2]=((C_word)li574),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[770]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34997,a[2]=((C_word)li576),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[771],lf[772]);
t20=C_mutate(&lf[773],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35007,a[2]=((C_word)li577),tmp=(C_word)a,a+=3,tmp));
t21=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t22=t21;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35078,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t25=C_SCHEME_UNDEFINED;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_set_block_item(t26,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35411,a[2]=t26,a[3]=t21,a[4]=t23,a[5]=((C_word)li581),tmp=(C_word)a,a+=6,tmp));
t28=((C_word*)t26)[1];
f_35411(t28,t24,C_retrieve2(lf[686],"*loop-operators*"));}

/* do6266 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_35411(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35411,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_a_i_list(&a,3,lf[652],C_retrieve2(lf[773],"run-while-until"),C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[651],C_retrieve2(lf[773],"run-while-until"),C_SCHEME_FALSE);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35439,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t4);
if(C_truep((C_truep((C_word)C_i_equalp(t5,lf[629]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[18]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[634]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[619]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[620]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[622]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[623]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[656]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[657]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[658]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[648]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[652]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[651]))?C_SCHEME_TRUE:C_SCHEME_FALSE))))))))))))))){
t6=t3;
f_35439(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t3;
f_35439(t11,t10);}}}

/* k35437 in do6266 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_35439(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_35411(t3,((C_word*)t0)[2],t2);}

/* k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35078,2,t0,t1);}
t2=C_mutate(&lf[776],t1);
t3=C_mutate(&lf[777],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35080,a[2]=((C_word)li578),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35368,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35405,a[2]=((C_word)li580),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 660  ##sys#register-macro-2");
t6=C_retrieve(lf[795]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[794],t5);}

/* a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35405(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35405,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35123,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 605  parse-iteration");
f_29070(t3,lf[794],t2,C_retrieve2(lf[776],"*run-operators*"));}

/* k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35123,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_retrieve2(lf[771],"*process-stop*");
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_car(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35129,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 613  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[793]);}

/* k35127 in k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35129,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35132,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 614  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[792]);}

/* k35130 in k35127 in k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35132,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_35135,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 615  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[791]);}

/* k35133 in k35130 in k35127 in k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35135,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_35139,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 617  loop-end-tests");
t3=C_retrieve2(lf[500],"loop-end-tests");
f_25794(3,t3,t2,((C_word*)t0)[3]);}

/* k35137 in k35133 in k35130 in k35127 in k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35139,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_35142,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35349,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 618  loop-finally");
t5=C_retrieve2(lf[504],"loop-finally");
f_25830(3,t5,t4,((C_word*)t0)[3]);}

/* k35347 in k35137 in k35133 in k35130 in k35127 in k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35349,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35357,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35361,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 619  loop-finally");
t4=C_retrieve2(lf[504],"loop-finally");
f_25830(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_35142(t2,C_SCHEME_UNDEFINED);}}

/* k35359 in k35347 in k35137 in k35133 in k35130 in k35127 in k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35361,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 604  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k35355 in k35347 in k35137 in k35133 in k35130 in k35127 in k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35357,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[451],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_35142(t4,t3);}

/* k35140 in k35137 in k35133 in k35130 in k35127 in k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_35142(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35142,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_35145,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35335,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35342,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 627  loop-looping");
t5=C_retrieve2(lf[501],"loop-looping");
f_25806(3,t5,t4,((C_word*)t0)[4]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35306,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_35306(t7,t6);}
else{
t5=(C_word)C_a_i_cons(&a,2,lf[424],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_35306(t7,t6);}}}

/* k35304 in k35140 in k35137 in k35133 in k35130 in k35127 in k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_35306(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35306,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_35145(2,t5,t4);}

/* k35340 in k35140 in k35137 in k35133 in k35130 in k35127 in k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 626  process-code-terminates?");
f_35080(((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k35333 in k35140 in k35137 in k35133 in k35130 in k35127 in k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[2];
f_35145(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 628  printf");
t2=C_retrieve(lf[442]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[790]);}}

/* k35143 in k35140 in k35137 in k35133 in k35130 in k35127 in k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35145,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[8],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[783],C_SCHEME_END_OF_LIST,((C_word*)t0)[9]);
t5=(C_word)C_a_i_list(&a,2,lf[784],t4);
t6=(C_word)C_a_i_list(&a,1,lf[785]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[8],lf[785]);
t8=(C_word)C_a_i_list(&a,3,lf[783],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[786],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t13=(C_word)C_a_i_list(&a,1,lf[787]);
t14=(C_word)C_a_i_list(&a,4,lf[788],((C_word*)t0)[6],t13,lf[789]);
t15=(C_word)C_a_i_list(&a,2,((C_word*)t0)[7],C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[783],t12,t14,t15);
t17=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35236,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=t10,a[7]=t11,a[8]=t16,tmp=(C_word)a,a+=9,tmp);
t18=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35240,a[2]=((C_word*)t0)[2],a[3]=t17,tmp=(C_word)a,a+=4,tmp);
t19=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35244,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=t18,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 647  loop-looping");
t20=C_retrieve2(lf[501],"loop-looping");
f_25806(3,t20,t19,((C_word*)t0)[3]);}

/* k35242 in k35143 in k35140 in k35137 in k35133 in k35130 in k35127 in k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35244,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35248,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35252,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 648  loop-stepping");
t4=C_retrieve2(lf[503],"loop-stepping");
f_25818(3,t4,t3,((C_word*)t0)[2]);}

/* k35250 in k35242 in k35143 in k35140 in k35137 in k35133 in k35130 in k35127 in k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35252,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 604  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k35246 in k35242 in k35143 in k35140 in k35137 in k35133 in k35130 in k35127 in k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 604  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k35238 in k35143 in k35140 in k35137 in k35133 in k35130 in k35127 in k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 604  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k35234 in k35143 in k35140 in k35137 in k35133 in k35130 in k35127 in k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35236,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,lf[783],t2);
t4=(C_word)C_a_i_list(&a,3,lf[736],((C_word*)t0)[8],t3);
t5=(C_word)C_a_i_list(&a,3,lf[783],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[737],t5);
t7=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[6],t6);
t8=(C_word)C_a_i_list(&a,3,lf[783],((C_word*)t0)[5],t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35155,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35192,a[2]=((C_word*)t0)[2],a[3]=t10,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 652  loop-bindings");
t12=C_retrieve2(lf[497],"loop-bindings");
f_25758(3,t12,t11,((C_word*)t0)[2]);}

/* k35190 in k35234 in k35143 in k35140 in k35137 in k35133 in k35130 in k35127 in k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35192,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35188,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 653  loop-initially");
t3=C_retrieve2(lf[499],"loop-initially");
f_25782(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_35155(t2,C_SCHEME_FALSE);}}

/* k35186 in k35190 in k35234 in k35143 in k35140 in k35137 in k35133 in k35130 in k35127 in k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_35155(t2,(C_word)C_i_nullp(t1));}

/* k35153 in k35234 in k35143 in k35140 in k35137 in k35133 in k35130 in k35127 in k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_35155(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35155,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35166,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 656  loop-bindings");
t3=C_retrieve2(lf[497],"loop-bindings");
f_25758(3,t3,t2,((C_word*)t0)[2]);}}

/* k35164 in k35153 in k35234 in k35143 in k35140 in k35137 in k35133 in k35130 in k35127 in k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35166,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35170,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35174,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 657  loop-initially");
t4=C_retrieve2(lf[499],"loop-initially");
f_25782(3,t4,t3,((C_word*)t0)[2]);}

/* k35172 in k35164 in k35153 in k35234 in k35143 in k35140 in k35137 in k35133 in k35130 in k35127 in k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35174,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 604  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k35168 in k35164 in k35153 in k35234 in k35143 in k35140 in k35137 in k35133 in k35130 in k35127 in k35121 in a35404 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35170,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* k35366 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35368,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35371,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35376,a[2]=((C_word)li579),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 663  ##sys#register-macro");
t4=C_retrieve(lf[781]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[782],t3);}

/* a35375 in k35366 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35376(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr3r,(void*)f_35376r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_35376r(t0,t1,t2,t3);}}

static void C_ccall f_35376r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35380,a[2]=t1,a[3]=t3,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35390,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t6=(C_word)C_i_car(t2);
t7=t5;
f_35390(t7,(C_word)C_i_symbolp(t6));}
else{
t6=t5;
f_35390(t6,C_SCHEME_FALSE);}}

/* k35388 in a35375 in k35366 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_35390(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_35380(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 665  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[780],((C_word*)t0)[2]);}}

/* k35378 in a35375 in k35366 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35380,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[779],t2));}

/* k35369 in k35366 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35371,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35374,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 772  return-to-host");
t3=C_retrieve(lf[778]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k35372 in k35369 in k35366 in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* process-code-terminates? in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_35080(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
loop:
a=C_alloc(5);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_35080,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35096,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 600  process-code-terminates?");
t8=t4;
t9=t5;
t10=t3;
t1=t8;
t2=t9;
t3=t10;
goto loop;}
else{
t4=(C_word)C_i_car(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_eqp(t2,t4));}}}

/* k35094 in process-code-terminates? in k35076 in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 601  process-code-terminates?");
f_35080(((C_word*)t0)[4],t2,((C_word*)t0)[2]);}}

/* run-while-until in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35007(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35007,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35018,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 568  loop-error");
f_26094(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[774],t7,lf[775]));}
else{
t13=t12;
f_35018(2,t13,C_SCHEME_UNDEFINED);}}

/* k35016 in run-while-until in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35018,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35021,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[651]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_35021(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[652]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[425],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_35021(t10,t9);}
else{
t5=t2;
f_35021(t5,C_SCHEME_UNDEFINED);}}}

/* k35019 in k35016 in run-while-until in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_35021(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35021,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35028,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],C_retrieve2(lf[771],"*process-stop*"));
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 572  make-loop-clause");
f_25854(t2,(C_word)C_a_i_list(&a,4,lf[507],((C_word*)t0)[2],lf[512],t4));}

/* k35026 in k35019 in k35016 in run-while-until in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 572  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* hush in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34997,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35001,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34652,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[752]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k34650 in hush in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34652,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6178,a[2]=((C_word)li575),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k34999 in hush in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_35001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 553  values");
C_values(2,0,((C_word*)t0)[2]);}

/* stop in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34939(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_34939r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34939r(t0,t1,t2);}}

static void C_ccall f_34939r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34943,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 543  scheduler-stop");
f_34635(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34957,a[2]=t5,a[3]=((C_word)li573),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_34957(t7,t3,t2);}}

/* do6236 in stop in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_34957(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34957,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34967,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 547  scheduler-stop");
f_34635(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 548  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[769],t5);}}}

/* k34965 in do6236 in stop in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_34957(t3,((C_word*)t0)[2],t2);}

/* k34941 in stop in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 549  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cont in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34930,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34934,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34630,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[752]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k34628 in cont in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34630,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6168,a[2]=((C_word)li571),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k34932 in cont in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 539  values");
C_values(2,0,((C_word*)t0)[2]);}

/* paused? in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34924,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34612,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t3=C_retrieve(lf[752]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k34610 in paused? in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34612,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6160,a[2]=((C_word)li569),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* pause in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34915,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34919,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34621,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[752]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k34619 in pause in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34621,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6164,a[2]=((C_word)li567),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k34917 in pause in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 532  values");
C_values(2,0,((C_word*)t0)[2]);}

/* time-format in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34852(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2rv,(void*)f_34852r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_34852r(t0,t1,t2);}}

static void C_ccall f_34852r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
if(C_truep((C_word)C_vemptyp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34865,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34577,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t5=C_retrieve(lf[752]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
t4=(C_word)C_i_eqvp(t3,lf[761]);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34877,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t4)){
t6=t5;
f_34877(t6,t4);}
else{
t6=(C_word)C_eqp(t3,C_fix(1));
t7=t5;
f_34877(t7,(C_truep(t6)?t6:(C_word)C_eqp(t3,lf[764])));}}}

/* k34875 in time-format in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_34877(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(C_truep(t1)){
t2=C_mutate((C_word*)lf[758]+1,C_retrieve(lf[750]));
C_trace("ChickenBridge.scm: 521  scheduler-set-time-milliseconds");
f_34582(((C_word*)t0)[4],C_SCHEME_FALSE);}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],C_fix(1000));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)t0)[3],lf[762]));
if(C_truep(t3)){
t4=C_mutate((C_word*)lf[758]+1,C_retrieve(lf[749]));
C_trace("ChickenBridge.scm: 525  scheduler-set-time-milliseconds");
f_34582(((C_word*)t0)[4],C_SCHEME_TRUE);}
else{
t4=(C_word)C_i_vector_ref(((C_word*)t0)[2],C_fix(0));
C_trace("ChickenBridge.scm: 528  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[4],lf[763],t4);}}}

/* k34575 in time-format in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34577,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6140,a[2]=((C_word)li565),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k34863 in time-format in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_fix(1000):lf[760]));}

/* sprout in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34676(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_34676r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_34676r(t0,t1,t2,t3);}}

static void C_ccall f_34676r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34678,a[2]=t2,a[3]=((C_word)li561),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34798,a[2]=t4,a[3]=((C_word)li562),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34803,a[2]=t5,a[3]=((C_word)li563),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-start61956216");
t7=t6;
f_34803(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-id61966214");
t9=t5;
f_34798(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body61936198");
t11=t4;
f_34678(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[756]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[757],t10);}}}}

/* def-start6195 in sprout in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_34803(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34803,NULL,2,t0,t1);}
C_trace("def-id61966214");
t2=((C_word*)t0)[2];
f_34798(t2,t1,C_fix(0));}

/* def-id6196 in sprout in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_34798(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34798,NULL,3,t0,t1,t2);}
C_trace("body61936198");
t3=((C_word*)t0)[2];
f_34678(t3,t1,t2,C_fix(-1));}

/* body6193 in sprout in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_34678(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34678,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34680,a[2]=t4,a[3]=((C_word)li558),tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34708,a[2]=t5,a[3]=((C_word)li559),tmp=(C_word)a,a+=4,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34738,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34749,a[2]=t6,a[3]=t7,a[4]=t10,a[5]=((C_word*)t0)[2],a[6]=((C_word)li560),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_34749(t12,t8,((C_word*)t0)[2]);}
else{
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34785,a[2]=((C_word*)t0)[2],a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34797,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t9,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 505  nextstart");
t11=t6;
f_34680(t11,t10);}}

/* k34795 in body6193 in sprout in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34797,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,t1,C_fix(1000));
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34793,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 505  nextid");
t4=((C_word*)t0)[2];
f_34708(t4,t3);}

/* k34791 in k34795 in body6193 in sprout in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 505  scheduler-sprout");
f_34591(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k34783 in body6193 in sprout in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_34738(2,t2,((C_word*)t0)[2]);}

/* do6207 in body6193 in sprout in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_34749(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34749,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34759,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34782,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 502  nextstart");
t6=((C_word*)t0)[2];
f_34680(t6,t5);}}

/* k34780 in do6207 in body6193 in sprout in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34782,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,t1,C_fix(1000));
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34778,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 503  nextid");
t4=((C_word*)t0)[2];
f_34708(t4,t3);}

/* k34776 in k34780 in do6207 in body6193 in sprout in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 502  scheduler-sprout");
f_34591(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k34757 in do6207 in body6193 in sprout in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_34749(t3,((C_word*)t0)[2],t2);}

/* k34736 in body6193 in sprout in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 509  values");
C_values(2,0,((C_word*)t0)[2]);}

/* nextid in body6193 in sprout in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_34708(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34708,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in body6193 in sprout in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_34680(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34680,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* load-sal-file in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34657(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34657,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34662,a[2]=((C_word)li556),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_34662 in load-sal-file in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34662(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34662,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34667,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_34667(2,t4,C_SCHEME_FALSE);}}

/* k34665 */
static void C_ccall f_34667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6184(C_SCHEME_UNDEFINED,t1));}

/* scheduler-stop in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_34635(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34635,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34639,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[752]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k34637 in scheduler-stop in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34639,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6173,a[2]=((C_word)li554),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],t2,t3);}

/* scheduler-sprout in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_34591(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34591,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34595,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("##sys#gc");
t6=C_retrieve(lf[752]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,C_SCHEME_FALSE);}

/* k34593 in scheduler-sprout in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34595,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_flonum_argumentp(((C_word*)t0)[5]);
t4=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6153,a[2]=((C_word)li552),tmp=(C_word)a,a+=3,tmp);
((C_proc6)C_retrieve_proc(t5))(6,t5,((C_word*)t0)[3],t2,((C_word*)t0)[2],t3,t4);}

/* scheduler-set-time-milliseconds in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_34582(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34582,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34586,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[752]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k34584 in scheduler-set-time-milliseconds in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34586,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6145,a[2]=((C_word)li550),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* current-time-seconds in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34570,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6137(t2));}

/* current-time-milliseconds in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34567,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6134(t2));}

/* print-error in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34553(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34553,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34558,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_34558(2,t4,C_SCHEME_FALSE);}}

/* k34556 in print-error in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6129(C_SCHEME_UNDEFINED,t1));}

/* print-message in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34539(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34539,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34544,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_34544(2,t4,C_SCHEME_FALSE);}}

/* k34542 in print-message in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6123(C_SCHEME_UNDEFINED,t1));}

/* cm-logo in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34349(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34349,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34403,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34410,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 398  make-string");
t5=*((C_word*)lf[374]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_fix(15));}

/* k34408 in cm-logo in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34410,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34412,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li544),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_34412(t5,((C_word*)t0)[2],lf[748],t1,C_fix(0));}

/* do6097 in k34408 in cm-logo in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_34412(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34412,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t4,C_fix(7)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34422,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t1,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nequalp(t4,C_fix(0)))){
C_trace("ChickenBridge.scm: 401  printf");
t6=C_retrieve(lf[442]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
t6=t5;
f_34422(2,t6,C_SCHEME_UNDEFINED);}}}

/* k34420 in do6097 in k34408 in cm-logo in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34422,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34425,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34439,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34441,a[2]=t5,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[7],a[6]=((C_word)li543),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_34441(t7,t3,C_fix(0));}

/* do6111 in k34420 in do6097 in k34408 in cm-logo in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_34441(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34441,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(15)))){
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[5],C_fix(3)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34461,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[3];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(0);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34396,a[2]=t3,a[3]=t11,a[4]=t9,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
t13=(C_word)C_a_i_divide(&a,2,((C_word*)t5)[1],C_fix(10000));
C_trace("ChickenBridge.scm: 390  floor");
t14=*((C_word*)lf[179]+1);
((C_proc3)C_retrieve_proc(t14))(3,t14,t12,t13);}
else{
C_trace("ChickenBridge.scm: 406  string-append");
t3=*((C_word*)lf[171]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,((C_word*)t0)[4],lf[747]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34478,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34481,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 408  <=");
C_less_or_equal_p(5,0,t4,C_fix(2),t5,C_fix(4));}}

/* k34479 in do6111 in k34420 in do6097 in k34408 in cm-logo in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34481,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_34478(t2,C_make_character(92));}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34523,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_plus(&a,2,C_fix(13),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 409  modulo");
t4=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(15));}}

/* k34521 in k34479 in do6111 in k34420 in do6097 in k34408 in cm-logo in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34523,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,C_fix(4),t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(1)))){
t4=((C_word*)t0)[3];
f_34478(t4,C_make_character(47));}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34493,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 411  <=");
C_less_or_equal_p(5,0,t4,C_fix(1),((C_word*)t0)[2],C_fix(5));}}

/* k34491 in k34521 in k34479 in do6111 in k34420 in do6097 in k34408 in cm-logo in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34493,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_34478(t2,C_make_character(45));}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(6));
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[2],C_fix(3));
t4=(C_word)C_a_i_times(&a,2,t2,t3);
t5=(C_word)C_i_nequalp(t4,C_fix(15));
t6=((C_word*)t0)[4];
f_34478(t6,(C_truep(t5)?C_make_character(47):C_make_character(32)));}}

/* k34476 in do6111 in k34420 in do6097 in k34408 in cm-logo in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_34478(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34478,NULL,2,t0,t1);}
t2=(C_word)C_i_string_set(((C_word*)t0)[5],((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_34441(t4,((C_word*)t0)[2],t3);}

/* k34394 in do6111 in k34420 in do6097 in k34408 in cm-logo in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34396,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34361,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 391  modulo");
t5=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[5])[1],C_fix(10000));}

/* k34359 in k34394 in do6111 in k34420 in do6097 in k34408 in cm-logo in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34361,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34388,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_divide(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(100));
C_trace("ChickenBridge.scm: 392  floor");
t5=*((C_word*)lf[179]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k34386 in k34359 in k34394 in do6111 in k34420 in do6097 in k34408 in cm-logo in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34388,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34369,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 393  modulo");
t5=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[2])[1],C_fix(100));}

/* k34367 in k34386 in k34359 in k34394 in do6111 in k34420 in do6097 in k34408 in cm-logo in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34369,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34376,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 394  number->string");
C_number_to_string(3,0,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k34374 in k34367 in k34386 in k34359 in k34394 in do6111 in k34420 in do6097 in k34408 in cm-logo in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34376,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34380,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 395  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k34378 in k34374 in k34367 in k34386 in k34359 in k34394 in do6111 in k34420 in do6097 in k34408 in cm-logo in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34380,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34384,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 396  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k34382 in k34378 in k34374 in k34367 in k34386 in k34359 in k34394 in do6111 in k34420 in do6097 in k34408 in cm-logo in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 394  string-append");
t2=*((C_word*)lf[171]+1);
((C_proc8)C_retrieve_proc(t2))(8,t2,((C_word*)t0)[4],lf[744],((C_word*)t0)[3],lf[745],((C_word*)t0)[2],lf[746],t1);}

/* k34459 in do6111 in k34420 in do6097 in k34408 in cm-logo in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 405  string-append");
t2=*((C_word*)lf[171]+1);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[742],t1,lf[743]);}

/* k34437 in k34420 in do6097 in k34408 in cm-logo in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 402  printf");
t2=C_retrieve(lf[442]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k34423 in k34420 in do6097 in k34408 in cm-logo in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34425,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34428,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 414  printf");
t3=C_retrieve(lf[442]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k34426 in k34423 in k34420 in do6097 in k34408 in cm-logo in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34428,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_34412(t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k34401 in cm-logo in k34345 in k34342 in k34339 in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 415  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:clear in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34332,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34337,a[2]=((C_word)li541),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_34337 in cs:clear in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34337,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6089(C_SCHEME_UNDEFINED));}

/* cs:f in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34275(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_34275r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34275r(t0,t1,t2);}}

static void C_ccall f_34275r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34279,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_34279(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34288,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34308,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_34308(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_34308(t8,C_SCHEME_FALSE);}}}

/* k34306 in cs:f in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_34308(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_34288(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_34288(t2,C_SCHEME_UNDEFINED);}}

/* k34286 in cs:f in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_34288(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34288,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34296,a[2]=((C_word)li539),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(2),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_34296 in k34286 in cs:f in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34296(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34296,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub6082(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k34277 in cs:f in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 382  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:i in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34218(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_34218r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34218r(t0,t1,t2);}}

static void C_ccall f_34218r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34222,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_34222(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34231,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34251,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_34251(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_34251(t8,C_SCHEME_FALSE);}}}

/* k34249 in cs:i in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_34251(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_34231(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_34231(t2,C_SCHEME_UNDEFINED);}}

/* k34229 in cs:i in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_34231(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34231,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34239,a[2]=((C_word)li537),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(1),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_34239 in k34229 in cs:i in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34239(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34239,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub6071(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k34220 in cs:i in k34214 in k34211 in k34208 in k34205 in k34202 in k34199 in k34196 in k34193 in k34190 in k34187 in k34184 in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 382  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:inhook in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34128(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34128,3,t0,t1,t2);}
if(C_truep((C_word)C_i_closurep(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34140,a[2]=t2,a[3]=((C_word)li533),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34177,a[2]=((C_word)li534),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t1,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34182,a[2]=((C_word)li535),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,C_SCHEME_FALSE);}}

/* f_34182 in mp:inhook in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34182(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34182,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6015(C_SCHEME_UNDEFINED,t2));}

/* f_34177 in mp:inhook in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34177(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34177,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6006(C_SCHEME_UNDEFINED,t2));}

/* a34139 in mp:inhook in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34140(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34140,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34146,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word)li532),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  call-with-current-continuation");
t4=*((C_word*)lf[737]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* a34145 in a34139 in mp:inhook in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34146(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34146,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34152,a[2]=t2,a[3]=((C_word)li530),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34172,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word)li531),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  with-exception-handler");
t5=C_retrieve(lf[736]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t3,t4);}

/* a34171 in a34145 in a34139 in mp:inhook in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34172,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34176,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  %hook");
t3=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k34174 in a34171 in a34145 in a34139 in mp:inhook in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* a34151 in a34145 in a34139 in mp:inhook in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34152(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34152,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34156,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34163,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34167,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34170,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  condition-property-accessor");
t7=C_retrieve(lf[733]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[734],lf[735]);}

/* k34168 in a34151 in a34145 in a34139 in mp:inhook in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=t1;
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k34165 in a34151 in a34145 in a34139 in mp:inhook in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[732],t1);}

/* k34161 in a34151 in a34145 in a34139 in mp:inhook in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  print-error");
t2=C_retrieve(lf[463]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k34154 in a34151 in a34145 in a34139 in mp:inhook in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  %cont");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],C_fix(-1));}

/* mp:mm in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34113(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34113,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34118,a[2]=((C_word)li528),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_34118 in mp:mm in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34118(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34118,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5999(C_SCHEME_UNDEFINED,t3));}

/* mp:bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34085(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34085,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34090,a[2]=((C_word)li526),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(14),t2,t4,t3,C_fix(0));}

/* f_34090 in mp:bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34090(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34090,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5990(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34057(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34057,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34062,a[2]=((C_word)li524),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(13),t2,t4,t3,C_fix(0));}

/* f_34062 in mp:press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34062(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34062,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5975(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34029(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34029,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34034,a[2]=((C_word)li522),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(12),t2,t4,t3,C_fix(0));}

/* f_34034 in mp:prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34034(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34034,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5960(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34001(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_34001,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34006,a[2]=((C_word)li520),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(11),t2,t5,t3,t4);}

/* f_34006 in mp:ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_34006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34006,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5945(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33973(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_33973,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33978,a[2]=((C_word)li518),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(10),t2,t5,t3,t4);}

/* f_33978 in mp:touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33978(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33978,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5929(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33945(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_33945,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33950,a[2]=((C_word)li516),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(9),t2,t5,t3,t4);}

/* f_33950 in mp:on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33950(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33950,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5913(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33917(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33917,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33922,a[2]=((C_word)li514),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(8),t2,t4,t3,C_fix(0));}

/* f_33922 in mp:off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33922(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33922,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5897(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:midi in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33889(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33889,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33894,a[2]=((C_word)li512),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_33894 in mp:midi in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33894(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33894,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5882(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:note in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33861(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33861,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33866,a[2]=((C_word)li510),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_33866 in mp:note in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33866(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33866,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5865(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mm:num-set! in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33838(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33838,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33842,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33843,a[2]=((C_word)li508),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_33843 in mm:num-set! in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33843(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33843,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5847(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k33840 in mm:num-set! in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:num in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33819(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33819,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33824,a[2]=((C_word)li506),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_33824 in mm:num in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33824(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33824,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5836(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:val-set! in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33764(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33764,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33768,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33771,a[2]=t3,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  mm:ctrl?");
t6=C_retrieve(lf[700]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k33769 in mm:val-set! in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33771,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33774,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_33774(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 381  mm:touch?");
t3=C_retrieve(lf[697]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}}

/* k33772 in k33769 in mm:val-set! in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33774,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33778,a[2]=((C_word)li503),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(2),((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33798,a[2]=((C_word)li504),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(1),C_retrieve(lf[718]));}}

/* f_33798 in k33772 in k33769 in mm:val-set! in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33798(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33798,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5825(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* f_33778 in k33772 in k33769 in mm:val-set! in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33778(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33778,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5815(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k33766 in mm:val-set! in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:val in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33717(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33717,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33724,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  mm:ctrl?");
t4=C_retrieve(lf[700]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k33722 in mm:val in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33724,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33727,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t1)){
t3=t2;
f_33727(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 381  mm:touch?");
t3=C_retrieve(lf[697]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}

/* k33725 in k33722 in mm:val in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33727,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33731,a[2]=((C_word)li500),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(2));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33747,a[2]=((C_word)li501),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}}

/* f_33747 in k33725 in k33722 in mm:val in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33747(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33747,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5802(C_SCHEME_UNDEFINED,t4,t5));}

/* f_33731 in k33725 in k33722 in mm:val in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33731(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33731,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5794(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:vel-set! in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33694(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33694,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33698,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33699,a[2]=((C_word)li498),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(2),t3);}

/* f_33699 in mm:vel-set! in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33699(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33699,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5781(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k33696 in mm:vel-set! in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:vel in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33675(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33675,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33680,a[2]=((C_word)li496),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(2));}

/* f_33680 in mm:vel in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33680(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33680,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5770(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:key-set! in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33652(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33652,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33656,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33657,a[2]=((C_word)li494),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_33657 in mm:key-set! in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33657(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33657,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5759(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k33654 in mm:key-set! in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:key in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33633(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33633,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33638,a[2]=((C_word)li492),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_33638 in mm:key in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33638(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33638,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5748(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:chan-set! in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33614(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33614,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33618,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33619,a[2]=((C_word)li490),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_33619 in mm:chan-set! in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33619(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33619,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5738(C_SCHEME_UNDEFINED,t4,t5));}

/* k33616 in mm:chan-set! in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:chan in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33599(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33599,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33604,a[2]=((C_word)li488),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_33604 in mm:chan in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33604(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33604,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5729(C_SCHEME_UNDEFINED,t3));}

/* mm:time-set! in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33580(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33580,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33584,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33585,a[2]=((C_word)li486),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_33585 in mm:time-set! in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33585(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33585,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5720(C_SCHEME_UNDEFINED,t4,t5));}

/* k33582 in mm:time-set! in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:time in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33565(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33565,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33570,a[2]=((C_word)li484),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_33570 in mm:time in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33570(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33570,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub5710(t3,t4));}

/* mm:copy in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33550(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33550,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33555,a[2]=((C_word)li482),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_33555 in mm:copy in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33555(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33555,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub5702(t3,t4));}

/* mm:free in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33532(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33532,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33536,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33540,a[2]=((C_word)li480),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t3,t2);}

/* f_33540 in mm:free in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33540(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33540,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5694(C_SCHEME_UNDEFINED,t3));}

/* k33534 in mm:free in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33062(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_33062r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_33062r(t0,t1,t2);}}

static void C_ccall f_33062r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(8192);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33066,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_33066(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[688]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33391,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[688]);}
else{
t23=t22;
f_33391(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[696]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33426,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[696]);}
else{
t24=t23;
f_33426(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[691]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33461,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[691]);}
else{
t25=t24;
f_33461(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33490,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_33490(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k33488 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33490,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33497,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33505,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33503 in k33488 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33497(2,t2,C_SCHEME_UNDEFINED);}}

/* k33495 in k33488 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33066(t5,t4);}

/* k33459 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33461,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33465,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33465(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33463 in k33459 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33066(t7,t6);}

/* k33424 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33426,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33430,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33430(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33428 in k33424 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33066(t7,t6);}

/* k33389 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33391,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33395,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33395(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33393 in k33389 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33066(t7,t6);}

/* k33064 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_33066(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33066,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33069,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_33069(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33256,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_33256(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33291,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[696]);}
else{
t7=t6;
f_33291(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33326,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[691]);}
else{
t8=t7;
f_33326(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33355,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_33355(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33353 in k33064 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33355,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33362,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33370,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33368 in k33353 in k33064 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33362(2,t2,C_SCHEME_UNDEFINED);}}

/* k33360 in k33353 in k33064 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33069(t5,t4);}

/* k33324 in k33064 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33326,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33330,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33330(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33328 in k33324 in k33064 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33069(t7,t6);}

/* k33289 in k33064 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33291,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33295,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33295(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33293 in k33289 in k33064 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33069(t7,t6);}

/* k33254 in k33064 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33256,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33260,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33260(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33258 in k33254 in k33064 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33069(t7,t6);}

/* k33067 in k33064 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_33069(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33069,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33072,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_33072(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33121,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_33121(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33156,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[696]);}
else{
t7=t6;
f_33156(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33191,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[691]);}
else{
t8=t7;
f_33191(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33220,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_33220(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33218 in k33067 in k33064 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33220,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33227,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33235,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33233 in k33218 in k33067 in k33064 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33227(2,t2,C_SCHEME_UNDEFINED);}}

/* k33225 in k33218 in k33067 in k33064 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33072(t5,t4);}

/* k33189 in k33067 in k33064 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33191,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33195,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33195(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33193 in k33189 in k33067 in k33064 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33072(t7,t6);}

/* k33154 in k33067 in k33064 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33156,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33160,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33160(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33158 in k33154 in k33067 in k33064 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33072(t7,t6);}

/* k33119 in k33067 in k33064 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33121,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33125,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33125(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33123 in k33119 in k33067 in k33064 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33072(t7,t6);}

/* k33070 in k33067 in k33064 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_33072(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33072,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33075,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_33075(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k33073 in k33070 in k33067 in k33064 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33075,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33079,a[2]=((C_word)li478),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(14),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_33079 in k33073 in k33070 in k33067 in k33064 in mm:make-bend in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33079(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33079,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5671(t7,t8,t9,t10,t11,t12));}

/* mm:press? in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33043(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33043,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33048,a[2]=((C_word)li476),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(13));}

/* f_33048 in mm:press? in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33048(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33048,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5592(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32592(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_32592r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32592r(t0,t1,t2);}}

static void C_ccall f_32592r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32596,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_32596(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[688]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32921,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[688]);}
else{
t23=t22;
f_32921(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[696]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32956,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[696]);}
else{
t24=t23;
f_32956(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[691]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32991,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[691]);}
else{
t25=t24;
f_32991(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33020,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_33020(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k33018 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33020,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33027,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33035,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33033 in k33018 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33027(2,t2,C_SCHEME_UNDEFINED);}}

/* k33025 in k33018 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_33027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32596(t5,t4);}

/* k32989 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32991,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32995,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32995(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32993 in k32989 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32596(t7,t6);}

/* k32954 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32956,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32960,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32960(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32958 in k32954 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32596(t7,t6);}

/* k32919 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32921,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32925,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32925(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32923 in k32919 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32596(t7,t6);}

/* k32594 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_32596(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32596,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32599,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32599(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32786,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_32786(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32821,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[696]);}
else{
t7=t6;
f_32821(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32856,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[691]);}
else{
t8=t7;
f_32856(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32885,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_32885(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k32883 in k32594 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32885,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32892,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32900,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32898 in k32883 in k32594 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32892(2,t2,C_SCHEME_UNDEFINED);}}

/* k32890 in k32883 in k32594 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32599(t5,t4);}

/* k32854 in k32594 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32856,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32860,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32860(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32858 in k32854 in k32594 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32599(t7,t6);}

/* k32819 in k32594 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32821,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32825,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32825(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32823 in k32819 in k32594 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32599(t7,t6);}

/* k32784 in k32594 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32786,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32790,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32790(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32788 in k32784 in k32594 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32599(t7,t6);}

/* k32597 in k32594 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_32599(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32599,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32602,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32602(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32651,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_32651(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32686,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[696]);}
else{
t7=t6;
f_32686(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32721,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[691]);}
else{
t8=t7;
f_32721(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32750,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_32750(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k32748 in k32597 in k32594 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32750,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32757,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32765,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32763 in k32748 in k32597 in k32594 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32757(2,t2,C_SCHEME_UNDEFINED);}}

/* k32755 in k32748 in k32597 in k32594 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32602(t5,t4);}

/* k32719 in k32597 in k32594 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32721,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32725,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32725(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32723 in k32719 in k32597 in k32594 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32602(t7,t6);}

/* k32684 in k32597 in k32594 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32686,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32690,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32690(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32688 in k32684 in k32597 in k32594 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32602(t7,t6);}

/* k32649 in k32597 in k32594 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32651,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32655,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32655(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32653 in k32649 in k32597 in k32594 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32602(t7,t6);}

/* k32600 in k32597 in k32594 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_32602(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32602,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32605,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_32605(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k32603 in k32600 in k32597 in k32594 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32605,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32609,a[2]=((C_word)li474),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(13),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_32609 in k32603 in k32600 in k32597 in k32594 in mm:make-press in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32609(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_32609,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5577(t7,t8,t9,t10,t11,t12));}

/* mm:prog? in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32573(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32573,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32578,a[2]=((C_word)li472),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(12));}

/* f_32578 in mm:prog? in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32578(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32578,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5498(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32122(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_32122r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32122r(t0,t1,t2);}}

static void C_ccall f_32122r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32126,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_32126(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[688]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32451,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[688]);}
else{
t23=t22;
f_32451(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[696]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32486,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[696]);}
else{
t24=t23;
f_32486(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[691]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32521,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[691]);}
else{
t25=t24;
f_32521(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32550,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_32550(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k32548 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32550,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32557,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32565,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32563 in k32548 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32557(2,t2,C_SCHEME_UNDEFINED);}}

/* k32555 in k32548 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32126(t5,t4);}

/* k32519 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32521,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32525,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32525(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32523 in k32519 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32126(t7,t6);}

/* k32484 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32486,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32490,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32490(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32488 in k32484 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32126(t7,t6);}

/* k32449 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32451,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32455,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32455(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32453 in k32449 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32126(t7,t6);}

/* k32124 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_32126(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32126,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32129,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32129(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32316,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_32316(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32351,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[696]);}
else{
t7=t6;
f_32351(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32386,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[691]);}
else{
t8=t7;
f_32386(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32415,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_32415(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k32413 in k32124 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32415,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32422,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32430,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32428 in k32413 in k32124 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32422(2,t2,C_SCHEME_UNDEFINED);}}

/* k32420 in k32413 in k32124 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32129(t5,t4);}

/* k32384 in k32124 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32386,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32390,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32390(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32388 in k32384 in k32124 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32129(t7,t6);}

/* k32349 in k32124 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32351,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32355,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32355(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32353 in k32349 in k32124 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32129(t7,t6);}

/* k32314 in k32124 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32316,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32320,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32320(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32318 in k32314 in k32124 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32129(t7,t6);}

/* k32127 in k32124 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_32129(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32129,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32132,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32132(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32181,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_32181(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32216,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[696]);}
else{
t7=t6;
f_32216(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32251,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[691]);}
else{
t8=t7;
f_32251(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32280,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_32280(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k32278 in k32127 in k32124 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32280,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32287,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32295,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32293 in k32278 in k32127 in k32124 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32287(2,t2,C_SCHEME_UNDEFINED);}}

/* k32285 in k32278 in k32127 in k32124 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32132(t5,t4);}

/* k32249 in k32127 in k32124 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32251,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32255,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32255(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32253 in k32249 in k32127 in k32124 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32132(t7,t6);}

/* k32214 in k32127 in k32124 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32216,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32220,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32220(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32218 in k32214 in k32127 in k32124 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32132(t7,t6);}

/* k32179 in k32127 in k32124 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32181,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32185,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32185(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32183 in k32179 in k32127 in k32124 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32132(t7,t6);}

/* k32130 in k32127 in k32124 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_32132(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32132,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32135,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_32135(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k32133 in k32130 in k32127 in k32124 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32135,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32139,a[2]=((C_word)li470),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(12),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_32139 in k32133 in k32130 in k32127 in k32124 in mm:make-prog in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32139(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_32139,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5483(t7,t8,t9,t10,t11,t12));}

/* mm:ctrl? in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32103(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32103,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32108,a[2]=((C_word)li468),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(11));}

/* f_32108 in mm:ctrl? in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32108(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32108,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5404(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31374(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_31374r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_31374r(t0,t1,t2);}}

static void C_ccall f_31374r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31378,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_31378(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[688]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31946,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[688]);}
else{
t27=t26;
f_31946(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[699]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31981,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[699]);}
else{
t28=t27;
f_31981(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[696]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32016,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[696]);}
else{
t29=t28;
f_32016(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[691]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32051,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[691]);}
else{
t30=t29;
f_32051(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32080,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_32080(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k32078 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32080,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32087,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32095,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32093 in k32078 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32087(2,t2,C_SCHEME_UNDEFINED);}}

/* k32085 in k32078 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31378(t5,t4);}

/* k32049 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32051,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32055,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32055(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32053 in k32049 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31378(t7,t6);}

/* k32014 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32016,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32020,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32020(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32018 in k32014 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_32020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31378(t7,t6);}

/* k31979 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31981,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31985,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31985(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31983 in k31979 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31378(t7,t6);}

/* k31944 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31946,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31950,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31950(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31948 in k31944 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31378(t7,t6);}

/* k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_31378(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31378,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31381,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_31381(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31776,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_31776(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[699]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31811,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[699]);}
else{
t7=t6;
f_31811(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31846,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[696]);}
else{
t8=t7;
f_31846(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31881,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[691]);}
else{
t9=t8;
f_31881(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31910,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_31910(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k31908 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31910,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31917,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31925,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31923 in k31908 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31917(2,t2,C_SCHEME_UNDEFINED);}}

/* k31915 in k31908 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31381(t5,t4);}

/* k31879 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31881,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31885,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31885(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31883 in k31879 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31381(t7,t6);}

/* k31844 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31846,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31850,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31850(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31848 in k31844 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31381(t7,t6);}

/* k31809 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31811,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31815,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31815(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31813 in k31809 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31381(t7,t6);}

/* k31774 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31776,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31780,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31780(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31778 in k31774 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31381(t7,t6);}

/* k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_31381(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31381,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31384,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_31384(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31606,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_31606(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[699]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31641,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[699]);}
else{
t7=t6;
f_31641(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31676,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[696]);}
else{
t8=t7;
f_31676(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31711,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[691]);}
else{
t9=t8;
f_31711(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31740,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_31740(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k31738 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31740,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31747,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31755,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31753 in k31738 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31747(2,t2,C_SCHEME_UNDEFINED);}}

/* k31745 in k31738 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31384(t5,t4);}

/* k31709 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31711,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31715,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31715(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31713 in k31709 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31384(t7,t6);}

/* k31674 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31676,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31680,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31680(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31678 in k31674 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31384(t7,t6);}

/* k31639 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31641,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31645,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31645(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31643 in k31639 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31384(t7,t6);}

/* k31604 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31606,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31610,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31610(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31608 in k31604 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31384(t7,t6);}

/* k31382 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_31384(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31384,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31387,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_31387(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31436,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_31436(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[699]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31471,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[699]);}
else{
t7=t6;
f_31471(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31506,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[696]);}
else{
t8=t7;
f_31506(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31541,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[691]);}
else{
t9=t8;
f_31541(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31570,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_31570(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k31568 in k31382 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31570,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31577,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31585,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31583 in k31568 in k31382 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31577(2,t2,C_SCHEME_UNDEFINED);}}

/* k31575 in k31568 in k31382 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31387(t5,t4);}

/* k31539 in k31382 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31541,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31545,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31545(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31543 in k31539 in k31382 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31387(t7,t6);}

/* k31504 in k31382 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31506,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31510,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31510(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31508 in k31504 in k31382 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31387(t7,t6);}

/* k31469 in k31382 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31471,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31475,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31475(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31473 in k31469 in k31382 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31387(t7,t6);}

/* k31434 in k31382 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31436,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31440,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31440(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31438 in k31434 in k31382 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31387(t7,t6);}

/* k31385 in k31382 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_31387(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31387,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31390,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_31390(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k31388 in k31385 in k31382 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31390,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31394,a[2]=((C_word)li466),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(11),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_31394 in k31388 in k31385 in k31382 in k31379 in k31376 in mm:make-ctrl in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31394(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31394,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5388(t7,t8,t9,t10,t11,t12));}

/* mm:touch? in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31355(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31355,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31360,a[2]=((C_word)li464),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(10));}

/* f_31360 in mm:touch? in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31360(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31360,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5272(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30626(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_30626r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_30626r(t0,t1,t2);}}

static void C_ccall f_30626r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30630,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_30630(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[688]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31198,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[688]);}
else{
t27=t26;
f_31198(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[689]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31233,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[689]);}
else{
t28=t27;
f_31233(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[696]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31268,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[696]);}
else{
t29=t28;
f_31268(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[691]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31303,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[691]);}
else{
t30=t29;
f_31303(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31332,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_31332(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k31330 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31332,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31339,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31347,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31345 in k31330 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31339(2,t2,C_SCHEME_UNDEFINED);}}

/* k31337 in k31330 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30630(t5,t4);}

/* k31301 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31303,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31307,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31307(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31305 in k31301 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30630(t7,t6);}

/* k31266 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31268,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31272,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31272(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31270 in k31266 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30630(t7,t6);}

/* k31231 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31233,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31237,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31237(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31235 in k31231 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30630(t7,t6);}

/* k31196 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31198,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31202,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31202(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31200 in k31196 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30630(t7,t6);}

/* k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_30630(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30630,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30633,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_30633(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31028,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_31028(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31063,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[689]);}
else{
t7=t6;
f_31063(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31098,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[696]);}
else{
t8=t7;
f_31098(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31133,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[691]);}
else{
t9=t8;
f_31133(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31162,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_31162(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k31160 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31162,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31169,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31177,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31175 in k31160 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31169(2,t2,C_SCHEME_UNDEFINED);}}

/* k31167 in k31160 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30633(t5,t4);}

/* k31131 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31133,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31137,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31137(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31135 in k31131 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30633(t7,t6);}

/* k31096 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31098,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31102,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31102(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31100 in k31096 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30633(t7,t6);}

/* k31061 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31063,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31067,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31067(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31065 in k31061 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30633(t7,t6);}

/* k31026 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31028,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31032,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31032(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31030 in k31026 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30633(t7,t6);}

/* k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_30633(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30633,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30636,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_30636(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30858,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_30858(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30893,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[689]);}
else{
t7=t6;
f_30893(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30928,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[696]);}
else{
t8=t7;
f_30928(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30963,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[691]);}
else{
t9=t8;
f_30963(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30992,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_30992(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k30990 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30992,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30999,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31007,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31005 in k30990 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_31007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30999(2,t2,C_SCHEME_UNDEFINED);}}

/* k30997 in k30990 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30636(t5,t4);}

/* k30961 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30963,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30967,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30967(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30965 in k30961 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30636(t7,t6);}

/* k30926 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30928,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30932,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30932(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30930 in k30926 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30636(t7,t6);}

/* k30891 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30893,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30897,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30897(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30895 in k30891 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30636(t7,t6);}

/* k30856 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30858,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30862,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30862(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30860 in k30856 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30636(t7,t6);}

/* k30634 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_30636(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30636,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30639,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_30639(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30688,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_30688(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30723,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[689]);}
else{
t7=t6;
f_30723(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[696]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30758,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[696]);}
else{
t8=t7;
f_30758(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30793,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[691]);}
else{
t9=t8;
f_30793(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30822,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_30822(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k30820 in k30634 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30822,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30829,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30837,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30835 in k30820 in k30634 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30829(2,t2,C_SCHEME_UNDEFINED);}}

/* k30827 in k30820 in k30634 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30639(t5,t4);}

/* k30791 in k30634 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30793,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30797,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30797(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30795 in k30791 in k30634 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30639(t7,t6);}

/* k30756 in k30634 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30758,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30762,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30762(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30760 in k30756 in k30634 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30639(t7,t6);}

/* k30721 in k30634 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30723,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30727,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30727(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30725 in k30721 in k30634 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30639(t7,t6);}

/* k30686 in k30634 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30688,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30692,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30692(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30690 in k30686 in k30634 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30639(t7,t6);}

/* k30637 in k30634 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_30639(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30639,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30642,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_30642(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k30640 in k30637 in k30634 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30642,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30646,a[2]=((C_word)li462),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(10),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_30646 in k30640 in k30637 in k30634 in k30631 in k30628 in mm:make-touch in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30646(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_30646,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5256(t7,t8,t9,t10,t11,t12));}

/* mm:off? in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30607(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30607,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30612,a[2]=((C_word)li460),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(8));}

/* f_30612 in mm:off? in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30612(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30612,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5140(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30156(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_30156r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_30156r(t0,t1,t2);}}

static void C_ccall f_30156r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_30160,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_30160(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[688]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30485,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[688]);}
else{
t23=t22;
f_30485(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[689]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30520,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[689]);}
else{
t24=t23;
f_30520(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[691]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30555,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[691]);}
else{
t25=t24;
f_30555(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30584,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_30584(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k30582 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30584,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30591,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30599,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30597 in k30582 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30591(2,t2,C_SCHEME_UNDEFINED);}}

/* k30589 in k30582 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30160(t5,t4);}

/* k30553 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30555,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30559,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30559(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30557 in k30553 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30160(t7,t6);}

/* k30518 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30520,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30524,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30524(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30522 in k30518 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30160(t7,t6);}

/* k30483 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30485,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30489,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30489(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30487 in k30483 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30160(t7,t6);}

/* k30158 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_30160(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30160,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_30163,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_30163(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30350,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_30350(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30385,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[689]);}
else{
t7=t6;
f_30385(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30420,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[691]);}
else{
t8=t7;
f_30420(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30449,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_30449(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k30447 in k30158 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30449,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30456,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30464,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30462 in k30447 in k30158 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30456(2,t2,C_SCHEME_UNDEFINED);}}

/* k30454 in k30447 in k30158 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30163(t5,t4);}

/* k30418 in k30158 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30420,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30424,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30424(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30422 in k30418 in k30158 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30163(t7,t6);}

/* k30383 in k30158 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30385,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30389,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30389(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30387 in k30383 in k30158 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30163(t7,t6);}

/* k30348 in k30158 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30350,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30354,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30354(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30352 in k30348 in k30158 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30163(t7,t6);}

/* k30161 in k30158 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_30163(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30163,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30166,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_30166(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30215,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_30215(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30250,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[689]);}
else{
t7=t6;
f_30250(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30285,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[691]);}
else{
t8=t7;
f_30285(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30314,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_30314(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k30312 in k30161 in k30158 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30314,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30321,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30329,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30327 in k30312 in k30161 in k30158 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30321(2,t2,C_SCHEME_UNDEFINED);}}

/* k30319 in k30312 in k30161 in k30158 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30166(t5,t4);}

/* k30283 in k30161 in k30158 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30285,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30289,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30289(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30287 in k30283 in k30161 in k30158 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30166(t7,t6);}

/* k30248 in k30161 in k30158 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30250,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30254,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30254(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30252 in k30248 in k30161 in k30158 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30166(t7,t6);}

/* k30213 in k30161 in k30158 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30215,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30219,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30219(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30217 in k30213 in k30161 in k30158 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30166(t7,t6);}

/* k30164 in k30161 in k30158 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_30166(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30166,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30169,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_30169(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k30167 in k30164 in k30161 in k30158 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30169,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30173,a[2]=((C_word)li458),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(8),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_30173 in k30167 in k30164 in k30161 in k30158 in mm:make-off in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30173(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_30173,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5125(t7,t8,t9,t10,t11,t12));}

/* mm:on? in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30137(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30137,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30142,a[2]=((C_word)li456),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(9));}

/* f_30142 in mm:on? in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30142(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30142,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5046(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29408(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_29408r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_29408r(t0,t1,t2);}}

static void C_ccall f_29408r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(64);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_29412,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_29412(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[688]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29980,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[688]);}
else{
t27=t26;
f_29980(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[689]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30015,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[689]);}
else{
t28=t27;
f_30015(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[690]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30050,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[690]);}
else{
t29=t28;
f_30050(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[691]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30085,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[691]);}
else{
t30=t29;
f_30085(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30114,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_30114(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k30112 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30114,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30121,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30129,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30127 in k30112 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30121(2,t2,C_SCHEME_UNDEFINED);}}

/* k30119 in k30112 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29412(t5,t4);}

/* k30083 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30085,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30089,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30089(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30087 in k30083 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29412(t7,t6);}

/* k30048 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30050,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30054,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30054(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30052 in k30048 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29412(t7,t6);}

/* k30013 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30015,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30019,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30019(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30017 in k30013 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_30019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29412(t7,t6);}

/* k29978 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29980,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29984,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29984(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29982 in k29978 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29412(t7,t6);}

/* k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_29412(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29412,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_29415,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_29415(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29810,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_29810(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29845,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[689]);}
else{
t7=t6;
f_29845(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[690]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29880,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[690]);}
else{
t8=t7;
f_29880(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29915,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[691]);}
else{
t9=t8;
f_29915(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29944,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_29944(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k29942 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29944,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29951,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29959,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29957 in k29942 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29951(2,t2,C_SCHEME_UNDEFINED);}}

/* k29949 in k29942 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29415(t5,t4);}

/* k29913 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29915,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29919,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29919(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29917 in k29913 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29415(t7,t6);}

/* k29878 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29880,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29884,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29884(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29882 in k29878 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29415(t7,t6);}

/* k29843 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29845,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29849,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29849(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29847 in k29843 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29415(t7,t6);}

/* k29808 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29810,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29814,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29814(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29812 in k29808 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29415(t7,t6);}

/* k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_29415(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29415,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_29418,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_29418(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29640,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_29640(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29675,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[689]);}
else{
t7=t6;
f_29675(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[690]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29710,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[690]);}
else{
t8=t7;
f_29710(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29745,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[691]);}
else{
t9=t8;
f_29745(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29774,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_29774(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k29772 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29774,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29781,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29789,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29787 in k29772 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29781(2,t2,C_SCHEME_UNDEFINED);}}

/* k29779 in k29772 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29418(t5,t4);}

/* k29743 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29745,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29749,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29749(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29747 in k29743 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29418(t7,t6);}

/* k29708 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29710,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29714,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29714(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29712 in k29708 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29418(t7,t6);}

/* k29673 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29675,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29679,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29679(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29677 in k29673 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29418(t7,t6);}

/* k29638 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29640,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29644,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29644(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29642 in k29638 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29418(t7,t6);}

/* k29416 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_29418(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29418,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29421,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_29421(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[688]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29470,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[688]);}
else{
t6=t5;
f_29470(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29505,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[689]);}
else{
t7=t6;
f_29505(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[690]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29540,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[690]);}
else{
t8=t7;
f_29540(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29575,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[691]);}
else{
t9=t8;
f_29575(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29604,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_29604(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k29602 in k29416 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29604,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29611,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29619,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29617 in k29602 in k29416 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29611(2,t2,C_SCHEME_UNDEFINED);}}

/* k29609 in k29602 in k29416 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29421(t5,t4);}

/* k29573 in k29416 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29575,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29579,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29579(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29577 in k29573 in k29416 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29421(t7,t6);}

/* k29538 in k29416 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29540,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29544,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29544(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29542 in k29538 in k29416 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29421(t7,t6);}

/* k29503 in k29416 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29505,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29509,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29509(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29507 in k29503 in k29416 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29421(t7,t6);}

/* k29468 in k29416 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29470,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29474,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29474(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29472 in k29468 in k29416 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29421(t7,t6);}

/* k29419 in k29416 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_29421(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29421,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29424,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_29424(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k29422 in k29419 in k29416 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29424,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29428,a[2]=((C_word)li454),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(9),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_29428 in k29422 in k29419 in k29416 in k29413 in k29410 in mm:make-on in k29262 in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29428(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_29428,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5030(t7,t8,t9,t10,t11,t12));}

/* parse-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_29070(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29070,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29078,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28910,a[2]=t4,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t8)){
t10=t9;
f_28910(t10,t8);}
else{
t10=(C_word)C_i_car(((C_word*)t7)[1]);
t11=(C_word)C_i_symbolp(t10);
t12=t9;
f_28910(t12,(C_word)C_i_not(t11));}}

/* k28908 in parse-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_28910(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28910,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28917,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25854(t2,(C_word)C_a_i_list(&a,4,lf[507],lf[677],lf[512],((C_word*)((C_word*)t0)[3])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28918,a[2]=((C_word)li449),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28943,a[2]=t6,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28945,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t9,a[5]=t6,a[6]=t4,a[7]=((C_word*)t0)[3],a[8]=((C_word)li452),tmp=(C_word)a,a+=9,tmp));
t11=((C_word*)t9)[1];
f_28945(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do4828 in k28908 in parse-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_28945(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28945,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28955,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t9,a[5]=t7,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t8,a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[6],a[12]=t6,tmp=(C_word)a,a+=13,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t12=(C_word)C_eqp(t11,lf[423]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[7])+1,t14);
t16=t10;
f_28955(t16,t13);}
else{
t13=t10;
f_28955(t13,C_SCHEME_UNDEFINED);}}}

/* k28953 in do4828 in k28908 in parse-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_28955(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28955,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28959,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26076(t2,t3,((C_word*)t0)[3]);}

/* k28957 in k28953 in do4828 in k28908 in parse-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28959,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28962,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t4=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t4)){
t5=t3;
f_28962(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,3,lf[682],t5,lf[683]));}}

/* k28960 in k28957 in k28953 in do4828 in k28908 in parse-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28962,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28965,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29014,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[6],a[6]=((C_word)li450),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29023,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[5],a[4]=((C_word)li451),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a29022 in k28960 in k28957 in k28953 in do4828 in k28908 in parse-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29023(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29023,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a29013 in k28960 in k28957 in k28953 in do4828 in k28908 in parse-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_29014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29014,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k28963 in k28960 in k28957 in k28953 in do4828 in k28908 in parse-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28965,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28968,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28984,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  op-type?");
f_28918(t3,((C_word*)((C_word*)t0)[6])[1],lf[668]);}

/* k28982 in k28963 in k28960 in k28957 in k28953 in do4828 in k28908 in parse-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28984,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=((C_word*)t0)[5];
f_28968(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28991,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  op-type?");
f_28918(t2,((C_word*)((C_word*)t0)[6])[1],lf[681]);}}

/* k28989 in k28982 in k28963 in k28960 in k28957 in k28953 in do4828 in k28908 in parse-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28991,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t2=((C_word*)t0)[5];
f_28968(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[678],t2,lf[679],t3,lf[680]));}}
else{
t2=((C_word*)t0)[5];
f_28968(2,t2,C_SCHEME_UNDEFINED);}}

/* k28966 in k28963 in k28960 in k28957 in k28953 in do4828 in k28908 in parse-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28968,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28974,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k28972 in k28966 in k28963 in k28960 in k28957 in k28953 in do4828 in k28908 in parse-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_28945(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k28941 in k28908 in parse-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_29078(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k28908 in parse-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_28918(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28918,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k28915 in k28908 in parse-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28917,2,t0,t1);}
t2=((C_word*)t0)[2];
f_29078(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k29076 in parse-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_29078(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  gather-clauses");
f_26005(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28656(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28656,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[671],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28678,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[674],t8,lf[675]));}
else{
t19=t17;
f_28678(2,t19,C_SCHEME_UNDEFINED);}}

/* k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28678,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28693,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[673]));}
else{
t9=t8;
f_28693(2,t9,C_SCHEME_UNDEFINED);}}

/* k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28693,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28696,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[6]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[425],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_28696(t6,t5);}
else{
t4=t2;
f_28696(t4,C_SCHEME_UNDEFINED);}}

/* k28694 in k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_28696(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28696,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28699,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28866,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li446),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28872,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li447),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a28871 in k28694 in k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28872(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28872,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a28865 in k28694 in k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28866,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  parse-then-else-dependents");
f_28525(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k28697 in k28694 in k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28699,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28702,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_28702(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28848,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  gather-clauses");
f_26005(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k28846 in k28697 in k28694 in k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28702(t3,t2);}

/* k28700 in k28697 in k28694 in k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_28702(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28702,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28705,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 380  loop-operator-set!");
f_25752(t2,((C_word*)((C_word*)t0)[7])[1],lf[20]);}

/* k28703 in k28700 in k28697 in k28694 in k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28705,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28829,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28841,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping");
t4=C_retrieve2(lf[501],"loop-looping");
f_25806(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k28839 in k28703 in k28700 in k28697 in k28694 in k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28841,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[451],t1);
C_trace("ChickenBridge.scm: 380  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k28827 in k28703 in k28700 in k28697 in k28694 in k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28829,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28712,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28725,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_28725(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_28725(t7,(C_word)C_eqp(t6,lf[16]));}}

/* k28723 in k28827 in k28703 in k28700 in k28697 in k28694 in k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_28725(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28725,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28732,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[672]));}
else{
t5=t4;
f_28732(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_28712(t2,C_SCHEME_UNDEFINED);}}

/* k28730 in k28723 in k28827 in k28703 in k28700 in k28697 in k28694 in k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28732,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28735,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28788,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li444),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28802,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li445),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a28801 in k28730 in k28723 in k28827 in k28703 in k28700 in k28697 in k28694 in k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28802(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28802,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a28787 in k28730 in k28723 in k28827 in k28703 in k28700 in k28697 in k28694 in k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28788,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28796,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k28794 in a28787 in k28730 in k28723 in k28827 in k28703 in k28700 in k28697 in k28694 in k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  parse-then-else-dependents");
f_28525(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k28733 in k28730 in k28723 in k28827 in k28703 in k28700 in k28697 in k28694 in k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28735,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28738,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_28738(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28774,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  gather-clauses");
f_26005(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28772 in k28733 in k28730 in k28723 in k28827 in k28703 in k28700 in k28697 in k28694 in k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28738(t3,t2);}

/* k28736 in k28733 in k28730 in k28723 in k28827 in k28703 in k28700 in k28697 in k28694 in k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_28738(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28738,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28767,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping");
t4=C_retrieve2(lf[501],"loop-looping");
f_25806(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k28765 in k28736 in k28733 in k28730 in k28723 in k28827 in k28703 in k28700 in k28697 in k28694 in k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28767,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[451],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28744,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping-set!");
f_25812(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k28742 in k28765 in k28736 in k28733 in k28730 in k28723 in k28827 in k28703 in k28700 in k28697 in k28694 in k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28744,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28747,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping-set!");
f_25812(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k28745 in k28742 in k28765 in k28736 in k28733 in k28730 in k28723 in k28827 in k28703 in k28700 in k28697 in k28694 in k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28747,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28751,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 380  gather-clauses");
f_26005(t2,lf[20],t3);}

/* k28749 in k28745 in k28742 in k28765 in k28736 in k28733 in k28730 in k28723 in k28827 in k28703 in k28700 in k28697 in k28694 in k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28712(t3,t2);}

/* k28710 in k28827 in k28703 in k28700 in k28697 in k28694 in k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_28712(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28712,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28715,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 380  loop-looping-set!");
f_25812(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k28713 in k28710 in k28827 in k28703 in k28700 in k28697 in k28694 in k28691 in k28676 in parse-conditional in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_28525(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28525,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28529,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28534,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li442),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_28534(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do4761 in parse-then-else-dependents in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_28534(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28534,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28482,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26076(t12,t10,t11);}}

/* k28480 in do4761 in parse-then-else-dependents in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28482,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28488,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_28488(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[668]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[669]);
t8=t2;
f_28488(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_28488(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_28488(t3,C_SCHEME_FALSE);}}

/* k28486 in k28480 in do4761 in parse-then-else-dependents in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_28488(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28488,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28551,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_28551(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[666],t6,lf[667]));}}

/* k28549 in k28486 in k28480 in do4761 in parse-then-else-dependents in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28551,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28554,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28624,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li440),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28637,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li441),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a28636 in k28549 in k28486 in k28480 in do4761 in parse-then-else-dependents in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28637(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28637,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a28623 in k28549 in k28486 in k28480 in do4761 in parse-then-else-dependents in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28624,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28632,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k28630 in a28623 in k28549 in k28486 in k28480 in do4761 in parse-then-else-dependents in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k28552 in k28549 in k28486 in k28480 in do4761 in parse-then-else-dependents in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28554,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28558,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k28556 in k28552 in k28549 in k28486 in k28480 in do4761 in parse-then-else-dependents in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28558,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28563,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_28563(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[423]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[665]));}
else{
t10=t5;
f_28563(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[16]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_28563(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28601,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26076(t10,t11,((C_word*)t0)[3]);}}}}

/* k28599 in k28556 in k28552 in k28549 in k28486 in k28480 in do4761 in parse-then-else-dependents in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_28563(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_28563(2,t2,C_SCHEME_UNDEFINED);}}

/* k28561 in k28556 in k28552 in k28549 in k28486 in k28480 in do4761 in parse-then-else-dependents in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_28534(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k28527 in parse-then-else-dependents in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28424(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28424,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28431,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[662],t13,lf[663]));}
else{
t13=t11;
f_28431(2,t13,C_SCHEME_UNDEFINED);}}

/* k28429 in parse-return in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28431,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28462,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26076(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k28460 in k28429 in parse-return in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28462,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28450,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28458,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k28456 in k28460 in k28429 in parse-return in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28458,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25854(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[507],lf[648],lf[512],t2));}

/* k28448 in k28460 in k28429 in parse-return in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28333(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28333,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28340,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[659],t15,lf[660]));}
else{
t15=t13;
f_28340(2,t15,C_SCHEME_UNDEFINED);}}

/* k28338 in parse-thereis in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28340,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28408,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26076(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k28406 in k28338 in parse-thereis in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28408,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28351,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[656]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_28351(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[657]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[425],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_28351(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[658]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_28351(t9,t8);}
else{
t8=t4;
f_28351(t8,C_SCHEME_UNDEFINED);}}}}

/* k28349 in k28406 in k28338 in parse-thereis in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_28351(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28351,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28362,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28378,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k28376 in k28349 in k28406 in k28338 in parse-thereis in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28378,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25854(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[507],lf[656],lf[512],t3,lf[515],t4));}

/* k28360 in k28349 in k28406 in k28338 in parse-thereis in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28267(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28267,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28278,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[653],t7,lf[654]));}
else{
t13=t12;
f_28278(2,t13,C_SCHEME_UNDEFINED);}}

/* k28276 in parse-while-until in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28278,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28281,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[651]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_28281(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[652]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[425],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_28281(t10,t9);}
else{
t5=t2;
f_28281(t5,C_SCHEME_UNDEFINED);}}}

/* k28279 in k28276 in parse-while-until in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_28281(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28281,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28288,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],lf[650]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25854(t2,(C_word)C_a_i_list(&a,4,lf[507],((C_word*)t0)[2],lf[512],t4));}

/* k28286 in k28279 in k28276 in parse-while-until in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28261(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28261,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[648],t2));}

/* parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27715(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27715,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27724,a[2]=((C_word)li430),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27729,a[2]=((C_word)li431),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27734,a[2]=((C_word)li432),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_27746,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[645],t7,lf[646]));}
else{
t30=t29;
f_27746(2,t30,C_SCHEME_UNDEFINED);}}

/* k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27746,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_27757,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_27757(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[641]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28210,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[644]));}
else{
t11=t9;
f_28210(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_27757(2,t9,C_SCHEME_UNDEFINED);}}}

/* k28208 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28210,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28216,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 380  loop-variable?");
f_26082(t2,t3);}

/* k28214 in k28208 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28216,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_27757(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[642],t2,lf[643]));}}

/* k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27757,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_27761,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27642,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li434),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_27642(t9,t2,C_SCHEME_FALSE);}

/* do4583 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_27642(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27642,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27656,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27667,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  loop-collectors");
t9=C_retrieve2(lf[498],"loop-collectors");
f_25770(3,t9,t7,t8);}}

/* k27665 in do4583 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27667,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27602,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li433),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_27602(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do4575 in k27665 in do4583 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_27602(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27602,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27615,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_27615(t12,t11);}
else{
t10=t6;
f_27615(t10,C_SCHEME_UNDEFINED);}}}

/* k27613 in do4575 in k27665 in do4583 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_27615(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_27602(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k27654 in do4583 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_27642(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27761,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_27764,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28194,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28198,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  collector-type");
f_27729(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_27764(2,t6,t5);}}

/* k28196 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[638];
t3=lf[639];
t4=lf[640];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_28194(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_28194(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_28194(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_28194(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k28192 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_28194(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28194,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_27764(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28190,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  collector-type");
f_27729(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28188 in k28192 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28190,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[635],t1,lf[636],((C_word*)t0)[2],lf[637]));}

/* k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27764,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27767,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[619]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[620]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27810,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27848,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_27848(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 380  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[621]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27877,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  collector-acc");
f_27734(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[622]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[623]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27889,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[625]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[18]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27984,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_27984(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[629]);
t10=t8;
f_27984(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[634])));}}}}

/* k27982 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_27984(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27984,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27987,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28100,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28158,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26088(t9,((C_word*)((C_word*)t0)[13])[1],lf[633]);}
else{
t9=t8;
f_28100(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28093,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  collector-acc");
f_27734(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_27767(t2,C_SCHEME_UNDEFINED);}}

/* k28091 in k27982 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_27987(t6,t5);}

/* k28156 in k27982 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28158,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_28100(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k28098 in k27982 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_28100(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28100,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28104,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[632]);}

/* k28102 in k28098 in k27982 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28104,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28108,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[631]);}

/* k28106 in k28102 in k28098 in k27982 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28108,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28150,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26088(t3,((C_word*)((C_word*)t0)[11])[1],lf[630]);}

/* k28148 in k28106 in k28102 in k28098 in k27982 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28150,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28146,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26088(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k28144 in k28148 in k28106 in k28102 in k28098 in k27982 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28146,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28124,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-collector");
f_27724(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k28122 in k28144 in k28148 in k28106 in k28102 in k28098 in k27982 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_28124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28124,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_27987(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_27987(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k27985 in k27982 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_27987(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27987,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27990,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[18]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[626]);
t5=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[627],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[628],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_27990(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[629]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[626],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[627],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_27990(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[627],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[628],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_27990(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k27988 in k27985 in k27982 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_27990(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27990,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_27767(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_27767(t2,C_SCHEME_UNDEFINED);}}

/* k27887 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27889,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[622]);
t3=(C_truep(t2)?lf[376]:lf[454]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27895,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27939,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_27939(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 380  gensym");
t9=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[624]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27972,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  collector-acc");
f_27734(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k27970 in k27887 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_27895(t3,t2);}

/* k27937 in k27887 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27939,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27965,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26088(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k27963 in k27937 in k27887 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27965,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27947,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-collector");
f_27724(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k27945 in k27963 in k27937 in k27887 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27947,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_27895(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[424],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_27895(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k27893 in k27887 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_27895(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27895,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27935,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26088(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k27933 in k27893 in k27887 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27935,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[425],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[424],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[20],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[451],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_27767(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k27875 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_27810(t3,t2);}

/* k27846 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27848,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27870,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26088(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k27868 in k27846 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27870,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27856,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-collector");
f_27724(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k27854 in k27868 in k27846 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27856,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_27810(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_27810(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k27808 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_27810(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27810,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[619]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[104],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27767(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[104],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_27767(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k27765 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_27767(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27767,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27774,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27778,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t4=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k27776 in k27765 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27778,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27782,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27780 in k27776 in k27765 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27782,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27786,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27784 in k27780 in k27776 in k27765 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27786,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27790,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27788 in k27784 in k27780 in k27776 in k27765 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27790,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25854(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[507],((C_word*)t0)[5],lf[508],((C_word*)t0)[4],lf[510],((C_word*)t0)[3],lf[512],((C_word*)t0)[2],lf[515],t1,lf[509],t2,lf[511],C_SCHEME_END_OF_LIST));}

/* k27772 in k27765 in k27762 in k27759 in k27755 in k27744 in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_27734(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27734,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_27729(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27729,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_27724(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27724,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27556(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27556,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27567,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[616],t6,lf[617]));}
else{
t12=t11;
f_27567(2,t12,C_SCHEME_UNDEFINED);}}

/* k27565 in parse-initially in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27567,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27582,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25854(t6,(C_word)C_a_i_list(&a,4,lf[507],((C_word*)t0)[2],lf[510],t7));}

/* k27580 in k27565 in parse-initially in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27518(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27518,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27529,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[613],t6,lf[614]));}
else{
t12=t11;
f_27529(2,t12,C_SCHEME_UNDEFINED);}}

/* k27527 in parse-finally in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27529,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27544,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25854(t6,(C_word)C_a_i_list(&a,4,lf[507],((C_word*)t0)[2],lf[514],t7));}

/* k27542 in k27527 in parse-finally in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27451(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27451,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27462,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27471,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li426),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_27471(t16,t12);}

/* do4532 in parse-do in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_27471(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27471,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27481,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_27481(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26076(t3,t4,((C_word*)t0)[5]);}}

/* k27479 in do4532 in parse-do in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27481,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[610],((C_word*)t0)[4],lf[611]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27494,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_27471(t7,((C_word*)t0)[7]);}}

/* k27492 in k27479 in do4532 in parse-do in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k27460 in parse-do in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27462,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27469,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25854(t2,(C_word)C_a_i_list(&a,4,lf[507],((C_word*)t0)[3],lf[512],((C_word*)((C_word*)t0)[2])[1]));}

/* k27467 in k27460 in parse-do in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27258(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27258,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27265,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27318,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li424),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_27318(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do4488 in parse-with in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_27318(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27318,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27328,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_27328(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26076(t7,t8,((C_word*)t0)[5]);}}

/* k27326 in do4488 in parse-with in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27328,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27339,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27442,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 380  loop-variable?");
f_26082(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k27440 in k27326 in do4488 in parse-with in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27442,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27348,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[600],((C_word*)((C_word*)t0)[10])[1],lf[601]));}
else{
t4=t3;
f_27348(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[423]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27370,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[602]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27399,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26088(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27407,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26088(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[603]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[433]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[604]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_27339(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[605],((C_word*)((C_word*)t0)[10])[1],lf[606]));}
else{
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[607],((C_word*)((C_word*)t0)[10])[1],lf[608]));}}}}}

/* k27405 in k27440 in k27326 in do4488 in parse-with in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27407,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27370(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k27397 in k27440 in k27326 in do4488 in parse-with in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27399,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27370(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k27368 in k27440 in k27326 in do4488 in parse-with in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_27339(2,t6,t5);}

/* k27346 in k27440 in k27326 in do4488 in parse-with in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27348,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27351,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[598],((C_word*)((C_word*)t0)[8])[1],lf[599]));}
else{
t3=t2;
f_27351(2,t3,C_SCHEME_UNDEFINED);}}

/* k27349 in k27346 in k27440 in k27326 in do4488 in parse-with in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_27339(2,t6,t5);}

/* k27337 in k27326 in do4488 in parse-with in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_27318(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k27263 in parse-with in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27265,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27268,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[597]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27308,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26088(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27316,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26088(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_27268(2,t3,C_SCHEME_UNDEFINED);}}}

/* k27314 in k27263 in parse-with in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27316,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27268(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k27306 in k27263 in parse-with in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27308,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27268(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k27266 in k27263 in parse-with in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27268,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27275,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27279,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t4=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k27277 in k27266 in k27263 in parse-with in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27279,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27283,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27281 in k27277 in k27266 in k27263 in parse-with in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27283,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25854(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[507],lf[596],lf[508],((C_word*)t0)[2],lf[510],t1));}

/* k27273 in k27266 in k27263 in parse-with in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27116(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27116,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27126,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27164,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li422),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_27164(t22,t18,C_SCHEME_FALSE);}

/* do4450 in parse-general-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_27164(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27164,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27174,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_27174(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26076(t5,t6,((C_word*)t0)[5]);}}

/* k27172 in do4450 in parse-general-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27174,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27185,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[594]));}
else{
t7=t6;
f_27185(2,t7,C_SCHEME_UNDEFINED);}}}

/* k27183 in k27172 in do4450 in parse-general-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27185,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27188,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[433]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27197,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[589]));}
else{
t6=t5;
f_27197(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[590]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27222,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[591]));}
else{
t7=t6;
f_27222(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[592],((C_word*)((C_word*)t0)[12])[1],lf[593]));}}}

/* k27220 in k27183 in k27172 in do4450 in parse-general-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27222,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_27188(2,t10,t9);}

/* k27195 in k27183 in k27172 in do4450 in parse-general-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27197,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_27188(2,t8,t7);}

/* k27186 in k27183 in k27172 in do4450 in parse-general-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_27164(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k27124 in parse-general-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27126,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27133,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27162,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26088(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k27160 in k27124 in parse-general-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27162,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25854(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[507],lf[537],lf[508],t2,lf[510],t3,lf[512],t4,lf[513],t5));}

/* k27131 in k27124 in parse-general-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26765(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26765,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26772,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[587]);}

/* k26770 in parse-sequence-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26772,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26778,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27006,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li420),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_27006(t25,t21,C_SCHEME_FALSE);}

/* do4383 in k26770 in parse-sequence-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_27006(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27006,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27016,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_27016(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26076(t5,t6,((C_word*)t0)[4]);}}

/* k27014 in do4383 in k26770 in parse-sequence-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27016,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27027,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[586]));}
else{
t7=t6;
f_27027(2,t7,C_SCHEME_UNDEFINED);}}}

/* k27025 in k27014 in do4383 in k26770 in parse-sequence-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27027,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27030,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[576]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27039,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_27039(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[585]);
if(C_truep(t6)){
t7=t5;
f_27039(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[570]);
t8=t5;
f_27039(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[575])));}}}

/* k27037 in k27025 in k27014 in do4383 in k26770 in parse-sequence-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_27039(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27039,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27042,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[578],((C_word*)((C_word*)t0)[9])[1],lf[579],((C_word*)((C_word*)t0)[10])[1],lf[580]));}
else{
t3=t2;
f_27042(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[561]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[581]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[570]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[582]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_27030(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[583],((C_word*)((C_word*)t0)[9])[1],lf[584]));}}}

/* k27040 in k27037 in k27025 in k27014 in do4383 in k26770 in parse-sequence-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_27030(2,t7,t6);}

/* k27028 in k27025 in k27014 in do4383 in k26770 in parse-sequence-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_27006(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k26776 in k26770 in parse-sequence-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26778,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27004,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26088(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k27002 in k26776 in k26770 in parse-sequence-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27004,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27000,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26088(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k26998 in k27002 in k26776 in k26770 in parse-sequence-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_27000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27000,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26789,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[570]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_26806,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[574]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[575]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26882,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[301],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_26882(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[301],((C_word*)t0)[4]);
t9=t7;
f_26882(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26911,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26946,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_26946(t10,(C_word)C_eqp(t9,lf[577]));}
else{
t9=t8;
f_26946(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_26911(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k26944 in k26998 in k27002 in k26776 in k26770 in parse-sequence-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_26946(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26946,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26911(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_26911(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k26909 in k26998 in k27002 in k26776 in k26770 in parse-sequence-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_26911(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26911,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26927,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[576]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[6]);
t5=t2;
f_26927(t5,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_26927(t4,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k26925 in k26909 in k26998 in k27002 in k26776 in k26770 in parse-sequence-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_26927(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26927,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26789(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k26880 in k26998 in k27002 in k26776 in k26770 in parse-sequence-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_26882(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26882,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[299],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[451],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_26789(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k26804 in k26998 in k27002 in k26776 in k26770 in parse-sequence-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26806,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26809,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[573]);}

/* k26807 in k26804 in k26998 in k27002 in k26776 in k26770 in parse-sequence-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26809,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26873,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26088(t2,((C_word*)t0)[7],C_fix(0));}

/* k26871 in k26807 in k26804 in k26998 in k27002 in k26776 in k26770 in parse-sequence-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26873,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26869,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26088(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k26867 in k26871 in k26807 in k26804 in k26998 in k27002 in k26776 in k26770 in parse-sequence-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26869,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[571],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[104],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[572],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[376],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[425],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_26789(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k26787 in k26998 in k27002 in k26776 in k26770 in parse-sequence-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_26789(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26789,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26796,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26800,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t4=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k26798 in k26787 in k26998 in k27002 in k26776 in k26770 in parse-sequence-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26800,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25854(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[507],lf[537],lf[508],t1,lf[511],((C_word*)((C_word*)t0)[5])[1],lf[510],((C_word*)((C_word*)t0)[4])[1],lf[512],((C_word*)((C_word*)t0)[3])[1],lf[513],((C_word*)((C_word*)t0)[2])[1]));}

/* k26794 in k26787 in k26998 in k27002 in k26776 in k26770 in parse-sequence-iteration in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26718(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26718,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[567]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26733,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li417),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26751,a[2]=t2,a[3]=((C_word)li418),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a26750 in parse-repeat in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26751(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26751,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,t1,t2,t4);}

/* a26732 in parse-repeat in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26733,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26745,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[568]);}

/* k26743 in a26732 in parse-repeat in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26745,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[537],t1,lf[542],t2);
C_trace("ChickenBridge.scm: 380  parse-numerical-for");
t4=C_retrieve2(lf[536],"parse-numerical-for");
f_26336(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26336(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26336,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26346,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26545,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li415),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_26545(t31,t27,C_SCHEME_FALSE);}

/* do4284 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_26545(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26545,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26555,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_26555(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26076(t5,t6,((C_word*)t0)[6]);}}

/* k26553 in do4284 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26555,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26566,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[565]));}
else{
t7=t6;
f_26566(2,t7,C_SCHEME_UNDEFINED);}}}

/* k26564 in k26553 in do4284 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26566,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26569,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[544]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[540]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26581,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[545],((C_word*)((C_word*)t0)[12])[1],lf[546],((C_word*)((C_word*)t0)[9])[1],lf[547]));}
else{
t7=t6;
f_26581(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[542]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26602,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[548],((C_word*)((C_word*)t0)[12])[1],lf[549],((C_word*)((C_word*)t0)[3])[1],lf[550]));}
else{
t8=t7;
f_26602(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[551]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26623,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[552],((C_word*)((C_word*)t0)[12])[1],lf[553],((C_word*)((C_word*)t0)[3])[1],lf[554]));}
else{
t9=t8;
f_26623(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[541]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26644,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[555],((C_word*)((C_word*)t0)[12])[1],lf[556],((C_word*)((C_word*)t0)[3])[1],lf[557]));}
else{
t10=t9;
f_26644(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[543]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26665,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[558],((C_word*)((C_word*)t0)[12])[1],lf[559],((C_word*)((C_word*)t0)[3])[1],lf[560]));}
else{
t11=t10;
f_26665(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[561]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26686,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[562]));}
else{
t12=t11;
f_26686(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[563],((C_word*)((C_word*)t0)[12])[1],lf[564]));}}}}}}}

/* k26684 in k26564 in k26553 in do4284 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_26569(2,t6,t5);}

/* k26663 in k26564 in k26553 in do4284 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_26569(2,t7,t6);}

/* k26642 in k26564 in k26553 in do4284 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_26569(2,t7,t6);}

/* k26621 in k26564 in k26553 in do4284 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_26569(2,t7,t6);}

/* k26600 in k26564 in k26553 in do4284 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_26569(2,t7,t6);}

/* k26579 in k26564 in k26553 in do4284 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_26569(2,t7,t6);}

/* k26567 in k26564 in k26553 in do4284 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_26545(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k26344 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26346,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26349,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_26349(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[544]);
t5=t2;
f_26349(t5,t4);}}

/* k26347 in k26344 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_26349(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26349,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26352,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[540]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26512,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_26512(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[543]);
t6=t4;
f_26512(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[541])));}}

/* k26510 in k26347 in k26344 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_26512(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[106]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[541]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[242]);
t5=((C_word*)t0)[2];
f_26352(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[376]);
t5=((C_word*)t0)[2];
f_26352(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[104]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[542]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[448]);
t5=((C_word*)t0)[2];
f_26352(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[454]);
t5=((C_word*)t0)[2];
f_26352(t5,t4);}}}

/* k26350 in k26347 in k26344 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_26352(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26352,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26355,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26483,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 380  make-binding");
f_26088(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26503,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26088(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k26501 in k26350 in k26347 in k26344 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26503,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26355(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k26481 in k26350 in k26347 in k26344 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26483,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_26355(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k26353 in k26350 in k26347 in k26344 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_26355(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26355,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26358,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_26358(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26448,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t5=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[539]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_26358(t5,t4);}}

/* k26446 in k26353 in k26350 in k26347 in k26344 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26448,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26465,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26088(t2,t1,C_SCHEME_FALSE);}

/* k26463 in k26446 in k26353 in k26350 in k26347 in k26344 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26465,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_26358(t8,t7);}

/* k26356 in k26353 in k26350 in k26347 in k26344 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_26358(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26358,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26365,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26397,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[538]);}
else{
t6=t5;
f_26365(t6,C_SCHEME_UNDEFINED);}}

/* k26395 in k26356 in k26353 in k26350 in k26347 in k26344 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26397,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26400,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26415,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26088(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26431,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_26088(t3,t1,C_SCHEME_FALSE);}}

/* k26429 in k26395 in k26356 in k26353 in k26350 in k26347 in k26344 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26431,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26400(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k26413 in k26395 in k26356 in k26353 in k26350 in k26347 in k26344 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26415,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_26400(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k26398 in k26395 in k26356 in k26353 in k26350 in k26347 in k26344 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_26400(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26400,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_26365(t4,t3);}

/* k26363 in k26356 in k26353 in k26350 in k26347 in k26344 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_26365(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26365,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26372,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26376,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t4=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k26374 in k26363 in k26356 in k26353 in k26350 in k26347 in k26344 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26376,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26380,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k26378 in k26374 in k26363 in k26356 in k26353 in k26350 in k26347 in k26344 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26380,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25854(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[507],lf[537],lf[508],((C_word*)t0)[2],lf[510],t1,lf[513],t2,lf[511],t4));}

/* k26370 in k26363 in k26356 in k26353 in k26350 in k26347 in k26344 in parse-numerical-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26254(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26254,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26258,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26076(t5,t6,t4);}

/* k26256 in parse-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26258,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[529]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26276,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  loop-variable?");
f_26082(t4,t3);}}

/* k26274 in k26256 in parse-for in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26276,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[530]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[531],t6,lf[532],lf[533]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_26094(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[534],t2,lf[535]));}}

/* loop-error in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_26094(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26094,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26150,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26102,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li412),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_26102(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do4235 in loop-error in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_26102(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26102,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26112,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_26112(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_26112(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_26076(t6,t8,((C_word*)t0)[2]);}}}

/* k26110 in do4235 in loop-error in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26112,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 380  reverse");
t2=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_26102(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k26148 in loop-error in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26150,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26153,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  newline");
t3=*((C_word*)lf[365]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k26151 in k26148 in loop-error in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26153,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26156,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  display");
t3=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[527]);}

/* k26154 in k26151 in k26148 in loop-error in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26156,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26159,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26231,a[2]=t4,a[3]=((C_word)li411),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_26231(t6,t2,((C_word*)t0)[2]);}

/* do4245 in k26154 in k26151 in k26148 in loop-error in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_26231(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26231,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26241,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  display");
t5=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k26239 in do4245 in k26154 in k26151 in k26148 in loop-error in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26231(t3,((C_word*)t0)[2],t2);}

/* k26157 in k26154 in k26151 in k26148 in loop-error in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26159,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26162,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  newline");
t3=*((C_word*)lf[365]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k26160 in k26157 in k26154 in k26151 in k26148 in loop-error in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26162,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26165,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  display");
t3=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[526]);}

/* k26163 in k26160 in k26157 in k26154 in k26151 in k26148 in loop-error in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26165,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26168,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 380  display");
t3=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[522]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26185,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li410),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_26185(t6,t2,((C_word*)t0)[2]);}}

/* do4250 in k26163 in k26160 in k26157 in k26154 in k26151 in k26148 in loop-error in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_26185(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26185,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26195,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 380  display");
t5=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[525]);}
else{
t5=t3;
f_26195(2,t5,C_SCHEME_UNDEFINED);}}}

/* k26193 in do4250 in k26163 in k26160 in k26157 in k26154 in k26151 in k26148 in loop-error in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26195,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26198,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 380  display");
t4=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k26196 in k26193 in do4250 in k26163 in k26160 in k26157 in k26154 in k26151 in k26148 in loop-error in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26198,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26201,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[523]:lf[524]);
C_trace("ChickenBridge.scm: 380  display");
t6=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k26199 in k26196 in k26193 in do4250 in k26163 in k26160 in k26157 in k26154 in k26151 in k26148 in loop-error in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26185(t3,((C_word*)t0)[2],t2);}

/* k26166 in k26163 in k26160 in k26157 in k26154 in k26151 in k26148 in loop-error in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26168,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26171,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  newline");
t3=*((C_word*)lf[365]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k26169 in k26166 in k26163 in k26160 in k26157 in k26154 in k26151 in k26148 in loop-error in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[521]);}

/* make-binding in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_26088(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26088,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_26082(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26082,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_26076(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26076,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_26005(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26005,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26007,a[2]=((C_word)li405),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26046,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_26007(t5,t3,C_retrieve2(lf[497],"loop-bindings"));}

/* k26044 in gather-clauses in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26046,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26050,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_26007(t2,((C_word*)t0)[2],C_retrieve2(lf[498],"loop-collectors"));}

/* k26048 in k26044 in gather-clauses in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26050,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26054,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_26007(t2,((C_word*)t0)[2],C_retrieve2(lf[499],"loop-initially"));}

/* k26052 in k26048 in k26044 in gather-clauses in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26054,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26058,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_26007(t2,((C_word*)t0)[2],C_retrieve2(lf[500],"loop-end-tests"));}

/* k26056 in k26052 in k26048 in k26044 in gather-clauses in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26058,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_26062,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_26007(t2,((C_word*)t0)[2],C_retrieve2(lf[501],"loop-looping"));}

/* k26060 in k26056 in k26052 in k26048 in k26044 in gather-clauses in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26062,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26066,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_26007(t2,((C_word*)t0)[2],C_retrieve2(lf[503],"loop-stepping"));}

/* k26064 in k26060 in k26056 in k26052 in k26048 in k26044 in gather-clauses in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26066,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26070,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_26007(t2,((C_word*)t0)[2],C_retrieve2(lf[504],"loop-finally"));}

/* k26068 in k26064 in k26060 in k26056 in k26052 in k26048 in k26044 in gather-clauses in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26070,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26074,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_26007(t2,((C_word*)t0)[2],C_retrieve2(lf[505],"loop-returning"));}

/* k26072 in k26068 in k26064 in k26060 in k26056 in k26052 in k26048 in k26044 in gather-clauses in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26074,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25854(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[507],((C_word*)t0)[9],lf[508],((C_word*)t0)[8],lf[509],((C_word*)t0)[7],lf[510],((C_word*)t0)[6],lf[511],((C_word*)t0)[5],lf[512],((C_word*)t0)[4],lf[513],((C_word*)t0)[3],lf[514],((C_word*)t0)[2],lf[515],t1));}

/* gather-clause in gather-clauses in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_26007(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26007,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26013,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li404),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_26013(t8,t1,C_SCHEME_END_OF_LIST);}

/* do4218 in gather-clause in gather-clauses in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_26013(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26013,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26024,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26035,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k26033 in do4218 in gather-clause in gather-clauses in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k26022 in do4218 in gather-clause in gather-clauses in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_26024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_26013(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_25854(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25854,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25869,a[2]=t5,a[3]=t3,a[4]=((C_word)li402),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_25869(t7,t1,t2);}}

/* do4206 in make-loop-clause in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_25869(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25869,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25882,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[507]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 380  loop-operator-set!");
f_25752(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[508]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_25882(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[509]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_25882(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[510]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_25882(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[511]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_25882(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[512]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 380  loop-looping-set!");
f_25812(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[513]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_25882(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[514]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_25882(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[515]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_25882(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_25882(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k25880 in do4206 in make-loop-clause in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_25869(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25842(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25842,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25830(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25830,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25818(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25818,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_25812(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25812,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25806(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25806,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25794(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25794,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25782(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25782,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25770(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25770,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25758(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25758,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k25742 in k25739 in k25736 in k25733 in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_25752(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25752,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* sal:output in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25716(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25716,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  print-error");
t2=C_retrieve(lf[463]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[495]);}

/* sal:open in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25710(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25710,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  print-error");
t2=C_retrieve(lf[463]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[493]);}

/* sal:load in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25663(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25663,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25667,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  file-exists?");
t4=C_retrieve(lf[491]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k25665 in sal:load in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25667,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25670,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_string_length(((C_word*)t0)[2]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25692,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_greaterp(t3,C_fix(4)))){
t5=(C_word)C_a_i_minus(&a,2,t3,C_fix(4));
C_trace("substring=?");
t6=C_retrieve(lf[487]);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t4,((C_word*)t0)[2],lf[488],t5,C_fix(0),C_SCHEME_FALSE);}
else{
t5=t4;
f_25692(2,t5,C_SCHEME_FALSE);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25683,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  string-append");
t4=*((C_word*)lf[171]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[489],((C_word*)t0)[2],lf[490]);}}

/* k25681 in k25665 in sal:load in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  print-error");
t2=C_retrieve(lf[463]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k25690 in k25665 in sal:load in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  load-sal-file");
t2=C_retrieve(lf[485]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 379  load");
t2=C_retrieve(lf[486]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k25668 in k25665 in sal:load in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25654(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25654,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25658,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  chdir");
t4=C_retrieve(lf[44]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k25656 in sal:chdir in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25501(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_25501r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_25501r(t0,t1,t2);}}

static void C_ccall f_25501r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25504,a[2]=t4,a[3]=((C_word)li385),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25623,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25628,a[2]=t4,a[3]=t8,a[4]=((C_word)li386),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_25628(t10,t6,t2);}

/* do4033 in sal:print in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_25628(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25628,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 379  print-message");
t3=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[482]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25641,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_25504(t5,t3,t4,C_fix(0));}}

/* k25639 in do4033 in sal:print in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_25628(t3,((C_word*)t0)[2],t2);}

/* k25621 in sal:print in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_25504(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25504,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 379  print-message");
t5=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[475]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25532,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  print-message");
t6=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[478]);}
else{
t5=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 379  print-message");
t6=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[479]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25604,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  number->string");
C_number_to_string(3,0,t6,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 379  print-message");
t6=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}
else{
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25620,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  sprintf");
t7=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[480],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 379  print-message");
t5=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[481]);}}

/* k25618 in printer in sal:print in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  print-message");
t2=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k25602 in printer in sal:print in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  print-message");
t2=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k25530 in printer in sal:print in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25532,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25535,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25540,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word)li384),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_25540(t6,t2,((C_word*)t0)[2]);}

/* do4025 in k25530 in printer in sal:print in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_25540(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25540,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25550,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],C_fix(1));
C_trace("ChickenBridge.scm: 379  printer");
t6=((C_word*)((C_word*)t0)[2])[1];
f_25504(t6,t3,t4,t5);}}

/* k25548 in do4025 in k25530 in printer in sal:print in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25550,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25553,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_25553(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  print-message");
t4=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[477]);}}

/* k25551 in k25548 in do4025 in k25530 in printer in sal:print in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_25540(t3,((C_word*)t0)[2],t2);}

/* k25533 in k25530 in printer in sal:print in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  print-message");
t2=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[476]);}

/* sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25324(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_25324,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25328,a[2]=t4,a[3]=t6,a[4]=t5,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep(C_retrieve(lf[461]))){
C_trace("ChickenBridge.scm: 379  printf");
t8=C_retrieve(lf[442]);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[472],t4);}
else{
t8=t7;
f_25328(2,t8,C_SCHEME_UNDEFINED);}}

/* k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25328,2,t0,t1);}
t2=C_mutate(&lf[458],((C_word*)t0)[6]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25333,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=((C_word*)t0)[2];
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,C_retrieve2(lf[387],"list->token"),t4);}

/* k25331 in k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25333,2,t0,t1);}
t2=C_mutate(&lf[459],t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25336,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(36608));
t5=t3;
f_25336(t5,t4);}
else{
t4=t3;
f_25336(t4,C_SCHEME_FALSE);}}

/* k25334 in k25331 in k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_25336(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25336,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25340,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
t4=C_retrieve2(lf[459],"*sal-tokens*");
t5=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23071,a[2]=t4,a[3]=t3,a[4]=((C_word)li382),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  call/cc");
t7=*((C_word*)lf[471]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t2,t6);}

/* a23070 in k25334 in k25331 in k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23071(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23071,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23077,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li380),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23084,a[2]=t2,a[3]=((C_word)li381),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a23083 in a23070 in k25334 in k25331 in k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23084(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23084,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23091,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_23091(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_23091(t6,C_SCHEME_FALSE);}}

/* k23089 in a23083 in a23070 in k25334 in k25331 in k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_23091(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23091,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23098,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_22728(t2,lf[468],lf[469],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_22548(((C_word*)t0)[4],lf[470],C_retrieve2(lf[436],"*maxtokpos*"));}}

/* k23096 in k23089 in a23083 in a23070 in k25334 in k25331 in k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22756(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a23076 in a23070 in k25334 in k25331 in k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23077,2,t0,t1);}
t2=lf[436]=C_fix(0);;
C_trace("ChickenBridge.scm: 379  parser");
f_23109(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k25338 in k25334 in k25331 in k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25340,2,t0,t1);}
t2=C_mutate(&lf[460],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25343,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=C_retrieve2(lf[460],"*sal-output*");
if(C_truep((C_word)C_i_structurep(t4,lf[403]))){
t5=C_retrieve2(lf[458],"*sal-string*");
t6=C_retrieve2(lf[460],"*sal-output*");
t7=(C_word)C_i_string_length(t5);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25377,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  parse-error-position");
f_22587(t8,t6);}
else{
if(C_truep(((C_word*)t0)[2])){
C_trace("ChickenBridge.scm: 379  pp");
t5=C_retrieve(lf[466]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[460],"*sal-output*"));}
else{
C_trace("ChickenBridge.scm: 379  eval");
t5=C_retrieve(lf[467]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[460],"*sal-output*"));}}}

/* k25375 in k25338 in k25334 in k25331 in k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25377,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25383,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25470,a[2]=((C_word*)t0)[4],a[3]=t9,a[4]=t4,a[5]=((C_word)li379),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_25470(t11,t7,C_SCHEME_FALSE);}

/* do3998 in k25375 in k25338 in k25334 in k25331 in k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_25470(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25470,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25480,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_25480(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_25480(t11,t10);}}}

/* k25478 in do3998 in k25375 in k25338 in k25334 in k25331 in k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_25480(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_25470(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k25381 in k25375 in k25338 in k25334 in k25331 in k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25383,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25391,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25440,a[2]=((C_word*)t0)[4],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li378),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_25440(t9,t5,C_SCHEME_FALSE);}

/* do4005 in k25381 in k25375 in k25338 in k25334 in k25331 in k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_25440(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25440,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25450,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_25450(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_25450(t11,t10);}}}

/* k25448 in do4005 in k25381 in k25375 in k25338 in k25334 in k25331 in k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_25450(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_25440(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k25389 in k25381 in k25375 in k25338 in k25334 in k25331 in k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25391,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25394,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25401,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25405,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  parse-error-string");
f_22569(t4,((C_word*)t0)[2]);}

/* k25403 in k25389 in k25381 in k25375 in k25338 in k25334 in k25331 in k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25405,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25409,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  make-string");
t3=*((C_word*)lf[374]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k25407 in k25403 in k25389 in k25381 in k25375 in k25338 in k25334 in k25331 in k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25409,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25413,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  substring");
t3=*((C_word*)lf[465]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k25411 in k25407 in k25403 in k25389 in k25381 in k25375 in k25338 in k25334 in k25331 in k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25413,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25417,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  make-string");
t3=*((C_word*)lf[374]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k25415 in k25411 in k25407 in k25403 in k25389 in k25381 in k25375 in k25338 in k25334 in k25331 in k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25417,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25424,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 379  make-string");
t5=*((C_word*)lf[374]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k25422 in k25415 in k25411 in k25407 in k25403 in k25389 in k25381 in k25375 in k25338 in k25334 in k25331 in k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25424,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 379  string-append");
t5=*((C_word*)lf[171]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[464],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k25399 in k25389 in k25381 in k25375 in k25338 in k25334 in k25331 in k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  print-error");
t2=C_retrieve(lf[463]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k25392 in k25389 in k25381 in k25375 in k25338 in k25334 in k25331 in k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[2]);}

/* k25341 in k25338 in k25334 in k25331 in k25326 in sal in k25315 in k25312 in k25309 in k25306 in k25303 in k24720 in k24717 in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_25343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24198(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24198,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24205,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_24211,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t33,t34,C_fix(23296));}

/* k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24211,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24215,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_24261,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t2,t3,C_fix(10756));}}

/* k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24261,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24265,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_24358,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t2,t3,C_fix(22784));}}

/* k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24358,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24362,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24426,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24426,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24433,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24683,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_24433(t8,t7);}}

/* k24681 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24433(t3,t2);}

/* k24431 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_24433(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24433,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24436,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24622,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24671,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k24669 in k24431 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24436(t3,t2);}

/* k24620 in k24431 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24622,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24628,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k24626 in k24620 in k24431 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24628,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24652,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t3=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_24436(t4,t3);}}

/* k24650 in k24626 in k24620 in k24431 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24652,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24636,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24648,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t6=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k24646 in k24650 in k24626 in k24620 in k24431 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k24634 in k24650 in k24626 in k24620 in k24431 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24436(t3,t2);}

/* k24434 in k24431 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_24436(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24436,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24439,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_24439(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24598,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[457]);}}

/* k24596 in k24434 in k24431 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24598,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24602,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k24600 in k24596 in k24434 in k24431 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_24439(t4,t3);}

/* k24437 in k24434 in k24431 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_24439(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24439,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24442,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_24442(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24575,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[456]);}}

/* k24573 in k24437 in k24434 in k24431 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24575,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24579,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k24577 in k24573 in k24437 in k24434 in k24431 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_24442(t4,t3);}

/* k24440 in k24437 in k24434 in k24431 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_24442(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24442,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24445,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_24445(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24552,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[455]);}}
else{
t3=t2;
f_24445(t3,C_SCHEME_UNDEFINED);}}

/* k24550 in k24440 in k24437 in k24434 in k24431 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24552,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24556,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k24554 in k24550 in k24440 in k24437 in k24434 in k24431 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_24445(t4,t3);}

/* k24443 in k24440 in k24437 in k24434 in k24431 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_24445(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24445,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24448,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24477,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[104],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_24448(t7,t6);}}

/* k24475 in k24443 in k24440 in k24437 in k24434 in k24431 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24477,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[448],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[104],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_24448(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24495,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k24493 in k24475 in k24443 in k24440 in k24437 in k24434 in k24431 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24495,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[454],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[104],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_24448(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24513,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k24511 in k24493 in k24475 in k24443 in k24440 in k24437 in k24434 in k24431 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24513,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[242],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[106],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_24448(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24531,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k24529 in k24511 in k24493 in k24475 in k24443 in k24440 in k24437 in k24434 in k24431 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24531,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[376],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[106],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24448(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_24448(t2,C_SCHEME_UNDEFINED);}}

/* k24446 in k24443 in k24440 in k24437 in k24434 in k24431 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_24448(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24448,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24452,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k24450 in k24446 in k24443 in k24440 in k24437 in k24434 in k24431 in k24424 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24205(t3,t2);}

/* k24360 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24362,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24366,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k24364 in k24360 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24366,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24370,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[453]);}

/* k24368 in k24364 in k24360 in k24356 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24370,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_24205(t12,t11);}

/* k24263 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24265,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24269,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k24267 in k24263 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24269,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24273,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[53]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k24271 in k24267 in k24263 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24273,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24276,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24292,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_24276(t6,t5);}}

/* k24290 in k24271 in k24267 in k24263 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24292,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24296,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[452]);}

/* k24294 in k24290 in k24271 in k24267 in k24263 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24296,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[451],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_24276(t12,t11);}

/* k24274 in k24271 in k24267 in k24263 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_24276(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24276,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24280,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k24278 in k24274 in k24271 in k24267 in k24263 in k24259 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24205(t3,t2);}

/* k24213 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24215,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24219,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[450]);}

/* k24217 in k24213 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24219,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24223,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[449]);}

/* k24221 in k24217 in k24213 in k24209 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24223,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[104],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[448],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_24205(t10,t9);}

/* k24203 in sal-parse-stepping in k24194 in k24191 in k24188 in k24185 in k24182 in k24179 in k24176 in k24173 in k24170 in k24167 in k24164 in k24161 in k24158 in k24155 in k24152 in k24149 in k24146 in k24143 in k24140 in k24137 in k24134 in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_24205(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_24020(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24020,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24032,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li375),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_24032(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do3626 in inf->pre in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_24032(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24032,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24051,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  is-op?");
f_23999(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k24049 in do3626 in inf->pre in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24051,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24054,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24069,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li374),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_24069(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_24054(2,t5,t4);}}

/* do3628 in k24049 in do3626 in inf->pre in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_24069(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24069,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24083,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24097,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t12=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24101,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 379  is-op?");
f_23999(t10,t11);}}

/* k24099 in do3628 in k24049 in do3626 in inf->pre in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24101,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24104,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_24104(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_24104(t10,t9);}}

/* k24102 in k24099 in do3628 in k24049 in do3626 in inf->pre in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_24104(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_24069(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k24095 in do3628 in k24049 in do3626 in inf->pre in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  inf->pre");
f_24020(((C_word*)t0)[2],t1);}

/* k24081 in do3628 in k24049 in do3626 in inf->pre in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24083,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k24052 in k24049 in do3626 in inf->pre in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_24032(t2,((C_word*)t0)[2]);}

/* is-op? in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_23999(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23999,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24006,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  token-unit?");
f_22668(t3,t2);}

/* k24004 in is-op? in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24006,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24009,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22620(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k24007 in k24004 in is-op? in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24009,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24015,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  SalOpType?");
f_23776(t2,t1);}

/* k24013 in k24007 in k24004 in is-op? in k23995 in k23992 in k23989 in k23986 in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_24015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24015,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_bitwise_and(&a,2,t3,C_fix(255)));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_23934(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23934,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23943,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li371),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_23943(t10,t1,t2);}

/* do3592 in remove-token-type in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_23943(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23943,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23956,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23966,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22684(t4,t5,((C_word*)t0)[2]);}}

/* k23964 in do3592 in remove-token-type in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23966,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_23956(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_23956(t7,t6);}}

/* k23954 in do3592 in remove-token-type in k23930 in k23927 in k23924 in k23921 in k23918 in k23915 in k23912 in k23909 in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_23956(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_23943(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_23890(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23890,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_arithmetic_shift(&a,2,t2,C_fix(-8));
t5=(C_word)C_a_i_arithmetic_shift(&a,2,t3,C_fix(-8));
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_nequalp(t4,t5));}

/* SalRuleType? in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_23878(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23878,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_23776(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23776,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_23728(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23728,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_23109(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23109,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23113,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 379  printf");
t10=C_retrieve(lf[442]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,lf[443],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_23113(2,t10,C_SCHEME_UNDEFINED);}}

/* k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23113,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23116,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  null-tokens?");
f_22288(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23116,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23119,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_23119(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23534,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23538,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23542,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  first-token");
f_22276(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k23540 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  token-position");
f_22235(((C_word*)t0)[2],t1);}

/* k23536 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  max");
t2=*((C_word*)lf[307]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[436],"*maxtokpos*"),t1);}

/* k23532 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[436],t1);
t3=((C_word*)t0)[2];
f_23119(t3,t2);}

/* k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_23119(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23119,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23128,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  pattern-value");
t4=C_retrieve2(lf[280],"pattern-value");
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[8]);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23242,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_22430(t3,((C_word*)t0)[8]);}}

/* k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23242,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23248,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22475,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_22430(t4,t3);}
else{
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[441],((C_word*)t0)[2]);}}

/* k22473 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_23248(t3,(C_word)C_eqp(t2,lf[423]));}
else{
t2=((C_word*)t0)[2];
f_23248(t2,C_SCHEME_FALSE);}}

/* k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_23248(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23248,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23257,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  pattern-nsubs");
f_22448(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23336,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22491,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_22430(t5,t4);}}

/* k22489 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_23336(t3,(C_word)C_eqp(t2,lf[424]));}
else{
t2=((C_word*)t0)[2];
f_23336(t2,C_SCHEME_FALSE);}}

/* k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_23336(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23336,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23342,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  pattern-nsubs");
f_22448(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23406,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  pattern-zero-or-more?");
f_22516(t2,((C_word*)t0)[2]);}}

/* k23404 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23406,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23409,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_23409(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22507,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_22430(t4,t3);}}

/* k22505 in k23404 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_23409(t3,(C_word)C_eqp(t2,lf[104]));}
else{
t2=((C_word*)t0)[2];
f_23409(t2,C_SCHEME_FALSE);}}

/* k23407 in k23404 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_23409(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23409,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23415,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23438,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li363),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_23438(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23487,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22539,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_22430(t4,t3);}}

/* k22537 in k23407 in k23404 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_23487(t3,(C_word)C_eqp(t2,lf[440]));}
else{
t2=((C_word*)t0)[2];
f_23487(t2,C_SCHEME_FALSE);}}

/* k23485 in k23407 in k23404 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_23487(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23487,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23496,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23507,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li364),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23513,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li365),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[439],t3);}}

/* a23512 in k23485 in k23407 in k23404 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23513(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23513,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a23506 in k23485 in k23407 in k23404 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23507,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  parser");
f_23109(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23494 in k23485 in k23407 in k23404 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do3329 in k23407 in k23404 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_23438(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23438,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23448,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_23448(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 379  null-tokens?");
f_22288(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k23446 in do3329 in k23407 in k23404 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23448,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_23451,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23468,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li361),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23474,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li362),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a23473 in k23446 in do3329 in k23407 in k23404 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23474(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23474,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a23467 in k23446 in do3329 in k23407 in k23404 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23468,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  parser");
f_23109(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23449 in k23446 in do3329 in k23407 in k23404 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23451,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23454,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23461,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_23454(t3,C_SCHEME_UNDEFINED);}}

/* k23459 in k23449 in k23446 in do3329 in k23407 in k23404 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23461,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_23454(t6,t5);}

/* k23452 in k23449 in k23446 in do3329 in k23407 in k23404 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_23454(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_23438(t2,((C_word*)t0)[2]);}

/* k23413 in k23407 in k23404 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23415,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23418,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23424,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  pattern-zero-or-more?");
f_22516(t3,((C_word*)t0)[2]);}

/* k23422 in k23413 in k23407 in k23404 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_23418(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_23418(t5,t4);}}

/* k23416 in k23413 in k23407 in k23404 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_23418(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k23340 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23342,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23345,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_23360,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li360),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_23360(t6,t2,C_fix(0));}

/* do3309 in k23340 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_23360(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23360,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23370,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23379,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li358),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23393,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li359),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a23392 in do3309 in k23340 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23393(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23393,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a23378 in do3309 in k23340 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23379,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23387,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  pattern-sub");
f_22458(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23385 in a23378 in do3309 in k23340 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23387,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 379  parser");
f_23109(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23368 in do3309 in k23340 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23370,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_23360(t3,((C_word*)t0)[2],t2);}

/* k23343 in k23340 in k23334 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k23255 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23257,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23260,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23279,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li357),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_23279(t8,t4,C_fix(0));}

/* do3287 in k23255 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_23279(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23279,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23292,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23312,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li355),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23326,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li356),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a23325 in do3287 in k23255 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23326(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23326,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a23311 in do3287 in k23255 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23312,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23320,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  pattern-sub");
f_22458(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23318 in a23311 in do3287 in k23255 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23320,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 379  parser");
f_23109(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23290 in do3287 in k23255 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23292,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23295,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_23295(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_23295(t5,t4);}}

/* k23293 in k23290 in do3287 in k23255 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_23295(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23295,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_23279(t3,((C_word*)t0)[2],t2);}

/* k23258 in k23255 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23260,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23263,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_23263(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23277,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t5=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k23275 in k23258 in k23255 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_23263(t3,t2);}

/* k23261 in k23258 in k23255 in k23246 in k23240 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_23263(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k23126 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23128,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23134,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  SalTokenType?");
f_23728(t2,t1);}

/* k23132 in k23126 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23134,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23140,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  null-tokens?");
f_22288(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23192,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  SalRuleType?");
f_23878(t2,((C_word*)t0)[5]);}}

/* k23190 in k23132 in k23126 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23192,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23195,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  get-rule");
f_22406(t2,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[438],((C_word*)t0)[2]);}}

/* k23193 in k23190 in k23132 in k23126 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23195,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[393]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[393]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23206,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li353),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23216,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li354),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a23215 in k23193 in k23190 in k23132 in k23126 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23216(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23216,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23227,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 379  func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_23227(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k23225 in a23215 in k23193 in k23190 in k23132 in k23126 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a23205 in k23193 in k23190 in k23132 in k23126 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23206,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 379  parser");
f_23109(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23138 in k23132 in k23126 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23140,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23150,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  first-token");
f_22276(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k23148 in k23138 in k23132 in k23126 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23150,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23156,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23186,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  token-type");
f_22199(t3,t1);}

/* k23184 in k23148 in k23138 in k23132 in k23126 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23890(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k23154 in k23148 in k23138 in k23132 in k23126 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23156,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23163,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23171,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  token-type");
f_22199(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k23169 in k23154 in k23148 in k23138 in k23132 in k23126 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23171,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23175,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-string");
f_22217(t2,((C_word*)t0)[2]);}

/* k23173 in k23169 in k23154 in k23148 in k23138 in k23132 in k23126 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23175,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23179,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-position");
f_22235(t2,((C_word*)t0)[2]);}

/* k23177 in k23173 in k23169 in k23154 in k23148 in k23138 in k23132 in k23126 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k23161 in k23154 in k23148 in k23138 in k23132 in k23126 in k23117 in k23114 in k23111 in parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_23005(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23005,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23007,a[2]=t2,a[3]=((C_word)li351),tmp=(C_word)a,a+=4,tmp));}

/* f_23007 in simple-unit-emitter in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_23007(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23007,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23011,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23055,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t6,t2);}

/* k23053 */
static void C_ccall f_23055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k23009 */
static void C_ccall f_23011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23011,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23014,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_23014(t9,t8);}
else{
t6=t5;
f_23014(t6,C_SCHEME_UNDEFINED);}}

/* k23012 in k23009 */
static void C_fcall f_23014(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23014,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23019,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li350),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_23019(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do3244 in k23012 in k23009 */
static void C_fcall f_23019(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23019,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23040,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k23038 in do3244 in k23012 in k23009 */
static void C_ccall f_23040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_23019(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22997(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22997,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22999,a[2]=t2,a[3]=((C_word)li348),tmp=(C_word)a,a+=4,tmp));}

/* f_22999 in simple-unit-parser in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22999(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22999,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22599(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* != in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22820(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2r,(void*)f_22820r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22820r(t0,t1,t2);}}

static void C_ccall f_22820r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a=C_alloc(3);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22828,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(4,0,t3,*((C_word*)lf[433]+1),t2);}

/* k22826 in != in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_not(t1));}

/* emit-list in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22789(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22789,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22806,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  emit");
f_22756(t5,t6,t3,t4);}}

/* k22804 in emit-list in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22806,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22810,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  emit-list");
f_22789(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22808 in k22804 in emit-list in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22810,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22756(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22756,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22763,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  token-unit?");
f_22668(t5,t2);}

/* k22761 in emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22763,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22834,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22620(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22772,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22707,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit?");
f_22605(t4,t3);}}

/* k22705 in k22761 in emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22707,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22714,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22620(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_22772(2,t2,C_SCHEME_FALSE);}}

/* k22712 in k22705 in k22761 in emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  SalRuleType?");
f_23878(((C_word*)t0)[2],t1);}

/* k22770 in k22761 in emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22772,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22972,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22995,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22620(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 379  emit-list");
f_22789(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[430],((C_word*)t0)[4]);}}}

/* k22993 in k22770 in k22761 in emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  get-rule");
f_22406(((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k22970 in k22770 in k22761 in emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22972,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[393]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 379  meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22988,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t4,((C_word*)t0)[4]);}}

/* k22986 in k22970 in k22770 in k22761 in emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22756(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22832 in k22761 in emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22834,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22837,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22638(t2,((C_word*)t0)[2]);}

/* k22835 in k22832 in k22761 in emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22837,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 379  string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 379  string->symbol");
t8=*((C_word*)lf[421]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22861,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalOpType?");
f_23776(t8,((C_word*)t0)[4]);}}}

/* k22859 in k22835 in k22832 in k22761 in emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22861,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22867,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23890(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22912,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23890(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22918,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23890(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k22916 in k22859 in k22835 in k22832 in k22761 in emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22918,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22924,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23890(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k22922 in k22916 in k22859 in k22835 in k22832 in k22761 in emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22924,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22933,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23890(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k22931 in k22922 in k22916 in k22859 in k22835 in k22832 in k22761 in emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22933,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22942,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23890(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k22940 in k22931 in k22922 in k22916 in k22859 in k22835 in k22832 in k22761 in emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22942,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  string->symbol");
t2=*((C_word*)lf[421]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22951,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23890(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k22949 in k22940 in k22931 in k22922 in k22916 in k22859 in k22835 in k22832 in k22761 in emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22951,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[426],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22960,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23890(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k22958 in k22949 in k22940 in k22931 in k22922 in k22916 in k22859 in k22835 in k22832 in k22761 in emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  string->symbol");
t2=*((C_word*)lf[421]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[427],((C_word*)t0)[2]);}}

/* k22910 in k22859 in k22835 in k22832 in k22761 in emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k22865 in k22859 in k22835 in k22832 in k22761 in emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22867,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[136]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22873,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23890(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k22871 in k22865 in k22859 in k22835 in k22832 in k22761 in emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22873,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[114]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22879,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23890(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k22877 in k22871 in k22865 in k22859 in k22835 in k22832 in k22761 in emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22879,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[422]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22885,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23890(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k22883 in k22877 in k22871 in k22865 in k22859 in k22835 in k22832 in k22761 in emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22885,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[423]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22891,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23890(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k22889 in k22883 in k22877 in k22871 in k22865 in k22859 in k22835 in k22832 in k22761 in emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22891,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[424]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22897,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23890(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k22895 in k22889 in k22883 in k22877 in k22871 in k22865 in k22859 in k22835 in k22832 in k22761 in emit in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[425]);}
else{
C_trace("ChickenBridge.scm: 379  string->symbol");
t2=*((C_word*)lf[421]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22738(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22738,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22745,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_22745(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[419],t2);}}

/* k22743 in set-emit-info! in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22728(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22728,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22716(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22716,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22684(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22684,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22691,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-unit?");
f_22668(t4,t2);}

/* k22689 in token-unit-type=? in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22691,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22698,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22620(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k22696 in k22689 in token-unit-type=? in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23890(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22668(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22668,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22675,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit?");
f_22605(t3,t2);}

/* k22673 in token-unit? in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22675,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22682,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22620(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k22680 in k22673 in token-unit? in k22664 in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  SalTokenType?");
f_23728(((C_word*)t0)[2],t1);}

/* parse-unit-position in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22656(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22656,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[407]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22638(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22638,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[407]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22620(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22620,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[407]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22605(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22605,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[407]));}

/* make-parse-unit in k22595 in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22599(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22599,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[407],t2,t3,t4));}

/* parse-error-position in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22587(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22587,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[403]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-error-string in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22569(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22569,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[403]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-parse-error in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22548(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22548,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[403],t2,t3));}

/* pattern-zero-or-more? in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22516(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22516,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22523,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_22430(t3,t2);}

/* k22521 in pattern-zero-or-more? in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[108]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22458(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22458,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22466,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-subs");
f_22442(t4,t2);}

/* k22464 in pattern-sub in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22448(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22448,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22456,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-subs");
f_22442(t3,t2);}

/* k22454 in pattern-nsubs in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22442(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22442,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22430(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22430,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* pattern-value in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22427(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22427,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* get-rule in k22402 in k22399 in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22406(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22406,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[391],"*rules*"),t2);}
else{
C_trace("ChickenBridge.scm: 379  hash-table-ref/default");
t4=C_retrieve(lf[396]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[391],"*rules*"),t3);}}

/* rule-name in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22319(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22319,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[393]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-rule in k22294 in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22298(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22298,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[393],t2,t3,t4,t5,t6));}

/* null-tokens? in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22288(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22288,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22276(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22276,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k22243 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22247(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22247,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[388]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[382],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[382],"make-token"),t2);}}

/* token-position in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22235(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22235,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[383]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-string in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22217(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22217,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[383]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* token-type in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_22199(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22199,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[383]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22178(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22178,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[383],t2,t3,t4));}

/* markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21156(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+61)){
C_save_and_reclaim((void*)tr3r,(void*)f_21156r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_21156r(t0,t1,t2,t3);}}

static void C_ccall f_21156r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(61);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_length(t2);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_fix(8);
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_fix(1);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_fix(1);
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=t3;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_21166,a[2]=t22,a[3]=t26,a[4]=t20,a[5]=t3,a[6]=t24,a[7]=t2,a[8]=t8,a[9]=t14,a[10]=t10,a[11]=t1,a[12]=t12,a[13]=t18,a[14]=t7,a[15]=t16,a[16]=t5,tmp=(C_word)a,a+=17,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t24)[1]))){
t28=t27;
f_21166(t28,C_SCHEME_UNDEFINED);}
else{
t28=(C_word)C_i_car(((C_word*)t24)[1]);
t29=(C_word)C_eqp(t28,lf[221]);
if(C_truep(t29)){
t30=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22091,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t20,a[7]=t16,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t20)[1])){
C_trace("error");
t31=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[19],lf[221]);}
else{
t31=t30;
f_22091(2,t31,C_SCHEME_UNDEFINED);}}
else{
t30=(C_word)C_eqp(t28,lf[381]);
if(C_truep(t30)){
t31=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22126,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t22,a[7]=t18,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t32=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[19],lf[381]);}
else{
t32=t31;
f_22126(2,t32,C_SCHEME_UNDEFINED);}}
else{
t31=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22155,a[2]=t27,a[3]=t20,a[4]=t16,a[5]=t24,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t26)[1])){
C_trace("error");
t32=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[10],t3);}
else{
t32=t31;
f_22155(2,t32,C_SCHEME_UNDEFINED);}}}}}

/* k22153 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22155,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22162,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22170,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22168 in k22153 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22162(2,t2,C_SCHEME_UNDEFINED);}}

/* k22160 in k22153 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21166(t5,t4);}

/* k22124 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22126,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22130,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22130(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22128 in k22124 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21166(t7,t6);}

/* k22089 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22091,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22095,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22095(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22093 in k22089 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21166(t7,t6);}

/* k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_21166(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21166,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21169,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],a[13]=((C_word*)t0)[16],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_21169(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21991,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[221]);}
else{
t6=t5;
f_21991(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[381]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22026,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[381]);}
else{
t7=t6;
f_22026(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22055,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_22055(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k22053 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22055,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22062,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22070,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22068 in k22053 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22062(2,t2,C_SCHEME_UNDEFINED);}}

/* k22060 in k22053 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21169(t5,t4);}

/* k22024 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22026,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22030,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22030(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22028 in k22024 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_22030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21169(t7,t6);}

/* k21989 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21991,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21995,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21995(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21993 in k21989 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21169(t7,t6);}

/* k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_21169(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21169,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21172,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_21172(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21172,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,((C_word*)((C_word*)t0)[10])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21177,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
t5=((C_word*)((C_word*)t0)[9])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t5,C_fix(1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(2)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(3)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t6=t4;
f_21177(2,t6,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[380],((C_word*)((C_word*)t0)[9])[1]);}}

/* k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21177,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21179,a[2]=((C_word*)t0)[9],a[3]=((C_word)li294),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21261,a[2]=t4,a[3]=((C_word)li297),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21371,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21884,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=t8,a[7]=((C_word*)t0)[4],a[8]=((C_word)li314),tmp=(C_word)a,a+=9,tmp));
t10=((C_word*)t8)[1];
f_21884(t10,t6,C_fix(0));}

/* do2893 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_21884(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21884,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21894,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21907,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=t5,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=((C_word)li313),tmp=(C_word)a,a+=10,tmp));
t7=((C_word*)t5)[1];
f_21907(t7,t3,C_SCHEME_END_OF_LIST,C_fix(0),C_SCHEME_FALSE);}}

/* do2896 in do2893 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_21907(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21907,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)((C_word*)t0)[8])[1]))){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21917,a[2]=t1,a[3]=((C_word*)t0)[7],a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21935,a[2]=t6,a[3]=t7,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t9=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t5)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21960,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t6,a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 378  modulo");
t9=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,((C_word*)t0)[2]);}}

/* k21958 in do2896 in do2893 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21960,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)t0)[8],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21942,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[2])[1]))){
t5=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t4;
f_21942(t7,t6);}
else{
t5=t4;
f_21942(t5,C_SCHEME_UNDEFINED);}}

/* k21940 in k21958 in do2896 in do2893 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_21942(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21942,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_21907(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k21933 in do2896 in do2893 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  add-outcome");
t2=((C_word*)t0)[4];
f_21179(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k21915 in do2896 in do2893 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21917,2,t0,t1);}
if(C_truep((C_word)C_i_member(((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]))){
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}}

/* k21892 in do2893 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21894,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_21884(t3,((C_word*)t0)[2],t2);}

/* k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21371,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21374,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21840,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  sort");
t5=C_retrieve(lf[196]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[4])[1],*((C_word*)lf[376]+1));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21846,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=t4;
f_21846(t6,(C_word)C_i_symbolp(t5));}
else{
t5=t4;
f_21846(t5,C_SCHEME_FALSE);}}}

/* k21844 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_21846(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21846,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21850,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21852,a[2]=((C_word)li312),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  sort");
t4=C_retrieve(lf[196]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[3])[1],t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21868,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t3=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k21866 in k21844 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21374(t3,t2);}

/* a21851 in k21844 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21852(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21852,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21860,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  format");
t5=C_retrieve(lf[361]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_SCHEME_FALSE,lf[379],t2);}

/* k21858 in a21851 in k21844 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21860,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21864,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  format");
t3=C_retrieve(lf[361]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[378],((C_word*)t0)[2]);}

/* k21862 in k21858 in a21851 in k21844 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  string-ci<?");
t2=*((C_word*)lf[377]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k21848 in k21844 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21374(t3,t2);}

/* k21838 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21374(t3,t2);}

/* k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_21374(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21374,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21377,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21717,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li311),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_21717(t6,t2,((C_word*)((C_word*)t0)[7])[1],C_fix(0));}

/* do2909 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_21717(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21717,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21728,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  max");
t6=*((C_word*)lf[307]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=(C_word)C_i_cddr(t5);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21741,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t9=(C_word)C_i_string_length(t6);
C_trace("ChickenBridge.scm: 378  max");
t10=*((C_word*)lf[307]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t8,((C_word*)t4)[1],t9);}}

/* k21739 in do2909 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21741,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21744,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21803,a[2]=t5,a[3]=((C_word)li310),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_21803(t7,t3,((C_word*)t0)[2],C_fix(0));}

/* do2917 in k21739 in do2909 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_21803(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_21803,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t4);
t6=(C_word)C_a_i_plus(&a,2,t3,t5);
t7=t3=t6;
t8=(C_word)C_i_cdr(t2);
t10=t1;
t11=t8;
t12=t3;
t1=t10;
t2=t11;
t3=t12;
goto loop;}}

/* k21742 in k21739 in do2909 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21744,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_times(&a,2,((C_word*)t3)[1],lf[375]);
t5=C_set_block_item(t3,0,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21751,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21760,a[2]=t3,a[3]=t8,a[4]=((C_word)li309),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_21760(t10,t6,((C_word*)t0)[2]);}

/* do2923 in k21742 in k21739 in do2909 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_21760(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21760,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cdr(t3);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21785,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t6);
t8=(C_word)C_a_i_divide(&a,2,t7,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 378  decimals");
t9=C_retrieve(lf[112]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,t8,C_fix(3));}}

/* k21783 in do2923 in k21742 in k21739 in do2909 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[5],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_21760(t4,((C_word*)t0)[2],t3);}

/* k21749 in k21742 in k21739 in do2909 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_21717(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k21726 in do2909 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21377,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21381,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21703,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word)li308),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  sort");
t4=C_retrieve(lf[196]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[7])[1],t3);}

/* a21702 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21703(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21703,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 378  before?");
t6=((C_word*)((C_word*)t0)[3])[1];
f_21261(t6,t1,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21381,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21384,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],C_fix(1));
if(C_truep(t4)){
t5=lf[364];
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21425,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  make-string");
t7=*((C_word*)lf[374]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,C_fix(5),C_make_character(45));}
else{
t5=t3;
f_21384(2,t5,C_SCHEME_UNDEFINED);}}

/* k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21425,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21428,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  newline");
t3=*((C_word*)lf[365]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21428,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21431,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21684,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li307),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_21684(t6,t2,C_fix(0));}

/* do2936 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_21684(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21684,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[3])[1]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21694,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("write-char/port");
t4=C_retrieve(lf[367]);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t3,C_make_character(42),*((C_word*)lf[368]+1));}}

/* k21692 in do2936 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21694,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_21684(t3,((C_word*)t0)[2],t2);}

/* k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21431,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21434,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21622,a[2]=((C_word*)t0)[6],a[3]=t4,a[4]=((C_word)li306),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_21622(t6,t2,((C_word*)((C_word*)t0)[4])[1]);}

/* do2941 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_21622(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21622,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21632,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  display");
t4=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k21630 in do2941 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21632,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21635,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  format");
t4=C_retrieve(lf[361]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_SCHEME_FALSE,lf[373],t3);}

/* k21633 in k21630 in do2941 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21635,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21641,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21655,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,C_fix(5),t2);
C_trace("ChickenBridge.scm: 378  max");
t6=*((C_word*)lf[307]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k21653 in k21633 in k21630 in do2941 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21655,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21657,a[2]=t3,a[3]=((C_word)li305),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_21657(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2946 in k21653 in k21633 in k21630 in do2941 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_21657(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21657,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21667,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[367]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[368]+1));}}

/* k21665 in do2946 in k21653 in k21633 in k21630 in do2941 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21667,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_21657(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k21639 in k21633 in k21630 in do2941 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21641,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21644,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  display");
t3=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k21642 in k21639 in k21633 in k21630 in do2941 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21622(t3,((C_word*)t0)[2],t2);}

/* k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21434,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21437,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21442,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t4,a[7]=((C_word)li304),tmp=(C_word)a,a+=8,tmp));
t6=((C_word*)t4)[1];
f_21442(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_21442(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21442,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21455,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,a[7]=t1,a[8]=((C_word*)t0)[6],a[9]=t2,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 378  newline");
t5=*((C_word*)lf[365]+1);
((C_proc2)C_retrieve_proc(t5))(2,t5,t4);}}

/* k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21455,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21458,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_21458(2,t4,lf[370]);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21329,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 378  format");
t6=C_retrieve(lf[361]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[372],t5);}}

/* k21327 in k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21329,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21338,a[2]=t6,a[3]=t3,a[4]=((C_word)li303),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_21338(t8,((C_word*)t0)[2],t4);}

/* do2888 in k21327 in k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_21338(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21338,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21349,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21360,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  format");
t6=C_retrieve(lf[361]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[371],t5);}}

/* k21358 in do2888 in k21327 in k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  string-append");
t2=*((C_word*)lf[171]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k21347 in do2888 in k21327 in k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_21338(t4,((C_word*)t0)[2],t3);}

/* k21456 in k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21458,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21464,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21593,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[2])[1],t2);
C_trace("ChickenBridge.scm: 378  max");
t6=*((C_word*)lf[307]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k21591 in k21456 in k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21593,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21595,a[2]=t3,a[3]=((C_word)li302),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_21595(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2962 in k21591 in k21456 in k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_21595(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21595,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21605,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[367]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[368]+1));}}

/* k21603 in do2962 in k21591 in k21456 in k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21605,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_21595(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k21462 in k21456 in k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21464,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21467,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21566,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  min");
t4=*((C_word*)lf[369]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k21564 in k21462 in k21456 in k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21566,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21568,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li301),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_21568(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2968 in k21564 in k21462 in k21456 in k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_21568(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21568,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21578,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_string_ref(((C_word*)t0)[2],t2);
C_trace("write-char/port");
t6=C_retrieve(lf[367]);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,*((C_word*)lf[368]+1));}}

/* k21576 in do2968 in k21564 in k21462 in k21456 in k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21578,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_21568(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k21465 in k21462 in k21456 in k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21467,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21470,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21479,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word*)t0)[5],a[6]=((C_word)li300),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_21479(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do2975 in k21465 in k21462 in k21456 in k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_21479(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21479,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[5]);
t5=(C_word)C_i_assoc(t3,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21492,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21511,a[2]=((C_word*)t0)[3],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(t5);
C_trace("ChickenBridge.scm: 378  number->string");
C_number_to_string(3,0,t7,t8);}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21505,a[2]=((C_word*)t0)[2],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  display");
t8=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[3]);}}}

/* k21503 in do2975 in k21465 in k21462 in k21456 in k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  display");
t2=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21509 in do2975 in k21465 in k21462 in k21456 in k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21511,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21517,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  display");
t4=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k21515 in k21509 in do2975 in k21465 in k21462 in k21456 in k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21517,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21520,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21527,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,C_fix(5),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  max");
t5=*((C_word*)lf[307]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_fix(0));}

/* k21525 in k21515 in k21509 in do2975 in k21465 in k21462 in k21456 in k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21527,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21529,a[2]=t3,a[3]=((C_word)li299),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_21529(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2982 in k21525 in k21515 in k21509 in do2975 in k21465 in k21462 in k21456 in k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_21529(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21529,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21539,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[367]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[368]+1));}}

/* k21537 in do2982 in k21525 in k21515 in k21509 in do2975 in k21465 in k21462 in k21456 in k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21539,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_21529(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k21518 in k21515 in k21509 in do2975 in k21465 in k21462 in k21456 in k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  display");
t2=*((C_word*)lf[366]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21490 in do2975 in k21465 in k21462 in k21456 in k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21479(t3,((C_word*)t0)[2],t2);}

/* k21468 in k21465 in k21462 in k21456 in k21453 in do2956 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21442(t3,((C_word*)t0)[2],t2);}

/* k21435 in k21432 in k21429 in k21426 in k21423 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  newline");
t2=*((C_word*)lf[365]+1);
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[2]);}

/* k21382 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21384,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(1)))){
C_trace("ChickenBridge.scm: 378  values");
C_values(2,0,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21396,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21407,a[2]=((C_word)li298),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a21406 in k21382 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21407(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21407,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(t2);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t1,t3,lf[363],t4);}

/* k21394 in k21382 in k21379 in k21375 in k21372 in k21369 in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
C_trace("ChickenBridge.scm: 378  make-markov");
t2=C_retrieve(lf[341]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}}

/* before? in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_21261(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21261,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_TRUE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21271,a[2]=t4,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21309,a[2]=t2,a[3]=((C_word)li296),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  list-index");
t7=C_retrieve(lf[71]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,t6,t4);}}

/* a21308 in before? in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21309(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21309,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k21269 in before? in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21271,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21274,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21299,a[2]=((C_word*)t0)[4],a[3]=((C_word)li295),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  list-index");
t4=C_retrieve(lf[71]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a21298 in k21269 in before? in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21299(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21299,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k21272 in k21269 in before? in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[7],t1))){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}
else{
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[7],t1))){
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  before?");
t4=((C_word*)((C_word*)t0)[3])[1];
f_21261(t4,((C_word*)t0)[6],t2,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* add-outcome in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_21179(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21179,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21183,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21251,a[2]=t2,a[3]=((C_word)li293),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  list-find");
t6=C_retrieve(lf[72]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* a21250 in add-outcome in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21251(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21251,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(((C_word*)t0)[2],t3));}

/* k21181 in add-outcome in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21183,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_cddr(t1);
t4=(C_word)C_i_assoc(((C_word*)t0)[5],t3);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t4);
t6=(C_word)C_i_cadr(t4);
t7=(C_word)C_a_i_plus(&a,2,C_fix(1),t6);
t8=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_set_car(t5,t7));}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21233,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 378  tail");
t7=C_retrieve(lf[64]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21201,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  format");
t4=C_retrieve(lf[361]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,C_SCHEME_FALSE,lf[362],((C_word*)t0)[3]);}}

/* k21199 in k21181 in add-outcome in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21201,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],C_fix(1));
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* k21231 in k21181 in add-outcome in k21175 in k21170 in k21167 in k21164 in markov-analyze in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21233,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(1));
t3=(C_word)C_a_i_list(&a,1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_set_cdr(t1,t3));}

/* next-in-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21062(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21062,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21066,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14657(t3,t2);}

/* k21064 in next-in-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21066,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
t3=(C_word)C_i_car(t1);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21095,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_check_structure(t3,lf[352]);
t6=(C_word)C_i_block_ref(t3,C_fix(2));
C_trace("ChickenBridge.scm: 378  next-1");
f_15279(t4,t6);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_set_car(t1,t4);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  graph-node-datum");
f_20481(((C_word*)t0)[2],t6);}}

/* k21093 in k21064 in next-in-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21095,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21100,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=t3,a[6]=((C_word)li291),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_21100(t7,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2811 in k21093 in k21064 in next-in-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_21100(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21100,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[5])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nullp(t2));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21110,a[2]=((C_word*)t0)[5],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t6)){
t7=t5;
f_21110(2,t7,(C_word)C_i_set_car(((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]));}
else{
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[359],((C_word*)t0)[3]);}}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21125,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_check_structure(t6,lf[352]);
t8=(C_word)C_i_block_ref(t6,C_fix(3));
t9=(C_word)C_eqp(((C_word*)t0)[3],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(t2);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t5;
f_21125(t12,t11);}
else{
t10=t5;
f_21125(t10,C_SCHEME_UNDEFINED);}}}

/* k21123 in do2811 in k21093 in k21064 in next-in-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_21125(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21100(t3,((C_word*)t0)[2],t2);}

/* k21108 in do2811 in k21093 in k21064 in next-in-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  graph-node-datum");
f_20481(((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20544(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr3r,(void*)f_20544r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_20544r(t0,t1,t2,t3);}}

static void C_ccall f_20544r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(17);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20548,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20806,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=C_fix(1);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20815,a[2]=t9,a[3]=((C_word)li289),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t11=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t6,t10,t7);}
else{
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[358],((C_word*)t4)[1]);}}

/* parse-graph-item in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20815(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20815,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20819,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=t3;
f_20819(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[357],t2);}}

/* k20817 in parse-graph-item in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20819,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20824,a[2]=((C_word*)t0)[4],a[3]=((C_word)li288),tmp=(C_word)a,a+=4,tmp);
C_apply(4,0,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* a20823 in k20817 in parse-graph-item in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20824(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+46)){
C_save_and_reclaim((void*)tr3r,(void*)f_20824r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_20824r(t0,t1,t2,t3);}}

static void C_ccall f_20824r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(46);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20828,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t2,a[10]=t1,a[11]=((C_word*)t0)[2],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_20828(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[355]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20966,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[355]);}
else{
t20=t19;
f_20966(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[356]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21001,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[356]);}
else{
t21=t20;
f_21001(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21030,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_21030(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k21028 in a20823 in k20817 in parse-graph-item in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21030,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21037,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21045,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21043 in k21028 in a20823 in k20817 in parse-graph-item in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21037(2,t2,C_SCHEME_UNDEFINED);}}

/* k21035 in k21028 in a20823 in k20817 in parse-graph-item in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20828(t5,t4);}

/* k20999 in a20823 in k20817 in parse-graph-item in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21001,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21005,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21005(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21003 in k20999 in a20823 in k20817 in parse-graph-item in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_21005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20828(t7,t6);}

/* k20964 in a20823 in k20817 in parse-graph-item in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20966,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20970,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20970(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20968 in k20964 in a20823 in k20817 in parse-graph-item in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20828(t7,t6);}

/* k20826 in a20823 in k20817 in parse-graph-item in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_20828(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20828,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20831,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_20831(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[355]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20866,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[355]);}
else{
t6=t5;
f_20866(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[356]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20901,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[356]);}
else{
t7=t6;
f_20901(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20930,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_20930(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k20928 in k20826 in a20823 in k20817 in parse-graph-item in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20930,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20937,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20945,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20943 in k20928 in k20826 in a20823 in k20817 in parse-graph-item in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20937(2,t2,C_SCHEME_UNDEFINED);}}

/* k20935 in k20928 in k20826 in a20823 in k20817 in parse-graph-item in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20831(t5,t4);}

/* k20899 in k20826 in a20823 in k20817 in parse-graph-item in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20901,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20905,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20905(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20903 in k20899 in k20826 in a20823 in k20817 in parse-graph-item in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20831(t7,t6);}

/* k20864 in k20826 in a20823 in k20817 in parse-graph-item in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20866,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20870,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20870(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20868 in k20864 in k20826 in a20823 in k20817 in parse-graph-item in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20831(t7,t6);}

/* k20829 in k20826 in a20823 in k20817 in parse-graph-item in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_20831(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20831,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20834,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_20834(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k20832 in k20829 in k20826 in a20823 in k20817 in parse-graph-item in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20834,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20837,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=t2;
f_20837(t3,C_SCHEME_UNDEFINED);}
else{
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[6])[1]);
t4=t2;
f_20837(t4,t3);}}

/* k20835 in k20832 in k20829 in k20826 in a20823 in k20817 in parse-graph-item in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_20837(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20837,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=((C_word*)t0)[5];
t5=((C_word*)t0)[4];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,4,lf[352],t5,t6,t7));}

/* k20804 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20548(2,t3,t2);}

/* k20546 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20548,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20551,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_20551(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[310]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20711,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 378  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[310]);}
else{
t18=t17;
f_20711(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[311]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20746,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[311]);}
else{
t19=t18;
f_20746(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20775,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_20775(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k20773 in k20546 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20775,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20782,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20790,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20788 in k20773 in k20546 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20782(2,t2,C_SCHEME_UNDEFINED);}}

/* k20780 in k20773 in k20546 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20551(t5,t4);}

/* k20744 in k20546 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20746,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20750,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20750(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20748 in k20744 in k20546 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20551(t7,t6);}

/* k20709 in k20546 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20711,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20715,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20715(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20713 in k20709 in k20546 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20551(t7,t6);}

/* k20549 in k20546 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_20551(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20551,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20554,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_20554(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[310]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20611,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[310]);}
else{
t6=t5;
f_20611(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20646,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[311]);}
else{
t7=t6;
f_20646(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20675,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_20675(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k20673 in k20549 in k20546 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20675,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20682,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20690,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20688 in k20673 in k20549 in k20546 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20682(2,t2,C_SCHEME_UNDEFINED);}}

/* k20680 in k20673 in k20549 in k20546 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20554(t5,t4);}

/* k20644 in k20549 in k20546 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20646,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20650,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20650(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20648 in k20644 in k20549 in k20546 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20554(t7,t6);}

/* k20609 in k20549 in k20546 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20611,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20615,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20615(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20613 in k20609 in k20549 in k20546 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20554(t7,t6);}

/* k20552 in k20549 in k20546 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_20554(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20554,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20557,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_20557(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k20555 in k20552 in k20549 in k20546 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20557,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20560,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_14928(t2);}

/* k20558 in k20555 in k20552 in k20549 in k20546 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20560,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20566,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20572,a[2]=((C_word)li287),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_14938(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[354],"next-in-graph"),t5);}

/* a20571 in k20558 in k20555 in k20552 in k20549 in k20546 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20572(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20572,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20578,a[2]=((C_word)li286),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20590,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14657(t5,t3);}

/* k20588 in a20571 in k20558 in k20555 in k20552 in k20549 in k20546 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(t1);
C_trace("for-each");
t3=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a20577 in a20571 in k20558 in k20555 in k20552 in k20549 in k20546 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20578(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20578,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 378  graph-node-datum");
f_20481(t1,t2);}

/* k20564 in k20558 in k20555 in k20552 in k20549 in k20546 in make-graph in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* graph-node-datum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_20481(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20481,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[352]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20141(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20141,3,t0,t1,t2);}
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20144,a[2]=t4,a[3]=((C_word)li280),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20323,a[2]=t1,a[3]=t4,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14657(t6,t2);}

/* k20321 in next-in-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20323,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20327,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache");
f_14873(t2,((C_word*)t0)[4]);}

/* k20325 in k20321 in next-in-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20327,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20329,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li283),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_20329(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do2652 in k20325 in k20321 in next-in-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_20329(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20329,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20339,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t1,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
t8=t7;
f_20339(2,t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
if(C_truep(t8)){
t9=t7;
f_20339(2,t9,t8);}
else{
t9=(C_word)C_i_car(t2);
t10=(C_word)C_i_car(t9);
t11=t3;
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20254,a[2]=t13,a[3]=((C_word)li282),tmp=(C_word)a,a+=4,tmp));
t15=((C_word*)t13)[1];
f_20254(t15,t7,t10,t11,C_SCHEME_TRUE);}}}

/* do2637 in do2652 in k20325 in k20321 in next-in-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_20254(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20254,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20264,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t6)){
t8=t7;
f_20264(t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
t9=t7;
f_20264(t9,(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t5)[1])));}}

/* k20262 in do2637 in do2652 in k20325 in k20321 in next-in-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_20264(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20264,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_eqp(t2,lf[108]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20271,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t3)){
t5=t4;
f_20271(t5,t3);}
else{
t5=(C_word)C_i_car(((C_word*)t0)[4]);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
t7=(C_word)C_i_equalp(t5,t6);
if(C_truep(t7)){
t8=t4;
f_20271(t8,t7);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[3]);
t9=t4;
f_20271(t9,(C_word)C_eqp(t8,lf[108]));}}}}

/* k20269 in k20262 in do2637 in do2652 in k20325 in k20321 in next-in-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_20271(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_20254(t5,((C_word*)t0)[2],t3,t4,((C_word*)((C_word*)t0)[6])[1]);}

/* k20337 in do2652 in k20325 in k20321 in next-in-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20339,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20342,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[350],((C_word*)t0)[6]);}
else{
t3=t2;
f_20342(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_20329(t3,((C_word*)t0)[7],t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[8])[1]);}}

/* k20340 in k20337 in do2652 in k20325 in k20321 in next-in-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20342,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20346,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_i_cadr(t3);
t5=(C_word)C_i_car(((C_word*)t0)[3]);
t6=(C_word)C_i_cddr(t5);
C_trace("ChickenBridge.scm: 378  select-output");
t7=((C_word*)((C_word*)t0)[2])[1];
f_20144(t7,t2,t4,t6);}

/* k20344 in k20340 in k20337 in do2652 in k20325 in k20321 in next-in-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20346,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20349,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[3]))){
t4=t3;
f_20349(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_20349(2,t5,(C_word)C_i_set_car(((C_word*)t0)[3],((C_word*)((C_word*)t0)[5])[1]));}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20366,a[2]=t6,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word)li281),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_20366(t8,t3,((C_word*)t0)[3]);}}}

/* do2661 in k20344 in k20340 in k20337 in do2652 in k20325 in k20321 in next-in-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_20366(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_20366,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_set_car(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_set_cdr(t2,((C_word*)t0)[5]);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20382,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_14864(t6,((C_word*)t0)[3],t7);}
else{
t4=(C_word)C_i_cdr(t2);
t10=t1;
t11=t4;
t1=t10;
t2=t11;
goto loop;}}

/* k20380 in do2661 in k20344 in k20340 in k20337 in do2652 in k20325 in k20321 in next-in-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_set_cdr(t2,C_SCHEME_END_OF_LIST));}

/* k20347 in k20344 in k20340 in k20337 in do2652 in k20325 in k20321 in next-in-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* select-output in next-in-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_20144(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20144,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20212,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  tb:ranf");
f_7861(t5,t2);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20156,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word)li279),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_20156(t8,t1,t3,C_SCHEME_FALSE,C_fix(0));}}

/* do2621 in select-output in next-in-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_20156(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20156,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 378  select-output");
t7=((C_word*)((C_word*)t0)[4])[1];
f_20144(t7,t1,((C_word*)t6)[1],((C_word*)t0)[3]);}
else{
t7=(C_word)C_i_car(t2);
t8=C_set_block_item(t5,0,t7);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20192,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t5,a[6]=t6,tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_caddr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_numberp(t10))){
t11=t9;
f_20192(2,t11,(C_word)C_i_caddr(((C_word*)t5)[1]));}
else{
t11=(C_word)C_i_caddr(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 378  next-1");
f_15279(t9,t11);}}}

/* k20190 in do2621 in select-output in next-in-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20192,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_i_set_car(t4,((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_20156(t7,((C_word*)t0)[2],t6,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k20210 in select-output in next-in-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20212,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20217,a[2]=t3,a[3]=t1,a[4]=((C_word)li278),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_20217(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2631 in k20210 in select-output in next-in-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_20217(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20217,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t3);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[3],t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_car(t5));}
else{
t5=(C_word)C_i_cdr(t2);
t8=t1;
t9=t5;
t1=t8;
t2=t9;
goto loop;}}

/* make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19654(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr3r,(void*)f_19654r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_19654r(t0,t1,t2,t3);}}

static void C_ccall f_19654r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a=C_alloc(22);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19658,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20135,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19581,a[2]=t7,a[3]=t10,a[4]=t8,a[5]=((C_word)li276),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_19581(t12,t6,t7,C_SCHEME_FALSE,t8,C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],((C_word*)t4)[1]);}}

/* do2522 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_19581(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19581,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_i_car(t2);
t10=t9;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19426,a[2]=((C_word*)t0)[2],a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t7,a[8]=t8,a[9]=t11,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t11)[1]))){
t13=t12;
f_19426(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t13=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[348],((C_word*)t11)[1]);}}}

/* k19424 in do2522 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19426,2,t0,t1);}
t2=(C_word)C_i_member(lf[344],((C_word*)((C_word*)t0)[9])[1]);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19432,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
if(C_truep(t2)){
t4=t3;
f_19432(2,t4,t2);}
else{
t4=(C_word)C_i_member(lf[346],((C_word*)((C_word*)t0)[9])[1]);
if(C_truep(t4)){
t5=t3;
f_19432(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 378  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[347],((C_word*)((C_word*)t0)[9])[1]);}}}

/* k19430 in k19424 in do2522 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19432,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t11=t10;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19444,a[2]=t3,a[3]=t9,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=t7,tmp=(C_word)a,a+=13,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19517,a[2]=t15,a[3]=t12,a[4]=t5,a[5]=t10,a[6]=t3,a[7]=((C_word*)t0)[2],a[8]=((C_word)li275),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_19517(t17,t13);}

/* do2500 in k19430 in k19424 in do2522 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_19517(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_19517,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
if(C_truep(t2)){
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[7])+1,t8);
t15=t1;
t1=t15;
goto loop;}}

/* k19442 in k19430 in k19424 in do2522 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19444,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19447,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19460,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[12],a[4]=((C_word)li274),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t4=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* a19459 in k19442 in k19430 in k19424 in do2522 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19460(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19460,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19464,a[2]=t8,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t6,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t10=(C_word)C_i_car(t2);
t11=C_set_block_item(t4,0,t10);
t12=(C_word)C_i_cdr(t2);
t13=(C_word)C_i_nullp(t12);
t14=(C_truep(t13)?C_fix(1):(C_word)C_i_cadr(t2));
t15=C_set_block_item(t8,0,t14);
t16=C_set_block_item(t6,0,((C_word*)t8)[1]);
if(C_truep((C_word)C_i_numberp(((C_word*)t8)[1]))){
t17=t9;
f_19464(t17,C_SCHEME_UNDEFINED);}
else{
t17=C_set_block_item(t8,0,C_SCHEME_FALSE);
t18=t9;
f_19464(t18,t17);}}
else{
t10=C_set_block_item(t4,0,t2);
t11=C_set_block_item(t8,0,C_fix(1));
t12=C_set_block_item(t6,0,C_fix(1));
t13=t9;
f_19464(t13,t12);}}

/* k19462 in a19459 in k19442 in k19430 in k19424 in do2522 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_19464(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19464,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19467,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_truep(((C_word*)((C_word*)t0)[2])[1])?((C_word*)((C_word*)t0)[6])[1]:C_SCHEME_FALSE);
if(C_truep(t3)){
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t2;
f_19467(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t5=t2;
f_19467(t5,t4);}}

/* k19465 in k19462 in a19459 in k19442 in k19430 in k19424 in do2522 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_19467(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19467,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k19445 in k19442 in k19430 in k19424 in do2522 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19447,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19458,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t3=*((C_word*)lf[194]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k19456 in k19445 in k19442 in k19430 in k19424 in do2522 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19458,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[10])[1],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[9])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19598,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t6=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t6)){
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],t8))){
t9=t5;
f_19598(2,t9,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,lf[345],((C_word*)t0)[2]);}}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_19598(2,t10,t9);}}

/* k19596 in k19456 in k19445 in k19442 in k19430 in k19424 in do2522 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19598,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=((C_word*)((C_word*)t0)[4])[1];
f_19581(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k20133 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19658(2,t3,t2);}

/* k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19658,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19661,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_19661(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[310]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20005,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[310]);}
else{
t22=t21;
f_20005(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[311]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20040,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 378  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[311]);}
else{
t23=t22;
f_20040(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[343]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20075,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[343]);}
else{
t24=t23;
f_20075(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20104,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_20104(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k20102 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20104,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20111,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20119,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20117 in k20102 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20111(2,t2,C_SCHEME_UNDEFINED);}}

/* k20109 in k20102 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19661(t5,t4);}

/* k20073 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20075,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20079,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20079(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20077 in k20073 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19661(t7,t6);}

/* k20038 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20040,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20044,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20044(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20042 in k20038 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19661(t7,t6);}

/* k20003 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20005,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20009,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20009(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20007 in k20003 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_20009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19661(t7,t6);}

/* k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_19661(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19661,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19664,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_19664(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[310]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19870,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[310]);}
else{
t6=t5;
f_19870(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19905,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[311]);}
else{
t7=t6;
f_19905(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[343]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19940,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[343]);}
else{
t8=t7;
f_19940(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19969,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_19969(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k19967 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19969,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19976,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19984,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19982 in k19967 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19976(2,t2,C_SCHEME_UNDEFINED);}}

/* k19974 in k19967 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19664(t5,t4);}

/* k19938 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19940,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19944,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19944(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19942 in k19938 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19664(t7,t6);}

/* k19903 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19905,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19909,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19909(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19907 in k19903 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19664(t7,t6);}

/* k19868 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19870,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19874,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19874(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19872 in k19868 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19664(t7,t6);}

/* k19662 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_19664(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19664,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19667,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_19667(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[310]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19735,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[310]);}
else{
t6=t5;
f_19735(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19770,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[311]);}
else{
t7=t6;
f_19770(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[343]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19805,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[343]);}
else{
t8=t7;
f_19805(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19834,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_19834(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k19832 in k19662 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19834,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19841,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19849,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19847 in k19832 in k19662 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19841(2,t2,C_SCHEME_UNDEFINED);}}

/* k19839 in k19832 in k19662 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19667(t5,t4);}

/* k19803 in k19662 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19805,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19809,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19809(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19807 in k19803 in k19662 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19667(t7,t6);}

/* k19768 in k19662 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19770,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19774,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19774(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19772 in k19768 in k19662 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19667(t7,t6);}

/* k19733 in k19662 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19735,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19739,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19739(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19737 in k19733 in k19662 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19667(t7,t6);}

/* k19665 in k19662 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_19667(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19667,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19670,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_19670(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k19668 in k19665 in k19662 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19670,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19673,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_14928(t2);}

/* k19671 in k19668 in k19665 in k19662 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19673,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19679,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19706,a[2]=((C_word)li273),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_14938(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[342],"next-in-markov"),t4);}

/* a19705 in k19671 in k19668 in k19665 in k19662 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19706(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_19706,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19714,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14657(t4,t3);}

/* k19712 in a19705 in k19671 in k19668 in k19665 in k19662 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k19677 in k19671 in k19668 in k19665 in k19662 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19679,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19682,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_19682(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19692,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 378  make-list");
t7=C_retrieve(lf[69]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t3,t6,lf[108]);}}

/* k19690 in k19677 in k19671 in k19668 in k19665 in k19662 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19682(t3,t2);}

/* k19680 in k19677 in k19671 in k19668 in k19665 in k19662 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_19682(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19682,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19685,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_14864(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k19683 in k19680 in k19677 in k19671 in k19668 in k19665 in k19662 in k19659 in k19656 in make-markov in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19221(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19221,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19225,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14657(t3,t2);}

/* k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19225,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19228,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_14711(t2,((C_word*)t0)[2]);}

/* k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19228,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19231,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-flags");
f_14639(t2,((C_word*)t0)[2]);}

/* k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19231,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19237,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19400,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7650(t4,t1,C_fix(4));}

/* k19398 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19400,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_19237(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19413,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  period-count");
f_14489(t2,((C_word*)t0)[2]);}}

/* k19411 in k19398 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19413,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19417,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  period-length");
f_14507(t2,((C_word*)t0)[2]);}

/* k19415 in k19411 in k19398 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],t1))){
C_trace("ChickenBridge.scm: 378  recalc-weightings");
f_19109(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t2=((C_word*)t0)[3];
f_19237(2,t2,C_SCHEME_UNDEFINED);}}

/* k19235 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19237,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19243,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
t3=t2;
f_19243(t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19374,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19393,a[2]=((C_word*)t0)[4],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-count");
f_18259(t4,((C_word*)t0)[4]);}}

/* k19391 in k19235 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19393,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
C_trace("ChickenBridge.scm: 378  random-item-count-set!");
f_18250(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k19372 in k19235 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19374,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19381,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-count");
f_18259(t2,((C_word*)t0)[2]);}

/* k19379 in k19372 in k19235 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19381,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19385,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-min");
f_18223(t2,((C_word*)t0)[2]);}

/* k19383 in k19379 in k19372 in k19235 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_19243(t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k19241 in k19235 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_19243(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19243,NULL,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  random-item-datum");
f_18169(((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19249,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache");
f_14873(t2,((C_word*)t0)[2]);}}

/* k19247 in k19241 in k19235 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19249,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19253,a[2]=((C_word)li269),tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19291,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19333,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=t2,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  pick");
f_19253(t7,t2,t1);}

/* k19331 in k19247 in k19241 in k19235 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19333,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19335,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li271),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_19335(t5,((C_word*)t0)[2],t1);}

/* do2474 in k19331 in k19247 in k19241 in k19235 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_19335(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19335,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19354,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19357,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-max");
f_18241(t4,t2);}

/* k19355 in do2474 in k19331 in k19247 in k19241 in k19235 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19357,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19364,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-count");
f_18259(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_19354(t2,C_SCHEME_FALSE);}}

/* k19362 in k19355 in do2474 in k19331 in k19247 in k19241 in k19235 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19368,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-max");
f_18241(t2,((C_word*)t0)[2]);}

/* k19366 in k19362 in k19355 in do2474 in k19331 in k19247 in k19241 in k19235 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_19354(t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* k19352 in do2474 in k19331 in k19247 in k19241 in k19235 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_19354(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19354,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19350,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pick");
f_19253(t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)t0)[2]);
t3=((C_word*)t0)[7];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k19348 in k19352 in do2474 in k19331 in k19247 in k19241 in k19235 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_19335(t2,((C_word*)t0)[2],t1);}

/* k19289 in k19247 in k19241 in k19235 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19291,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19294,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[3]);
if(C_truep(t3)){
t4=t2;
f_19294(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19308,a[2]=t5,a[3]=((C_word)li270),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_19308(t7,t2,((C_word*)t0)[2]);}}

/* do2478 in k19289 in k19247 in k19241 in k19235 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_19308(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19308,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19318,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  random-item-count-set!");
f_18250(t3,t4,C_fix(0));}}

/* k19316 in do2478 in k19289 in k19247 in k19241 in k19235 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19308(t3,((C_word*)t0)[2],t2);}

/* k19292 in k19289 in k19247 in k19241 in k19235 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 378  random-item-datum");
f_18169(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* pick in k19247 in k19241 in k19235 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_19253(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19253,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19261,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  tb:ranf");
f_7861(t4,t3);}

/* k19259 in pick in k19247 in k19241 in k19235 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19261,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19263,a[2]=t3,a[3]=((C_word)li268),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_19263(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do2469 in k19259 in pick in k19247 in k19241 in k19235 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_19263(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19263,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19284,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  random-item-index");
f_18187(t4,t5);}

/* k19282 in do2469 in k19259 in pick in k19247 in k19241 in k19235 in k19229 in k19226 in k19223 in next-in-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[5],t1))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_19263(t3,((C_word*)t0)[4],t2,((C_word*)t0)[5]);}}

/* recalc-weightings in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_19109(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19109,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19219,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14657(t4,t2);}

/* k19217 in recalc-weightings in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19219,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=lf[340];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19116,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19178,a[2]=t7,a[3]=t4,a[4]=((C_word)li266),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_19178(t9,t5,t2);}

/* do2441 in k19217 in recalc-weightings in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_19178(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19178,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19207,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19211,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  random-item-weight");
f_18205(t4,t5);}}

/* k19209 in do2441 in k19217 in recalc-weightings in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  next-1");
f_15279(((C_word*)t0)[2],t1);}

/* k19205 in do2441 in k19217 in recalc-weightings in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19207,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19192,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  random-item-index-set!");
f_18178(t4,t5,((C_word*)((C_word*)t0)[5])[1]);}

/* k19190 in k19205 in do2441 in k19217 in recalc-weightings in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19178(t3,((C_word*)t0)[2],t2);}

/* k19114 in k19217 in recalc-weightings in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19116,2,t0,t1);}
if(C_truep(((C_word*)t0)[6])){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19124,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=((C_word)li265),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_19124(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_14864(((C_word*)t0)[3],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);}}

/* do2447 in k19114 in k19217 in recalc-weightings in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_19124(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19124,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_14864(t1,((C_word*)t0)[4],((C_word*)t6)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19157,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t6,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19169,a[2]=t7,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  random-item-index");
f_18187(t8,t9);}}

/* k19167 in do2447 in k19114 in k19217 in recalc-weightings in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19169,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_times(&a,2,t2,C_fix(1073741823));
C_trace("ChickenBridge.scm: 378  floor");
t4=*((C_word*)lf[179]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t3);}

/* k19155 in do2447 in k19114 in k19217 in recalc-weightings in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19157,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19141,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  random-item-index-set!");
f_18178(t4,t5,((C_word*)((C_word*)t0)[6])[1]);}

/* k19139 in k19155 in do2447 in k19114 in k19217 in recalc-weightings in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_19124(t4,((C_word*)t0)[2],t3,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18342(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_18342r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18342r(t0,t1,t2,t3);}}

static void C_ccall f_18342r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(7);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18346,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18659,a[2]=((C_word)li263),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t6=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,t2);}

/* %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18659(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18659,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18666,a[2]=t4,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t8=(C_word)C_i_car(t2);
t9=C_set_block_item(t4,0,t8);
t10=(C_word)C_i_cdr(t2);
t11=C_set_block_item(t6,0,t10);
t12=t7;
f_18666(t12,t11);}
else{
t8=C_set_block_item(t4,0,t2);
t9=t7;
f_18666(t9,t8);}}

/* k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_18666(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18666,NULL,2,t0,t1);}
t2=C_fix(1);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)((C_word*)t0)[4])[1];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18669,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t7,a[9]=t5,a[10]=t3,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_18669(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[339]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18972,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[339]);}
else{
t22=t21;
f_18972(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[225]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19007,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 378  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[225]);}
else{
t23=t22;
f_19007(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[226]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19042,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[226]);}
else{
t24=t23;
f_19042(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19071,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)((C_word*)t0)[4])[1]);}
else{
t24=t23;
f_19071(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k19069 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19071,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19078,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19086,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19084 in k19069 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19078(2,t2,C_SCHEME_UNDEFINED);}}

/* k19076 in k19069 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18669(t5,t4);}

/* k19040 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19042,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19046,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19046(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19044 in k19040 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18669(t7,t6);}

/* k19005 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19007,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19011,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19011(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19009 in k19005 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_19011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18669(t7,t6);}

/* k18970 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18972,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18976,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18976(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18974 in k18970 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18669(t7,t6);}

/* k18667 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_18669(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18669,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18672,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_18672(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[339]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18837,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[339]);}
else{
t6=t5;
f_18837(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[225]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18872,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[225]);}
else{
t7=t6;
f_18872(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[226]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18907,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[226]);}
else{
t8=t7;
f_18907(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18936,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_18936(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k18934 in k18667 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18936,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18943,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18951,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18949 in k18934 in k18667 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18943(2,t2,C_SCHEME_UNDEFINED);}}

/* k18941 in k18934 in k18667 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18672(t5,t4);}

/* k18905 in k18667 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18907,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18911,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18911(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18909 in k18905 in k18667 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18672(t7,t6);}

/* k18870 in k18667 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18872,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18876,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18876(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18874 in k18870 in k18667 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18672(t7,t6);}

/* k18835 in k18667 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18837,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18841,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18841(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18839 in k18835 in k18667 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18672(t7,t6);}

/* k18670 in k18667 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_18672(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18672,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18675,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_18675(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[339]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18702,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[339]);}
else{
t6=t5;
f_18702(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[225]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18737,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[225]);}
else{
t7=t6;
f_18737(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[226]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18772,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[226]);}
else{
t8=t7;
f_18772(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18801,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_18801(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k18799 in k18670 in k18667 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18801,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18808,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18816,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18814 in k18799 in k18670 in k18667 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18808(2,t2,C_SCHEME_UNDEFINED);}}

/* k18806 in k18799 in k18670 in k18667 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18675(t5,t4);}

/* k18770 in k18670 in k18667 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18772,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18776,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18776(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18774 in k18770 in k18670 in k18667 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18675(t7,t6);}

/* k18735 in k18670 in k18667 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18737,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18741,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18741(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18739 in k18735 in k18670 in k18667 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18675(t7,t6);}

/* k18700 in k18670 in k18667 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18702,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18706,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18706(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18704 in k18700 in k18670 in k18667 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18675(t7,t6);}

/* k18673 in k18670 in k18667 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_18675(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18675,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18678,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18678(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)((C_word*)t0)[2])[1]);}}

/* k18676 in k18673 in k18670 in k18667 in k18664 in %make-random-item in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18678,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=((C_word*)((C_word*)t0)[5])[1];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[3])[1];
t6=((C_word*)((C_word*)t0)[2])[1];
t7=t2;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,9,lf[328],t3,C_SCHEME_FALSE,t4,t5,t6,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18346,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18349,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_14928(t2);}

/* k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18349,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[4]);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_TRUE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18355,a[2]=t10,a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t4,a[9]=t2,a[10]=t8,tmp=(C_word)a,a+=11,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18623,a[2]=t8,a[3]=t6,a[4]=((C_word)li262),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t13=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t11,t12,((C_word*)t0)[4]);}

/* a18622 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18623(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18623,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18627,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  random-item-min");
f_18223(t3,t2);}

/* k18625 in a18622 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18627,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18630,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  random-item-max");
f_18241(t2,((C_word*)t0)[2]);}

/* k18628 in k18625 in a18622 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18630,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18633,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  random-item-weight");
f_18205(t2,((C_word*)t0)[2]);}

/* k18631 in k18628 in k18625 in a18622 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18633,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18636,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  random-item-datum");
f_18169(t2,((C_word*)t0)[2]);}

/* k18634 in k18631 in k18628 in k18625 in a18622 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18636,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18639,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18649,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14624(t3,t1);}

/* k18647 in k18634 in k18631 in k18628 in k18625 in a18622 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18649,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_18639(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_18639(t2,C_SCHEME_UNDEFINED);}}

/* k18637 in k18634 in k18631 in k18628 in k18625 in a18622 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_18639(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[4]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18355,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]);
t3=(C_truep(t2)?C_fix(1):((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18362,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(4));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t5;
f_18362(t8,t7);}
else{
t6=t5;
f_18362(t6,C_SCHEME_UNDEFINED);}}

/* k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_18362(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[50],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18362,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[9];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_18365,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[9],a[6]=t11,a[7]=((C_word*)t0)[2],a[8]=((C_word*)t0)[3],a[9]=((C_word*)t0)[4],a[10]=t5,a[11]=t3,a[12]=((C_word*)t0)[5],a[13]=((C_word*)t0)[6],a[14]=((C_word*)t0)[7],a[15]=((C_word*)t0)[8],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_18365(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[310]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18529,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 378  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[310]);}
else{
t18=t17;
f_18529(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[311]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18564,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[311]);}
else{
t19=t18;
f_18564(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18593,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[9]);}
else{
t19=t18;
f_18593(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k18591 in k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18593,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18600,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18608,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18606 in k18591 in k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18600(2,t2,C_SCHEME_UNDEFINED);}}

/* k18598 in k18591 in k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18365(t5,t4);}

/* k18562 in k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18564,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18568,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18568(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18566 in k18562 in k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18365(t7,t6);}

/* k18527 in k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18529,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18533,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18533(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18531 in k18527 in k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18365(t7,t6);}

/* k18363 in k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_18365(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18365,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18368,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18368(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[310]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18429,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[310]);}
else{
t6=t5;
f_18429(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18464,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[311]);}
else{
t7=t6;
f_18464(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18493,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_18493(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k18491 in k18363 in k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18493,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18500,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18508,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18506 in k18491 in k18363 in k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18500(2,t2,C_SCHEME_UNDEFINED);}}

/* k18498 in k18491 in k18363 in k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18368(t5,t4);}

/* k18462 in k18363 in k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18464,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18468,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18468(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18466 in k18462 in k18363 in k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18368(t7,t6);}

/* k18427 in k18363 in k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18429,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18433,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18433(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18431 in k18427 in k18363 in k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18368(t7,t6);}

/* k18366 in k18363 in k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_18368(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18368,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18371,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18371(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k18369 in k18366 in k18363 in k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18371,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18374,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18386,a[2]=((C_word)li261),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_14938(t2,((C_word*)t0)[9],t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[338],"next-in-weighting"),t4);}

/* a18385 in k18369 in k18366 in k18363 in k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18386(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18386,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18392,a[2]=t2,a[3]=((C_word)li260),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18408,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14657(t5,t3);}

/* k18406 in a18385 in k18369 in k18366 in k18363 in k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a18391 in a18385 in k18369 in k18366 in k18363 in k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18392(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18392,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18400,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-datum");
f_18169(t3,t2);}

/* k18398 in a18391 in a18385 in k18369 in k18366 in k18363 in k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  fn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k18372 in k18369 in k18366 in k18363 in k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18374,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18377,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  recalc-weightings");
f_19109(t2,((C_word*)t0)[3],C_SCHEME_TRUE);}
else{
t3=t2;
f_18377(2,t3,C_SCHEME_UNDEFINED);}}

/* k18375 in k18372 in k18369 in k18366 in k18363 in k18360 in k18353 in k18347 in k18344 in make-weighting in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* random-item-count in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_18259(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18259,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[328]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* random-item-count-set! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_18250(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18250,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[328]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* random-item-max in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_18241(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18241,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[328]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* random-item-min in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_18223(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18223,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[328]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* random-item-weight in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_18205(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18205,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[328]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* random-item-index in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_18187(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18187,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[328]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* random-item-index-set! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_18178(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18178,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[328]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* random-item-datum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_18169(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18169,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[328]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17947(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17947,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17950,a[2]=((C_word)li250),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17997,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14657(t4,t2);}

/* k17995 in next-in-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17997,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18000,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18023,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18142,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache");
f_14873(t6,((C_word*)t0)[2]);}
else{
t4=t2;
f_18000(t4,C_SCHEME_UNDEFINED);}}

/* k18140 in k17995 in next-in-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  next-1");
f_15279(((C_word*)t0)[2],t1);}

/* k18021 in k17995 in next-in-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18023,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18030,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t1))){
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_pairp(t3))){
t4=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_cdddr(t1);
if(C_truep((C_word)C_i_pairp(t5))){
C_apply(5,0,t2,((C_word*)t0)[4],((C_word*)t0)[3],t1);}
else{
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_cadr(t1);
t8=(C_word)C_i_caddr(t1);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18077,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=((C_word*)t0)[4],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  pattern-length");
f_14675(t9,((C_word*)t0)[2]);}}
else{
t5=(C_word)C_i_car(t1);
t6=(C_word)C_i_cadr(t1);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18104,a[2]=t6,a[3]=t5,a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  pattern-length");
f_14675(t7,((C_word*)t0)[2]);}}
else{
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18123,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-length");
f_14675(t5,((C_word*)t0)[2]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18138,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-length");
f_14675(t3,((C_word*)t0)[2]);}}

/* k18136 in k18021 in k17995 in next-in-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18138,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  rotate-items");
t3=((C_word*)t0)[5];
f_17950(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k18121 in k18021 in k17995 in next-in-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18123,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  rotate-items");
t3=((C_word*)t0)[5];
f_17950(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k18102 in k18021 in k17995 in next-in-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18104,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  rotate-items");
t3=((C_word*)t0)[6];
f_17950(7,t3,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),t2);}

/* k18075 in k18021 in k17995 in next-in-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18077,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[8]);
t3=(C_word)C_a_i_minus(&a,2,t1,t2);
C_trace("ChickenBridge.scm: 378  rotate-items");
t4=((C_word*)t0)[7];
f_17950(7,t4,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k18028 in k18021 in k17995 in next-in-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_18030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_18000(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k17998 in k17995 in next-in-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_18000(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[3]);
t5=(C_word)C_i_set_cdr(((C_word*)t0)[3],t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t3);}

/* rotate-items in next-in-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17950(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[10],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_17950,7,t0,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17956,a[2]=t8,a[3]=t4,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=((C_word)li249),tmp=(C_word)a,a+=8,tmp));
t10=((C_word*)t8)[1];
f_17956(t10,t1,t3);}

/* do2209 in rotate-items in next-in-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_17956(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17956,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[6]))){
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[4]);
t5=(C_word)C_i_list_ref(((C_word*)t0)[5],t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17972,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  list-set!");
t7=C_retrieve(lf[67]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t6,((C_word*)t0)[5],t2,t5);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}}

/* k17970 in do2209 in rotate-items in next-in-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17972,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17975,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  list-set!");
t4=C_retrieve(lf[67]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,((C_word*)t0)[3],t3,((C_word*)t0)[2]);}

/* k17973 in k17970 in do2209 in rotate-items in next-in-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17975,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_17956(t3,((C_word*)t0)[2],t2);}

/* make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17473(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_17473r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_17473r(t0,t1,t2,t3);}}

static void C_ccall f_17473r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17477,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17937,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_17477(t8,t7);}}

/* k17935 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17477(t3,t2);}

/* k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_17477(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17477,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17480,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_17480(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[310]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17810,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[310]);}
else{
t22=t21;
f_17810(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[311]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17845,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 378  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[311]);}
else{
t23=t22;
f_17845(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[326]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17880,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[326]);}
else{
t24=t23;
f_17880(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17909,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_17909(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k17907 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17909,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17916,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17924,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17922 in k17907 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17916(2,t2,C_SCHEME_UNDEFINED);}}

/* k17914 in k17907 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17480(t5,t4);}

/* k17878 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17880,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17884,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17884(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17882 in k17878 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17480(t7,t6);}

/* k17843 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17845,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17849,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17849(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17847 in k17843 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17480(t7,t6);}

/* k17808 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17810,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17814,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17814(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17812 in k17808 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17480(t7,t6);}

/* k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_17480(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17480,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17483,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17483(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[310]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17675,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[310]);}
else{
t6=t5;
f_17675(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17710,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[311]);}
else{
t7=t6;
f_17710(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[326]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17745,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[326]);}
else{
t8=t7;
f_17745(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17774,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_17774(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17772 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17774,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17781,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17789,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17787 in k17772 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17781(2,t2,C_SCHEME_UNDEFINED);}}

/* k17779 in k17772 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17483(t5,t4);}

/* k17743 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17745,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17749,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17749(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17747 in k17743 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17483(t7,t6);}

/* k17708 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17710,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17714,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17714(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17712 in k17708 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17483(t7,t6);}

/* k17673 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17675,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17679,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17679(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17677 in k17673 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17483(t7,t6);}

/* k17481 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_17483(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17483,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17486,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17486(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[310]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17540,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[310]);}
else{
t6=t5;
f_17540(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17575,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[311]);}
else{
t7=t6;
f_17575(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[326]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17610,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[326]);}
else{
t8=t7;
f_17610(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17639,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_17639(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17637 in k17481 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17639,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17646,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17654,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17652 in k17637 in k17481 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17646(2,t2,C_SCHEME_UNDEFINED);}}

/* k17644 in k17637 in k17481 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17486(t5,t4);}

/* k17608 in k17481 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17610,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17614,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17614(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17612 in k17608 in k17481 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17486(t7,t6);}

/* k17573 in k17481 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17575,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17579,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17579(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17577 in k17573 in k17481 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17486(t7,t6);}

/* k17538 in k17481 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17540,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17544,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17544(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17542 in k17538 in k17481 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17486(t7,t6);}

/* k17484 in k17481 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_17486(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17486,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17489,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17489(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k17487 in k17484 in k17481 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17489,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17492,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_14928(t2);}

/* k17490 in k17487 in k17484 in k17481 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17492,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17498,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17507,a[2]=((C_word)li247),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_14938(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[325],"next-in-rotation"),t5);}

/* a17506 in k17490 in k17487 in k17484 in k17481 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17507(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17507,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17519,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14657(t4,t3);}

/* k17517 in a17506 in k17490 in k17487 in k17484 in k17481 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k17496 in k17490 in k17487 in k17484 in k17481 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17498,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17501,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_14864(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k17499 in k17496 in k17490 in k17487 in k17484 in k17481 in k17478 in k17475 in make-rotation in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17397(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17397,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17401,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14657(t3,t2);}

/* k17399 in next-in-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17401,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17404,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17420,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-length");
f_14675(t4,((C_word*)t0)[2]);}
else{
t4=t2;
f_17404(2,t4,C_SCHEME_UNDEFINED);}}

/* k17418 in k17399 in next-in-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17420,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17430,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  tb:rani");
f_7854(t3,t1);}

/* k17428 in k17418 in k17399 in next-in-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17430,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17432,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word)li245),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_17432(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do2109 in k17428 in k17418 in k17399 in next-in-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_17432(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17432,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[5]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)t0)[3]));}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17449,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t5,a[6]=t1,a[7]=((C_word*)t0)[2],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 378  list-set!");
t10=C_retrieve(lf[67]);
((C_proc5)C_retrieve_proc(t10))(5,t10,t8,((C_word*)t0)[3],t2,t9);}}

/* k17447 in do2109 in k17428 in k17418 in k17399 in next-in-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17449,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17452,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  list-set!");
t3=C_retrieve(lf[67]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k17450 in k17447 in do2109 in k17428 in k17418 in k17399 in next-in-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17452,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17463,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  tb:rani");
f_7854(t3,((C_word*)t0)[2]);}

/* k17461 in k17450 in k17447 in do2109 in k17428 in k17418 in k17399 in next-in-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_17432(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k17402 in k17399 in next-in-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17134(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_17134r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_17134r(t0,t1,t2,t3);}}

static void C_ccall f_17134r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17138,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17387,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_17138(t8,t7);}}

/* k17385 in make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17138(t3,t2);}

/* k17136 in make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_17138(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17138,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17141,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_17141(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[310]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17295,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 378  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[310]);}
else{
t18=t17;
f_17295(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[311]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17330,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[311]);}
else{
t19=t18;
f_17330(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17359,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_17359(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k17357 in k17136 in make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17359,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17366,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17374,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17372 in k17357 in k17136 in make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17366(2,t2,C_SCHEME_UNDEFINED);}}

/* k17364 in k17357 in k17136 in make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17141(t5,t4);}

/* k17328 in k17136 in make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17330,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17334,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17334(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17332 in k17328 in k17136 in make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17141(t7,t6);}

/* k17293 in k17136 in make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17295,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17299,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17299(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17297 in k17293 in k17136 in make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17141(t7,t6);}

/* k17139 in k17136 in make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_17141(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17141,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17144,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_17144(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[310]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17195,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[310]);}
else{
t6=t5;
f_17195(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17230,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[311]);}
else{
t7=t6;
f_17230(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17259,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_17259(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k17257 in k17139 in k17136 in make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17259,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17266,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17274,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17272 in k17257 in k17139 in k17136 in make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17266(2,t2,C_SCHEME_UNDEFINED);}}

/* k17264 in k17257 in k17139 in k17136 in make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17144(t5,t4);}

/* k17228 in k17139 in k17136 in make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17230,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17234,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17234(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17232 in k17228 in k17139 in k17136 in make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17144(t7,t6);}

/* k17193 in k17139 in k17136 in make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17195,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17199,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17199(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17197 in k17193 in k17139 in k17136 in make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17144(t7,t6);}

/* k17142 in k17139 in k17136 in make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_17144(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17144,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17147,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17147(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k17145 in k17142 in k17139 in k17136 in make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17147,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17150,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_14928(t2);}

/* k17148 in k17145 in k17142 in k17139 in k17136 in make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17150,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17156,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17162,a[2]=((C_word)li243),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_14938(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[323],"next-in-heap"),t5);}

/* a17161 in k17148 in k17145 in k17142 in k17139 in k17136 in make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17162(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17162,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17174,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14657(t4,t3);}

/* k17172 in a17161 in k17148 in k17145 in k17142 in k17139 in k17136 in make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k17154 in k17148 in k17145 in k17142 in k17139 in k17136 in make-heap in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17098(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17098,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17102,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14657(t3,t2);}

/* k17100 in next-in-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17102,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17111,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17118,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_14711(t4,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(t1);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17124,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 378  pattern-data-set!");
f_14648(t4,((C_word*)t0)[2],t5);}}

/* k17122 in k17100 in next-in-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k17116 in k17100 in next-in-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_14480(((C_word*)t0)[2],t1,C_fix(1));}

/* k17109 in k17100 in next-in-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}

/* make-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16851(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_16851r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16851r(t0,t1,t2,t3);}}

static void C_ccall f_16851r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16855,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_16855(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_16855(t8,t7);}}

/* k16853 in make-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_16855(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16855,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16858,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_16858(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[310]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17004,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 378  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[310]);}
else{
t18=t17;
f_17004(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[311]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17039,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[311]);}
else{
t19=t18;
f_17039(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17068,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_17068(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k17066 in k16853 in make-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17068,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17075,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17083,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17081 in k17066 in k16853 in make-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17075(2,t2,C_SCHEME_UNDEFINED);}}

/* k17073 in k17066 in k16853 in make-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16858(t5,t4);}

/* k17037 in k16853 in make-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17039,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17043,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17043(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17041 in k17037 in k16853 in make-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16858(t7,t6);}

/* k17002 in k16853 in make-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17004,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17008,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17008(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17006 in k17002 in k16853 in make-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_17008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16858(t7,t6);}

/* k16856 in k16853 in make-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_16858(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16858,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16861,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_16861(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[310]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16904,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[310]);}
else{
t6=t5;
f_16904(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16939,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[311]);}
else{
t7=t6;
f_16939(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16968,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_16968(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k16966 in k16856 in k16853 in make-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16968,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16975,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16983,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16981 in k16966 in k16856 in k16853 in make-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16975(2,t2,C_SCHEME_UNDEFINED);}}

/* k16973 in k16966 in k16856 in k16853 in make-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16861(t5,t4);}

/* k16937 in k16856 in k16853 in make-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16939,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16943,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16943(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16941 in k16937 in k16856 in k16853 in make-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16861(t7,t6);}

/* k16902 in k16856 in k16853 in make-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16904,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16908,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16908(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16906 in k16902 in k16856 in k16853 in make-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16861(t7,t6);}

/* k16859 in k16856 in k16853 in make-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_16861(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16861,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16864,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16864(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k16862 in k16859 in k16856 in k16853 in make-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16864,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16867,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_14928(t2);}

/* k16865 in k16862 in k16859 in k16856 in k16853 in make-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16867,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16873,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16875,a[2]=((C_word)li240),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_14938(t3,t1,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[321],"next-in-line"),t4);}

/* a16874 in k16865 in k16862 in k16859 in k16856 in k16853 in make-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16875(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16875,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16883,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14657(t4,t3);}

/* k16881 in a16874 in k16865 in k16862 in k16859 in k16856 in k16853 in make-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16871 in k16865 in k16862 in k16859 in k16856 in k16853 in make-line in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16636(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16636,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16640,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache");
f_14873(t3,t2);}

/* k16638 in next-in-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16640,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[313]);
t4=(C_word)C_i_block_ref(t2,C_fix(1));
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16646,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t6,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],C_fix(0)))){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16670,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t9=t1;
t10=(C_word)C_i_check_structure(t9,lf[313]);
t11=(C_word)C_i_block_ref(t9,C_fix(5));
C_trace("ChickenBridge.scm: 378  next-1");
f_15279(t8,t11);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16849,a[2]=t7,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  palin-len");
f_16077(t8,t1);}}

/* k16847 in k16638 in next-in-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16849,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],t1))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16802,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  palin-inc-set!");
f_16086(t2,((C_word*)t0)[3],C_fix(-1));}
else{
t2=((C_word*)t0)[2];
f_16646(2,t2,C_SCHEME_UNDEFINED);}}

/* k16800 in k16847 in k16638 in next-in-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16802,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[313]);
t4=(C_word)C_i_block_ref(t2,C_fix(4));
t5=(C_word)C_eqp(t4,C_SCHEME_TRUE);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16814,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t5)){
t7=t6;
f_16814(t7,t5);}
else{
if(C_truep((C_word)C_i_pairp(t4))){
t7=(C_word)C_i_cdr(t4);
if(C_truep((C_word)C_i_pairp(t7))){
t8=(C_word)C_i_cadr(t4);
t9=t6;
f_16814(t9,(C_word)C_eqp(t8,C_SCHEME_TRUE));}
else{
t8=t6;
f_16814(t8,C_SCHEME_FALSE);}}
else{
t7=t6;
f_16814(t7,C_SCHEME_FALSE);}}}

/* k16812 in k16800 in k16847 in k16638 in next-in-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_16814(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16814,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(2));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_16646(2,t4,t3);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_16646(2,t4,t3);}}

/* k16668 in k16638 in next-in-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16670,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16673,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  palin-len");
f_16077(t2,((C_word*)t0)[2]);}

/* k16671 in k16668 in k16638 in next-in-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16673,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],C_fix(-2));
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16679,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t4=((C_word*)t0)[2];
t5=((C_word*)t0)[5];
t6=(C_word)C_i_check_structure(t4,lf[313]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t7=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t7+1)))(5,t7,t3,t4,C_fix(4),t5);}

/* k16677 in k16671 in k16668 in k16638 in next-in-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16679,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16682,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  palin-inc-set!");
f_16086(t2,((C_word*)t0)[2],C_fix(1));}

/* k16680 in k16677 in k16671 in k16668 in k16638 in next-in-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16682,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16685,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16770,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t3)){
t5=t4;
f_16770(t5,t3);}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t5=(C_word)C_i_car(((C_word*)t0)[6]);
t6=t4;
f_16770(t6,(C_word)C_eqp(t5,C_SCHEME_TRUE));}
else{
t5=t4;
f_16770(t5,C_SCHEME_FALSE);}}}

/* k16768 in k16680 in k16677 in k16671 in k16668 in k16638 in next-in-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_16770(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
if(C_truep(((C_word*)t0)[4])){
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_16685(t3,t2);}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_16685(t3,t2);}}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_16685(t3,t2);}}

/* k16683 in k16680 in k16677 in k16671 in k16668 in k16638 in next-in-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_16685(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16685,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16691,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16764,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-flags");
f_14639(t3,((C_word*)t0)[2]);}

/* k16762 in k16683 in k16680 in k16677 in k16671 in k16668 in k16638 in next-in-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7650(((C_word*)t0)[2],t1,C_fix(2));}

/* k16689 in k16683 in k16680 in k16677 in k16671 in k16668 in k16638 in next-in-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16691,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16694,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_14711(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_16646(2,t2,C_SCHEME_UNDEFINED);}}

/* k16692 in k16689 in k16683 in k16680 in k16677 in k16671 in k16668 in k16638 in next-in-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16694,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],C_fix(2));
switch(((C_word*)t0)[4]){
case C_SCHEME_FALSE:
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_14480(((C_word*)t0)[3],t1,t2);
case C_SCHEME_TRUE:
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(2)):(C_word)C_a_i_minus(&a,2,t2,C_fix(3)));
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_14480(((C_word*)t0)[3],t1,t3);
default:
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[318]))){
t3=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_14480(((C_word*)t0)[3],t1,t3);}
else{
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[319]))){
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(1)):(C_word)C_a_i_minus(&a,2,t2,C_fix(2)));
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_14480(((C_word*)t0)[3],t1,t3);}
else{
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_14480(((C_word*)t0)[3],t1,t2);}}}}

/* k16644 in k16638 in next-in-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16646,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16649,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)t0)[2];
t4=(C_word)C_i_check_structure(t3,lf[313]);
t5=(C_word)C_i_block_ref(t3,C_fix(3));
t6=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],t5);
t7=((C_word*)t0)[2];
t8=(C_word)C_i_check_structure(t7,lf[313]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t9=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t9+1)))(5,t9,t2,t7,C_fix(1),t6);}

/* k16647 in k16644 in k16638 in next-in-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16649,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16656,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14657(t2,((C_word*)t0)[2]);}

/* k16654 in k16647 in k16644 in k16638 in next-in-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)((C_word*)t0)[2])[1]));}

/* make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16166(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_16166r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16166r(t0,t1,t2,t3);}}

static void C_ccall f_16166r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16170,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_16170(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_16170(t8,t7);}}

/* k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_16170(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16170,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16173,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_16173(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[310]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16507,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[310]);}
else{
t22=t21;
f_16507(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[311]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16542,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 378  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[311]);}
else{
t23=t22;
f_16542(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[317]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16577,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[317]);}
else{
t24=t23;
f_16577(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16606,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_16606(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k16604 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16606,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16613,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16621,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16619 in k16604 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16613(2,t2,C_SCHEME_UNDEFINED);}}

/* k16611 in k16604 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16173(t5,t4);}

/* k16575 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16577,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16581,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16581(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16579 in k16575 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16173(t7,t6);}

/* k16540 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16542,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16546,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16546(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16544 in k16540 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16173(t7,t6);}

/* k16505 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16507,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16511,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16511(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16509 in k16505 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16173(t7,t6);}

/* k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_16173(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16173,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16176,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16176(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[310]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16372,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[310]);}
else{
t6=t5;
f_16372(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16407,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[311]);}
else{
t7=t6;
f_16407(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[317]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16442,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[317]);}
else{
t8=t7;
f_16442(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16471,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_16471(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16469 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16471,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16478,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16486,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16484 in k16469 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16478(2,t2,C_SCHEME_UNDEFINED);}}

/* k16476 in k16469 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16176(t5,t4);}

/* k16440 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16442,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16446,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16446(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16444 in k16440 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16176(t7,t6);}

/* k16405 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16407,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16411,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16411(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16409 in k16405 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16176(t7,t6);}

/* k16370 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16372,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16376,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16376(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16374 in k16370 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16176(t7,t6);}

/* k16174 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_16176(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16176,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16179,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16179(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[310]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16237,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[310]);}
else{
t6=t5;
f_16237(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16272,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[311]);}
else{
t7=t6;
f_16272(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[317]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16307,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[317]);}
else{
t8=t7;
f_16307(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16336,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_16336(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16334 in k16174 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16336,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16343,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16351,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16349 in k16334 in k16174 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16343(2,t2,C_SCHEME_UNDEFINED);}}

/* k16341 in k16334 in k16174 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16179(t5,t4);}

/* k16305 in k16174 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16307,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16311,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16311(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16309 in k16305 in k16174 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16179(t7,t6);}

/* k16270 in k16174 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16272,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16276,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16276(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16274 in k16270 in k16174 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16179(t7,t6);}

/* k16235 in k16174 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16237,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16241,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16241(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16239 in k16235 in k16174 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16179(t7,t6);}

/* k16177 in k16174 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_16179(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16179,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16182,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16182(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k16180 in k16177 in k16174 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16182,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16185,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_14928(t2);}

/* k16183 in k16180 in k16177 in k16174 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16185,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16191,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16208,a[2]=((C_word)li237),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_14938(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t4,C_retrieve2(lf[316],"next-in-palindrome"),t5);}

/* a16207 in k16183 in k16180 in k16177 in k16174 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16208(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16208,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16216,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14657(t4,t3);}

/* k16214 in a16207 in k16183 in k16180 in k16177 in k16174 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16189 in k16183 in k16180 in k16177 in k16174 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16191,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16194,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_record(&a,6,lf[313],C_fix(-2),t3,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_14864(t2,((C_word*)t0)[4],t5);}

/* k16192 in k16189 in k16183 in k16180 in k16177 in k16174 in k16171 in k16168 in make-palindrome in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* palin-inc-set! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_16086(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16086,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[313]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* palin-len in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_16077(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16077,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[313]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* next-in-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16005(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16005,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16009,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14657(t3,t2);}

/* k16007 in next-in-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_16009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16009,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16012,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=t2;
f_16012(t5,(C_word)C_i_set_cdr(t1,t4));}
else{
t4=t2;
f_16012(t4,C_SCHEME_UNDEFINED);}}

/* k16010 in k16007 in next-in-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_16012(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15750(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_15750r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15750r(t0,t1,t2,t3);}}

static void C_ccall f_15750r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15754,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_15754(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_15754(t8,t7);}}

/* k15752 in make-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_15754(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15754,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15757,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_15757(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[310]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15911,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 378  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[310]);}
else{
t18=t17;
f_15911(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[311]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15946,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[311]);}
else{
t19=t18;
f_15946(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15975,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_15975(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k15973 in k15752 in make-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15975,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15982,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15990,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15988 in k15973 in k15752 in make-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15982(2,t2,C_SCHEME_UNDEFINED);}}

/* k15980 in k15973 in k15752 in make-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15757(t5,t4);}

/* k15944 in k15752 in make-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15946,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15950,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15950(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15948 in k15944 in k15752 in make-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15757(t7,t6);}

/* k15909 in k15752 in make-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15911,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15915,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15915(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15913 in k15909 in k15752 in make-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15757(t7,t6);}

/* k15755 in k15752 in make-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_15757(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15757,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15760,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_15760(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[310]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15811,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[310]);}
else{
t6=t5;
f_15811(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15846,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[311]);}
else{
t7=t6;
f_15846(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15875,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_15875(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k15873 in k15755 in k15752 in make-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15875,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15882,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15890,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15888 in k15873 in k15755 in k15752 in make-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15882(2,t2,C_SCHEME_UNDEFINED);}}

/* k15880 in k15873 in k15755 in k15752 in make-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15760(t5,t4);}

/* k15844 in k15755 in k15752 in make-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15846,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15850,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15850(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15848 in k15844 in k15755 in k15752 in make-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15760(t7,t6);}

/* k15809 in k15755 in k15752 in make-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15811,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15815,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15815(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15813 in k15809 in k15755 in k15752 in make-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15760(t7,t6);}

/* k15758 in k15755 in k15752 in make-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_15760(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15760,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15763,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15763(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k15761 in k15758 in k15755 in k15752 in make-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15763,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15766,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_14928(t2);}

/* k15764 in k15761 in k15758 in k15755 in k15752 in make-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15766,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15772,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15778,a[2]=((C_word)li232),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_14938(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[309],"next-in-cycle"),t5);}

/* a15777 in k15764 in k15761 in k15758 in k15755 in k15752 in make-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15778(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15778,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15790,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14657(t4,t3);}

/* k15788 in a15777 in k15764 in k15761 in k15758 in k15755 in k15752 in make-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15770 in k15764 in k15761 in k15758 in k15755 in k15752 in make-cycle in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* reset-period in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_15635(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15635,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15748,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14624(t3,t2);}

/* k15746 in reset-period in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15748,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15645,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_14711(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(1));}}

/* k15643 in k15746 in reset-period in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15645,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15648,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15733,a[2]=t6,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-stream");
f_14525(t7,t1);}

/* k15731 in k15643 in k15746 in reset-period in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15733,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15740,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15744,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  period-stream");
f_14525(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
f_15648(2,t2,C_SCHEME_UNDEFINED);}}

/* k15742 in k15731 in k15643 in k15746 in reset-period in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  next-1");
f_15279(((C_word*)t0)[2],t1);}

/* k15738 in k15731 in k15643 in k15746 in reset-period in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[262]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t4=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(2),t1);}

/* k15646 in k15643 in k15746 in reset-period in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15648,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15730,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  period-length");
f_14507(t2,((C_word*)t0)[3]);}

/* k15728 in k15646 in k15643 in k15746 in reset-period in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15730,2,t0,t1);}
t2=(C_word)C_eqp(t1,C_SCHEME_TRUE);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15656,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=((C_word*)t0)[3];
t6=(C_word)C_i_check_structure(t5,lf[262]);
t7=t4;
f_15656(2,t7,(C_word)C_i_block_ref(t5,C_fix(4)));}
else{
C_trace("ChickenBridge.scm: 378  period-length");
f_14507(t4,((C_word*)t0)[3]);}}

/* k15654 in k15728 in k15646 in k15643 in k15746 in reset-period in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15656,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15659,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15665,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15720,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-flags");
f_14639(t5,((C_word*)t0)[3]);}
else{
t5=t4;
f_15665(2,t5,C_SCHEME_FALSE);}}

/* k15718 in k15654 in k15728 in k15646 in k15643 in k15746 in reset-period in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7650(((C_word*)t0)[2],t1,C_fix(8));}

/* k15663 in k15654 in k15728 in k15646 in k15643 in k15746 in reset-period in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15665,2,t0,t1);}
if(C_truep(t1)){
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15668,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15684,a[2]=t3,a[3]=((C_word)li230),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  map-pattern-data");
f_15589(t4,t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_15659(t2,C_SCHEME_UNDEFINED);}}

/* a15683 in k15663 in k15654 in k15728 in k15646 in k15643 in k15746 in reset-period in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15684(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15684,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15713,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  reset-period");
f_15635(t3,t2);}

/* k15711 in a15683 in k15663 in k15654 in k15728 in k15646 in k15643 in k15746 in reset-period in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15713,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15694,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_14711(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k15692 in k15711 in a15683 in k15663 in k15654 in k15728 in k15646 in k15643 in k15746 in reset-period in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15694,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15697,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15709,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-omit");
f_14561(t3,t1);}

/* k15707 in k15692 in k15711 in a15683 in k15663 in k15654 in k15728 in k15646 in k15643 in k15746 in reset-period in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15709,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  period-omit-set!");
f_14552(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15695 in k15692 in k15711 in a15683 in k15663 in k15654 in k15728 in k15646 in k15643 in k15746 in reset-period in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15697,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k15666 in k15663 in k15654 in k15728 in k15646 in k15643 in k15746 in reset-period in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15668,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15678,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 378  max");
t4=*((C_word*)lf[307]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(0));}
else{
t2=((C_word*)t0)[2];
f_15659(t2,C_SCHEME_UNDEFINED);}}

/* k15676 in k15666 in k15663 in k15654 in k15728 in k15646 in k15643 in k15746 in reset-period in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15659(t3,t2);}

/* k15657 in k15654 in k15728 in k15646 in k15643 in k15746 in reset-period in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_15659(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15659,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15662,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_14480(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k15660 in k15657 in k15654 in k15728 in k15646 in k15643 in k15746 in reset-period in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* map-pattern-data in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_15589(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15589,NULL,3,t1,t2,t3);}
t4=t3;
t5=(C_word)C_i_check_structure(t4,lf[271]);
t6=(C_word)C_i_block_ref(t4,C_fix(13));
t7=t6;
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t3);}

/* next-in-pattern in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_15580(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15580,NULL,2,t1,t2);}
t3=t2;
t4=(C_word)C_i_check_structure(t3,lf[271]);
t5=(C_word)C_i_block_ref(t3,C_fix(12));
t6=t5;
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}

/* next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_15279(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15279,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15286,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14624(t3,t2);}

/* k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15286,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15289,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_14711(t2,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 378  obj");
t2=((C_word*)t0)[2];
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15575,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  promise?");
t3=C_retrieve(lf[306]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}}

/* k15573 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  force");
t2=C_retrieve(lf[305]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15289,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15292,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15560,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  period-count");
f_14489(t5,t1);}

/* k15558 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15560,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15515,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15552,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  period-reps");
f_14579(t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_15292(2,t2,C_SCHEME_UNDEFINED);}}

/* k15550 in k15558 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15552,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=(C_word)C_i_block_ref(t2,C_fix(8));
if(C_truep((C_word)C_i_greater_or_equalp(t1,t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15544,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-value-set!");
f_14720(t5,((C_word*)t0)[4],lf[300]);}
else{
t5=((C_word*)t0)[2];
f_15515(t5,C_SCHEME_UNDEFINED);}}

/* k15542 in k15550 in k15558 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15544,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15547,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-state-set!");
f_14738(t2,((C_word*)t0)[2],lf[298]);}

/* k15545 in k15542 in k15550 in k15558 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[300]);
t3=((C_word*)t0)[2];
f_15515(t3,t2);}

/* k15513 in k15558 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_15515(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15515,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15521,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[4])[1];
if(C_truep(t3)){
t4=t2;
f_15521(t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15538,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  reset-period");
f_15635(t4,((C_word*)t0)[2]);}}

/* k15536 in k15513 in k15558 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_15521(t2,(C_word)C_i_nequalp(t1,C_fix(0)));}

/* k15519 in k15513 in k15558 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_15521(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15521,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[286]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15525,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-value-set!");
f_14720(t3,((C_word*)t0)[2],lf[286]);}
else{
t2=((C_word*)t0)[3];
f_15292(2,t2,C_SCHEME_UNDEFINED);}}

/* k15523 in k15519 in k15513 in k15558 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  pattern-state-set!");
f_14738(((C_word*)t0)[3],((C_word*)t0)[2],lf[298]);}

/* k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15292,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15298,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-flags");
f_14639(t2,((C_word*)t0)[3]);}}

/* k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15298,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=(C_word)C_i_block_ref(t2,C_fix(9));
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15304,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t8,a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=((C_word*)t0)[3],tmp=(C_word)a,a+=9,tmp);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15390,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t9,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7650(t10,t1,C_fix(1));}

/* k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15390,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15393,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15406,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  next-in-pattern");
f_15580(t3,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15413,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15502,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7650(t3,((C_word*)t0)[2],C_fix(8));}}

/* k15500 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15502,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15509,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  period-length");
f_14507(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_15413(t2,C_SCHEME_FALSE);}}

/* k15507 in k15500 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_15413(t2,(C_word)C_eqp(t1,C_SCHEME_TRUE));}

/* k15411 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_15413(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15413,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15415,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li226),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_15415(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1757 in k15411 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_15415(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15415,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep(((C_word*)t4)[1])){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15422,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15464,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t7,a[5]=((C_word)li225),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_15464(t9,t5);}}

/* do1761 in do1757 in k15411 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_15464(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15464,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15499,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum");
f_14693(t2,((C_word*)t0)[3]);}

/* k15497 in do1761 in do1757 in k15411 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15499,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[286]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15474,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15481,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)t0)[2])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15488,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  next-in-pattern");
f_15580(t5,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 378  next-in-pattern");
f_15580(t4,((C_word*)t0)[3]);}}
else{
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}

/* k15486 in k15497 in do1761 in do1757 in k15411 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15488,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15633,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14624(t2,t1);}

/* k15631 in k15486 in k15497 in do1761 in do1757 in k15411 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15633,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15608,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_14711(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_15481(2,t2,((C_word*)t0)[2]);}}

/* k15606 in k15631 in k15486 in k15497 in do1761 in do1757 in k15411 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15608,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15629,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  period-omit");
f_14561(t2,t1);}

/* k15627 in k15606 in k15631 in k15486 in k15497 in do1761 in do1757 in k15411 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15629,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15617,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15625,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-omit");
f_14561(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[4];
f_15481(2,t2,((C_word*)t0)[2]);}}

/* k15623 in k15627 in k15606 in k15631 in k15486 in k15497 in do1761 in do1757 in k15411 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15625,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  period-omit-set!");
f_14552(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15615 in k15627 in k15606 in k15631 in k15486 in k15497 in do1761 in do1757 in k15411 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_15481(2,t2,lf[286]);}

/* k15479 in k15497 in do1761 in do1757 in k15411 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  pattern-datum-set!");
f_14684(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k15472 in k15497 in do1761 in do1757 in k15411 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_15464(t2,((C_word*)t0)[2]);}

/* k15420 in do1757 in k15411 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15422,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15426,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15462,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum");
f_14693(t3,((C_word*)t0)[3]);}

/* k15460 in k15420 in do1757 in k15411 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  next-1");
f_15279(((C_word*)t0)[2],t1);}

/* k15424 in k15420 in do1757 in k15411 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15426,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15429,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15445,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15458,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum");
f_14693(t5,((C_word*)t0)[3]);}

/* k15456 in k15424 in k15420 in do1757 in k15411 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  pattern?");
f_14624(((C_word*)t0)[2],t1);}

/* k15443 in k15424 in k15420 in do1757 in k15411 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15445,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15449,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15453,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum");
f_14693(t3,((C_word*)t0)[2]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[298]);
t3=((C_word*)t0)[3];
f_15429(t3,t2);}}

/* k15451 in k15443 in k15424 in k15420 in do1757 in k15411 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  pattern-state");
f_14747(((C_word*)t0)[2],t1);}

/* k15447 in k15443 in k15424 in k15420 in do1757 in k15411 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15429(t3,t2);}

/* k15427 in k15424 in k15420 in do1757 in k15411 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_15429(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15429,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15432,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[286]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 378  pattern-datum-set!");
f_14684(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=t2;
f_15432(2,t5,t4);}}

/* k15430 in k15427 in k15424 in k15420 in do1757 in k15411 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_15415(t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k15404 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  pattern-datum-set!");
f_14684(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k15391 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15393,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15397,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15402,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum");
f_14693(t3,((C_word*)t0)[2]);}

/* k15400 in k15391 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  next-1");
f_15279(((C_word*)t0)[2],t1);}

/* k15395 in k15391 in k15388 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[298]);
t4=((C_word*)t0)[2];
f_15304(2,t4,t3);}

/* k15302 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15304,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15307,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[298]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15349,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15361,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-count");
f_14489(t5,((C_word*)t0)[3]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15364,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15384,a[2]=((C_word*)t0)[6],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7650(t5,((C_word*)t0)[2],C_fix(64));}}

/* k15382 in k15302 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  pattern-datum-set!");
f_14684(((C_word*)t0)[3],((C_word*)t0)[2],lf[286]);}
else{
t2=((C_word*)t0)[3];
f_15364(2,t2,C_SCHEME_UNDEFINED);}}

/* k15362 in k15302 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15370,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7650(t2,((C_word*)t0)[2],C_fix(16));}

/* k15368 in k15362 in k15302 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15370,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15381,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-count");
f_14489(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_15307(2,t2,C_SCHEME_UNDEFINED);}}

/* k15379 in k15368 in k15362 in k15302 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15381,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_14480(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15359 in k15302 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15361,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_14480(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15347 in k15302 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15349,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15352,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum-set!");
f_14684(t2,((C_word*)t0)[2],lf[286]);}

/* k15350 in k15347 in k15302 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
f_15307(2,t3,t2);}

/* k15305 in k15302 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15307,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15310,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15343,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  period-count");
f_14489(t3,((C_word*)t0)[2]);}

/* k15341 in k15305 in k15302 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15343,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[298]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15338,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-reps");
f_14579(t3,((C_word*)t0)[3]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[2];
f_15310(2,t3,t2);}}

/* k15336 in k15341 in k15305 in k15302 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15338,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
t3=((C_word*)t0)[3];
t4=(C_word)C_i_check_structure(t3,lf[262]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,((C_word*)t0)[2],t3,C_fix(6),t2);}

/* k15308 in k15305 in k15302 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15310,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15313,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15323,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  retfn");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=t2;
f_15313(t3,C_SCHEME_UNDEFINED);}}

/* k15321 in k15308 in k15305 in k15302 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15313(t3,t2);}

/* k15311 in k15308 in k15305 in k15302 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_15313(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15313,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15316,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-state-set!");
f_14738(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k15314 in k15311 in k15308 in k15305 in k15302 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15316,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15319,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-value-set!");
f_14720(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k15317 in k15314 in k15311 in k15308 in k15305 in k15302 in k15296 in k15290 in k15287 in k15284 in next-1 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* next in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15156(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr3rv,(void*)f_15156r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_15156r(t0,t1,t2,t3);}}

static void C_ccall f_15156r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(16);
t4=(C_word)C_vemptyp(t3);
t5=(C_truep(t4)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
if(C_truep(t5)){
if(C_truep((C_word)C_i_numberp(t5))){
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15177,a[2]=t2,a[3]=t8,a[4]=t6,a[5]=t5,a[6]=((C_word)li222),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_15177(t10,t1,C_fix(0),t6);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15215,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14624(t6,t2);}}
else{
C_trace("ChickenBridge.scm: 378  next-1");
f_15279(t1,t2);}}

/* k15213 in next in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15215,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15225,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  next-1");
f_15279(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k15223 in k15213 in next in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15225,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15227,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li223),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_15227(t5,((C_word*)t0)[2],t1,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* do1733 in k15223 in k15213 in next in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_15227(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15227,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_eqp(((C_word*)t5)[1],lf[300]);
t8=(C_truep(t7)?t7:((C_word*)t6)[1]);
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_a_i_list(&a,1,((C_word*)t5)[1]);
t10=(C_word)C_i_set_cdr(t3,t9);
t11=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15246,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15256,a[2]=((C_word*)t0)[2],a[3]=t5,a[4]=t11,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  eop?");
t13=C_retrieve(lf[297]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,((C_word*)t0)[2]);}}

/* k15254 in do1733 in k15223 in k15213 in next in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15256,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[4];
f_15246(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15261,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  next-1");
f_15279(t2,((C_word*)t0)[2]);}}

/* k15259 in k15254 in do1733 in k15223 in k15213 in next in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15246(t3,t2);}

/* k15244 in do1733 in k15223 in k15213 in next in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_15246(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_15227(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do1726 in next in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_15177(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15177,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t2,((C_word*)t0)[5]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15209,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  next-1");
f_15279(t4,((C_word*)t0)[2]);}}

/* k15207 in do1726 in next in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15209,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,C_fix(1),((C_word*)t0)[4]);
t5=(C_word)C_i_cdr(((C_word*)t0)[5]);
t6=((C_word*)((C_word*)t0)[3])[1];
f_15177(t6,((C_word*)t0)[2],t4,t5);}

/* eod? in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15137(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15137,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15144,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14624(t3,t2);}

/* k15142 in eod? in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15144,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15151,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-value");
t3=C_retrieve2(lf[280],"pattern-value");
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[300]));}}

/* k15149 in k15142 in eod? in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  eod?");
t2=C_retrieve(lf[299]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* eop? in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15118(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15118,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15125,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14624(t3,t2);}

/* k15123 in eop? in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15125,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15132,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-state");
f_14747(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[298]));}}

/* k15130 in k15123 in eop? in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  eop?");
t2=C_retrieve(lf[297]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* initialize-pattern in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14938(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10){
C_word tmp;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14938,NULL,10,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);}
t11=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14942,a[2]=t7,a[3]=t10,a[4]=t9,a[5]=t5,a[6]=t11,a[7]=t1,a[8]=t8,a[9]=t4,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data-set!");
f_14648(t12,t2,t3);}

/* k14940 in initialize-pattern in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_14945,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=((C_word*)t0)[10];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[271]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t6=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(3),t4);}

/* k14943 in k14940 in initialize-pattern in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14945,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14948,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[9];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[271]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t6=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(13),t4);}

/* k14946 in k14943 in k14940 in initialize-pattern in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14948,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14951,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[8];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[271]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t6=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(12),t4);}

/* k14949 in k14946 in k14943 in k14940 in initialize-pattern in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14951,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14954,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15108,a[2]=t3,a[3]=((C_word)li218),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  map-pattern-data");
f_15589(t4,t5,((C_word*)t0)[7]);}

/* a15107 in k14949 in k14946 in k14943 in k14940 in initialize-pattern in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15108(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15108,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15115,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14624(t3,t2);}

/* k15113 in a15107 in k14949 in k14946 in k14943 in k14940 in initialize-pattern in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k14952 in k14949 in k14946 in k14943 in k14940 in initialize-pattern in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14954,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14957,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t2;
f_14957(t5,t4);}
else{
t3=t2;
f_14957(t3,C_SCHEME_UNDEFINED);}}

/* k14955 in k14952 in k14949 in k14946 in k14943 in k14940 in initialize-pattern in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14957(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14957,NULL,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=(C_word)C_i_block_ref(t2,C_fix(10));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14963,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[287]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_14963(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[294]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(16));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_14963(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[295],t4);}}}

/* k14961 in k14955 in k14952 in k14949 in k14946 in k14943 in k14940 in initialize-pattern in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14963,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=(C_word)C_i_block_ref(t2,C_fix(11));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14969,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[288]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(32));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_14969(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[292]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(64));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_14969(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[293],t4);}}}

/* k14967 in k14961 in k14955 in k14952 in k14949 in k14946 in k14943 in k14940 in initialize-pattern in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14969,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14972,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15032,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7650(t3,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}

/* k15030 in k14967 in k14961 in k14955 in k14952 in k14949 in k14946 in k14943 in k14940 in initialize-pattern in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15032,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[290]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14972(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15046,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7650(t2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));}}

/* k15044 in k15030 in k14967 in k14961 in k14955 in k14952 in k14949 in k14946 in k14943 in k14940 in initialize-pattern in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_15046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15046,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[291]);
t3=(C_word)C_a_i_bitwise_ior(&a,2,t2,C_fix(16));
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14972(t5,t4);}
else{
t2=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14972(t4,t3);}}

/* k14970 in k14967 in k14961 in k14955 in k14952 in k14949 in k14946 in k14943 in k14940 in initialize-pattern in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14972(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14972,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14975,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_numberp(((C_word*)t0)[2]);
t4=(C_truep(t3)?(C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(0)):C_SCHEME_FALSE);
t5=(C_truep(t4)?((C_word*)t0)[2]:C_fix(1073741823));
t6=((C_word*)t0)[4];
t7=(C_word)C_i_check_structure(t6,lf[271]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t8=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t8+1)))(5,t8,t2,t6,C_fix(8),t5);}

/* k14973 in k14970 in k14967 in k14961 in k14955 in k14952 in k14949 in k14946 in k14943 in k14940 in initialize-pattern in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14975,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=(C_truep(t2)?t2:((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14981,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t5=((C_word*)t0)[6];
if(C_truep(t5)){
t6=t4;
f_14981(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(2));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t4;
f_14981(t8,t7);}}

/* k14979 in k14973 in k14970 in k14967 in k14961 in k14955 in k14952 in k14949 in k14946 in k14943 in k14940 in initialize-pattern in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14981(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14981,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14984,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14994,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_numberp(((C_word*)t0)[3]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(((C_word*)t0)[3],C_SCHEME_TRUE));
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 378  make-period");
f_14468(t3,C_fix(0),((C_word*)t0)[3],C_SCHEME_FALSE,((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 378  make-period");
f_14468(t3,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}}

/* k14992 in k14979 in k14973 in k14970 in k14967 in k14961 in k14955 in k14952 in k14949 in k14946 in k14943 in k14940 in initialize-pattern in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[271]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t4=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(5),t1);}

/* k14982 in k14979 in k14973 in k14970 in k14967 in k14961 in k14955 in k14952 in k14949 in k14946 in k14943 in k14940 in initialize-pattern in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14984,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14987,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)t0)[3];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_i_check_structure(t3,lf[271]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t6=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(1),t4);}

/* k14985 in k14982 in k14979 in k14973 in k14970 in k14967 in k14961 in k14955 in k14952 in k14949 in k14946 in k14943 in k14940 in initialize-pattern in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(2,0,((C_word*)t0)[2]);}

/* %alloc-pattern in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14928(C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14928,NULL,1,t1);}
t2=lf[286];
t3=lf[286];
t4=lf[286];
t5=lf[287];
t6=lf[288];
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,15,lf[271],C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_FALSE,t2,C_SCHEME_FALSE,t3,t4,C_fix(1073741823),C_SCHEME_FALSE,t5,t6,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* pattern-cache in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14873(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14873,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(14)));}

/* pattern-cache-set! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14864(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14864,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[271]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(14),t3);}

/* pattern-state in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14747(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14747,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(7)));}

/* pattern-state-set! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14738(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14738,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[271]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(7),t3);}

/* f_14729 in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14729(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14729,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* pattern-value-set! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14720(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14720,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[271]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* pattern-period in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14711(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14711,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* pattern-datum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14693(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14693,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* pattern-datum-set! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14684(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14684,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[271]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* pattern-length in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14675(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14675,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* pattern-data in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14657(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14657,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* pattern-data-set! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14648(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14648,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[271]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* pattern-flags in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14639(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14639,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[271]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* pattern? in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14624(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14624,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[271]));}

/* period-reps in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14579(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14579,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[262]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* period-omit in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14561(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14561,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[262]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* period-omit-set! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14552(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14552,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[262]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(5),t3);}

/* period-stream in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14525(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14525,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[262]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* period-length in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14507(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14507,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[262]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* period-count in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14489(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14489,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[262]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* period-count-set! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14480(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14480,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[262]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(1),t3);}

/* make-period in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14468(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14468,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,7,lf[262],t2,t3,t4,t5,t6,t7));}

/* import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14342(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14342,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14348,a[2]=((C_word)li193),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  with-input-from-file");
t4=C_retrieve(lf[260]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t2,t3);}

/* a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14348,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14352,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  current-input-port");
t3=*((C_word*)lf[259]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14352,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14353,a[2]=((C_word)li188),tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14370,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  rhdr");
f_14353(t5,t1);}

/* k14368 in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14370,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14373,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[257]))){
t4=t3;
f_14373(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[258],((C_word*)t0)[4]);}}

/* k14371 in k14368 in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14373,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14377,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  rhdr");
f_14353(t2,((C_word*)t0)[4]);}

/* k14375 in k14371 in k14368 in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14377,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14380,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[255]))){
t4=t3;
f_14380(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[256],((C_word*)t0)[4]);}}

/* k14378 in k14375 in k14371 in k14368 in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14380,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14383,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14432,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word)li192),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_14432(t6,t2);}

/* do1481 in k14378 in k14375 in k14371 in k14368 in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14432(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14432,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[254]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14443,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  rhdr");
f_14353(t2,((C_word*)t0)[2]);}}

/* k14441 in do1481 in k14378 in k14375 in k14371 in k14368 in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14432(t3,((C_word*)t0)[2]);}

/* k14381 in k14378 in k14375 in k14371 in k14368 in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14383,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14393,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  read-line");
t6=C_retrieve(lf[250]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[3]);}

/* k14391 in k14381 in k14378 in k14375 in k14371 in k14368 in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14393,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14395,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li191),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_14395(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1491 in k14391 in k14381 in k14378 in k14375 in k14371 in k14368 in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14395(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14395,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_eofp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14409,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t6=t2;
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14239,a[2]=t5,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  open-input-string");
t8=C_retrieve(lf[253]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,t6);}}

/* k14237 in do1491 in k14391 in k14381 in k14378 in k14375 in k14371 in k14368 in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14239,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14240,a[2]=((C_word*)t0)[3],a[3]=((C_word)li189),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14263,a[2]=t1,a[3]=t2,a[4]=t7,a[5]=((C_word*)t0)[2],a[6]=t8,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  rdat");
t10=t2;
f_14240(t10,t9,t1);}

/* k14261 in k14237 in do1491 in k14391 in k14381 in k14378 in k14375 in k14371 in k14368 in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14263,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14267,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  rdat");
t4=((C_word*)t0)[3];
f_14240(t4,t3,((C_word*)t0)[2]);}

/* k14265 in k14261 in k14237 in do1491 in k14391 in k14381 in k14378 in k14375 in k14371 in k14368 in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14267,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14270,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14293,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[8],a[6]=((C_word)li190),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_14293(t7,t3,C_fix(0),((C_word*)t0)[5],((C_word*)t0)[7]);}

/* do1460 in k14265 in k14261 in k14237 in do1491 in k14391 in k14381 in k14378 in k14375 in k14371 in k14368 in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14293(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14293,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[5])[1]))){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,C_SCHEME_FALSE);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14303,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=t5,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  rdat");
t8=((C_word*)t0)[3];
f_14240(t8,t7,((C_word*)t0)[2]);}}

/* k14301 in do1460 in k14265 in k14261 in k14237 in do1491 in k14391 in k14381 in k14378 in k14375 in k14371 in k14368 in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14303,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14340,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  rdat");
t3=((C_word*)t0)[3];
f_14240(t3,t2,((C_word*)t0)[2]);}

/* k14338 in k14301 in do1460 in k14265 in k14261 in k14237 in do1491 in k14391 in k14381 in k14378 in k14375 in k14371 in k14368 in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14340,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[8])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t4);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14332,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  rdat");
t7=((C_word*)t0)[3];
f_14240(t7,t6,((C_word*)t0)[2]);}

/* k14330 in k14338 in k14301 in do1460 in k14265 in k14261 in k14237 in do1491 in k14391 in k14381 in k14378 in k14375 in k14371 in k14368 in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14332,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t7=((C_word*)((C_word*)t0)[4])[1];
f_14293(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k14268 in k14265 in k14261 in k14237 in do1491 in k14391 in k14381 in k14378 in k14375 in k14371 in k14368 in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
t3=((C_word*)t0)[5];
f_14409(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_cdr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  make-spectrum");
f_11005(((C_word*)t0)[5],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],t3,t4);}}

/* rdat in k14237 in do1491 in k14391 in k14381 in k14378 in k14375 in k14371 in k14368 in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14240(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14240,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14244,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  read");
t4=*((C_word*)lf[252]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k14242 in rdat in k14237 in do1491 in k14391 in k14381 in k14378 in k14375 in k14371 in k14368 in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14244,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14247,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_eofp(t1))){
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[251],((C_word*)t0)[2]);}
else{
t3=t2;
f_14247(2,t3,C_SCHEME_UNDEFINED);}}

/* k14245 in k14242 in rdat in k14237 in do1491 in k14391 in k14381 in k14378 in k14375 in k14371 in k14368 in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k14407 in do1491 in k14391 in k14381 in k14378 in k14375 in k14371 in k14368 in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14409,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14412,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t3;
f_14412(t8,t7);}
else{
t4=t3;
f_14412(t4,C_SCHEME_UNDEFINED);}}

/* k14410 in k14407 in do1491 in k14391 in k14381 in k14378 in k14375 in k14371 in k14368 in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14412(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14412,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14419,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  read-line");
t3=C_retrieve(lf[250]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k14417 in k14410 in k14407 in do1491 in k14391 in k14381 in k14378 in k14375 in k14371 in k14368 in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_14395(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* rhdr in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14353(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14353,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14357,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  read-line");
t4=C_retrieve(lf[250]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k14355 in rhdr in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14357,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14360,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_eofp(t1))){
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[249],((C_word*)t0)[2]);}
else{
t3=t2;
f_14360(2,t3,C_SCHEME_UNDEFINED);}}

/* k14358 in k14355 in rhdr in k14350 in a14347 in import-spear-frames in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13829(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+24)){
C_save_and_reclaim((void*)tr4r,(void*)f_13829r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_13829r(t0,t1,t2,t3,t4);}}

static void C_ccall f_13829r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a=C_alloc(24);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13833,a[2]=t5,a[3]=t10,a[4]=t8,a[5]=t6,a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t6)[1]))){
C_trace("ChickenBridge.scm: 377  error");
t12=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,lf[246]);}
else{
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14202,a[2]=t11,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_car(((C_word*)t6)[1]);
t15=(C_word)C_i_pairp(t14);
t16=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14208,a[2]=t6,a[3]=t13,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t15)){
t17=t16;
f_14208(t17,t15);}
else{
t17=(C_word)C_i_car(((C_word*)t6)[1]);
t18=t16;
f_14208(t18,(C_word)C_i_numberp(t17));}}
else{
t13=t11;
f_13833(2,t13,C_SCHEME_UNDEFINED);}}}

/* k14206 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14208(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_14202(2,t2,(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]));}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],lf[247],t2);}}

/* k14200 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13833(2,t3,t2);}

/* k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13833,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13836,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14186,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  <=");
C_less_or_equal_p(5,0,t3,C_fix(1),((C_word*)((C_word*)t0)[2])[1],C_fix(8));}

/* k14184 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14186,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_13836(2,t4,t3);}
else{
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[245],((C_word*)((C_word*)t0)[3])[1]);}}

/* k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13836,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13839,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(2)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14168,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t4=C_retrieve(lf[208]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14172,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t4=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}}

/* k14170 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13839(t3,t2);}

/* k14166 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13839(t3,t2);}

/* k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13839(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13839,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13842,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(1)))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14157,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t4=C_retrieve(lf[208]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14161,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t4=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}}

/* k14159 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_SCHEME_UNDEFINED;
t3=((C_word*)t0)[2];
f_13842(t3,t2);}

/* k14155 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_SCHEME_UNDEFINED;
t3=((C_word*)t0)[2];
f_13842(t3,t2);}

/* k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13842(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13842,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13845,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=t2;
f_13845(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=t2;
f_13845(t4,t3);}}

/* k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13845(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13845,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13848,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13859,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word)li179),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_13859(t6,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13889,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word)li180),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_13889(t6,t2,((C_word*)((C_word*)t0)[3])[1]);}}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13909,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14145,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  every?");
t5=C_retrieve(lf[73]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,*((C_word*)lf[244]+1),((C_word*)((C_word*)t0)[5])[1]);}}

/* k14143 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14145,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
f_13909(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14003,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=t5,a[6]=t3,a[7]=t9,a[8]=t7,a[9]=((C_word*)t0)[4],a[10]=((C_word*)t0)[5],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14129,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-minamp");
t12=C_retrieve(lf[214]);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t0)[2]);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14137,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-minfreq");
t12=C_retrieve(lf[212]);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t0)[2]);}}}

/* k14135 in k14143 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14137,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14141,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-maxfreq");
t4=C_retrieve(lf[213]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14139 in k14135 in k14143 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14003(t3,t2);}

/* k14127 in k14143 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14129,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14133,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-maxamp");
t4=C_retrieve(lf[217]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14131 in k14127 in k14143 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14003(t3,t2);}

/* k14001 in k14143 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14003(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14003,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14006,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14110,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-minamp");
t4=C_retrieve(lf[214]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14118,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-minfreq");
t4=C_retrieve(lf[212]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k14116 in k14001 in k14143 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14118,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14122,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-maxfreq");
t4=C_retrieve(lf[213]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14120 in k14116 in k14001 in k14143 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14006(t3,t2);}

/* k14108 in k14001 in k14143 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14110,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14114,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-maxamp");
t4=C_retrieve(lf[217]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14112 in k14108 in k14001 in k14143 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14006(t3,t2);}

/* k14004 in k14001 in k14143 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14006(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14006,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14010,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_END_OF_LIST);}

/* k14008 in k14004 in k14001 in k14143 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14010,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14015,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t4,a[8]=((C_word)li186),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_14015(t6,((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}

/* do1423 in k14008 in k14004 in k14001 in k14143 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14015(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14015,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14025,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_eqp(t4,C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t3;
f_14025(t6,(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[3])[1]));}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_eqp(t6,C_SCHEME_TRUE);
t8=t3;
f_14025(t8,(C_truep(t7)?(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[2])[1]):C_SCHEME_UNDEFINED));}}}

/* k14023 in do1423 in k14008 in k14004 in k14001 in k14143 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_14025(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14025,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14028,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[243],t3);}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
t4=(C_word)C_eqp(t3,C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(((C_word*)t0)[7]);
t6=t2;
f_14028(2,t6,(C_word)C_i_set_car(t5,((C_word*)((C_word*)t0)[3])[1]));}
else{
t5=(C_word)C_i_cadr(((C_word*)t0)[7]);
t6=(C_word)C_eqp(t5,C_SCHEME_TRUE);
if(C_truep(t6)){
t7=(C_word)C_i_cdr(((C_word*)t0)[7]);
t8=t2;
f_14028(2,t8,(C_word)C_i_set_car(t7,((C_word*)((C_word*)t0)[2])[1]));}
else{
t7=t2;
f_14028(2,t7,C_SCHEME_UNDEFINED);}}}}

/* k14026 in k14023 in do1423 in k14008 in k14004 in k14001 in k14143 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_14028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14015(t3,((C_word*)t0)[2],t2);}

/* k13907 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13909,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13912,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13934,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li184),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_13934(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13972,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li185),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_13972(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* do1437 in k13907 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13972(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13972,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13993,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  interp");
t5=C_retrieve(lf[128]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k13991 in do1437 in k13907 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_13972(t4,((C_word*)t0)[2],t3);}

/* do1432 in k13907 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13934(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13934,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13963,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  interp");
t6=C_retrieve(lf[128]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}}

/* k13961 in do1432 in k13907 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13963,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[4],t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_13934(t5,((C_word*)t0)[2],t4);}

/* k13910 in k13907 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13912,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13925,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13929,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t4=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k13927 in k13910 in k13907 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_apply(4,0,((C_word*)t0)[2],*((C_word*)lf[242]+1),t1);}

/* k13923 in k13910 in k13907 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13925,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_13848(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=((C_word*)t0)[2];
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13292,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13367,a[2]=((C_word)li183),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13375,a[2]=t2,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t6=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}

/* k13373 in k13923 in k13910 in k13907 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13375,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13379,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t3=C_retrieve(lf[208]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k13377 in k13373 in k13923 in k13910 in k13907 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  map");
t2=*((C_word*)lf[241]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a13366 in k13923 in k13910 in k13907 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13367(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13367,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* k13290 in k13923 in k13910 in k13907 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13292,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13296,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13353,a[2]=((C_word)li182),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  sort!");
t6=C_retrieve(lf[240]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)t3)[1],t5);}

/* a13352 in k13290 in k13923 in k13910 in k13907 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13353(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13353,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_lessp(t4,t5));}

/* k13294 in k13290 in k13923 in k13910 in k13907 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13296,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13304,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word)li181),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_13304(t8,((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1],t4);}

/* do1308 in k13294 in k13290 in k13923 in k13910 in k13907 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13304(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13304,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13314,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs-set!");
f_11053(t5,((C_word*)t0)[5],((C_word*)t0)[3]);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_car(t5);
t7=(C_word)C_i_cdr(t5);
t8=(C_word)C_i_set_cdr(((C_word*)t4)[1],t7);
t9=(C_word)C_i_cdr(((C_word*)t4)[1]);
t10=C_set_block_item(t4,0,t9);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13337,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t12=*((C_word*)lf[228]+1);
t13=t12;
((C_proc4)C_retrieve_proc(t13))(4,t13,t11,t2,t6);}}

/* k13335 in do1308 in k13294 in k13290 in k13923 in k13910 in k13907 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_13304(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k13312 in do1308 in k13294 in k13290 in k13923 in k13910 in k13907 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13314,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13317,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 377  spectrum-amps-set!");
f_11071(t2,((C_word*)t0)[3],t3);}

/* k13315 in k13312 in do1308 in k13294 in k13290 in k13923 in k13910 in k13907 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* do1410 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13889(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13889,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_cdr(t2);
t6=t1;
t7=t4;
t1=t6;
t2=t7;
goto loop;}}

/* do1405 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13859(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_13859,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_times(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_i_set_car(t2,t4);
t6=(C_word)C_i_cdr(t2);
t8=t1;
t9=t6;
t1=t8;
t2=t9;
goto loop;}}

/* k13846 in k13843 in k13840 in k13837 in k13834 in k13831 in spectrum-rescale! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* spectrum-flip! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13772(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13772,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13780,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-maxfreq");
t4=C_retrieve(lf[213]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k13778 in spectrum-flip! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13780,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13784,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-minfreq");
t3=C_retrieve(lf[212]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k13782 in k13778 in spectrum-flip! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13784,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13788,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t3=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[4]);}

/* k13786 in k13782 in k13778 in spectrum-flip! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13788,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13794,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word)li177),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_13794(t5,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* do1386 in k13786 in k13782 in k13778 in spectrum-flip! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13794(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(15);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_13794,NULL,6,t0,t1,t2,t3,t4,t5);}
if(C_truep((C_word)C_i_nullp(t4))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13804,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs-set!");
f_11053(t6,((C_word*)t0)[3],t5);}
else{
t6=(C_word)C_i_car(t4);
t7=(C_word)C_a_i_divide(&a,2,t2,t6);
t8=(C_word)C_a_i_times(&a,2,t3,t7);
t9=(C_word)C_a_i_cons(&a,2,t8,t5);
t10=t5=t9;
t11=(C_word)C_i_cdr(t4);
t14=t1;
t15=t2;
t16=t3;
t17=t11;
t18=t5;
t1=t14;
t2=t15;
t3=t16;
t4=t17;
t5=t18;
goto loop;}}

/* k13802 in do1386 in k13786 in k13782 in k13778 in spectrum-flip! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* rm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13560(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[17],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13560,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13562,a[2]=((C_word)li169),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13579,a[2]=((C_word)li170),tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13596,a[2]=((C_word)li171),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13628,a[2]=t4,a[3]=t2,a[4]=t3,a[5]=t5,a[6]=t6,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  getfreqs");
f_13562(t7,t2);}

/* k13626 in rm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13628,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13631,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t1,a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  getfreqs");
f_13562(t2,((C_word*)t0)[4]);}

/* k13629 in k13626 in rm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13631,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13634,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  getamps");
f_13579(t2,((C_word*)t0)[2]);}

/* k13632 in k13629 in k13626 in rm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13634,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13637,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  getamps");
f_13579(t2,((C_word*)t0)[2]);}

/* k13635 in k13632 in k13629 in k13626 in rm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13637,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13640,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  make-spectrum");
f_11005(t2,C_SCHEME_FALSE,C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* k13638 in k13635 in k13632 in k13629 in k13626 in rm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13640,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13643,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[4]))){
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13657,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li173),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_13657(t6,t2,((C_word*)t0)[3]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13706,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li174),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_13706(t6,t2,((C_word*)t0)[4]);}}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13738,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li175),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_13738(t6,t2,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 377  sums-and-diffs");
f_13596(t2,t1,((C_word*)t0)[4],((C_word*)t0)[3]);}}}

/* do1379 in k13638 in k13635 in k13632 in k13629 in k13626 in rm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13738(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13738,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13748,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  sums-and-diffs");
f_13596(t3,((C_word*)t0)[3],((C_word*)t0)[2],t4);}}

/* k13746 in do1379 in k13638 in k13635 in k13632 in k13629 in k13626 in rm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13738(t3,((C_word*)t0)[2],t2);}

/* do1374 in k13638 in k13635 in k13632 in k13629 in k13626 in rm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13706(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13706,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13716,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  sums-and-diffs");
f_13596(t3,((C_word*)t0)[3],t4,((C_word*)t0)[2]);}}

/* k13714 in do1374 in k13638 in k13635 in k13632 in k13629 in k13626 in rm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13706(t3,((C_word*)t0)[2],t2);}

/* do1364 in k13638 in k13635 in k13632 in k13629 in k13626 in rm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13657(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13657,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13667,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13676,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t5,a[6]=((C_word)li172),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_13676(t7,t3,((C_word*)t0)[2]);}}

/* do1367 in do1364 in k13638 in k13635 in k13632 in k13629 in k13626 in rm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13676(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13676,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13686,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  sums-and-diffs");
f_13596(t3,((C_word*)t0)[2],t4,t5);}}

/* k13684 in do1367 in do1364 in k13638 in k13635 in k13632 in k13629 in k13626 in rm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13676(t3,((C_word*)t0)[2],t2);}

/* k13665 in do1364 in k13638 in k13635 in k13632 in k13629 in k13626 in rm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13657(t3,((C_word*)t0)[2],t2);}

/* k13641 in k13638 in k13635 in k13632 in k13629 in k13626 in rm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* sums-and-diffs in rm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13596(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13596,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t3,t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13606,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_a_i_plus(&a,2,t3,t4);
C_trace("ChickenBridge.scm: 377  spectrum-add!");
t7=C_retrieve(lf[232]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,t2,t6,lf[237]);}}

/* k13604 in sums-and-diffs in rm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13606,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_abs(&a,1,t2);
C_trace("ChickenBridge.scm: 377  spectrum-add!");
t4=C_retrieve(lf[232]);
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3,lf[236]);}

/* getamps in rm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13579(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13579,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13586,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum?");
f_11011(t3,t2);}

/* k13584 in getamps in rm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t2=C_retrieve(lf[208]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?lf[234]:lf[235]));}}

/* getfreqs in rm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13562(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13562,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13569,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum?");
f_11011(t3,t2);}

/* k13567 in getfreqs in rm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t2=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)t0)[2]:((C_word*)t0)[2]));}}

/* spectrum-add! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13381(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_13381,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13389,a[2]=t1,a[3]=t3,a[4]=t4,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t6=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k13387 in spectrum-add! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13389,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13393,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t3=C_retrieve(lf[208]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[5]);}

/* k13391 in k13387 in spectrum-add! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13393,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13395,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word)li167),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_13395(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* do1324 in k13391 in k13387 in spectrum-add! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13395(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13395,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13405,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t5,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t4,a[8]=t2,a[9]=((C_word*)t0)[5],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t6)){
t8=t7;
f_13405(t8,t6);}
else{
t8=(C_word)C_i_car(t2);
t9=t7;
f_13405(t9,(C_word)C_i_greater_or_equalp(t8,((C_word*)t0)[3]));}}

/* k13403 in do1324 in k13391 in k13387 in spectrum-add! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13405(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13405,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13408,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[8]))){
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13420,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 377  spectrum-freqs-set!");
f_11053(t3,((C_word*)t0)[9],t4);}
else{
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13451,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-size");
t8=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[9]);}}
else{
t3=(C_word)C_i_car(((C_word*)t0)[8]);
if(C_truep((C_word)C_i_nequalp(t3,((C_word*)t0)[5]))){
t4=(C_word)C_i_car(((C_word*)t0)[3]);
t5=(C_word)C_a_i_plus(&a,2,t4,((C_word*)t0)[6]);
t6=t2;
f_13408(2,t6,(C_word)C_i_set_car(((C_word*)t0)[3],t5));}
else{
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13485,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 377  spectrum-freqs-set!");
f_11053(t4,((C_word*)t0)[9],t5);}
else{
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(t4,((C_word*)t0)[8]);
t7=(C_word)C_i_set_cdr(((C_word*)t0)[7],t4);
t8=(C_word)C_i_set_cdr(t5,((C_word*)t0)[3]);
t9=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13536,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-size");
t11=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)t0)[9]);}}}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
t4=((C_word*)((C_word*)t0)[2])[1];
f_13395(t4,((C_word*)t0)[10],t2,t3,((C_word*)t0)[8],((C_word*)t0)[3]);}}

/* k13534 in k13403 in do1324 in k13391 in k13387 in spectrum-add! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13536,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  spectrum-size-set!");
f_11035(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13483 in k13403 in do1324 in k13391 in k13387 in spectrum-add! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13485,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13488,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 377  spectrum-amps-set!");
f_11071(t2,((C_word*)t0)[4],t3);}

/* k13486 in k13483 in k13403 in do1324 in k13391 in k13387 in spectrum-add! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13488,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13499,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-size");
t3=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k13497 in k13486 in k13483 in k13403 in do1324 in k13391 in k13387 in spectrum-add! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13499,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  spectrum-size-set!");
f_11035(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13449 in k13403 in do1324 in k13391 in k13387 in spectrum-add! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13451,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  spectrum-size-set!");
f_11035(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13418 in k13403 in do1324 in k13391 in k13387 in spectrum-add! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13420,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13423,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 377  spectrum-amps-set!");
f_11071(t2,((C_word*)t0)[3],t3);}

/* k13421 in k13418 in k13403 in do1324 in k13391 in k13387 in spectrum-add! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  spectrum-size-set!");
f_11035(((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}

/* k13406 in k13403 in do1324 in k13391 in k13387 in spectrum-add! in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* fm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12969(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12969,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_times(&a,2,t2,t3);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13286,a[2]=t4,a[3]=t2,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  round");
t7=*((C_word*)lf[113]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t4);}

/* k13284 in fm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13286,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12982,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_13215,a[2]=t9,a[3]=((C_word*)t0)[2],a[4]=t8,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t5,a[8]=t6,a[9]=t3,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 377  -");
C_minus(3,0,t10,t3);}

/* k13213 in k13284 in fm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13215,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13217,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word)li165),tmp=(C_word)a,a+=11,tmp));
t5=((C_word*)t3)[1];
f_13217(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do1246 in k13213 in k13284 in fm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13217(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13217,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)t0)[9]))){
t7=(C_word)C_i_cdr(((C_word*)t0)[8]);
t8=C_mutate(((C_word *)((C_word*)t0)[7])+1,t7);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,t8);}
else{
t7=(C_word)C_a_i_times(&a,2,((C_word*)t0)[6],t2);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],t7);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13236,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t11=t2;
t12=((C_word*)t0)[2];
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7956,a[2]=((C_word)li164),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t10,t11,t12);}}

/* f_7956 in do1246 in k13213 in k13284 in fm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7956(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7956,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub390(t4,t5,t6));}

/* k13234 in do1246 in k13213 in k13284 in fm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13236,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13239,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[7])[1],lf[230]);
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],lf[231]));
if(C_truep(t5)){
t6=t3;
f_13239(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[7])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[2])+1,t9);
t11=t3;
f_13239(t11,t10);}}

/* k13237 in k13234 in do1246 in k13213 in k13284 in fm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13239(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13239,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_13217(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k12980 in k13284 in fm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12982,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12985,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13058,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li163),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_13058(t6,t2,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do1258 in k12980 in k13284 in fm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13058(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13058,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13211,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t4,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  caar");
t7=*((C_word*)lf[229]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k13209 in do1258 in k12980 in k13284 in fm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13211,2,t0,t1);}
if(C_truep((C_word)C_i_negativep(t1))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_abs(&a,1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_i_set_car(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13195,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=t10,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
C_trace("ChickenBridge.scm: 377  -");
C_minus(3,0,t11,t12);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k13193 in k13209 in do1258 in k12980 in k13284 in fm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13195,2,t0,t1);}
t2=(C_word)C_i_set_car(((C_word*)t0)[7],t1);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_i_assoc(t3,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13089,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t4)){
t6=(C_word)C_i_cdr(t4);
t7=(C_word)C_i_cadr(t4);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t9=(C_word)C_a_i_plus(&a,2,t7,t8);
t10=t5;
f_13089(t10,(C_word)C_i_set_car(t6,t9));}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13114,a[2]=t5,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_a_i_minus(&a,2,t7,C_fix(1));
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13147,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=((C_word*)t0)[5],a[5]=((C_word)li162),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_13147(t12,t6,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}}

/* do1264 in k13193 in k13209 in do1258 in k12980 in k13284 in fm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13147(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13147,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=((C_word*)t5)[1];
t8=(C_truep(t7)?t7:(C_word)C_i_lessp(t2,C_fix(0)));
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,((C_word*)t5)[1]);}
else{
t9=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[4])[1],t2);
t10=(C_word)C_i_car(t9);
t11=C_set_block_item(t6,0,t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13161,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],((C_word*)((C_word*)t0)[2])[1]))){
t13=C_set_block_item(t5,0,t2);
t14=t12;
f_13161(t14,t13);}
else{
t13=t12;
f_13161(t13,C_SCHEME_UNDEFINED);}}}

/* k13159 in do1264 in k13193 in k13209 in do1258 in k12980 in k13284 in fm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13161(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13161,NULL,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_13147(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k13112 in k13193 in k13209 in do1258 in k12980 in k13284 in fm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13114,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_list_tail(((C_word*)((C_word*)t0)[4])[1],t1);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=(C_word)C_i_cdr(t3);
t7=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t6);
t8=((C_word*)t0)[2];
f_13089(t8,(C_word)C_i_set_cdr(t3,((C_word*)((C_word*)t0)[3])[1]));}
else{
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_13089(t5,t4);}}

/* k13087 in k13193 in k13209 in do1258 in k12980 in k13284 in fm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_13089(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_13058(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k12983 in k12980 in k13284 in fm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12985,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12993,a[2]=t5,a[3]=t2,a[4]=t3,a[5]=((C_word)li161),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_12993(t7,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1],C_fix(0),t3);}

/* do1286 in k12983 in k12980 in k13284 in fm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_12993(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12993,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  make-spectrum");
f_11005(t1,C_SCHEME_FALSE,t3,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_car(t6);
t8=(C_word)C_i_cdr(t6);
t9=(C_word)C_i_cadr(t6);
t10=(C_word)C_a_i_abs(&a,1,t9);
t11=(C_word)C_i_set_car(t8,t10);
t12=(C_word)C_i_cdr(t6);
t13=(C_word)C_i_set_cdr(((C_word*)t5)[1],t12);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
t15=C_set_block_item(t5,0,t14);
t16=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13026,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t17=*((C_word*)lf[228]+1);
t18=t17;
((C_proc4)C_retrieve_proc(t18))(4,t18,t16,t2,t7);}}

/* k13024 in do1286 in k12983 in k12980 in k13284 in fm-spectrum in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_13026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13026,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t4=((C_word*)((C_word*)t0)[4])[1];
f_12993(t4,((C_word*)t0)[3],t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11496(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+101)){
C_save_and_reclaim((void*)tr3r,(void*)f_11496r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11496r(t0,t1,t2,t3);}}

static void C_ccall f_11496r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word *a=C_alloc(101);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=t3;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11500,a[2]=t27,a[3]=t25,a[4]=t23,a[5]=t21,a[6]=t19,a[7]=t31,a[8]=t17,a[9]=t3,a[10]=t29,a[11]=t15,a[12]=t13,a[13]=t11,a[14]=t9,a[15]=t7,a[16]=t5,a[17]=t2,a[18]=t1,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t29)[1]))){
t33=t32;
f_11500(t33,C_SCHEME_UNDEFINED);}
else{
t33=(C_word)C_i_car(((C_word*)t29)[1]);
t34=(C_word)C_eqp(t33,lf[221]);
if(C_truep(t34)){
t35=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12742,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t17,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("error");
t36=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t36))(4,t36,t35,lf[19],lf[221]);}
else{
t36=t35;
f_12742(2,t36,C_SCHEME_UNDEFINED);}}
else{
t35=(C_word)C_eqp(t33,lf[222]);
if(C_truep(t35)){
t36=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12777,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t19,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t19)[1])){
C_trace("error");
t37=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t37))(4,t37,t36,lf[19],lf[222]);}
else{
t37=t36;
f_12777(2,t37,C_SCHEME_UNDEFINED);}}
else{
t36=(C_word)C_eqp(t33,lf[223]);
if(C_truep(t36)){
t37=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12812,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t21,a[7]=t9,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t21)[1])){
C_trace("error");
t38=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t38))(4,t38,t37,lf[19],lf[223]);}
else{
t38=t37;
f_12812(2,t38,C_SCHEME_UNDEFINED);}}
else{
t37=(C_word)C_eqp(t33,lf[224]);
if(C_truep(t37)){
t38=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12847,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t11,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t23)[1])){
C_trace("error");
t39=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t39))(4,t39,t38,lf[19],lf[224]);}
else{
t39=t38;
f_12847(2,t39,C_SCHEME_UNDEFINED);}}
else{
t38=(C_word)C_eqp(t33,lf[225]);
if(C_truep(t38)){
t39=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12882,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t25,a[7]=t13,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t25)[1])){
C_trace("error");
t40=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t40))(4,t40,t39,lf[19],lf[225]);}
else{
t40=t39;
f_12882(2,t40,C_SCHEME_UNDEFINED);}}
else{
t39=(C_word)C_eqp(t33,lf[226]);
if(C_truep(t39)){
t40=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12917,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t27,a[7]=t15,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t27)[1])){
C_trace("error");
t41=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[19],lf[226]);}
else{
t41=t40;
f_12917(2,t41,C_SCHEME_UNDEFINED);}}
else{
t40=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12946,a[2]=t32,a[3]=t17,a[4]=t5,a[5]=t29,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t31)[1])){
C_trace("error");
t41=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[10],t3);}
else{
t41=t40;
f_12946(2,t41,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12944 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12946,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12953,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12961,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12959 in k12944 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12953(2,t2,C_SCHEME_UNDEFINED);}}

/* k12951 in k12944 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11500(t5,t4);}

/* k12915 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12917,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12921,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12921(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12919 in k12915 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11500(t7,t6);}

/* k12880 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12882,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12886,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12886(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12884 in k12880 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11500(t7,t6);}

/* k12845 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12847,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12851,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12851(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12849 in k12845 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11500(t7,t6);}

/* k12810 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12812,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12816,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12816(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12814 in k12810 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11500(t7,t6);}

/* k12775 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12777,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12781,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12781(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12779 in k12775 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11500(t7,t6);}

/* k12740 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12742,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12746,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12746(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12744 in k12740 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11500(t7,t6);}

/* k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_11500(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11500,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11503,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11503(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12502,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[221]);}
else{
t6=t5;
f_12502(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[222]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12537,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[222]);}
else{
t7=t6;
f_12537(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[223]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12572,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[223]);}
else{
t8=t7;
f_12572(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[224]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12607,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[224]);}
else{
t9=t8;
f_12607(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[225]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12642,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[225]);}
else{
t10=t9;
f_12642(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[226]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12677,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[226]);}
else{
t11=t10;
f_12677(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12706,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[15],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_12706(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12704 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12706,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12713,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12721,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12719 in k12704 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12713(2,t2,C_SCHEME_UNDEFINED);}}

/* k12711 in k12704 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11503(t5,t4);}

/* k12675 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12677,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12681,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12681(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12679 in k12675 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11503(t7,t6);}

/* k12640 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12642,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12646,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12646(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12644 in k12640 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11503(t7,t6);}

/* k12605 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12607,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12611,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12611(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12609 in k12605 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11503(t7,t6);}

/* k12570 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12572,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12576,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12576(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12574 in k12570 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11503(t7,t6);}

/* k12535 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12537,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12541,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12541(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12539 in k12535 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11503(t7,t6);}

/* k12500 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12502,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12506,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12506(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12504 in k12500 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11503(t7,t6);}

/* k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_11503(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11503,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11506,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11506(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12262,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[221]);}
else{
t6=t5;
f_12262(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[222]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12297,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[222]);}
else{
t7=t6;
f_12297(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[223]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12332,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[223]);}
else{
t8=t7;
f_12332(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[224]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12367,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[224]);}
else{
t9=t8;
f_12367(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[225]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12402,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[225]);}
else{
t10=t9;
f_12402(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[226]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12437,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[226]);}
else{
t11=t10;
f_12437(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12466,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[14],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_12466(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12464 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12466,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12473,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12481,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12479 in k12464 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12473(2,t2,C_SCHEME_UNDEFINED);}}

/* k12471 in k12464 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11506(t5,t4);}

/* k12435 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12437,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12441,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12441(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12439 in k12435 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11506(t7,t6);}

/* k12400 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12402,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12406,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12406(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12404 in k12400 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11506(t7,t6);}

/* k12365 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12367,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12371,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12371(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12369 in k12365 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11506(t7,t6);}

/* k12330 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12332,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12336,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12336(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12334 in k12330 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11506(t7,t6);}

/* k12295 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12297,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12301,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12301(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12299 in k12295 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11506(t7,t6);}

/* k12260 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12262,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12266,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12266(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12264 in k12260 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11506(t7,t6);}

/* k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_11506(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11506,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11509,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11509(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12022,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[221]);}
else{
t6=t5;
f_12022(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[222]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12057,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[222]);}
else{
t7=t6;
f_12057(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[223]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12092,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[223]);}
else{
t8=t7;
f_12092(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[224]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12127,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[224]);}
else{
t9=t8;
f_12127(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[225]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12162,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[225]);}
else{
t10=t9;
f_12162(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[226]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12197,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[226]);}
else{
t11=t10;
f_12197(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12226,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_12226(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12224 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12226,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12233,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12241,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12239 in k12224 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12233(2,t2,C_SCHEME_UNDEFINED);}}

/* k12231 in k12224 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11509(t5,t4);}

/* k12195 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12197,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12201,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12201(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12199 in k12195 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11509(t7,t6);}

/* k12160 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12162,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12166,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12166(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12164 in k12160 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11509(t7,t6);}

/* k12125 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12127,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12131,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12131(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12129 in k12125 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11509(t7,t6);}

/* k12090 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12092,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12096,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12096(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12094 in k12090 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11509(t7,t6);}

/* k12055 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12057,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12061,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12061(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12059 in k12055 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11509(t7,t6);}

/* k12020 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12022,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12026,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12026(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12024 in k12020 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11509(t7,t6);}

/* k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_11509(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11509,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11512,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11512(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11782,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[221]);}
else{
t6=t5;
f_11782(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[222]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11817,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[222]);}
else{
t7=t6;
f_11817(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[223]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11852,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[223]);}
else{
t8=t7;
f_11852(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[224]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11887,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[224]);}
else{
t9=t8;
f_11887(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[225]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11922,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[225]);}
else{
t10=t9;
f_11922(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[226]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11957,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[226]);}
else{
t11=t10;
f_11957(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11986,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[12],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_11986(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k11984 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11986,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11993,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12001,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11999 in k11984 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_12001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11993(2,t2,C_SCHEME_UNDEFINED);}}

/* k11991 in k11984 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11512(t5,t4);}

/* k11955 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11957,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11961,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11961(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11959 in k11955 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11512(t7,t6);}

/* k11920 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11922,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11926,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11926(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11924 in k11920 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11512(t7,t6);}

/* k11885 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11887,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11891,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11891(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11889 in k11885 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11512(t7,t6);}

/* k11850 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11852,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11856,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11856(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11854 in k11850 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11512(t7,t6);}

/* k11815 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11817,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11821,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11821(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11819 in k11815 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11512(t7,t6);}

/* k11780 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11782,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11786,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11786(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11784 in k11780 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11512(t7,t6);}

/* k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_11512(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11512,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11515,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],a[11]=((C_word*)t0)[18],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11515(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11542,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[221]);}
else{
t6=t5;
f_11542(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[222]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11577,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[222]);}
else{
t7=t6;
f_11577(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[223]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11612,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[223]);}
else{
t8=t7;
f_11612(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[224]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11647,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[224]);}
else{
t9=t8;
f_11647(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[225]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11682,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[225]);}
else{
t10=t9;
f_11682(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[226]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11717,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[226]);}
else{
t11=t10;
f_11717(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11746,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_11746(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k11744 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11746,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11753,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11761,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11759 in k11744 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11753(2,t2,C_SCHEME_UNDEFINED);}}

/* k11751 in k11744 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11515(t5,t4);}

/* k11715 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11717,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11721,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11721(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11719 in k11715 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11515(t7,t6);}

/* k11680 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11682,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11686,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11686(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11684 in k11680 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11515(t7,t6);}

/* k11645 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11647,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11651,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11651(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11649 in k11645 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11515(t7,t6);}

/* k11610 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11612,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11616,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11616(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11614 in k11610 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11515(t7,t6);}

/* k11575 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11577,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11581,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11581(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11579 in k11575 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11515(t7,t6);}

/* k11540 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11542,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11546,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11546(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11544 in k11540 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11515(t7,t6);}

/* k11513 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_11515(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11515,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11518,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11518(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k11516 in k11513 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11518,2,t0,t1);}
t2=((C_word*)t0)[9];
t3=((C_word*)t0)[8];
t4=((C_word*)((C_word*)t0)[7])[1];
t5=((C_word*)((C_word*)t0)[6])[1];
t6=((C_word*)((C_word*)t0)[5])[1];
t7=((C_word*)((C_word*)t0)[4])[1];
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=((C_word*)((C_word*)t0)[3])[1];
t10=((C_word*)((C_word*)t0)[2])[1];
t11=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11277,a[2]=t3,a[3]=t8,a[4]=t5,a[5]=t2,a[6]=t4,a[7]=t6,a[8]=t10,a[9]=t9,tmp=(C_word)a,a+=10,tmp);
t12=(C_word)C_eqp(((C_word*)t8)[1],C_SCHEME_TRUE);
if(C_truep(t12)){
t13=C_set_block_item(t8,0,C_fix(1));
t14=t11;
f_11277(t14,t13);}
else{
t13=t11;
f_11277(t13,C_SCHEME_UNDEFINED);}}

/* k11275 in k11516 in k11513 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_11277(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11277,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t17=C_set_block_item(t3,0,t16);
t18=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_11286,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t15,a[7]=t13,a[8]=t3,a[9]=t16,a[10]=((C_word*)t0)[6],a[11]=t11,a[12]=((C_word*)t0)[7],a[13]=((C_word*)t0)[8],a[14]=((C_word*)t0)[9],a[15]=t9,a[16]=t7,a[17]=t5,tmp=(C_word)a,a+=18,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t19=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t19))(3,t19,t18,((C_word*)t0)[2]);}

/* k11284 in k11275 in k11516 in k11513 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11286,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_11290,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],tmp=(C_word)a,a+=17,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t4=C_retrieve(lf[208]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k11288 in k11284 in k11275 in k11516 in k11513 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11290,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[16])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[15])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11292,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[13],a[4]=((C_word*)t0)[14],a[5]=((C_word)li154),tmp=(C_word)a,a+=6,tmp));
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11364,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word)li155),tmp=(C_word)a,a+=6,tmp));
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11397,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[11],a[4]=((C_word)li156),tmp=(C_word)a,a+=5,tmp));
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11407,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[9],a[5]=((C_word)li157),tmp=(C_word)a,a+=6,tmp));
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11427,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t8=(C_word)C_i_not(((C_word*)t0)[4]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)((C_word*)t0)[16])[1]));
if(C_truep(t9)){
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("for-each");
t10=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t10+1)))(4,t10,t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
C_trace("for-each");
t10=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t10+1)))(4,t10,t7,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[2])[1]);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11462,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word)li158),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  for-each");
t11=*((C_word*)lf[220]+1);
((C_proc5)C_retrieve_proc(t11))(5,t11,t7,t10,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11477,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[4],a[4]=((C_word)li159),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  for-each");
t11=*((C_word*)lf[220]+1);
((C_proc5)C_retrieve_proc(t11))(5,t11,t7,t10,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}}}

/* a11476 in k11288 in k11284 in k11275 in k11516 in k11513 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11477(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11477,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 377  addkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* a11461 in k11288 in k11284 in k11275 in k11516 in k11513 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11462(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11462,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 377  adduniquekey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* k11425 in k11288 in k11284 in k11275 in k11516 in k11513 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=(C_word)C_eqp(((C_word*)t0)[3],C_fix(0));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 377  shuffle!");
t4=C_retrieve(lf[148]);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t2);}
else{
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}}

/* f_11407 in k11288 in k11284 in k11275 in k11516 in k11513 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11407(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11407,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11411,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  getkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11409 */
static void C_ccall f_11411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_member(t1,t2))){
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  add");
t3=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[3],t1);}}

/* f_11397 in k11288 in k11284 in k11275 in k11516 in k11513 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11397(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11397,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11405,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  getkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11403 */
static void C_ccall f_11405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  add");
t2=((C_word*)((C_word*)t0)[3])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* f_11364 in k11288 in k11284 in k11275 in k11516 in k11513 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11364(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11364,3,t0,t1,t2);}
t3=(C_word)C_eqp(((C_word*)t0)[4],C_fix(-1));
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,t2);
t5=(C_word)C_i_cdr(((C_word*)t0)[3]);
t6=(C_word)C_i_set_cdr(t4,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_set_cdr(((C_word*)t0)[3],t4));}
else{
t4=(C_word)C_a_i_list(&a,1,t2);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}}

/* f_11292 in k11288 in k11284 in k11275 in k11516 in k11513 in k11510 in k11507 in k11504 in k11501 in k11498 in spectrum-keys in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11292(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11292,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11296,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[2])){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11359,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t5=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
C_trace("ChickenBridge.scm: 377  key");
t4=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}

/* k11357 */
static void C_ccall f_11359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  quantize");
t2=C_retrieve(lf[111]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k11294 */
static void C_ccall f_11296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11296,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_truep(((C_word*)t0)[4])?(C_word)C_i_lessp(((C_word*)t3)[1],((C_word*)t0)[4]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11307,a[2]=t6,a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word)li152),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_11307(t8,((C_word*)t0)[3]);}
else{
t5=(C_truep(((C_word*)t0)[2])?(C_word)C_i_greaterp(((C_word*)t3)[1],((C_word*)t0)[2]):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11332,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=((C_word)li153),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_11332(t9,((C_word*)t0)[3]);}
else{
t6=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}}}

/* do999 in k11294 */
static void C_fcall f_11332(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11332,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t5=t1;
t1=t5;
goto loop;}}

/* do995 in k11294 */
static void C_fcall f_11307(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11307,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_greater_or_equalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t5=t1;
t1=t5;
goto loop;}}

/* spectrum-maxamp in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11248(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11248,3,t0,t1,t2);}
t3=lf[218];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11252,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t6=C_retrieve(lf[208]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k11250 in spectrum-maxamp in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11252,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11261,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11263,a[2]=((C_word*)t0)[2],a[3]=((C_word)li150),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a11262 in k11250 in spectrum-maxamp in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11263(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11263,3,t0,t1,t2);}
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)((C_word*)t0)[2])[1]))){
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}}

/* k11259 in k11250 in spectrum-maxamp in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-minamp in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11217(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11217,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11221,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t6=C_retrieve(lf[208]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k11219 in spectrum-minamp in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11221,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11230,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11232,a[2]=((C_word*)t0)[2],a[3]=((C_word)li148),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[216]);}}

/* a11231 in k11219 in spectrum-minamp in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11232(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11232,3,t0,t1,t2);}
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_lessp(t2,((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}}

/* k11228 in k11219 in spectrum-minamp in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-maxfreq in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11199(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11199,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11207,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t4=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11205 in spectrum-maxfreq in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11207,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11215,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-size");
t3=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11213 in k11205 in spectrum-maxfreq in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11215,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_list_ref(((C_word*)t0)[2],t2));}

/* spectrum-minfreq in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11189(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11189,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11197,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t4=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11195 in spectrum-minfreq in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* spectrum-pairs in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11130(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11130,3,t0,t1,t2);}
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11137,a[2]=t2,a[3]=t1,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t7=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}

/* k11135 in spectrum-pairs in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11137,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11140,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t3=C_retrieve(lf[208]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11138 in k11135 in spectrum-pairs in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11140,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11143,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-size");
t3=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11141 in k11138 in k11135 in spectrum-pairs in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11143,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11148,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word)li144),tmp=(C_word)a,a+=9,tmp));
t5=((C_word*)t3)[1];
f_11148(t5,((C_word*)t0)[2],C_fix(0));}

/* do958 in k11141 in k11138 in k11135 in spectrum-pairs in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_11148(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(10);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11148,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[6]));}
else{
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_truep(((C_word*)t0)[4])?(C_word)C_i_list_ref(((C_word*)t0)[4],t2):lf[211]);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t5);
t7=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t11=t1;
t12=t9;
t1=t11;
t2=t12;
goto loop;}}

/* spectrum-copy in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11092(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11092,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11100,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-time");
t4=C_retrieve(lf[201]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11098 in spectrum-copy in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11100,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11104,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-size");
t3=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11102 in k11098 in spectrum-copy in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11104,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11108,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11124,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t4=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k11122 in k11102 in k11098 in spectrum-copy in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k11106 in k11102 in k11098 in spectrum-copy in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11108,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11112,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11116,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t4=C_retrieve(lf[208]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k11114 in k11106 in k11102 in k11098 in spectrum-copy in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k11110 in k11106 in k11102 in k11098 in spectrum-copy in k11088 in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  make-spectrum");
f_11005(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* spectrum-amps in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11080(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11080,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[199]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* spectrum-amps-set! in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_11071(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11071,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[199]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* spectrum-freqs in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11062(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11062,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[199]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* spectrum-freqs-set! in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_11053(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11053,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[199]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* spectrum-size in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11044(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11044,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[199]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* spectrum-size-set! in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_11035(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11035,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[199]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[203]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* spectrum-time in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_11026(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11026,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[199]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* spectrum? in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_11011(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11011,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[199]));}

/* make-spectrum in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_11005(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11005,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_record(&a,5,lf[199],t2,t3,t4,t5));}

/* scale-order in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10863(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_10863r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_10863r(t0,t1,t2,t3);}}

static void C_ccall f_10863r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(7);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10867,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t4)[1]))){
t6=C_set_block_item(t4,0,C_fix(1));
t7=t5;
f_10867(t7,t6);}
else{
t6=(C_word)C_i_car(((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_10867(t8,t7);}}

/* k10865 in scale-order in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_10867(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10867,NULL,2,t0,t1);}
switch(((C_word*)((C_word*)t0)[4])[1]){
case C_fix(1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10878,a[2]=((C_word)li131),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  sort");
t3=C_retrieve(lf[196]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(-1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10936,a[2]=((C_word)li132),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  sort");
t3=C_retrieve(lf[196]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(0):
C_trace("ChickenBridge.scm: 376  shuffle");
t2=C_retrieve(lf[149]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);
default:
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[197],((C_word*)((C_word*)t0)[4])[1]);}}

/* a10935 in k10865 in scale-order in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10936(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10936,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_greaterp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10959,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10972,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10979,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k10977 in a10935 in k10865 in scale-order in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10979,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10983,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t3=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k10981 in k10977 in a10935 in k10865 in scale-order in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* k10970 in a10935 in k10865 in scale-order in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(t1,((C_word*)t0)[2]));}

/* k10957 in a10935 in k10865 in scale-order in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* a10877 in k10865 in scale-order in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10878(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10878,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_lessp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10901,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10914,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10921,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k10919 in a10877 in k10865 in scale-order in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10921,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10925,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t3=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k10923 in k10919 in a10877 in k10865 in scale-order in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k10912 in a10877 in k10865 in scale-order in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(t1,((C_word*)t0)[2]));}

/* k10899 in a10877 in k10865 in scale-order in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* transpose in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10697(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10697,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_lessp(t2,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t3,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(C_word)C_a_i_plus(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 376  modulo");
t7=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t6,C_fix(12));}
else{
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_plus(&a,2,t2,t3));}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10743,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10750,a[2]=((C_word)li128),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10798,a[2]=t4,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_numberp(t3))){
t6=t5;
f_10798(2,t6,t3);}
else{
C_trace("ChickenBridge.scm: 376  key");
t6=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t3);}}
else{
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,lf[192],t2);}}}

/* k10796 in transpose in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10798,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_numberp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_lessp(t3,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t1,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10815,a[2]=t1,a[3]=((C_word)li129),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],t6,((C_word*)t0)[4]);}
else{
C_trace("ChickenBridge.scm: 376  transpkeys");
f_10750(((C_word*)t0)[3],((C_word*)t0)[4],t1);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10843,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10847,a[2]=t1,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[4]);}}

/* k10845 in k10796 in transpose in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  transpkeys");
f_10750(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k10841 in k10796 in transpose in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  note");
t2=C_retrieve(lf[181]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a10814 in k10796 in transpose in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10815(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10815,3,t0,t1,t2);}
t3=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 376  modulo");
t4=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* transpkeys in transpose in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_10750(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10750,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10759,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word)li127),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_10759(t8,t1,t2,t4);}

/* do822 in transpkeys in transpose in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_10759(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(7);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_10759,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_cdr(t2);
t12=t1;
t13=t10;
t14=t3;
t1=t12;
t2=t13;
t3=t14;
goto loop;}}

/* k10741 in transpose in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10743,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 376  note");
t3=C_retrieve(lf[181]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* invert in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10562(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10562,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_lessp(t2,C_fix(12)))){
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 376  modulo");
t4=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}
else{
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[189],t2);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10592,a[2]=((C_word)li124),tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_lessp(t5,C_fix(12)))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10662,a[2]=((C_word)li125),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t6,t2);}
else{
C_trace("ChickenBridge.scm: 376  invkeys");
f_10592(t1,t2);}}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10684,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10688,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t7=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}}
else{
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[190],t2);}}}

/* k10686 in invert in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  invkeys");
f_10592(((C_word*)t0)[2],t1);}

/* k10682 in invert in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  note");
t2=C_retrieve(lf[181]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a10661 in invert in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10662(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10662,3,t0,t1,t2);}
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 376  modulo");
t4=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* invkeys in invert in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_10592(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10592,NULL,2,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_cdr(t2);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10608,a[2]=t7,a[3]=t3,a[4]=t4,a[5]=((C_word)li123),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_10608(t9,t1,t5,t4);}

/* do807 in invkeys in invert in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_10608(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_10608,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t0)[4]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_minus(&a,2,t4,((C_word*)t0)[3]);
t6=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t5);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(t3,t7);
t9=(C_word)C_i_cdr(t3);
t10=t3=t9;
t11=(C_word)C_i_cdr(t2);
t13=t1;
t14=t11;
t15=t3;
t1=t13;
t2=t14;
t3=t15;
goto loop;}}

/* pc in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10517(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10517,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 376  modulo");
t3=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,C_fix(12));}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t3))){
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,C_retrieve(lf[187]),t2);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10549,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10560,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  key");
t4=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}}

/* k10558 in pc in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  modulo");
t2=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(12));}

/* k10547 in pc in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve(lf[187]),t1);}

/* hz in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10401(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10401,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10416,a[2]=t5,a[3]=t3,a[4]=((C_word)li120),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_10416(t7,t1,t2,lf[186],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 376  tb:keynum->hertz");
f_7830(t1,t2);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10515,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  note-aux");
f_10129(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k10513 in hz in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_caddr(t1));}

/* do787 in hz in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_10416(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10416,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10429,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_numberp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10446,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_10446(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_10446(t14,(C_word)C_i_listp(t13));}}}

/* k10444 in do787 in hz in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_10446(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10446,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10450,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 376  hz");
t4=C_retrieve(lf[185]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10465,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 376  note-aux");
f_10129(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k10463 in k10444 in do787 in hz in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10465,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_10429(t9,t8);}

/* k10448 in k10444 in do787 in hz in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10450,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_10429(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k10427 in do787 in hz in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_10429(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_10416(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* key in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10279(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10279,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10294,a[2]=t5,a[3]=t3,a[4]=((C_word)li118),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_10294(t7,t1,t2,lf[184],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_greaterp(t2,C_fix(0)))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub310(t5,t6));}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(-1));}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10399,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  note-aux");
f_10129(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k10397 in key in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_cadr(t1));}

/* do771 in key in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_10294(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10294,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10307,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_listp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10324,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_10324(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_10324(t14,(C_word)C_i_numberp(t13));}}}

/* k10322 in do771 in key in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_10324(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10324,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10328,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 376  key");
t4=C_retrieve(lf[183]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10343,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 376  note-aux");
f_10129(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k10341 in k10322 in do771 in key in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10343,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_10307(t9,t8);}

/* k10326 in k10322 in do771 in key in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10328,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_10307(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k10305 in do771 in key in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_10307(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_10294(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10182(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10182,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10197,a[2]=t5,a[3]=t3,a[4]=((C_word)li116),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_10197(t7,t1,t2,lf[182],C_SCHEME_FALSE,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10277,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  note-aux");
f_10129(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}

/* k10275 in note in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* do757 in note in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_10197(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10197,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10210,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t10))){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10228,a[2]=t8,a[3]=t9,a[4]=t7,tmp=(C_word)a,a+=5,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  note");
t13=C_retrieve(lf[181]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t11,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10243,a[2]=t8,a[3]=t9,a[4]=t6,a[5]=t7,tmp=(C_word)a,a+=6,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  note-aux");
f_10129(t11,t12,((C_word*)t6)[1],C_SCHEME_TRUE);}}}

/* k10241 in do757 in note in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10243,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_i_car(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=((C_word*)t0)[3];
f_10210(t8,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7));}

/* k10226 in do757 in note in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10228,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_10210(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k10208 in do757 in note in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_10210(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_10197(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note-aux in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_10129(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10129,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_numberp(t2))){
t5=t1;
t6=t2;
t7=t4;
if(C_truep((C_word)C_i_exactp(t6))){
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10079,a[2]=t6,a[3]=t7,a[4]=((C_word)li113),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-ref");
t9=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t9))(5,t9,t5,C_retrieve2(lf[168],"*notes*"),t6,t8);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10127,a[2]=t5,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  floor");
t9=*((C_word*)lf[179]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,t6);}}
else{
if(C_truep((C_word)C_i_symbolp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10152,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 376  string->note-entry");
f_10027(t1,t2,t3,t4);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10167,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}}}

/* k10165 in note-aux in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10167,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10174,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  keyword->string");
t3=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[180],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k10172 in k10165 in note-aux in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  string->note-entry");
f_10027(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k10150 in note-aux in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  string->note-entry");
f_10027(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k10125 in note-aux in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10127,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10099,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t3,lf[176]))){
t5=t4;
f_10099(t5,t2);}
else{
t5=(C_word)C_i_lessp(t3,lf[177]);
t6=t4;
f_10099(t6,(C_truep(t5)?(C_word)C_a_i_plus(&a,2,t2,lf[178]):(C_word)C_a_i_plus(&a,2,t2,C_fix(1))));}}

/* k10097 in k10125 in note-aux in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_10099(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10099,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10101,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li114),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[168],"*notes*"),t1,t2);}

/* a10100 in k10097 in k10125 in note-aux in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10101,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[175],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* a10078 in note-aux in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10079,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[174],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* string->note-entry in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_10027(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10027,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10031,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10064,a[2]=((C_word)li111),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-ref");
t7=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,C_retrieve2(lf[168],"*notes*"),t2,t6);}

/* a10063 in string->note-entry in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10064,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k10029 in string->note-entry in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10031,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t1);}
else{
if(C_truep(((C_word*)t0)[4])){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10047,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  string-append");
t4=*((C_word*)lf[171]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[5],lf[172],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}}}

/* k10045 in k10029 in string->note-entry in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10047,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10049,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li110),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[168],"*notes*"),t1,t2);}

/* a10048 in k10045 in k10029 in string->note-entry in k10023 in k10020 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_10049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10049,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[170],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* segs in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9813(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr4r,(void*)f_9813r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_9813r(t0,t1,t2,t3,t4);}}

static void C_ccall f_9813r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(11);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(1)))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_END_OF_LIST);}
else{
t6=C_fix(1);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9826,a[2]=t1,a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t5)[1]))){
t9=(C_word)C_i_car(((C_word*)t5)[1]);
t10=C_set_block_item(t7,0,t9);
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
t12=C_set_block_item(t5,0,t11);
t13=t8;
f_9826(t13,t12);}
else{
t9=t8;
f_9826(t9,C_SCHEME_UNDEFINED);}}}

/* k9824 in segs in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_9826(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9826,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(2)));
if(C_truep(t3)){
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t5=(C_truep(t4)?C_retrieve2(lf[83],"tb:explseg"):C_retrieve2(lf[84],"tb:geoseg"));
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_truep(t6)?C_fix(2):(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]));
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=t8;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9847,a[2]=((C_word*)t0)[2],a[3]=t7,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t10,a[7]=t8,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_lessp(t7,C_fix(0)))){
C_trace("ChickenBridge.scm: 376  error");
t12=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t12))(4,t12,t11,lf[166],t7);}
else{
t12=t11;
f_9847(2,t12,C_SCHEME_UNDEFINED);}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(3));
if(C_truep(t4)){
t5=C_retrieve(lf[131]);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9908,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t8=t7;
f_9908(t8,C_SCHEME_UNDEFINED);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t7;
f_9908(t12,t11);}}
else{
C_trace("ChickenBridge.scm: 376  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],lf[167],((C_word*)((C_word*)t0)[6])[1]);}}}

/* k9906 in k9824 in segs in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_9908(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9908,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9911,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_apply(4,0,t2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}

/* k9909 in k9906 in k9824 in segs in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9911,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t3)[1]);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9919,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t8,a[7]=t3,a[8]=t6,a[9]=((C_word*)t0)[6],a[10]=((C_word)li108),tmp=(C_word)a,a+=11,tmp));
t10=((C_word*)t8)[1];
f_9919(t10,((C_word*)t0)[2],C_fix(1),C_SCHEME_FALSE);}

/* do687 in k9909 in k9906 in k9824 in segs in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_9919(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9919,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[9]))){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9960,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_apply(4,0,t5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9931,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=((C_word)li107),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_9931(t8,t1,((C_word*)t0)[3]);}}

/* do691 in do687 in k9909 in k9906 in k9824 in segs in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_9931(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9931,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9952,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  tb:rescale");
f_7691(t3,t4,C_fix(0),((C_word*)((C_word*)t0)[3])[1],C_fix(0),((C_word*)t0)[2],C_fix(1));}}

/* k9950 in do691 in do687 in k9909 in k9906 in k9824 in segs in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_9931(t4,((C_word*)t0)[2],t3);}

/* k9958 in do687 in k9909 in k9906 in k9824 in segs in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9960,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[7])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t10=((C_word*)((C_word*)t0)[3])[1];
f_9919(t10,((C_word*)t0)[2],t9,((C_word*)((C_word*)t0)[7])[1]);}

/* k9845 in k9824 in segs in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9847,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9852,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word)li106),tmp=(C_word)a,a+=10,tmp));
t5=((C_word*)t3)[1];
f_9852(t5,((C_word*)t0)[2],C_fix(0));}

/* do675 in k9845 in k9824 in segs in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_9852(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9852,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[8]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[7]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9884,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  func");
t4=((C_word*)t0)[4];
((C_proc6)C_retrieve_proc(t4))(6,t4,t3,t2,((C_word*)t0)[8],((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k9882 in do675 in k9845 in k9824 in segs in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9884,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t7=((C_word*)((C_word*)t0)[3])[1];
f_9852(t7,((C_word*)t0)[2],t6);}

/* rangamma in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9792(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_9792r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_9792r(t0,t1,t2);}}

static void C_ccall f_9792r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 376  tb:rangamma");
f_7928(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 376  tb:rangamma");
f_7928(t1,t3);}}

/* ranpoisson in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9773(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_9773r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_9773r(t0,t1,t2);}}

static void C_ccall f_9773r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_i_nullp(C_retrieve(lf[161])))){
C_trace("ChickenBridge.scm: 376  tb:ranpoisson");
f_7938(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 376  tb:ranpoisson");
f_7938(t1,t3);}}

/* rangauss in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9732(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_9732r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9732r(t0,t1,t2);}}

static void C_ccall f_9732r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 376  tb:rangauss");
f_7899(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  tb:rangauss");
f_7899(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 376  tb:rangauss");
f_7899(t1,t4,t5);}}}

/* ranexp in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9713(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_9713r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_9713r(t0,t1,t2);}}

static void C_ccall f_9713r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 376  tb:ranexp");
f_7910(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 376  tb:ranexp");
f_7910(t1,t3);}}

/* ranbeta in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9485(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_9485r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9485r(t0,t1,t2);}}

static void C_ccall f_9485r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=lf[154];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9489,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_9489(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[155]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9626,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[155]);}
else{
t19=t18;
f_9626(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[156]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9661,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[156]);}
else{
t20=t19;
f_9661(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9690,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[10],t2);}
else{
t20=t19;
f_9690(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k9688 in ranbeta in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9690,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9697,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9705,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9703 in k9688 in ranbeta in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9697(2,t2,C_SCHEME_UNDEFINED);}}

/* k9695 in k9688 in ranbeta in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9489(t5,t4);}

/* k9659 in ranbeta in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9661,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9665,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9665(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9663 in k9659 in ranbeta in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9489(t7,t6);}

/* k9624 in ranbeta in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9626,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9630,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9630(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9628 in k9624 in ranbeta in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9489(t7,t6);}

/* k9487 in ranbeta in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_9489(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9489,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9492,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_9492(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[155]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9526,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[155]);}
else{
t6=t5;
f_9526(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[156]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9561,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[156]);}
else{
t7=t6;
f_9561(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9590,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_9590(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k9588 in k9487 in ranbeta in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9590,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9597,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9605,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9603 in k9588 in k9487 in ranbeta in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9597(2,t2,C_SCHEME_UNDEFINED);}}

/* k9595 in k9588 in k9487 in ranbeta in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9492(t5,t4);}

/* k9559 in k9487 in ranbeta in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9561,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9565,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9565(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9563 in k9559 in k9487 in ranbeta in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9492(t7,t6);}

/* k9524 in k9487 in ranbeta in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9526,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9530,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9530(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9528 in k9524 in k9487 in ranbeta in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9492(t7,t6);}

/* k9490 in k9487 in ranbeta in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_9492(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9492,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9495,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_9495(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k9493 in k9490 in k9487 in ranbeta in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9495,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9498,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_9498(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[3])[1]);
t5=t2;
f_9498(t5,t4);}}

/* k9496 in k9493 in k9490 in k9487 in ranbeta in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_9498(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9498,NULL,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=((C_word*)((C_word*)t0)[3])[1];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t2;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub363(t5,t6,t7));}

/* shuffle in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9443(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_9443r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9443r(t0,t1,t2);}}

static void C_ccall f_9443r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(6);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9457,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9472,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,C_SCHEME_END_OF_LIST);}}

/* k9470 in shuffle in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  shuffle!");
t2=C_retrieve(lf[148]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k9455 in shuffle in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  shuffle!");
t2=C_retrieve(lf[148]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* shuffle! in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9388(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9388,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9399,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  tb:rani");
f_7854(t4,t3);}

/* k9397 in shuffle! in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9399,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9401,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word)li98),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_9401(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do607 in k9397 in shuffle! in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_9401(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9401,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[4]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t0)[3]);}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(C_word)C_i_list_tail(((C_word*)t0)[3],t2);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
t10=(C_word)C_i_set_car(t8,t9);
t11=(C_word)C_i_list_tail(((C_word*)t0)[3],t3);
t12=(C_word)C_i_set_car(t11,((C_word*)t5)[1]);
t13=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t14=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9429,a[2]=t5,a[3]=t13,a[4]=t1,a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  tb:rani");
f_7854(t14,((C_word*)t0)[4]);}}

/* k9427 in do607 in k9397 in shuffle! in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_9401(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* vary in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9289(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr4r,(void*)f_9289r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_9289r(t0,t1,t2,t3,t4);}}

static void C_ccall f_9289r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9293,a[2]=t1,a[3]=t5,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
t7=C_set_block_item(t5,0,C_fix(0));
t8=t6;
f_9293(t8,t7);}
else{
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=t6;
f_9293(t9,t8);}}

/* k9291 in vary in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_9293(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9293,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9296,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t3,C_fix(0)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(-1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(1)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t4=t2;
f_9296(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[147],((C_word*)((C_word*)t0)[3])[1]);}}

/* k9294 in k9291 in vary in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9296,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9298,a[2]=((C_word)li95),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9361,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word)li96),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 376  vary1");
f_9298(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);}}

/* a9360 in k9294 in k9291 in vary in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9361(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9361,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 376  vary1");
f_9298(t1,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* vary1 in k9294 in k9291 in vary in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_9298(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9298,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_less_or_equalp(t3,C_fix(0));
t6=(C_truep(t5)?t5:(C_word)C_i_nequalp(t2,C_fix(0)));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t7=(C_word)C_a_i_times(&a,2,t2,t3);
t8=(C_word)C_a_i_abs(&a,1,t7);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9314,a[2]=t1,a[3]=t2,a[4]=t8,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  tb:ranf");
f_7861(t9,t8);}}

/* k9312 in vary1 in k9294 in k9291 in vary in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9314,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[5],C_fix(0));
if(C_truep(t2)){
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],lf[146]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_plus(&a,2,t4,t1));}
else{
t3=(C_word)C_eqp(((C_word*)t0)[5],C_fix(1));
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1):(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t1)));}}

/* odds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9061(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_9061r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_9061r(t0,t1,t2,t3);}}

static void C_ccall f_9061r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=C_SCHEME_TRUE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9065,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t1,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_9065(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[143]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9202,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[143]);}
else{
t20=t19;
f_9202(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[144]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9237,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[144]);}
else{
t21=t20;
f_9237(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9266,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_9266(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k9264 in odds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9266,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9273,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9281,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9279 in k9264 in odds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9273(2,t2,C_SCHEME_UNDEFINED);}}

/* k9271 in k9264 in odds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9065(t5,t4);}

/* k9235 in odds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9237,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9241,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9241(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9239 in k9235 in odds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9065(t7,t6);}

/* k9200 in odds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9202,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9206,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9206(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9204 in k9200 in odds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9065(t7,t6);}

/* k9063 in odds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_9065(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9065,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9068,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_9068(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[143]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9102,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[143]);}
else{
t6=t5;
f_9102(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[144]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9137,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[144]);}
else{
t7=t6;
f_9137(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9166,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_9166(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k9164 in k9063 in odds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9166,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9173,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9181,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9179 in k9164 in k9063 in odds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9173(2,t2,C_SCHEME_UNDEFINED);}}

/* k9171 in k9164 in k9063 in odds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9068(t5,t4);}

/* k9135 in k9063 in odds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9137,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9141,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9141(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9139 in k9135 in k9063 in odds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9068(t7,t6);}

/* k9100 in k9063 in odds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9102,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9106,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9106(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9104 in k9100 in k9063 in odds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9068(t7,t6);}

/* k9066 in k9063 in odds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_9068(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9068,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9071,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_9071(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k9069 in k9066 in k9063 in odds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9071,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9081,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  tb:ranf");
f_7861(t2,lf[142]);}

/* k9079 in k9069 in k9066 in k9063 in odds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)((C_word*)t0)[3])[1]:((C_word*)((C_word*)t0)[2])[1]));}

/* pick in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9018(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr2r,(void*)f_9018r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9018r(t0,t1,t2);}}

static void C_ccall f_9018r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9036,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_length(t6);
C_trace("ChickenBridge.scm: 376  tb:rani");
f_7854(t5,t7);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9051,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 376  tb:rani");
f_7854(t4,t5);}}

/* k9049 in pick in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* k9034 in pick in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_9036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* between in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8997(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8997,4,t0,t1,t2,t3);}
t4=(C_word)C_fixnump(t2);
t5=(C_truep(t4)?(C_word)C_fixnump(t3):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_i_foreign_fixnum_argumentp(t7);
t10=(C_word)C_i_foreign_fixnum_argumentp(t8);
t11=t6;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub329(C_SCHEME_UNDEFINED,t9,t10));}
else{
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t10=(C_word)C_i_foreign_flonum_argumentp(t7);
t11=(C_word)C_i_foreign_flonum_argumentp(t8);
t12=t6;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub335(t9,t10,t11));}}

/* ran in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8962(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_8962r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8962r(t0,t1,t2);}}

static void C_ccall f_8962r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(6);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8966,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=C_set_block_item(t3,0,C_fix(1));
t6=t4;
f_8966(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)t3)[1]);
t6=C_set_block_item(t3,0,t5);
t7=t4;
f_8966(t7,t6);}}

/* k8964 in ran in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_8966(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
if(C_truep((C_word)C_fixnump(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("ChickenBridge.scm: 376  tb:rani");
f_7854(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 376  tb:ranf");
f_7861(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}
else{
C_trace("ChickenBridge.scm: 376  tb:ranf");
f_7861(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}

/* scale in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8854(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+19)){
C_save_and_reclaim((void*)tr4r,(void*)f_8854r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8854r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8854r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(19);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8861,a[2]=t1,a[3]=t6,a[4]=t3,a[5]=t8,a[6]=t2,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_pairp(t10))){
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t11))){
t12=(C_word)C_i_car(((C_word*)t5)[1]);
t13=C_set_block_item(t5,0,t12);
t14=t9;
f_8861(t14,t13);}
else{
t12=(C_word)C_i_cadr(((C_word*)t5)[1]);
t13=C_set_block_item(t8,0,t12);
t14=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8941,a[2]=t9,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)t8)[1],t3))){
C_trace("ChickenBridge.scm: 376  error");
t15=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t14,lf[137],((C_word*)t8)[1]);}
else{
t15=t14;
f_8941(2,t15,C_SCHEME_UNDEFINED);}}}
else{
t11=t9;
f_8861(t11,C_SCHEME_UNDEFINED);}}

/* k8939 in scale in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8861(t4,t3);}

/* k8859 in scale in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_8861(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8861,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[7])[1]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8870,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word)li89),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_8870(t6,((C_word*)t0)[2],C_fix(0),((C_word*)t0)[4],t2,((C_word*)t0)[3]);}

/* do530 in k8859 in scale in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_8870(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8870,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[7]))){
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8883,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8917,a[2]=t8,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  fit");
t10=C_retrieve(lf[132]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,((C_word*)t6)[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[4])[1],C_fix(1));}
else{
t9=t8;
f_8883(t9,C_SCHEME_UNDEFINED);}}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k8915 in do530 in k8859 in scale in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8883(t3,t2);}

/* k8881 in do530 in k8859 in scale in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_8883(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8883,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[7])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8909,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 376  modulo");
t7=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t0)[5],((C_word*)t0)[2]);}

/* k8907 in k8881 in do530 in k8859 in scale in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8909,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[8])[1],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_8870(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* fit in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8721(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr5r,(void*)f_8721r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_8721r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_8721r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(13);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8725,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t6,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t10=C_set_block_item(t8,0,C_fix(1));
t11=t9;
f_8725(t11,t10);}
else{
t10=(C_word)C_i_car(((C_word*)t8)[1]);
t11=C_set_block_item(t8,0,t10);
t12=t9;
f_8725(t12,t11);}}

/* k8723 in fit in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_8725(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8725,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8728,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]))){
t3=((C_word*)((C_word*)t0)[5])[1];
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t6=t2;
f_8728(t6,t5);}
else{
t3=t2;
f_8728(t3,C_SCHEME_UNDEFINED);}}

/* k8726 in k8723 in fit in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_8728(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8728,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8730,a[2]=((C_word)li86),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8832,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word)li87),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[6]);}
else{
C_trace("ChickenBridge.scm: 376  fit1");
f_8730(((C_word*)t0)[2],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a8831 in k8726 in k8723 in fit in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8832(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8832,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 376  fit1");
f_8730(t1,t2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* fit1 in k8726 in k8723 in fit in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_8730(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8730,NULL,5,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8737,a[2]=t5,a[3]=t3,a[4]=t4,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  <=");
C_less_or_equal_p(5,0,t6,t3,t2,t4);}

/* k8735 in fit1 in k8726 in k8723 in fit in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8737,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[5]);}
else{
t2=(C_word)C_i_greaterp(((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_truep(t2)?((C_word*)t0)[4]:((C_word*)t0)[3]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
switch(((C_word*)t0)[2]){
case C_fix(1):
t5=(C_word)C_i_nequalp(t3,((C_word*)t0)[4]);
t6=(C_truep(t5)?((C_word*)t0)[3]:((C_word*)t0)[4]);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8760,a[2]=t6,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 376  remainder");
t9=*((C_word*)lf[133]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,t4);
case C_fix(2):
t5=(C_word)C_a_i_times(&a,2,C_fix(2),t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8779,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 376  remainder");
t8=*((C_word*)lf[133]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t6,t7,t5);
case C_fix(3):
t5=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t3);
default:
C_trace("ChickenBridge.scm: 376  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[6],lf[134],((C_word*)t0)[2]);}}}

/* k8777 in k8735 in fit1 in k8726 in k8723 in fit in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8779,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8786,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_abs(&a,1,t1);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)t0)[3]))){
t4=(C_word)C_i_greater_or_equalp(t1,C_fix(0));
t5=(C_truep(t4)?*((C_word*)lf[106]+1):*((C_word*)lf[104]+1));
t6=t5;
((C_proc4)C_retrieve_proc(t6))(4,t6,t2,t1,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 376  -");
C_minus(3,0,t2,t1);}}

/* k8784 in k8777 in k8735 in fit1 in k8726 in k8723 in fit in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8786,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,t1,((C_word*)t0)[2]));}

/* k8758 in k8735 in fit1 in k8726 in k8723 in fit in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8760,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)t0)[2],t1));}

/* tendency in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8654(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr5r,(void*)f_8654r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_8654r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_8654r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word *a=C_alloc(16);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=C_retrieve(lf[131]);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8658,a[2]=t2,a[3]=t8,a[4]=t10,a[5]=t1,a[6]=t7,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t12=t11;
f_8658(t12,C_SCHEME_UNDEFINED);}
else{
t12=(C_word)C_i_car(((C_word*)t8)[1]);
t13=C_set_block_item(t10,0,t12);
t14=(C_word)C_i_cdr(((C_word*)t8)[1]);
t15=C_set_block_item(t8,0,t14);
t16=t11;
f_8658(t16,t15);}}

/* k8656 in tendency in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_8658(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8658,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8661,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8704,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  interp1");
f_8522(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[7])[1],C_fix(1));}
else{
t3=t2;
f_8661(t3,C_SCHEME_UNDEFINED);}}

/* k8702 in k8656 in tendency in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8661(t3,t2);}

/* k8659 in k8656 in tendency in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_8661(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8661,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8664,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[6])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8697,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  interp1");
f_8522(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1],C_fix(1));}
else{
t3=t2;
f_8664(t3,C_SCHEME_UNDEFINED);}}

/* k8695 in k8659 in k8656 in tendency in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8664(t3,t2);}

/* k8662 in k8659 in k8656 in tendency in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_8664(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8664,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8677,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_truep(t3)?(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]));
C_apply(5,0,t2,((C_word*)((C_word*)t0)[3])[1],t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k8675 in k8662 in k8659 in k8656 in tendency in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8677,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[2])[1],t1));}

/* interp in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8608(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_8608r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8608r(t0,t1,t2,t3);}}

static void C_ccall f_8608r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8612,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t5=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[129]);}
else{
t5=t4;
f_8612(2,t5,C_SCHEME_UNDEFINED);}}

/* k8610 in interp in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=(C_word)C_i_nullp(t4);
t6=(C_truep(t5)?C_fix(1):(C_word)C_i_cadr(((C_word*)t0)[4]));
C_trace("ChickenBridge.scm: 376  interp1");
f_8522(((C_word*)t0)[3],((C_word*)t0)[2],t3,t6);}
else{
C_trace("ChickenBridge.scm: 376  interp1");
f_8522(((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4],C_fix(1));}}

/* interp1 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_8522(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8522,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8526,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[127],t3);}
else{
t6=t5;
f_8526(2,t6,(C_word)C_i_car(t3));}}

/* k8524 in interp1 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8526,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8529,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 376  err");
t6=C_retrieve(lf[125]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[126],((C_word*)t0)[4]);}
else{
t6=t4;
f_8529(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k8527 in k8524 in interp1 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8529,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=((C_word*)t0)[5];
t9=(C_word)C_i_cddr(((C_word*)t0)[4]);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8538,a[2]=((C_word*)t0)[4],a[3]=t11,a[4]=t8,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li82),tmp=(C_word)a,a+=11,tmp));
t13=((C_word*)t11)[1];
f_8538(t13,((C_word*)t0)[2],t9);}

/* do481 in k8527 in k8524 in interp1 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_8538(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8538,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 376  tb:rescale");
f_7691(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8560,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 376  error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[124],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_8560(2,t13,t12);}}}

/* k8558 in do481 in k8527 in k8524 in interp1 in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_8538(t3,((C_word*)t0)[2],t2);}

/* ratio->cents in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8507(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8507,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[82],"tb:scaler->cents"),t2);}
else{
C_trace("ChickenBridge.scm: 376  tb:scaler->cents");
t3=C_retrieve2(lf[82],"tb:scaler->cents");
f_7785(3,t3,t1,t2);}}

/* cents->ratio in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8492(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8492,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[81],"tb:cents->scaler"),t2);}
else{
C_trace("ChickenBridge.scm: 376  tb:cents->scaler");
t3=C_retrieve2(lf[81],"tb:cents->scaler");
f_7778(3,t3,t1,t2);}}

/* rhythm->seconds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8256(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_8256r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8256r(t0,t1,t2,t3);}}

static void C_ccall f_8256r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=lf[117];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=lf[118];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8260,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t1,a[8]=t7,a[9]=t5,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_8260(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[119]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8405,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[119]);}
else{
t20=t19;
f_8405(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[120]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8440,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[120]);}
else{
t21=t20;
f_8440(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8469,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_8469(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k8467 in rhythm->seconds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8469,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8476,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8484,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8482 in k8467 in rhythm->seconds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8476(2,t2,C_SCHEME_UNDEFINED);}}

/* k8474 in k8467 in rhythm->seconds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8260(t5,t4);}

/* k8438 in rhythm->seconds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8440,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8444,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8444(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8442 in k8438 in rhythm->seconds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8260(t7,t6);}

/* k8403 in rhythm->seconds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8405,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8409,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8409(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8407 in k8403 in rhythm->seconds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8260(t7,t6);}

/* k8258 in rhythm->seconds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_8260(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8260,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8263,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_8263(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[119]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8305,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[119]);}
else{
t6=t5;
f_8305(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[120]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8340,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[120]);}
else{
t7=t6;
f_8340(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8369,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_8369(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k8367 in k8258 in rhythm->seconds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8369,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8376,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8384,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8382 in k8367 in k8258 in rhythm->seconds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8376(2,t2,C_SCHEME_UNDEFINED);}}

/* k8374 in k8367 in k8258 in rhythm->seconds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8263(t5,t4);}

/* k8338 in k8258 in rhythm->seconds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8340,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8344,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8344(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8342 in k8338 in k8258 in rhythm->seconds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8263(t7,t6);}

/* k8303 in k8258 in rhythm->seconds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8305,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8309,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8309(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8307 in k8303 in k8258 in rhythm->seconds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8263(t7,t6);}

/* k8261 in k8258 in rhythm->seconds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_8263(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8263,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8266,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_8266(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k8264 in k8261 in k8258 in rhythm->seconds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8266,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8277,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li78),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 376  tb:rhythm->seconds");
f_7763(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a8276 in k8264 in k8261 in k8258 in rhythm->seconds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8277(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8277,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 376  tb:rhythm->seconds");
f_7763(t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* decimals in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8216(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8216,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8220,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  expt");
t5=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[115],t3);}

/* k8218 in decimals in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8220,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[3]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8231,a[2]=t1,a[3]=((C_word)li76),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8250,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 376  round");
t4=*((C_word*)lf[113]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}}

/* k8248 in k8218 in decimals in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8250,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* a8230 in k8218 in decimals in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8231(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8231,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8239,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 376  round");
t5=*((C_word*)lf[113]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k8237 in a8230 in k8218 in decimals in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8239,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* quantize in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8195(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8195,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8207,a[2]=t3,a[3]=((C_word)li74),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_trace("ChickenBridge.scm: 376  tb:quantize");
f_7752(t1,t2,t3);}}

/* a8206 in quantize in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8207(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8207,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 376  tb:quantize");
f_7752(t1,t2,((C_word*)t0)[2]);}

/* minus in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8169(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_8169r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8169r(t0,t1,t2,t3);}}

static void C_ccall f_8169r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[106]+1),t2);}
else{
C_trace("ChickenBridge.scm: 376  -");
C_minus(3,0,t1,t2);}}
else{
C_apply(5,0,t1,*((C_word*)lf[106]+1),t2,t3);}}

/* plus in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8127(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_8127r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8127r(t0,t1,t2);}}

static void C_ccall f_8127r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[104]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[104]+1),t2);}}
else{
C_apply(4,0,t1,*((C_word*)lf[104]+1),t2);}}}

/* int in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8112(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8112,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[78],"tb:int"),t2);}
else{
C_trace("ChickenBridge.scm: 376  tb:int");
t3=C_retrieve2(lf[78],"tb:int");
f_7745(3,t3,t1,t2);}}

/* discrete in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8001(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+21)){
C_save_and_reclaim((void*)tr6r,(void*)f_8001r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_8001r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_8001r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word *a=C_alloc(21);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(1);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_8005,a[2]=t5,a[3]=t1,a[4]=t12,a[5]=t8,a[6]=t4,a[7]=t3,a[8]=t2,a[9]=t10,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(t5))){
t14=C_set_block_item(t10,0,t5);
if(C_truep((C_word)C_i_nullp(t6))){
t15=(C_word)C_i_length(((C_word*)t10)[1]);
t16=C_set_block_item(t8,0,t15);
t17=t13;
f_8005(t17,t16);}
else{
t15=(C_word)C_i_car(t6);
t16=C_set_block_item(t8,0,t15);
t17=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8076,a[2]=t13,a[3]=t12,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t18=(C_word)C_i_cdr(t6);
t19=(C_word)C_i_nullp(t18);
C_trace("ChickenBridge.scm: 376  not?");
t20=C_retrieve(lf[101]);
((C_proc3)C_retrieve_proc(t20))(3,t20,t17,t19);}}
else{
t14=(C_word)C_i_car(t6);
t15=C_set_block_item(t8,0,t14);
t16=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t16))){
t17=t13;
f_8005(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_cadr(t6);
t18=C_set_block_item(t12,0,t17);
t19=t13;
f_8005(t19,t18);}}}

/* k8074 in discrete in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8005(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_8005(t2,C_SCHEME_UNDEFINED);}}

/* k8003 in discrete in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_8005(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8005,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8019,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[9],a[7]=((C_word)li68),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8034,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  tb:discrete");
f_7718(t2,((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],C_fix(0),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8045,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word)li69),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
C_trace("ChickenBridge.scm: 376  tb:discrete");
f_7718(((C_word*)t0)[3],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}}

/* a8044 in k8003 in discrete in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8045(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8045,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 376  tb:discrete");
f_7718(t1,t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k8032 in k8003 in discrete in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* a8018 in k8003 in discrete in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8019(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8019,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8027,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  tb:discrete");
f_7718(t3,t2,((C_word*)t0)[5],((C_word*)t0)[4],C_fix(0),((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k8025 in a8018 in k8003 in discrete in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_8027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* rescale in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7967(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr7r,(void*)f_7967r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest(a,C_rest_count(0));
f_7967r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_7967r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
if(C_truep((C_word)C_i_listp(t2))){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7979,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t4,a[6]=t3,a[7]=((C_word)li66),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t9=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t1,t8,t2);}
else{
if(C_truep((C_word)C_i_nullp(t7))){
C_trace("ChickenBridge.scm: 376  tb:rescale");
f_7691(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 376  tb:rescale");
f_7691(t1,t2,t3,t4,t5,t6,t8);}}}

/* a7978 in rescale in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7979(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7979,3,t0,t1,t2);}
C_apply(9,0,t1,C_retrieve(lf[99]),t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* tb:ranbrown in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7948,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub383(t2));}

/* tb:ranpink in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7945,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub380(t2));}

/* tb:ranpoisson in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_7938(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7938,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub377(C_SCHEME_UNDEFINED,t3));}

/* tb:rancauchy in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7935,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub373(t2));}

/* tb:rangamma in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_7928(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7928,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub369(t3,t4));}

/* tb:ranexp in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_7910(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7910,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub357(t3,t4));}

/* tb:rangauss in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_7899(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7899,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub351(t4,t5,t6));}

/* tb:ranmiddle in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7896,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub346(t2));}

/* tb:ranhigh in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7893,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub343(t2));}

/* tb:ranlow in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7890,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub340(t2));}

/* tb:ranf in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_7861(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7861,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub323(t3,t4));}

/* tb:rani in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_7854(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7854,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub319(C_SCHEME_UNDEFINED,t3));}

/* tb:ran-set! in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7851(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7851,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub315(C_SCHEME_UNDEFINED,t2));}

/* tb:keynum->hertz in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_7830(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7830,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub301(t3,t4));}

/* tb:geoseg in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7811(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7811,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub293(t6,t7,t8,t9,t10));}

/* tb:explseg in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7792(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7792,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub282(t6,t7,t8,t9,t10));}

/* tb:scaler->cents in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7785(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7785,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub275(C_SCHEME_UNDEFINED,t3));}

/* tb:cents->scaler in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7778(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7778,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_fixnum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub270(t3,t4));}

/* tb:rhythm->seconds in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_7763(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7763,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t2);
t7=(C_word)C_i_foreign_flonum_argumentp(t3);
t8=(C_word)C_i_foreign_flonum_argumentp(t4);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub263(t5,t6,t7,t8));}

/* tb:quantize in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_7752(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7752,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub255(t4,t5,t6));}

/* tb:int in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7745(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7745,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub250(C_SCHEME_UNDEFINED,t3));}

/* tb:discrete in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_7718(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7718,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_i_foreign_flonum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_flonum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=(C_word)C_i_foreign_flonum_argumentp(t7);
t14=t1;
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)stub241(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12,t13));}

/* tb:rescale in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_7691(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7691,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub226(t8,t9,t10,t11,t12,t13,t14));}

/* bitwise-test in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_7650(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7650,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7656,a[2]=t7,a[3]=t4,a[4]=t5,a[5]=((C_word)li41),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_7656(t9,t1,C_SCHEME_FALSE);}

/* do187 in bitwise-test in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_7656(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7656,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7666,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(0)))){
t5=C_set_block_item(t3,0,C_SCHEME_TRUE);
t6=t4;
f_7666(t6,t5);}
else{
t5=C_set_block_item(t3,0,C_SCHEME_FALSE);
t6=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t7=t4;
f_7666(t7,t6);}}
else{
t5=t4;
f_7666(t5,C_SCHEME_UNDEFINED);}}}

/* k7664 in do187 in bitwise-test in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_7666(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7666,NULL,2,t0,t1);}
t2=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(-1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=((C_word*)((C_word*)t0)[4])[1];
f_7656(t6,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-prop in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7564(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr4r,(void*)f_7564r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_7564r(t0,t1,t2,t3,t4);}}

static void C_ccall f_7564r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_nullp(t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_truep(t5)?C_SCHEME_FALSE:(C_word)C_i_car(t4)));}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_eqp(t5,t3);
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cadr(t2));}
else{
t7=(C_word)C_i_cddr(t2);
C_apply(6,0,t1,C_retrieve2(lf[74],"list-prop"),t7,t3,t4);}}}

/* every? in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7525(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7525,4,t0,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7531,a[2]=t2,a[3]=t5,a[4]=((C_word)li38),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7531(t7,t1,t3,C_SCHEME_TRUE);}

/* do171 in every? in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_7531(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7531,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_not(((C_word*)t4)[1]);
t6=(C_truep(t5)?t5:(C_word)C_i_nullp(t2));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,((C_word*)t4)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7544,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7554,a[2]=t4,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  f");
t10=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t10))(3,t10,t8,t9);}}

/* k7552 in do171 in every? in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_7544(t2,C_SCHEME_FALSE);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
f_7544(t3,t2);}}

/* k7542 in do171 in every? in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_7544(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_7531(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* list-find in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7486(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7486,4,t0,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7492,a[2]=t2,a[3]=t5,a[4]=((C_word)li36),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7492(t7,t1,t3,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do160 in list-find in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_7492(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7492,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7502,a[2]=t5,a[3]=t3,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7512,a[2]=t8,a[3]=t5,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  p");
t11=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}}

/* k7510 in do160 in list-find in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_7502(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_7502(t2,C_SCHEME_UNDEFINED);}}

/* k7500 in do160 in list-find in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_7502(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_7492(t3,((C_word*)t0)[4],t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-index in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7446(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7446,4,t0,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7452,a[2]=t2,a[3]=t5,a[4]=((C_word)li34),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7452(t7,t1,t3,C_fix(0),C_SCHEME_FALSE);}

/* do149 in list-index in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_7452(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7452,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7462,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7476,a[2]=t8,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  p");
t11=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}}

/* k7474 in do149 in list-index in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_7462(t3,t2);}
else{
t2=((C_word*)t0)[2];
f_7462(t2,C_SCHEME_UNDEFINED);}}

/* k7460 in do149 in list-index in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_7462(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7462,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t4=((C_word*)((C_word*)t0)[4])[1];
f_7452(t4,((C_word*)t0)[3],t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* make-list in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7347(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_7347r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7347r(t0,t1,t2,t3);}}

static void C_ccall f_7347r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7351,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(0)))){
C_trace("ChickenBridge.scm: 375  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[70],t2);}
else{
t5=t4;
f_7351(2,t5,C_SCHEME_UNDEFINED);}}

/* k7349 in make-list in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7351,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7353,a[2]=t3,a[3]=((C_word)li31),tmp=(C_word)a,a+=4,tmp));
t7=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7376,a[2]=t5,a[3]=((C_word)li32),tmp=(C_word)a,a+=4,tmp));
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 375  l1");
t8=((C_word*)t3)[1];
f_7353(t8,((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_closurep(t8))){
C_trace("ChickenBridge.scm: 375  l2");
t9=((C_word*)t5)[1];
f_7376(t9,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 375  l1");
t10=((C_word*)t3)[1];
f_7353(t10,((C_word*)t0)[3],((C_word*)t0)[2],t9);}}}

/* l2 in k7349 in make-list in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_7376(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7376,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7393,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cdr(t3);
C_apply(4,0,t4,t5,t6);}}

/* k7391 in l2 in k7349 in make-list in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7393,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7397,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
C_trace("ChickenBridge.scm: 375  l2");
t4=((C_word*)((C_word*)t0)[3])[1];
f_7376(t4,t2,t3,((C_word*)t0)[2]);}

/* k7395 in k7391 in l2 in k7349 in make-list in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7397,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* l1 in k7349 in make-list in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_7353(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_7353,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7370,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 375  l1");
t7=t4;
t8=t5;
t9=t3;
t1=t7;
t2=t8;
t3=t9;
goto loop;}}

/* k7368 in l1 in k7349 in make-list in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7370,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* reverse! in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7286(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7286,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7299,a[2]=t2,a[3]=t6,a[4]=((C_word)li29),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_7299(t8,t1,C_fix(0),t4,t2);}

/* do126 in reverse! in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_7299(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(12);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_7299,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_lessp(t2,t3))){
t5=(C_word)C_i_car(t4);
t6=(C_word)C_a_i_minus(&a,2,t3,t2);
t7=(C_word)C_i_list_tail(t4,t6);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_i_set_car(t4,t8);
t10=(C_word)C_i_set_car(t7,t5);
t11=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t12=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t13=(C_word)C_i_cdr(t4);
t15=t1;
t16=t11;
t17=t12;
t18=t13;
t1=t15;
t2=t16;
t3=t17;
t4=t18;
goto loop;}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,((C_word*)t0)[2]);}}

/* list-set! in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7276(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_7276,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_list_tail(t2,t3);
t6=(C_word)C_i_set_car(t5,t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t4);}

/* list* in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7236(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_7236r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7236r(t0,t1,t2);}}

static void C_ccall f_7236r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 375  error");
t3=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[66]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7266,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t2);
C_apply(4,0,t5,C_retrieve(lf[65]),t6);}}}

/* k7264 in list* in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7266,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* tail in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7146(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7146,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 375  tail");
t5=C_retrieve(lf[64]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* butlast in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7098(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7098,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7132,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 375  butlast");
t8=C_retrieve(lf[63]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k7130 in butlast in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7132,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7075(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7075,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 375  last");
t5=C_retrieve(lf[62]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* rest in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7069(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7069,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* tenth in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7054(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7054,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7040(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7040,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7030(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7030,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7020(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7020,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7010(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7010,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_7000(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7000,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* chdir in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6967(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2rv,(void*)f_6967r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_6967r(t0,t1,t2);}}

static void C_ccall f_6967r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?lf[45]:(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6976,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t5+1)))(3,t5,t1,t4);}

/* f_6976 in chdir in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6976(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6976,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6981,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_6981(2,t4,C_SCHEME_FALSE);}}

/* k6979 */
static void C_ccall f_6981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub95(C_SCHEME_UNDEFINED,t1));}

/* cwd in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6956,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6961,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_6961 in cwd in k6952 in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6961,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[43]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub90(t2),C_fix(0));}

/* expand-send in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6663(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[17],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6663,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=t4;
t7=(C_truep(t6)?t6:(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6943,a[2]=((C_word)li5),tmp=(C_word)a,a+=3,tmp));
t8=t4;
t9=(C_truep(t8)?(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6932,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp):(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6941,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6673,a[2]=t9,a[3]=t7,a[4]=t1,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t2))){
C_trace("ChickenBridge.scm: 281  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}
else{
t11=t10;
f_6673(2,t11,t2);}}

/* k6671 in expand-send in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6673,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6676,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6924,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 282  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve(lf[29]),t1,t3);}

/* a6923 in k6671 in expand-send in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6924,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k6674 in k6671 in expand-send in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6676,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6679,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=t1;
if(C_truep(t3)){
t4=t2;
f_6679(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 283  ferror");
t4=((C_word*)t0)[4];
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[40],((C_word*)t0)[3]);}}

/* k6677 in k6674 in k6671 in expand-send in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6679,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
t3=(C_word)C_i_car(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_length(t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_6694,a[2]=t2,a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=((C_word*)t0)[5],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nequalp(t7,C_fix(1)))){
t9=(C_word)C_i_car(t4);
t10=t8;
f_6694(t10,(C_word)C_eqp(t9,lf[39]));}
else{
t9=t8;
f_6694(t9,C_SCHEME_FALSE);}}

/* k6692 in k6677 in k6674 in k6671 in expand-send in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_6694(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6694,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[11];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[10],((C_word*)((C_word*)t0)[9])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_6704,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 297  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[8],C_SCHEME_END_OF_LIST);}}

/* k6702 in k6692 in k6677 in k6674 in k6671 in expand-send in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6704,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_6706,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=t3,a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word)li10),tmp=(C_word)a,a+=13,tmp));
t5=((C_word*)t3)[1];
f_6706(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do63 in k6702 in k6692 in k6677 in k6674 in k6671 in expand-send in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_6706(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6706,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6718,a[2]=((C_word*)t0)[9],a[3]=t10,a[4]=t2,a[5]=((C_word*)t0)[10],a[6]=((C_word)li8),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_6718(t12,t1,t2);}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6759,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_6765,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t8,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=t2,a[9]=t7,a[10]=((C_word*)t0)[9],a[11]=t6,a[12]=((C_word*)t0)[11],a[13]=t9,a[14]=((C_word*)t0)[7],tmp=(C_word)a,a+=15,tmp);
t11=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t11)){
t12=t10;
f_6765(2,t12,C_SCHEME_FALSE);}
else{
t12=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 312  keyword?");
t13=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t10,t12);}}}

/* k6763 in do63 in k6702 in k6692 in k6677 in k6674 in k6671 in expand-send in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6765,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[13];
f_6759(t3,t2);}
else{
t2=((C_word*)((C_word*)t0)[14])[1];
if(C_truep(t2)){
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=(C_word)C_i_assoc(((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10]);
t6=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[12])+1,t7);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6819,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6892,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t9,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 333  keyword?");
t11=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)((C_word*)t0)[11])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6775,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t4=(C_word)C_i_length(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 323  ferror");
t5=((C_word*)t0)[7];
((C_proc6)C_retrieve_proc(t5))(6,t5,t3,lf[38],((C_word*)t0)[6],((C_word*)t0)[3],t4);}
else{
t4=t3;
f_6775(2,t4,C_SCHEME_UNDEFINED);}}}}

/* k6773 in k6763 in do63 in k6702 in k6692 in k6677 in k6674 in k6671 in expand-send in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6775,2,t0,t1);}
t2=(C_word)C_i_list_tail(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_set_car(t2,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=((C_word*)t0)[2];
f_6759(t9,t8);}

/* k6890 in k6763 in do63 in k6702 in k6692 in k6677 in k6674 in k6671 in expand-send in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6892,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6865,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 338  keyname");
t3=((C_word*)t0)[5];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t2)){
t3=((C_word*)t0)[7];
f_6819(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6878,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6880,a[2]=((C_word*)t0)[5],a[3]=((C_word)li9),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}}}
else{
C_trace("ChickenBridge.scm: 334  ferror");
t2=((C_word*)t0)[8];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[7],lf[37],((C_word*)t0)[6],((C_word*)((C_word*)t0)[4])[1]);}}

/* a6879 in k6890 in k6763 in do63 in k6702 in k6692 in k6677 in k6674 in k6671 in expand-send in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6880(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6880,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 342  keyname");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* k6876 in k6890 in k6763 in do63 in k6702 in k6692 in k6677 in k6674 in k6671 in expand-send in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 340  ferror");
t2=((C_word*)t0)[5];
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],lf[36],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k6863 in k6890 in k6763 in do63 in k6702 in k6692 in k6677 in k6674 in k6671 in expand-send in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 337  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[35],((C_word*)t0)[2],t1);}

/* k6817 in k6763 in do63 in k6702 in k6692 in k6677 in k6674 in k6671 in expand-send in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6819,2,t0,t1);}
t2=(C_word)C_i_member(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6825,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_6825(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6846,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 349  keyname");
t5=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k6844 in k6817 in k6763 in do63 in k6702 in k6692 in k6677 in k6674 in k6671 in expand-send in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 348  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[34],((C_word*)t0)[2],t1);}

/* k6823 in k6817 in k6763 in do63 in k6702 in k6692 in k6677 in k6674 in k6671 in expand-send in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_set_car(((C_word*)t0)[3],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=((C_word*)t0)[2];
f_6759(t6,t5);}

/* k6757 in do63 in k6702 in k6692 in k6677 in k6674 in k6671 in expand-send in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_6759(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[7])[1];
f_6706(t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* do69 in do63 in k6702 in k6692 in k6677 in k6674 in k6671 in expand-send in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_6718(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6718,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6731,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_member(t4,((C_word*)t0)[2]))){
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=t3;
f_6731(t7,(C_word)C_i_set_car(t2,t6));}
else{
t5=t3;
f_6731(t5,C_SCHEME_UNDEFINED);}}}

/* k6729 in do69 in do63 in k6702 in k6692 in k6677 in k6674 in k6671 in expand-send in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_fcall f_6731(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_6718(t3,((C_word*)t0)[2],t2);}

/* f_6941 in expand-send in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6941(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6941,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_6932 in expand-send in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6932(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6932,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6940,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 279  keyword->string");
t4=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k6938 */
static void C_ccall f_6940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 279  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[32],t1);}

/* f_6943 in expand-send in k6659 in k6656 in k6652 in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6943(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr3r,(void*)f_6943r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6943r(t0,t1,t2,t3);}}

static void C_ccall f_6943r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6951,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(5,0,t4,C_retrieve(lf[31]),t2,t3);}

/* k6949 */
static void C_ccall f_6951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 275  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* expand-optkeys in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6365(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6365,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6526,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6618,a[2]=((C_word)li3),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,t3);}

/* a6617 in expand-optkeys in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6618(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6618,3,t0,t1,t2);}
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6632,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6636,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 227  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6647,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6651,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 228  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k6649 in a6617 in expand-optkeys in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 228  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6645 in a6617 in expand-optkeys in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6647,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,t1,((C_word*)t0)[2],C_SCHEME_FALSE));}

/* k6634 in a6617 in expand-optkeys in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 227  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6630 in a6617 in expand-optkeys in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6632,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k6524 in expand-optkeys in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6526,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6529,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 230  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[28]);}

/* k6527 in k6524 in expand-optkeys in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6529,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6532,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 231  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[27]);}

/* k6530 in k6527 in k6524 in expand-optkeys in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6532,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6535,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6612,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word)li2),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a6611 in k6530 in k6527 in k6524 in expand-optkeys in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6612(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6612,3,t0,t1,t2);}
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t2);
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6378,a[2]=t1,a[3]=t3,a[4]=t7,a[5]=t5,a[6]=t4,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6437,a[2]=t8,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 191  symbol->string");
t10=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,t7);}

/* k6435 in a6611 in k6530 in k6527 in k6524 in expand-optkeys in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 191  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6376 in a6611 in k6530 in k6527 in k6524 in expand-optkeys in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6378,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[19],t1);
t4=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[6]);
t6=(C_word)C_a_i_list(&a,2,lf[3],t5);
t7=(C_word)C_a_i_list(&a,3,lf[4],lf[21],((C_word*)t0)[5]);
t8=(C_word)C_a_i_list(&a,2,lf[22],((C_word*)t0)[6]);
t9=(C_word)C_a_i_list(&a,4,lf[20],t6,t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t9);
t11=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],C_SCHEME_TRUE);
t12=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],C_SCHEME_TRUE);
t13=(C_word)C_a_i_list(&a,2,lf[23],((C_word*)t0)[6]);
t14=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t13);
t15=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)C_a_i_list(&a,6,t2,t4,t10,t11,t12,t14));}

/* k6533 in k6530 in k6527 in k6524 in expand-optkeys in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6535,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6542,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t2,*((C_word*)lf[15]+1),((C_word*)t0)[2]);}

/* k6540 in k6533 in k6530 in k6527 in k6524 in expand-optkeys in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6542,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6554,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6588,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6602,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a6601 in k6540 in k6533 in k6530 in k6527 in k6524 in expand-optkeys in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6602(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6602,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t3,C_SCHEME_FALSE));}

/* k6586 in k6540 in k6533 in k6530 in k6527 in k6524 in expand-optkeys in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6588,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 237  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],t1,t4);}

/* k6552 in k6540 in k6533 in k6530 in k6527 in k6524 in expand-optkeys in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6554,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6558,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6562,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6580,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word)li0),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a6579 in k6552 in k6540 in k6533 in k6530 in k6527 in k6524 in expand-optkeys in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6580(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[119],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6580,3,t0,t1,t2);}
t3=((C_word*)t0)[5];
t4=((C_word*)t0)[4];
t5=((C_word*)t0)[3];
t6=((C_word*)t0)[2];
t7=(C_word)C_a_i_list(&a,2,lf[3],t4);
t8=(C_word)C_a_i_list(&a,2,lf[8],t4);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6515,a[2]=t7,a[3]=t1,a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_cadr(t2);
t12=(C_word)C_a_i_list(&a,3,lf[4],lf[10],t5);
t13=(C_word)C_a_i_list(&a,3,lf[11],t3,t12);
t14=(C_word)C_a_i_list(&a,2,lf[8],t4);
t15=(C_word)C_a_i_list(&a,3,lf[12],t11,t14);
t16=(C_word)C_a_i_list(&a,2,lf[13],t11);
t17=(C_word)C_a_i_list(&a,3,lf[4],lf[14],t11);
t18=(C_word)C_a_i_list(&a,3,lf[11],t16,t17);
t19=(C_word)C_a_i_list(&a,3,lf[12],t10,C_SCHEME_TRUE);
t20=(C_word)C_a_i_list(&a,2,lf[15],t4);
t21=(C_word)C_a_i_list(&a,3,lf[12],t4,t20);
t22=(C_word)C_a_i_list(&a,6,lf[16],t13,t15,t18,t19,t21);
t23=(C_word)C_a_i_list(&a,1,t22);
C_trace("##sys#append");
t24=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t9,t6,t23);}

/* k6513 in a6579 in k6552 in k6540 in k6533 in k6530 in k6527 in k6524 in expand-optkeys in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6515,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[9],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[6],((C_word*)t0)[2],t3));}

/* k6560 in k6552 in k6540 in k6533 in k6530 in k6527 in k6524 in expand-optkeys in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6562,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[5],((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[6],t2,t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)t0)[3]);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[2],t1,t5);}

/* k6556 in k6552 in k6540 in k6533 in k6530 in k6527 in k6524 in expand-optkeys in k6361 in k6358 in k6355 in k6352 */
static void C_ccall f_6558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6558,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[1],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[2],t3));}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[2746] = {
{"toplevelChickenBridge.scm",(void*)C_grace_toplevel},
{"f_6354ChickenBridge.scm",(void*)f_6354},
{"f_6357ChickenBridge.scm",(void*)f_6357},
{"f_6360ChickenBridge.scm",(void*)f_6360},
{"f_6363ChickenBridge.scm",(void*)f_6363},
{"f_40388ChickenBridge.scm",(void*)f_40388},
{"f_6654ChickenBridge.scm",(void*)f_6654},
{"f_6658ChickenBridge.scm",(void*)f_6658},
{"f_40336ChickenBridge.scm",(void*)f_40336},
{"f_40383ChickenBridge.scm",(void*)f_40383},
{"f_40373ChickenBridge.scm",(void*)f_40373},
{"f_40340ChickenBridge.scm",(void*)f_40340},
{"f_6661ChickenBridge.scm",(void*)f_6661},
{"f_40330ChickenBridge.scm",(void*)f_40330},
{"f_6954ChickenBridge.scm",(void*)f_6954},
{"f_10022ChickenBridge.scm",(void*)f_10022},
{"f_40114ChickenBridge.scm",(void*)f_40114},
{"f_40328ChickenBridge.scm",(void*)f_40328},
{"f_40148ChickenBridge.scm",(void*)f_40148},
{"f_40160ChickenBridge.scm",(void*)f_40160},
{"f_40164ChickenBridge.scm",(void*)f_40164},
{"f_40168ChickenBridge.scm",(void*)f_40168},
{"f_40312ChickenBridge.scm",(void*)f_40312},
{"f_40174ChickenBridge.scm",(void*)f_40174},
{"f_40194ChickenBridge.scm",(void*)f_40194},
{"f_40197ChickenBridge.scm",(void*)f_40197},
{"f_40205ChickenBridge.scm",(void*)f_40205},
{"f_40212ChickenBridge.scm",(void*)f_40212},
{"f_40215ChickenBridge.scm",(void*)f_40215},
{"f_40219ChickenBridge.scm",(void*)f_40219},
{"f_40226ChickenBridge.scm",(void*)f_40226},
{"f_40229ChickenBridge.scm",(void*)f_40229},
{"f_40233ChickenBridge.scm",(void*)f_40233},
{"f_40240ChickenBridge.scm",(void*)f_40240},
{"f_40184ChickenBridge.scm",(void*)f_40184},
{"f_40137ChickenBridge.scm",(void*)f_40137},
{"f_40127ChickenBridge.scm",(void*)f_40127},
{"f_40130ChickenBridge.scm",(void*)f_40130},
{"f_10025ChickenBridge.scm",(void*)f_10025},
{"f_40104ChickenBridge.scm",(void*)f_40104},
{"f_40112ChickenBridge.scm",(void*)f_40112},
{"f_11090ChickenBridge.scm",(void*)f_11090},
{"f_40090ChickenBridge.scm",(void*)f_40090},
{"f_40098ChickenBridge.scm",(void*)f_40098},
{"f_40102ChickenBridge.scm",(void*)f_40102},
{"f_22245ChickenBridge.scm",(void*)f_22245},
{"f_22296ChickenBridge.scm",(void*)f_22296},
{"f_40080ChickenBridge.scm",(void*)f_40080},
{"f_40088ChickenBridge.scm",(void*)f_40088},
{"f_22401ChickenBridge.scm",(void*)f_22401},
{"f_39977ChickenBridge.scm",(void*)f_39977},
{"f_40040ChickenBridge.scm",(void*)f_40040},
{"f_40044ChickenBridge.scm",(void*)f_40044},
{"f_40058ChickenBridge.scm",(void*)f_40058},
{"f_39980ChickenBridge.scm",(void*)f_39980},
{"f_40000ChickenBridge.scm",(void*)f_40000},
{"f_40004ChickenBridge.scm",(void*)f_40004},
{"f_22404ChickenBridge.scm",(void*)f_22404},
{"f_39963ChickenBridge.scm",(void*)f_39963},
{"f_39971ChickenBridge.scm",(void*)f_39971},
{"f_39975ChickenBridge.scm",(void*)f_39975},
{"f_22597ChickenBridge.scm",(void*)f_22597},
{"f_39937ChickenBridge.scm",(void*)f_39937},
{"f_39941ChickenBridge.scm",(void*)f_39941},
{"f_39947ChickenBridge.scm",(void*)f_39947},
{"f_39958ChickenBridge.scm",(void*)f_39958},
{"f_39954ChickenBridge.scm",(void*)f_39954},
{"f_22666ChickenBridge.scm",(void*)f_22666},
{"f_39915ChickenBridge.scm",(void*)f_39915},
{"f_23911ChickenBridge.scm",(void*)f_23911},
{"f_39895ChickenBridge.scm",(void*)f_39895},
{"f_23914ChickenBridge.scm",(void*)f_23914},
{"f_39855ChickenBridge.scm",(void*)f_39855},
{"f_23917ChickenBridge.scm",(void*)f_23917},
{"f_39761ChickenBridge.scm",(void*)f_39761},
{"f_39765ChickenBridge.scm",(void*)f_39765},
{"f_39768ChickenBridge.scm",(void*)f_39768},
{"f_39786ChickenBridge.scm",(void*)f_39786},
{"f_39789ChickenBridge.scm",(void*)f_39789},
{"f_39820ChickenBridge.scm",(void*)f_39820},
{"f_39792ChickenBridge.scm",(void*)f_39792},
{"f_39798ChickenBridge.scm",(void*)f_39798},
{"f_39751ChickenBridge.scm",(void*)f_39751},
{"f_39745ChickenBridge.scm",(void*)f_39745},
{"f_23920ChickenBridge.scm",(void*)f_23920},
{"f_39653ChickenBridge.scm",(void*)f_39653},
{"f_39655ChickenBridge.scm",(void*)f_39655},
{"f_39659ChickenBridge.scm",(void*)f_39659},
{"f_39662ChickenBridge.scm",(void*)f_39662},
{"f_39665ChickenBridge.scm",(void*)f_39665},
{"f_39705ChickenBridge.scm",(void*)f_39705},
{"f_39697ChickenBridge.scm",(void*)f_39697},
{"f_39668ChickenBridge.scm",(void*)f_39668},
{"f_39671ChickenBridge.scm",(void*)f_39671},
{"f_39674ChickenBridge.scm",(void*)f_39674},
{"f_39645ChickenBridge.scm",(void*)f_39645},
{"f_23923ChickenBridge.scm",(void*)f_23923},
{"f_39617ChickenBridge.scm",(void*)f_39617},
{"f_23926ChickenBridge.scm",(void*)f_23926},
{"f_39581ChickenBridge.scm",(void*)f_39581},
{"f_39593ChickenBridge.scm",(void*)f_39593},
{"f_39589ChickenBridge.scm",(void*)f_39589},
{"f_39563ChickenBridge.scm",(void*)f_39563},
{"f_39557ChickenBridge.scm",(void*)f_39557},
{"f_23929ChickenBridge.scm",(void*)f_23929},
{"f_39471ChickenBridge.scm",(void*)f_39471},
{"f_39475ChickenBridge.scm",(void*)f_39475},
{"f_39478ChickenBridge.scm",(void*)f_39478},
{"f_39481ChickenBridge.scm",(void*)f_39481},
{"f_39494ChickenBridge.scm",(void*)f_39494},
{"f_39440ChickenBridge.scm",(void*)f_39440},
{"f_39444ChickenBridge.scm",(void*)f_39444},
{"f_39459ChickenBridge.scm",(void*)f_39459},
{"f_39434ChickenBridge.scm",(void*)f_39434},
{"f_23932ChickenBridge.scm",(void*)f_23932},
{"f_39320ChickenBridge.scm",(void*)f_39320},
{"f_39336ChickenBridge.scm",(void*)f_39336},
{"f_39347ChickenBridge.scm",(void*)f_39347},
{"f_39314ChickenBridge.scm",(void*)f_39314},
{"f_23988ChickenBridge.scm",(void*)f_23988},
{"f_39181ChickenBridge.scm",(void*)f_39181},
{"f_39204ChickenBridge.scm",(void*)f_39204},
{"f_39201ChickenBridge.scm",(void*)f_39201},
{"f_39175ChickenBridge.scm",(void*)f_39175},
{"f_23991ChickenBridge.scm",(void*)f_23991},
{"f_39029ChickenBridge.scm",(void*)f_39029},
{"f_39047ChickenBridge.scm",(void*)f_39047},
{"f_39056ChickenBridge.scm",(void*)f_39056},
{"f_39023ChickenBridge.scm",(void*)f_39023},
{"f_23994ChickenBridge.scm",(void*)f_23994},
{"f_38976ChickenBridge.scm",(void*)f_38976},
{"f_38980ChickenBridge.scm",(void*)f_38980},
{"f_38983ChickenBridge.scm",(void*)f_38983},
{"f_38999ChickenBridge.scm",(void*)f_38999},
{"f_38958ChickenBridge.scm",(void*)f_38958},
{"f_38952ChickenBridge.scm",(void*)f_38952},
{"f_23997ChickenBridge.scm",(void*)f_23997},
{"f_38876ChickenBridge.scm",(void*)f_38876},
{"f_24136ChickenBridge.scm",(void*)f_24136},
{"f_38802ChickenBridge.scm",(void*)f_38802},
{"f_38809ChickenBridge.scm",(void*)f_38809},
{"f_38796ChickenBridge.scm",(void*)f_38796},
{"f_24139ChickenBridge.scm",(void*)f_24139},
{"f_38692ChickenBridge.scm",(void*)f_38692},
{"f_38700ChickenBridge.scm",(void*)f_38700},
{"f_38666ChickenBridge.scm",(void*)f_38666},
{"f_38683ChickenBridge.scm",(void*)f_38683},
{"f_38674ChickenBridge.scm",(void*)f_38674},
{"f_38660ChickenBridge.scm",(void*)f_38660},
{"f_24142ChickenBridge.scm",(void*)f_24142},
{"f_38616ChickenBridge.scm",(void*)f_38616},
{"f_24145ChickenBridge.scm",(void*)f_24145},
{"f_38534ChickenBridge.scm",(void*)f_38534},
{"f_38545ChickenBridge.scm",(void*)f_38545},
{"f_38547ChickenBridge.scm",(void*)f_38547},
{"f_38576ChickenBridge.scm",(void*)f_38576},
{"f_38512ChickenBridge.scm",(void*)f_38512},
{"f_38528ChickenBridge.scm",(void*)f_38528},
{"f_38506ChickenBridge.scm",(void*)f_38506},
{"f_24148ChickenBridge.scm",(void*)f_24148},
{"f_38459ChickenBridge.scm",(void*)f_38459},
{"f_38463ChickenBridge.scm",(void*)f_38463},
{"f_38470ChickenBridge.scm",(void*)f_38470},
{"f_38437ChickenBridge.scm",(void*)f_38437},
{"f_38453ChickenBridge.scm",(void*)f_38453},
{"f_38431ChickenBridge.scm",(void*)f_38431},
{"f_24151ChickenBridge.scm",(void*)f_24151},
{"f_38299ChickenBridge.scm",(void*)f_38299},
{"f_38339ChickenBridge.scm",(void*)f_38339},
{"f_38303ChickenBridge.scm",(void*)f_38303},
{"f_38319ChickenBridge.scm",(void*)f_38319},
{"f_38331ChickenBridge.scm",(void*)f_38331},
{"f_38335ChickenBridge.scm",(void*)f_38335},
{"f_38327ChickenBridge.scm",(void*)f_38327},
{"f_38224ChickenBridge.scm",(void*)f_38224},
{"f_38267ChickenBridge.scm",(void*)f_38267},
{"f_38271ChickenBridge.scm",(void*)f_38271},
{"f_38231ChickenBridge.scm",(void*)f_38231},
{"f_38242ChickenBridge.scm",(void*)f_38242},
{"f_38218ChickenBridge.scm",(void*)f_38218},
{"f_24154ChickenBridge.scm",(void*)f_24154},
{"f_38198ChickenBridge.scm",(void*)f_38198},
{"f_38192ChickenBridge.scm",(void*)f_38192},
{"f_24157ChickenBridge.scm",(void*)f_24157},
{"f_38172ChickenBridge.scm",(void*)f_38172},
{"f_38176ChickenBridge.scm",(void*)f_38176},
{"f_38164ChickenBridge.scm",(void*)f_38164},
{"f_24160ChickenBridge.scm",(void*)f_24160},
{"f_38144ChickenBridge.scm",(void*)f_38144},
{"f_38148ChickenBridge.scm",(void*)f_38148},
{"f_38136ChickenBridge.scm",(void*)f_38136},
{"f_24163ChickenBridge.scm",(void*)f_24163},
{"f_38116ChickenBridge.scm",(void*)f_38116},
{"f_38120ChickenBridge.scm",(void*)f_38120},
{"f_38108ChickenBridge.scm",(void*)f_38108},
{"f_24166ChickenBridge.scm",(void*)f_24166},
{"f_38088ChickenBridge.scm",(void*)f_38088},
{"f_38092ChickenBridge.scm",(void*)f_38092},
{"f_38080ChickenBridge.scm",(void*)f_38080},
{"f_24169ChickenBridge.scm",(void*)f_24169},
{"f_37979ChickenBridge.scm",(void*)f_37979},
{"f_37949ChickenBridge.scm",(void*)f_37949},
{"f_37973ChickenBridge.scm",(void*)f_37973},
{"f_37943ChickenBridge.scm",(void*)f_37943},
{"f_24172ChickenBridge.scm",(void*)f_24172},
{"f_37893ChickenBridge.scm",(void*)f_37893},
{"f_37895ChickenBridge.scm",(void*)f_37895},
{"f_37899ChickenBridge.scm",(void*)f_37899},
{"f_37927ChickenBridge.scm",(void*)f_37927},
{"f_37919ChickenBridge.scm",(void*)f_37919},
{"f_37915ChickenBridge.scm",(void*)f_37915},
{"f_37902ChickenBridge.scm",(void*)f_37902},
{"f_37885ChickenBridge.scm",(void*)f_37885},
{"f_24175ChickenBridge.scm",(void*)f_24175},
{"f_37832ChickenBridge.scm",(void*)f_37832},
{"f_37834ChickenBridge.scm",(void*)f_37834},
{"f_37838ChickenBridge.scm",(void*)f_37838},
{"f_37869ChickenBridge.scm",(void*)f_37869},
{"f_37861ChickenBridge.scm",(void*)f_37861},
{"f_37857ChickenBridge.scm",(void*)f_37857},
{"f_37841ChickenBridge.scm",(void*)f_37841},
{"f_37844ChickenBridge.scm",(void*)f_37844},
{"f_37824ChickenBridge.scm",(void*)f_37824},
{"f_24178ChickenBridge.scm",(void*)f_24178},
{"f_37774ChickenBridge.scm",(void*)f_37774},
{"f_37788ChickenBridge.scm",(void*)f_37788},
{"f_37780ChickenBridge.scm",(void*)f_37780},
{"f_37739ChickenBridge.scm",(void*)f_37739},
{"f_37772ChickenBridge.scm",(void*)f_37772},
{"f_37733ChickenBridge.scm",(void*)f_37733},
{"f_24181ChickenBridge.scm",(void*)f_24181},
{"f_37680ChickenBridge.scm",(void*)f_37680},
{"f_37684ChickenBridge.scm",(void*)f_37684},
{"f_37697ChickenBridge.scm",(void*)f_37697},
{"f_37689ChickenBridge.scm",(void*)f_37689},
{"f_37637ChickenBridge.scm",(void*)f_37637},
{"f_37670ChickenBridge.scm",(void*)f_37670},
{"f_37631ChickenBridge.scm",(void*)f_37631},
{"f_24184ChickenBridge.scm",(void*)f_24184},
{"f_37551ChickenBridge.scm",(void*)f_37551},
{"f_37545ChickenBridge.scm",(void*)f_37545},
{"f_24187ChickenBridge.scm",(void*)f_24187},
{"f_37314ChickenBridge.scm",(void*)f_37314},
{"f_37318ChickenBridge.scm",(void*)f_37318},
{"f_37326ChickenBridge.scm",(void*)f_37326},
{"f_37349ChickenBridge.scm",(void*)f_37349},
{"f_37352ChickenBridge.scm",(void*)f_37352},
{"f_37355ChickenBridge.scm",(void*)f_37355},
{"f_37358ChickenBridge.scm",(void*)f_37358},
{"f_37418ChickenBridge.scm",(void*)f_37418},
{"f_37425ChickenBridge.scm",(void*)f_37425},
{"f_37435ChickenBridge.scm",(void*)f_37435},
{"f_37445ChickenBridge.scm",(void*)f_37445},
{"f_37459ChickenBridge.scm",(void*)f_37459},
{"f_37469ChickenBridge.scm",(void*)f_37469},
{"f_37479ChickenBridge.scm",(void*)f_37479},
{"f_37489ChickenBridge.scm",(void*)f_37489},
{"f_37361ChickenBridge.scm",(void*)f_37361},
{"f_37385ChickenBridge.scm",(void*)f_37385},
{"f_37364ChickenBridge.scm",(void*)f_37364},
{"f_37271ChickenBridge.scm",(void*)f_37271},
{"f_37304ChickenBridge.scm",(void*)f_37304},
{"f_37265ChickenBridge.scm",(void*)f_37265},
{"f_24190ChickenBridge.scm",(void*)f_24190},
{"f_37183ChickenBridge.scm",(void*)f_37183},
{"f_37187ChickenBridge.scm",(void*)f_37187},
{"f_37193ChickenBridge.scm",(void*)f_37193},
{"f_37213ChickenBridge.scm",(void*)f_37213},
{"f_37157ChickenBridge.scm",(void*)f_37157},
{"f_37167ChickenBridge.scm",(void*)f_37167},
{"f_37151ChickenBridge.scm",(void*)f_37151},
{"f_24193ChickenBridge.scm",(void*)f_24193},
{"f_36966ChickenBridge.scm",(void*)f_36966},
{"f_36970ChickenBridge.scm",(void*)f_36970},
{"f_36976ChickenBridge.scm",(void*)f_36976},
{"f_36985ChickenBridge.scm",(void*)f_36985},
{"f_37023ChickenBridge.scm",(void*)f_37023},
{"f_37015ChickenBridge.scm",(void*)f_37015},
{"f_36992ChickenBridge.scm",(void*)f_36992},
{"f_36996ChickenBridge.scm",(void*)f_36996},
{"f_36898ChickenBridge.scm",(void*)f_36898},
{"f_36917ChickenBridge.scm",(void*)f_36917},
{"f_36952ChickenBridge.scm",(void*)f_36952},
{"f_36923ChickenBridge.scm",(void*)f_36923},
{"f_36927ChickenBridge.scm",(void*)f_36927},
{"f_36941ChickenBridge.scm",(void*)f_36941},
{"f_36930ChickenBridge.scm",(void*)f_36930},
{"f_36911ChickenBridge.scm",(void*)f_36911},
{"f_36892ChickenBridge.scm",(void*)f_36892},
{"f_24196ChickenBridge.scm",(void*)f_24196},
{"f_36620ChickenBridge.scm",(void*)f_36620},
{"f_24719ChickenBridge.scm",(void*)f_24719},
{"f_36572ChickenBridge.scm",(void*)f_36572},
{"f_36564ChickenBridge.scm",(void*)f_36564},
{"f_24722ChickenBridge.scm",(void*)f_24722},
{"f_36444ChickenBridge.scm",(void*)f_36444},
{"f_24728ChickenBridge.scm",(void*)f_24728},
{"f_25264ChickenBridge.scm",(void*)f_25264},
{"f_25298ChickenBridge.scm",(void*)f_25298},
{"f_25290ChickenBridge.scm",(void*)f_25290},
{"f_25286ChickenBridge.scm",(void*)f_25286},
{"f_25271ChickenBridge.scm",(void*)f_25271},
{"f_25275ChickenBridge.scm",(void*)f_25275},
{"f_25268ChickenBridge.scm",(void*)f_25268},
{"f_24746ChickenBridge.scm",(void*)f_24746},
{"f_25257ChickenBridge.scm",(void*)f_25257},
{"f_25253ChickenBridge.scm",(void*)f_25253},
{"f_24753ChickenBridge.scm",(void*)f_24753},
{"f_25128ChickenBridge.scm",(void*)f_25128},
{"f_25149ChickenBridge.scm",(void*)f_25149},
{"f_25151ChickenBridge.scm",(void*)f_25151},
{"f_25165ChickenBridge.scm",(void*)f_25165},
{"f_25218ChickenBridge.scm",(void*)f_25218},
{"f_25168ChickenBridge.scm",(void*)f_25168},
{"f_25203ChickenBridge.scm",(void*)f_25203},
{"f_25171ChickenBridge.scm",(void*)f_25171},
{"f_25184ChickenBridge.scm",(void*)f_25184},
{"f_25196ChickenBridge.scm",(void*)f_25196},
{"f_25188ChickenBridge.scm",(void*)f_25188},
{"f_25174ChickenBridge.scm",(void*)f_25174},
{"f_25138ChickenBridge.scm",(void*)f_25138},
{"f_24756ChickenBridge.scm",(void*)f_24756},
{"f_25092ChickenBridge.scm",(void*)f_25092},
{"f_25118ChickenBridge.scm",(void*)f_25118},
{"f_25103ChickenBridge.scm",(void*)f_25103},
{"f_24762ChickenBridge.scm",(void*)f_24762},
{"f_24766ChickenBridge.scm",(void*)f_24766},
{"f_24969ChickenBridge.scm",(void*)f_24969},
{"f_24973ChickenBridge.scm",(void*)f_24973},
{"f_24977ChickenBridge.scm",(void*)f_24977},
{"f_25020ChickenBridge.scm",(void*)f_25020},
{"f_25030ChickenBridge.scm",(void*)f_25030},
{"f_25033ChickenBridge.scm",(void*)f_25033},
{"f_25054ChickenBridge.scm",(void*)f_25054},
{"f_25036ChickenBridge.scm",(void*)f_25036},
{"f_25040ChickenBridge.scm",(void*)f_25040},
{"f_24980ChickenBridge.scm",(void*)f_24980},
{"f_24983ChickenBridge.scm",(void*)f_24983},
{"f_24769ChickenBridge.scm",(void*)f_24769},
{"f_24773ChickenBridge.scm",(void*)f_24773},
{"f_24776ChickenBridge.scm",(void*)f_24776},
{"f_24929ChickenBridge.scm",(void*)f_24929},
{"f_24937ChickenBridge.scm",(void*)f_24937},
{"f_24933ChickenBridge.scm",(void*)f_24933},
{"f_24779ChickenBridge.scm",(void*)f_24779},
{"f_24807ChickenBridge.scm",(void*)f_24807},
{"f_24810ChickenBridge.scm",(void*)f_24810},
{"f_24813ChickenBridge.scm",(void*)f_24813},
{"f_24816ChickenBridge.scm",(void*)f_24816},
{"f_24819ChickenBridge.scm",(void*)f_24819},
{"f_24878ChickenBridge.scm",(void*)f_24878},
{"f_36398ChickenBridge.scm",(void*)f_36398},
{"f_36414ChickenBridge.scm",(void*)f_36414},
{"f_36417ChickenBridge.scm",(void*)f_36417},
{"f_36420ChickenBridge.scm",(void*)f_36420},
{"f_36423ChickenBridge.scm",(void*)f_36423},
{"f_36434ChickenBridge.scm",(void*)f_36434},
{"f_36392ChickenBridge.scm",(void*)f_36392},
{"f_25305ChickenBridge.scm",(void*)f_25305},
{"f_36253ChickenBridge.scm",(void*)f_36253},
{"f_36292ChickenBridge.scm",(void*)f_36292},
{"f_36266ChickenBridge.scm",(void*)f_36266},
{"f_36247ChickenBridge.scm",(void*)f_36247},
{"f_25308ChickenBridge.scm",(void*)f_25308},
{"f_35835ChickenBridge.scm",(void*)f_35835},
{"f_35839ChickenBridge.scm",(void*)f_35839},
{"f_35851ChickenBridge.scm",(void*)f_35851},
{"f_35909ChickenBridge.scm",(void*)f_35909},
{"f_35912ChickenBridge.scm",(void*)f_35912},
{"f_35915ChickenBridge.scm",(void*)f_35915},
{"f_36127ChickenBridge.scm",(void*)f_36127},
{"f_36065ChickenBridge.scm",(void*)f_36065},
{"f_36099ChickenBridge.scm",(void*)f_36099},
{"f_36074ChickenBridge.scm",(void*)f_36074},
{"f_36085ChickenBridge.scm",(void*)f_36085},
{"f_36081ChickenBridge.scm",(void*)f_36081},
{"f_35924ChickenBridge.scm",(void*)f_35924},
{"f_36002ChickenBridge.scm",(void*)f_36002},
{"f_36043ChickenBridge.scm",(void*)f_36043},
{"f_36047ChickenBridge.scm",(void*)f_36047},
{"f_36051ChickenBridge.scm",(void*)f_36051},
{"f_36006ChickenBridge.scm",(void*)f_36006},
{"f_36010ChickenBridge.scm",(void*)f_36010},
{"f_36037ChickenBridge.scm",(void*)f_36037},
{"f_36013ChickenBridge.scm",(void*)f_36013},
{"f_35927ChickenBridge.scm",(void*)f_35927},
{"f_35999ChickenBridge.scm",(void*)f_35999},
{"f_35941ChickenBridge.scm",(void*)f_35941},
{"f_35943ChickenBridge.scm",(void*)f_35943},
{"f_35991ChickenBridge.scm",(void*)f_35991},
{"f_35962ChickenBridge.scm",(void*)f_35962},
{"f_35979ChickenBridge.scm",(void*)f_35979},
{"f_35965ChickenBridge.scm",(void*)f_35965},
{"f_35958ChickenBridge.scm",(void*)f_35958},
{"f_35930ChickenBridge.scm",(void*)f_35930},
{"f_35860ChickenBridge.scm",(void*)f_35860},
{"f_35870ChickenBridge.scm",(void*)f_35870},
{"f_35876ChickenBridge.scm",(void*)f_35876},
{"f_35848ChickenBridge.scm",(void*)f_35848},
{"f_35796ChickenBridge.scm",(void*)f_35796},
{"f_35813ChickenBridge.scm",(void*)f_35813},
{"f_35829ChickenBridge.scm",(void*)f_35829},
{"f_35807ChickenBridge.scm",(void*)f_35807},
{"f_35790ChickenBridge.scm",(void*)f_35790},
{"f_25311ChickenBridge.scm",(void*)f_25311},
{"f_35714ChickenBridge.scm",(void*)f_35714},
{"f_25314ChickenBridge.scm",(void*)f_25314},
{"f_35690ChickenBridge.scm",(void*)f_35690},
{"f_35702ChickenBridge.scm",(void*)f_35702},
{"f_35698ChickenBridge.scm",(void*)f_35698},
{"f_35676ChickenBridge.scm",(void*)f_35676},
{"f_35684ChickenBridge.scm",(void*)f_35684},
{"f_35670ChickenBridge.scm",(void*)f_35670},
{"f_25317ChickenBridge.scm",(void*)f_25317},
{"f_35662ChickenBridge.scm",(void*)f_35662},
{"f_29088ChickenBridge.scm",(void*)f_29088},
{"f_29091ChickenBridge.scm",(void*)f_29091},
{"f_29257ChickenBridge.scm",(void*)f_29257},
{"f_29253ChickenBridge.scm",(void*)f_29253},
{"f_29243ChickenBridge.scm",(void*)f_29243},
{"f_29098ChickenBridge.scm",(void*)f_29098},
{"f_29102ChickenBridge.scm",(void*)f_29102},
{"f_29105ChickenBridge.scm",(void*)f_29105},
{"f_29116ChickenBridge.scm",(void*)f_29116},
{"f_29124ChickenBridge.scm",(void*)f_29124},
{"f_29196ChickenBridge.scm",(void*)f_29196},
{"f_29204ChickenBridge.scm",(void*)f_29204},
{"f_29200ChickenBridge.scm",(void*)f_29200},
{"f_29192ChickenBridge.scm",(void*)f_29192},
{"f_29188ChickenBridge.scm",(void*)f_29188},
{"f_29160ChickenBridge.scm",(void*)f_29160},
{"f_29156ChickenBridge.scm",(void*)f_29156},
{"f_29120ChickenBridge.scm",(void*)f_29120},
{"f_25735ChickenBridge.scm",(void*)f_25735},
{"f_35648ChickenBridge.scm",(void*)f_35648},
{"f_25738ChickenBridge.scm",(void*)f_25738},
{"f_35619ChickenBridge.scm",(void*)f_35619},
{"f_35623ChickenBridge.scm",(void*)f_35623},
{"f_25741ChickenBridge.scm",(void*)f_25741},
{"f_35616ChickenBridge.scm",(void*)f_35616},
{"f_25744ChickenBridge.scm",(void*)f_25744},
{"f_35474ChickenBridge.scm",(void*)f_35474},
{"f_29270ChickenBridge.scm",(void*)f_29270},
{"f_29402ChickenBridge.scm",(void*)f_29402},
{"f_29273ChickenBridge.scm",(void*)f_29273},
{"f_29284ChickenBridge.scm",(void*)f_29284},
{"f_29292ChickenBridge.scm",(void*)f_29292},
{"f_29316ChickenBridge.scm",(void*)f_29316},
{"f_29319ChickenBridge.scm",(void*)f_29319},
{"f_29327ChickenBridge.scm",(void*)f_29327},
{"f_29335ChickenBridge.scm",(void*)f_29335},
{"f_29355ChickenBridge.scm",(void*)f_29355},
{"f_29351ChickenBridge.scm",(void*)f_29351},
{"f_29331ChickenBridge.scm",(void*)f_29331},
{"f_29323ChickenBridge.scm",(void*)f_29323},
{"f_29312ChickenBridge.scm",(void*)f_29312},
{"f_29288ChickenBridge.scm",(void*)f_29288},
{"f_29264ChickenBridge.scm",(void*)f_29264},
{"f_34186ChickenBridge.scm",(void*)f_34186},
{"f_34189ChickenBridge.scm",(void*)f_34189},
{"f_34192ChickenBridge.scm",(void*)f_34192},
{"f_34195ChickenBridge.scm",(void*)f_34195},
{"f_34198ChickenBridge.scm",(void*)f_34198},
{"f_34201ChickenBridge.scm",(void*)f_34201},
{"f_34204ChickenBridge.scm",(void*)f_34204},
{"f_34207ChickenBridge.scm",(void*)f_34207},
{"f_34210ChickenBridge.scm",(void*)f_34210},
{"f_34213ChickenBridge.scm",(void*)f_34213},
{"f_34216ChickenBridge.scm",(void*)f_34216},
{"f_34341ChickenBridge.scm",(void*)f_34341},
{"f_34344ChickenBridge.scm",(void*)f_34344},
{"f_34347ChickenBridge.scm",(void*)f_34347},
{"f_35411ChickenBridge.scm",(void*)f_35411},
{"f_35439ChickenBridge.scm",(void*)f_35439},
{"f_35078ChickenBridge.scm",(void*)f_35078},
{"f_35405ChickenBridge.scm",(void*)f_35405},
{"f_35123ChickenBridge.scm",(void*)f_35123},
{"f_35129ChickenBridge.scm",(void*)f_35129},
{"f_35132ChickenBridge.scm",(void*)f_35132},
{"f_35135ChickenBridge.scm",(void*)f_35135},
{"f_35139ChickenBridge.scm",(void*)f_35139},
{"f_35349ChickenBridge.scm",(void*)f_35349},
{"f_35361ChickenBridge.scm",(void*)f_35361},
{"f_35357ChickenBridge.scm",(void*)f_35357},
{"f_35142ChickenBridge.scm",(void*)f_35142},
{"f_35306ChickenBridge.scm",(void*)f_35306},
{"f_35342ChickenBridge.scm",(void*)f_35342},
{"f_35335ChickenBridge.scm",(void*)f_35335},
{"f_35145ChickenBridge.scm",(void*)f_35145},
{"f_35244ChickenBridge.scm",(void*)f_35244},
{"f_35252ChickenBridge.scm",(void*)f_35252},
{"f_35248ChickenBridge.scm",(void*)f_35248},
{"f_35240ChickenBridge.scm",(void*)f_35240},
{"f_35236ChickenBridge.scm",(void*)f_35236},
{"f_35192ChickenBridge.scm",(void*)f_35192},
{"f_35188ChickenBridge.scm",(void*)f_35188},
{"f_35155ChickenBridge.scm",(void*)f_35155},
{"f_35166ChickenBridge.scm",(void*)f_35166},
{"f_35174ChickenBridge.scm",(void*)f_35174},
{"f_35170ChickenBridge.scm",(void*)f_35170},
{"f_35368ChickenBridge.scm",(void*)f_35368},
{"f_35376ChickenBridge.scm",(void*)f_35376},
{"f_35390ChickenBridge.scm",(void*)f_35390},
{"f_35380ChickenBridge.scm",(void*)f_35380},
{"f_35371ChickenBridge.scm",(void*)f_35371},
{"f_35374ChickenBridge.scm",(void*)f_35374},
{"f_35080ChickenBridge.scm",(void*)f_35080},
{"f_35096ChickenBridge.scm",(void*)f_35096},
{"f_35007ChickenBridge.scm",(void*)f_35007},
{"f_35018ChickenBridge.scm",(void*)f_35018},
{"f_35021ChickenBridge.scm",(void*)f_35021},
{"f_35028ChickenBridge.scm",(void*)f_35028},
{"f_34997ChickenBridge.scm",(void*)f_34997},
{"f_34652ChickenBridge.scm",(void*)f_34652},
{"f_35001ChickenBridge.scm",(void*)f_35001},
{"f_34939ChickenBridge.scm",(void*)f_34939},
{"f_34957ChickenBridge.scm",(void*)f_34957},
{"f_34967ChickenBridge.scm",(void*)f_34967},
{"f_34943ChickenBridge.scm",(void*)f_34943},
{"f_34930ChickenBridge.scm",(void*)f_34930},
{"f_34630ChickenBridge.scm",(void*)f_34630},
{"f_34934ChickenBridge.scm",(void*)f_34934},
{"f_34924ChickenBridge.scm",(void*)f_34924},
{"f_34612ChickenBridge.scm",(void*)f_34612},
{"f_34915ChickenBridge.scm",(void*)f_34915},
{"f_34621ChickenBridge.scm",(void*)f_34621},
{"f_34919ChickenBridge.scm",(void*)f_34919},
{"f_34852ChickenBridge.scm",(void*)f_34852},
{"f_34877ChickenBridge.scm",(void*)f_34877},
{"f_34577ChickenBridge.scm",(void*)f_34577},
{"f_34865ChickenBridge.scm",(void*)f_34865},
{"f_34676ChickenBridge.scm",(void*)f_34676},
{"f_34803ChickenBridge.scm",(void*)f_34803},
{"f_34798ChickenBridge.scm",(void*)f_34798},
{"f_34678ChickenBridge.scm",(void*)f_34678},
{"f_34797ChickenBridge.scm",(void*)f_34797},
{"f_34793ChickenBridge.scm",(void*)f_34793},
{"f_34785ChickenBridge.scm",(void*)f_34785},
{"f_34749ChickenBridge.scm",(void*)f_34749},
{"f_34782ChickenBridge.scm",(void*)f_34782},
{"f_34778ChickenBridge.scm",(void*)f_34778},
{"f_34759ChickenBridge.scm",(void*)f_34759},
{"f_34738ChickenBridge.scm",(void*)f_34738},
{"f_34708ChickenBridge.scm",(void*)f_34708},
{"f_34680ChickenBridge.scm",(void*)f_34680},
{"f_34657ChickenBridge.scm",(void*)f_34657},
{"f_34662ChickenBridge.scm",(void*)f_34662},
{"f_34667ChickenBridge.scm",(void*)f_34667},
{"f_34635ChickenBridge.scm",(void*)f_34635},
{"f_34639ChickenBridge.scm",(void*)f_34639},
{"f_34591ChickenBridge.scm",(void*)f_34591},
{"f_34595ChickenBridge.scm",(void*)f_34595},
{"f_34582ChickenBridge.scm",(void*)f_34582},
{"f_34586ChickenBridge.scm",(void*)f_34586},
{"f_34570ChickenBridge.scm",(void*)f_34570},
{"f_34567ChickenBridge.scm",(void*)f_34567},
{"f_34553ChickenBridge.scm",(void*)f_34553},
{"f_34558ChickenBridge.scm",(void*)f_34558},
{"f_34539ChickenBridge.scm",(void*)f_34539},
{"f_34544ChickenBridge.scm",(void*)f_34544},
{"f_34349ChickenBridge.scm",(void*)f_34349},
{"f_34410ChickenBridge.scm",(void*)f_34410},
{"f_34412ChickenBridge.scm",(void*)f_34412},
{"f_34422ChickenBridge.scm",(void*)f_34422},
{"f_34441ChickenBridge.scm",(void*)f_34441},
{"f_34481ChickenBridge.scm",(void*)f_34481},
{"f_34523ChickenBridge.scm",(void*)f_34523},
{"f_34493ChickenBridge.scm",(void*)f_34493},
{"f_34478ChickenBridge.scm",(void*)f_34478},
{"f_34396ChickenBridge.scm",(void*)f_34396},
{"f_34361ChickenBridge.scm",(void*)f_34361},
{"f_34388ChickenBridge.scm",(void*)f_34388},
{"f_34369ChickenBridge.scm",(void*)f_34369},
{"f_34376ChickenBridge.scm",(void*)f_34376},
{"f_34380ChickenBridge.scm",(void*)f_34380},
{"f_34384ChickenBridge.scm",(void*)f_34384},
{"f_34461ChickenBridge.scm",(void*)f_34461},
{"f_34439ChickenBridge.scm",(void*)f_34439},
{"f_34425ChickenBridge.scm",(void*)f_34425},
{"f_34428ChickenBridge.scm",(void*)f_34428},
{"f_34403ChickenBridge.scm",(void*)f_34403},
{"f_34332ChickenBridge.scm",(void*)f_34332},
{"f_34337ChickenBridge.scm",(void*)f_34337},
{"f_34275ChickenBridge.scm",(void*)f_34275},
{"f_34308ChickenBridge.scm",(void*)f_34308},
{"f_34288ChickenBridge.scm",(void*)f_34288},
{"f_34296ChickenBridge.scm",(void*)f_34296},
{"f_34279ChickenBridge.scm",(void*)f_34279},
{"f_34218ChickenBridge.scm",(void*)f_34218},
{"f_34251ChickenBridge.scm",(void*)f_34251},
{"f_34231ChickenBridge.scm",(void*)f_34231},
{"f_34239ChickenBridge.scm",(void*)f_34239},
{"f_34222ChickenBridge.scm",(void*)f_34222},
{"f_34128ChickenBridge.scm",(void*)f_34128},
{"f_34182ChickenBridge.scm",(void*)f_34182},
{"f_34177ChickenBridge.scm",(void*)f_34177},
{"f_34140ChickenBridge.scm",(void*)f_34140},
{"f_34146ChickenBridge.scm",(void*)f_34146},
{"f_34172ChickenBridge.scm",(void*)f_34172},
{"f_34176ChickenBridge.scm",(void*)f_34176},
{"f_34152ChickenBridge.scm",(void*)f_34152},
{"f_34170ChickenBridge.scm",(void*)f_34170},
{"f_34167ChickenBridge.scm",(void*)f_34167},
{"f_34163ChickenBridge.scm",(void*)f_34163},
{"f_34156ChickenBridge.scm",(void*)f_34156},
{"f_34113ChickenBridge.scm",(void*)f_34113},
{"f_34118ChickenBridge.scm",(void*)f_34118},
{"f_34085ChickenBridge.scm",(void*)f_34085},
{"f_34090ChickenBridge.scm",(void*)f_34090},
{"f_34057ChickenBridge.scm",(void*)f_34057},
{"f_34062ChickenBridge.scm",(void*)f_34062},
{"f_34029ChickenBridge.scm",(void*)f_34029},
{"f_34034ChickenBridge.scm",(void*)f_34034},
{"f_34001ChickenBridge.scm",(void*)f_34001},
{"f_34006ChickenBridge.scm",(void*)f_34006},
{"f_33973ChickenBridge.scm",(void*)f_33973},
{"f_33978ChickenBridge.scm",(void*)f_33978},
{"f_33945ChickenBridge.scm",(void*)f_33945},
{"f_33950ChickenBridge.scm",(void*)f_33950},
{"f_33917ChickenBridge.scm",(void*)f_33917},
{"f_33922ChickenBridge.scm",(void*)f_33922},
{"f_33889ChickenBridge.scm",(void*)f_33889},
{"f_33894ChickenBridge.scm",(void*)f_33894},
{"f_33861ChickenBridge.scm",(void*)f_33861},
{"f_33866ChickenBridge.scm",(void*)f_33866},
{"f_33838ChickenBridge.scm",(void*)f_33838},
{"f_33843ChickenBridge.scm",(void*)f_33843},
{"f_33842ChickenBridge.scm",(void*)f_33842},
{"f_33819ChickenBridge.scm",(void*)f_33819},
{"f_33824ChickenBridge.scm",(void*)f_33824},
{"f_33764ChickenBridge.scm",(void*)f_33764},
{"f_33771ChickenBridge.scm",(void*)f_33771},
{"f_33774ChickenBridge.scm",(void*)f_33774},
{"f_33798ChickenBridge.scm",(void*)f_33798},
{"f_33778ChickenBridge.scm",(void*)f_33778},
{"f_33768ChickenBridge.scm",(void*)f_33768},
{"f_33717ChickenBridge.scm",(void*)f_33717},
{"f_33724ChickenBridge.scm",(void*)f_33724},
{"f_33727ChickenBridge.scm",(void*)f_33727},
{"f_33747ChickenBridge.scm",(void*)f_33747},
{"f_33731ChickenBridge.scm",(void*)f_33731},
{"f_33694ChickenBridge.scm",(void*)f_33694},
{"f_33699ChickenBridge.scm",(void*)f_33699},
{"f_33698ChickenBridge.scm",(void*)f_33698},
{"f_33675ChickenBridge.scm",(void*)f_33675},
{"f_33680ChickenBridge.scm",(void*)f_33680},
{"f_33652ChickenBridge.scm",(void*)f_33652},
{"f_33657ChickenBridge.scm",(void*)f_33657},
{"f_33656ChickenBridge.scm",(void*)f_33656},
{"f_33633ChickenBridge.scm",(void*)f_33633},
{"f_33638ChickenBridge.scm",(void*)f_33638},
{"f_33614ChickenBridge.scm",(void*)f_33614},
{"f_33619ChickenBridge.scm",(void*)f_33619},
{"f_33618ChickenBridge.scm",(void*)f_33618},
{"f_33599ChickenBridge.scm",(void*)f_33599},
{"f_33604ChickenBridge.scm",(void*)f_33604},
{"f_33580ChickenBridge.scm",(void*)f_33580},
{"f_33585ChickenBridge.scm",(void*)f_33585},
{"f_33584ChickenBridge.scm",(void*)f_33584},
{"f_33565ChickenBridge.scm",(void*)f_33565},
{"f_33570ChickenBridge.scm",(void*)f_33570},
{"f_33550ChickenBridge.scm",(void*)f_33550},
{"f_33555ChickenBridge.scm",(void*)f_33555},
{"f_33532ChickenBridge.scm",(void*)f_33532},
{"f_33540ChickenBridge.scm",(void*)f_33540},
{"f_33536ChickenBridge.scm",(void*)f_33536},
{"f_33062ChickenBridge.scm",(void*)f_33062},
{"f_33490ChickenBridge.scm",(void*)f_33490},
{"f_33505ChickenBridge.scm",(void*)f_33505},
{"f_33497ChickenBridge.scm",(void*)f_33497},
{"f_33461ChickenBridge.scm",(void*)f_33461},
{"f_33465ChickenBridge.scm",(void*)f_33465},
{"f_33426ChickenBridge.scm",(void*)f_33426},
{"f_33430ChickenBridge.scm",(void*)f_33430},
{"f_33391ChickenBridge.scm",(void*)f_33391},
{"f_33395ChickenBridge.scm",(void*)f_33395},
{"f_33066ChickenBridge.scm",(void*)f_33066},
{"f_33355ChickenBridge.scm",(void*)f_33355},
{"f_33370ChickenBridge.scm",(void*)f_33370},
{"f_33362ChickenBridge.scm",(void*)f_33362},
{"f_33326ChickenBridge.scm",(void*)f_33326},
{"f_33330ChickenBridge.scm",(void*)f_33330},
{"f_33291ChickenBridge.scm",(void*)f_33291},
{"f_33295ChickenBridge.scm",(void*)f_33295},
{"f_33256ChickenBridge.scm",(void*)f_33256},
{"f_33260ChickenBridge.scm",(void*)f_33260},
{"f_33069ChickenBridge.scm",(void*)f_33069},
{"f_33220ChickenBridge.scm",(void*)f_33220},
{"f_33235ChickenBridge.scm",(void*)f_33235},
{"f_33227ChickenBridge.scm",(void*)f_33227},
{"f_33191ChickenBridge.scm",(void*)f_33191},
{"f_33195ChickenBridge.scm",(void*)f_33195},
{"f_33156ChickenBridge.scm",(void*)f_33156},
{"f_33160ChickenBridge.scm",(void*)f_33160},
{"f_33121ChickenBridge.scm",(void*)f_33121},
{"f_33125ChickenBridge.scm",(void*)f_33125},
{"f_33072ChickenBridge.scm",(void*)f_33072},
{"f_33075ChickenBridge.scm",(void*)f_33075},
{"f_33079ChickenBridge.scm",(void*)f_33079},
{"f_33043ChickenBridge.scm",(void*)f_33043},
{"f_33048ChickenBridge.scm",(void*)f_33048},
{"f_32592ChickenBridge.scm",(void*)f_32592},
{"f_33020ChickenBridge.scm",(void*)f_33020},
{"f_33035ChickenBridge.scm",(void*)f_33035},
{"f_33027ChickenBridge.scm",(void*)f_33027},
{"f_32991ChickenBridge.scm",(void*)f_32991},
{"f_32995ChickenBridge.scm",(void*)f_32995},
{"f_32956ChickenBridge.scm",(void*)f_32956},
{"f_32960ChickenBridge.scm",(void*)f_32960},
{"f_32921ChickenBridge.scm",(void*)f_32921},
{"f_32925ChickenBridge.scm",(void*)f_32925},
{"f_32596ChickenBridge.scm",(void*)f_32596},
{"f_32885ChickenBridge.scm",(void*)f_32885},
{"f_32900ChickenBridge.scm",(void*)f_32900},
{"f_32892ChickenBridge.scm",(void*)f_32892},
{"f_32856ChickenBridge.scm",(void*)f_32856},
{"f_32860ChickenBridge.scm",(void*)f_32860},
{"f_32821ChickenBridge.scm",(void*)f_32821},
{"f_32825ChickenBridge.scm",(void*)f_32825},
{"f_32786ChickenBridge.scm",(void*)f_32786},
{"f_32790ChickenBridge.scm",(void*)f_32790},
{"f_32599ChickenBridge.scm",(void*)f_32599},
{"f_32750ChickenBridge.scm",(void*)f_32750},
{"f_32765ChickenBridge.scm",(void*)f_32765},
{"f_32757ChickenBridge.scm",(void*)f_32757},
{"f_32721ChickenBridge.scm",(void*)f_32721},
{"f_32725ChickenBridge.scm",(void*)f_32725},
{"f_32686ChickenBridge.scm",(void*)f_32686},
{"f_32690ChickenBridge.scm",(void*)f_32690},
{"f_32651ChickenBridge.scm",(void*)f_32651},
{"f_32655ChickenBridge.scm",(void*)f_32655},
{"f_32602ChickenBridge.scm",(void*)f_32602},
{"f_32605ChickenBridge.scm",(void*)f_32605},
{"f_32609ChickenBridge.scm",(void*)f_32609},
{"f_32573ChickenBridge.scm",(void*)f_32573},
{"f_32578ChickenBridge.scm",(void*)f_32578},
{"f_32122ChickenBridge.scm",(void*)f_32122},
{"f_32550ChickenBridge.scm",(void*)f_32550},
{"f_32565ChickenBridge.scm",(void*)f_32565},
{"f_32557ChickenBridge.scm",(void*)f_32557},
{"f_32521ChickenBridge.scm",(void*)f_32521},
{"f_32525ChickenBridge.scm",(void*)f_32525},
{"f_32486ChickenBridge.scm",(void*)f_32486},
{"f_32490ChickenBridge.scm",(void*)f_32490},
{"f_32451ChickenBridge.scm",(void*)f_32451},
{"f_32455ChickenBridge.scm",(void*)f_32455},
{"f_32126ChickenBridge.scm",(void*)f_32126},
{"f_32415ChickenBridge.scm",(void*)f_32415},
{"f_32430ChickenBridge.scm",(void*)f_32430},
{"f_32422ChickenBridge.scm",(void*)f_32422},
{"f_32386ChickenBridge.scm",(void*)f_32386},
{"f_32390ChickenBridge.scm",(void*)f_32390},
{"f_32351ChickenBridge.scm",(void*)f_32351},
{"f_32355ChickenBridge.scm",(void*)f_32355},
{"f_32316ChickenBridge.scm",(void*)f_32316},
{"f_32320ChickenBridge.scm",(void*)f_32320},
{"f_32129ChickenBridge.scm",(void*)f_32129},
{"f_32280ChickenBridge.scm",(void*)f_32280},
{"f_32295ChickenBridge.scm",(void*)f_32295},
{"f_32287ChickenBridge.scm",(void*)f_32287},
{"f_32251ChickenBridge.scm",(void*)f_32251},
{"f_32255ChickenBridge.scm",(void*)f_32255},
{"f_32216ChickenBridge.scm",(void*)f_32216},
{"f_32220ChickenBridge.scm",(void*)f_32220},
{"f_32181ChickenBridge.scm",(void*)f_32181},
{"f_32185ChickenBridge.scm",(void*)f_32185},
{"f_32132ChickenBridge.scm",(void*)f_32132},
{"f_32135ChickenBridge.scm",(void*)f_32135},
{"f_32139ChickenBridge.scm",(void*)f_32139},
{"f_32103ChickenBridge.scm",(void*)f_32103},
{"f_32108ChickenBridge.scm",(void*)f_32108},
{"f_31374ChickenBridge.scm",(void*)f_31374},
{"f_32080ChickenBridge.scm",(void*)f_32080},
{"f_32095ChickenBridge.scm",(void*)f_32095},
{"f_32087ChickenBridge.scm",(void*)f_32087},
{"f_32051ChickenBridge.scm",(void*)f_32051},
{"f_32055ChickenBridge.scm",(void*)f_32055},
{"f_32016ChickenBridge.scm",(void*)f_32016},
{"f_32020ChickenBridge.scm",(void*)f_32020},
{"f_31981ChickenBridge.scm",(void*)f_31981},
{"f_31985ChickenBridge.scm",(void*)f_31985},
{"f_31946ChickenBridge.scm",(void*)f_31946},
{"f_31950ChickenBridge.scm",(void*)f_31950},
{"f_31378ChickenBridge.scm",(void*)f_31378},
{"f_31910ChickenBridge.scm",(void*)f_31910},
{"f_31925ChickenBridge.scm",(void*)f_31925},
{"f_31917ChickenBridge.scm",(void*)f_31917},
{"f_31881ChickenBridge.scm",(void*)f_31881},
{"f_31885ChickenBridge.scm",(void*)f_31885},
{"f_31846ChickenBridge.scm",(void*)f_31846},
{"f_31850ChickenBridge.scm",(void*)f_31850},
{"f_31811ChickenBridge.scm",(void*)f_31811},
{"f_31815ChickenBridge.scm",(void*)f_31815},
{"f_31776ChickenBridge.scm",(void*)f_31776},
{"f_31780ChickenBridge.scm",(void*)f_31780},
{"f_31381ChickenBridge.scm",(void*)f_31381},
{"f_31740ChickenBridge.scm",(void*)f_31740},
{"f_31755ChickenBridge.scm",(void*)f_31755},
{"f_31747ChickenBridge.scm",(void*)f_31747},
{"f_31711ChickenBridge.scm",(void*)f_31711},
{"f_31715ChickenBridge.scm",(void*)f_31715},
{"f_31676ChickenBridge.scm",(void*)f_31676},
{"f_31680ChickenBridge.scm",(void*)f_31680},
{"f_31641ChickenBridge.scm",(void*)f_31641},
{"f_31645ChickenBridge.scm",(void*)f_31645},
{"f_31606ChickenBridge.scm",(void*)f_31606},
{"f_31610ChickenBridge.scm",(void*)f_31610},
{"f_31384ChickenBridge.scm",(void*)f_31384},
{"f_31570ChickenBridge.scm",(void*)f_31570},
{"f_31585ChickenBridge.scm",(void*)f_31585},
{"f_31577ChickenBridge.scm",(void*)f_31577},
{"f_31541ChickenBridge.scm",(void*)f_31541},
{"f_31545ChickenBridge.scm",(void*)f_31545},
{"f_31506ChickenBridge.scm",(void*)f_31506},
{"f_31510ChickenBridge.scm",(void*)f_31510},
{"f_31471ChickenBridge.scm",(void*)f_31471},
{"f_31475ChickenBridge.scm",(void*)f_31475},
{"f_31436ChickenBridge.scm",(void*)f_31436},
{"f_31440ChickenBridge.scm",(void*)f_31440},
{"f_31387ChickenBridge.scm",(void*)f_31387},
{"f_31390ChickenBridge.scm",(void*)f_31390},
{"f_31394ChickenBridge.scm",(void*)f_31394},
{"f_31355ChickenBridge.scm",(void*)f_31355},
{"f_31360ChickenBridge.scm",(void*)f_31360},
{"f_30626ChickenBridge.scm",(void*)f_30626},
{"f_31332ChickenBridge.scm",(void*)f_31332},
{"f_31347ChickenBridge.scm",(void*)f_31347},
{"f_31339ChickenBridge.scm",(void*)f_31339},
{"f_31303ChickenBridge.scm",(void*)f_31303},
{"f_31307ChickenBridge.scm",(void*)f_31307},
{"f_31268ChickenBridge.scm",(void*)f_31268},
{"f_31272ChickenBridge.scm",(void*)f_31272},
{"f_31233ChickenBridge.scm",(void*)f_31233},
{"f_31237ChickenBridge.scm",(void*)f_31237},
{"f_31198ChickenBridge.scm",(void*)f_31198},
{"f_31202ChickenBridge.scm",(void*)f_31202},
{"f_30630ChickenBridge.scm",(void*)f_30630},
{"f_31162ChickenBridge.scm",(void*)f_31162},
{"f_31177ChickenBridge.scm",(void*)f_31177},
{"f_31169ChickenBridge.scm",(void*)f_31169},
{"f_31133ChickenBridge.scm",(void*)f_31133},
{"f_31137ChickenBridge.scm",(void*)f_31137},
{"f_31098ChickenBridge.scm",(void*)f_31098},
{"f_31102ChickenBridge.scm",(void*)f_31102},
{"f_31063ChickenBridge.scm",(void*)f_31063},
{"f_31067ChickenBridge.scm",(void*)f_31067},
{"f_31028ChickenBridge.scm",(void*)f_31028},
{"f_31032ChickenBridge.scm",(void*)f_31032},
{"f_30633ChickenBridge.scm",(void*)f_30633},
{"f_30992ChickenBridge.scm",(void*)f_30992},
{"f_31007ChickenBridge.scm",(void*)f_31007},
{"f_30999ChickenBridge.scm",(void*)f_30999},
{"f_30963ChickenBridge.scm",(void*)f_30963},
{"f_30967ChickenBridge.scm",(void*)f_30967},
{"f_30928ChickenBridge.scm",(void*)f_30928},
{"f_30932ChickenBridge.scm",(void*)f_30932},
{"f_30893ChickenBridge.scm",(void*)f_30893},
{"f_30897ChickenBridge.scm",(void*)f_30897},
{"f_30858ChickenBridge.scm",(void*)f_30858},
{"f_30862ChickenBridge.scm",(void*)f_30862},
{"f_30636ChickenBridge.scm",(void*)f_30636},
{"f_30822ChickenBridge.scm",(void*)f_30822},
{"f_30837ChickenBridge.scm",(void*)f_30837},
{"f_30829ChickenBridge.scm",(void*)f_30829},
{"f_30793ChickenBridge.scm",(void*)f_30793},
{"f_30797ChickenBridge.scm",(void*)f_30797},
{"f_30758ChickenBridge.scm",(void*)f_30758},
{"f_30762ChickenBridge.scm",(void*)f_30762},
{"f_30723ChickenBridge.scm",(void*)f_30723},
{"f_30727ChickenBridge.scm",(void*)f_30727},
{"f_30688ChickenBridge.scm",(void*)f_30688},
{"f_30692ChickenBridge.scm",(void*)f_30692},
{"f_30639ChickenBridge.scm",(void*)f_30639},
{"f_30642ChickenBridge.scm",(void*)f_30642},
{"f_30646ChickenBridge.scm",(void*)f_30646},
{"f_30607ChickenBridge.scm",(void*)f_30607},
{"f_30612ChickenBridge.scm",(void*)f_30612},
{"f_30156ChickenBridge.scm",(void*)f_30156},
{"f_30584ChickenBridge.scm",(void*)f_30584},
{"f_30599ChickenBridge.scm",(void*)f_30599},
{"f_30591ChickenBridge.scm",(void*)f_30591},
{"f_30555ChickenBridge.scm",(void*)f_30555},
{"f_30559ChickenBridge.scm",(void*)f_30559},
{"f_30520ChickenBridge.scm",(void*)f_30520},
{"f_30524ChickenBridge.scm",(void*)f_30524},
{"f_30485ChickenBridge.scm",(void*)f_30485},
{"f_30489ChickenBridge.scm",(void*)f_30489},
{"f_30160ChickenBridge.scm",(void*)f_30160},
{"f_30449ChickenBridge.scm",(void*)f_30449},
{"f_30464ChickenBridge.scm",(void*)f_30464},
{"f_30456ChickenBridge.scm",(void*)f_30456},
{"f_30420ChickenBridge.scm",(void*)f_30420},
{"f_30424ChickenBridge.scm",(void*)f_30424},
{"f_30385ChickenBridge.scm",(void*)f_30385},
{"f_30389ChickenBridge.scm",(void*)f_30389},
{"f_30350ChickenBridge.scm",(void*)f_30350},
{"f_30354ChickenBridge.scm",(void*)f_30354},
{"f_30163ChickenBridge.scm",(void*)f_30163},
{"f_30314ChickenBridge.scm",(void*)f_30314},
{"f_30329ChickenBridge.scm",(void*)f_30329},
{"f_30321ChickenBridge.scm",(void*)f_30321},
{"f_30285ChickenBridge.scm",(void*)f_30285},
{"f_30289ChickenBridge.scm",(void*)f_30289},
{"f_30250ChickenBridge.scm",(void*)f_30250},
{"f_30254ChickenBridge.scm",(void*)f_30254},
{"f_30215ChickenBridge.scm",(void*)f_30215},
{"f_30219ChickenBridge.scm",(void*)f_30219},
{"f_30166ChickenBridge.scm",(void*)f_30166},
{"f_30169ChickenBridge.scm",(void*)f_30169},
{"f_30173ChickenBridge.scm",(void*)f_30173},
{"f_30137ChickenBridge.scm",(void*)f_30137},
{"f_30142ChickenBridge.scm",(void*)f_30142},
{"f_29408ChickenBridge.scm",(void*)f_29408},
{"f_30114ChickenBridge.scm",(void*)f_30114},
{"f_30129ChickenBridge.scm",(void*)f_30129},
{"f_30121ChickenBridge.scm",(void*)f_30121},
{"f_30085ChickenBridge.scm",(void*)f_30085},
{"f_30089ChickenBridge.scm",(void*)f_30089},
{"f_30050ChickenBridge.scm",(void*)f_30050},
{"f_30054ChickenBridge.scm",(void*)f_30054},
{"f_30015ChickenBridge.scm",(void*)f_30015},
{"f_30019ChickenBridge.scm",(void*)f_30019},
{"f_29980ChickenBridge.scm",(void*)f_29980},
{"f_29984ChickenBridge.scm",(void*)f_29984},
{"f_29412ChickenBridge.scm",(void*)f_29412},
{"f_29944ChickenBridge.scm",(void*)f_29944},
{"f_29959ChickenBridge.scm",(void*)f_29959},
{"f_29951ChickenBridge.scm",(void*)f_29951},
{"f_29915ChickenBridge.scm",(void*)f_29915},
{"f_29919ChickenBridge.scm",(void*)f_29919},
{"f_29880ChickenBridge.scm",(void*)f_29880},
{"f_29884ChickenBridge.scm",(void*)f_29884},
{"f_29845ChickenBridge.scm",(void*)f_29845},
{"f_29849ChickenBridge.scm",(void*)f_29849},
{"f_29810ChickenBridge.scm",(void*)f_29810},
{"f_29814ChickenBridge.scm",(void*)f_29814},
{"f_29415ChickenBridge.scm",(void*)f_29415},
{"f_29774ChickenBridge.scm",(void*)f_29774},
{"f_29789ChickenBridge.scm",(void*)f_29789},
{"f_29781ChickenBridge.scm",(void*)f_29781},
{"f_29745ChickenBridge.scm",(void*)f_29745},
{"f_29749ChickenBridge.scm",(void*)f_29749},
{"f_29710ChickenBridge.scm",(void*)f_29710},
{"f_29714ChickenBridge.scm",(void*)f_29714},
{"f_29675ChickenBridge.scm",(void*)f_29675},
{"f_29679ChickenBridge.scm",(void*)f_29679},
{"f_29640ChickenBridge.scm",(void*)f_29640},
{"f_29644ChickenBridge.scm",(void*)f_29644},
{"f_29418ChickenBridge.scm",(void*)f_29418},
{"f_29604ChickenBridge.scm",(void*)f_29604},
{"f_29619ChickenBridge.scm",(void*)f_29619},
{"f_29611ChickenBridge.scm",(void*)f_29611},
{"f_29575ChickenBridge.scm",(void*)f_29575},
{"f_29579ChickenBridge.scm",(void*)f_29579},
{"f_29540ChickenBridge.scm",(void*)f_29540},
{"f_29544ChickenBridge.scm",(void*)f_29544},
{"f_29505ChickenBridge.scm",(void*)f_29505},
{"f_29509ChickenBridge.scm",(void*)f_29509},
{"f_29470ChickenBridge.scm",(void*)f_29470},
{"f_29474ChickenBridge.scm",(void*)f_29474},
{"f_29421ChickenBridge.scm",(void*)f_29421},
{"f_29424ChickenBridge.scm",(void*)f_29424},
{"f_29428ChickenBridge.scm",(void*)f_29428},
{"f_29070ChickenBridge.scm",(void*)f_29070},
{"f_28910ChickenBridge.scm",(void*)f_28910},
{"f_28945ChickenBridge.scm",(void*)f_28945},
{"f_28955ChickenBridge.scm",(void*)f_28955},
{"f_28959ChickenBridge.scm",(void*)f_28959},
{"f_28962ChickenBridge.scm",(void*)f_28962},
{"f_29023ChickenBridge.scm",(void*)f_29023},
{"f_29014ChickenBridge.scm",(void*)f_29014},
{"f_28965ChickenBridge.scm",(void*)f_28965},
{"f_28984ChickenBridge.scm",(void*)f_28984},
{"f_28991ChickenBridge.scm",(void*)f_28991},
{"f_28968ChickenBridge.scm",(void*)f_28968},
{"f_28974ChickenBridge.scm",(void*)f_28974},
{"f_28943ChickenBridge.scm",(void*)f_28943},
{"f_28918ChickenBridge.scm",(void*)f_28918},
{"f_28917ChickenBridge.scm",(void*)f_28917},
{"f_29078ChickenBridge.scm",(void*)f_29078},
{"f_28656ChickenBridge.scm",(void*)f_28656},
{"f_28678ChickenBridge.scm",(void*)f_28678},
{"f_28693ChickenBridge.scm",(void*)f_28693},
{"f_28696ChickenBridge.scm",(void*)f_28696},
{"f_28872ChickenBridge.scm",(void*)f_28872},
{"f_28866ChickenBridge.scm",(void*)f_28866},
{"f_28699ChickenBridge.scm",(void*)f_28699},
{"f_28848ChickenBridge.scm",(void*)f_28848},
{"f_28702ChickenBridge.scm",(void*)f_28702},
{"f_28705ChickenBridge.scm",(void*)f_28705},
{"f_28841ChickenBridge.scm",(void*)f_28841},
{"f_28829ChickenBridge.scm",(void*)f_28829},
{"f_28725ChickenBridge.scm",(void*)f_28725},
{"f_28732ChickenBridge.scm",(void*)f_28732},
{"f_28802ChickenBridge.scm",(void*)f_28802},
{"f_28788ChickenBridge.scm",(void*)f_28788},
{"f_28796ChickenBridge.scm",(void*)f_28796},
{"f_28735ChickenBridge.scm",(void*)f_28735},
{"f_28774ChickenBridge.scm",(void*)f_28774},
{"f_28738ChickenBridge.scm",(void*)f_28738},
{"f_28767ChickenBridge.scm",(void*)f_28767},
{"f_28744ChickenBridge.scm",(void*)f_28744},
{"f_28747ChickenBridge.scm",(void*)f_28747},
{"f_28751ChickenBridge.scm",(void*)f_28751},
{"f_28712ChickenBridge.scm",(void*)f_28712},
{"f_28715ChickenBridge.scm",(void*)f_28715},
{"f_28525ChickenBridge.scm",(void*)f_28525},
{"f_28534ChickenBridge.scm",(void*)f_28534},
{"f_28482ChickenBridge.scm",(void*)f_28482},
{"f_28488ChickenBridge.scm",(void*)f_28488},
{"f_28551ChickenBridge.scm",(void*)f_28551},
{"f_28637ChickenBridge.scm",(void*)f_28637},
{"f_28624ChickenBridge.scm",(void*)f_28624},
{"f_28632ChickenBridge.scm",(void*)f_28632},
{"f_28554ChickenBridge.scm",(void*)f_28554},
{"f_28558ChickenBridge.scm",(void*)f_28558},
{"f_28601ChickenBridge.scm",(void*)f_28601},
{"f_28563ChickenBridge.scm",(void*)f_28563},
{"f_28529ChickenBridge.scm",(void*)f_28529},
{"f_28424ChickenBridge.scm",(void*)f_28424},
{"f_28431ChickenBridge.scm",(void*)f_28431},
{"f_28462ChickenBridge.scm",(void*)f_28462},
{"f_28458ChickenBridge.scm",(void*)f_28458},
{"f_28450ChickenBridge.scm",(void*)f_28450},
{"f_28333ChickenBridge.scm",(void*)f_28333},
{"f_28340ChickenBridge.scm",(void*)f_28340},
{"f_28408ChickenBridge.scm",(void*)f_28408},
{"f_28351ChickenBridge.scm",(void*)f_28351},
{"f_28378ChickenBridge.scm",(void*)f_28378},
{"f_28362ChickenBridge.scm",(void*)f_28362},
{"f_28267ChickenBridge.scm",(void*)f_28267},
{"f_28278ChickenBridge.scm",(void*)f_28278},
{"f_28281ChickenBridge.scm",(void*)f_28281},
{"f_28288ChickenBridge.scm",(void*)f_28288},
{"f_28261ChickenBridge.scm",(void*)f_28261},
{"f_27715ChickenBridge.scm",(void*)f_27715},
{"f_27746ChickenBridge.scm",(void*)f_27746},
{"f_28210ChickenBridge.scm",(void*)f_28210},
{"f_28216ChickenBridge.scm",(void*)f_28216},
{"f_27757ChickenBridge.scm",(void*)f_27757},
{"f_27642ChickenBridge.scm",(void*)f_27642},
{"f_27667ChickenBridge.scm",(void*)f_27667},
{"f_27602ChickenBridge.scm",(void*)f_27602},
{"f_27615ChickenBridge.scm",(void*)f_27615},
{"f_27656ChickenBridge.scm",(void*)f_27656},
{"f_27761ChickenBridge.scm",(void*)f_27761},
{"f_28198ChickenBridge.scm",(void*)f_28198},
{"f_28194ChickenBridge.scm",(void*)f_28194},
{"f_28190ChickenBridge.scm",(void*)f_28190},
{"f_27764ChickenBridge.scm",(void*)f_27764},
{"f_27984ChickenBridge.scm",(void*)f_27984},
{"f_28093ChickenBridge.scm",(void*)f_28093},
{"f_28158ChickenBridge.scm",(void*)f_28158},
{"f_28100ChickenBridge.scm",(void*)f_28100},
{"f_28104ChickenBridge.scm",(void*)f_28104},
{"f_28108ChickenBridge.scm",(void*)f_28108},
{"f_28150ChickenBridge.scm",(void*)f_28150},
{"f_28146ChickenBridge.scm",(void*)f_28146},
{"f_28124ChickenBridge.scm",(void*)f_28124},
{"f_27987ChickenBridge.scm",(void*)f_27987},
{"f_27990ChickenBridge.scm",(void*)f_27990},
{"f_27889ChickenBridge.scm",(void*)f_27889},
{"f_27972ChickenBridge.scm",(void*)f_27972},
{"f_27939ChickenBridge.scm",(void*)f_27939},
{"f_27965ChickenBridge.scm",(void*)f_27965},
{"f_27947ChickenBridge.scm",(void*)f_27947},
{"f_27895ChickenBridge.scm",(void*)f_27895},
{"f_27935ChickenBridge.scm",(void*)f_27935},
{"f_27877ChickenBridge.scm",(void*)f_27877},
{"f_27848ChickenBridge.scm",(void*)f_27848},
{"f_27870ChickenBridge.scm",(void*)f_27870},
{"f_27856ChickenBridge.scm",(void*)f_27856},
{"f_27810ChickenBridge.scm",(void*)f_27810},
{"f_27767ChickenBridge.scm",(void*)f_27767},
{"f_27778ChickenBridge.scm",(void*)f_27778},
{"f_27782ChickenBridge.scm",(void*)f_27782},
{"f_27786ChickenBridge.scm",(void*)f_27786},
{"f_27790ChickenBridge.scm",(void*)f_27790},
{"f_27774ChickenBridge.scm",(void*)f_27774},
{"f_27734ChickenBridge.scm",(void*)f_27734},
{"f_27729ChickenBridge.scm",(void*)f_27729},
{"f_27724ChickenBridge.scm",(void*)f_27724},
{"f_27556ChickenBridge.scm",(void*)f_27556},
{"f_27567ChickenBridge.scm",(void*)f_27567},
{"f_27582ChickenBridge.scm",(void*)f_27582},
{"f_27518ChickenBridge.scm",(void*)f_27518},
{"f_27529ChickenBridge.scm",(void*)f_27529},
{"f_27544ChickenBridge.scm",(void*)f_27544},
{"f_27451ChickenBridge.scm",(void*)f_27451},
{"f_27471ChickenBridge.scm",(void*)f_27471},
{"f_27481ChickenBridge.scm",(void*)f_27481},
{"f_27494ChickenBridge.scm",(void*)f_27494},
{"f_27462ChickenBridge.scm",(void*)f_27462},
{"f_27469ChickenBridge.scm",(void*)f_27469},
{"f_27258ChickenBridge.scm",(void*)f_27258},
{"f_27318ChickenBridge.scm",(void*)f_27318},
{"f_27328ChickenBridge.scm",(void*)f_27328},
{"f_27442ChickenBridge.scm",(void*)f_27442},
{"f_27407ChickenBridge.scm",(void*)f_27407},
{"f_27399ChickenBridge.scm",(void*)f_27399},
{"f_27370ChickenBridge.scm",(void*)f_27370},
{"f_27348ChickenBridge.scm",(void*)f_27348},
{"f_27351ChickenBridge.scm",(void*)f_27351},
{"f_27339ChickenBridge.scm",(void*)f_27339},
{"f_27265ChickenBridge.scm",(void*)f_27265},
{"f_27316ChickenBridge.scm",(void*)f_27316},
{"f_27308ChickenBridge.scm",(void*)f_27308},
{"f_27268ChickenBridge.scm",(void*)f_27268},
{"f_27279ChickenBridge.scm",(void*)f_27279},
{"f_27283ChickenBridge.scm",(void*)f_27283},
{"f_27275ChickenBridge.scm",(void*)f_27275},
{"f_27116ChickenBridge.scm",(void*)f_27116},
{"f_27164ChickenBridge.scm",(void*)f_27164},
{"f_27174ChickenBridge.scm",(void*)f_27174},
{"f_27185ChickenBridge.scm",(void*)f_27185},
{"f_27222ChickenBridge.scm",(void*)f_27222},
{"f_27197ChickenBridge.scm",(void*)f_27197},
{"f_27188ChickenBridge.scm",(void*)f_27188},
{"f_27126ChickenBridge.scm",(void*)f_27126},
{"f_27162ChickenBridge.scm",(void*)f_27162},
{"f_27133ChickenBridge.scm",(void*)f_27133},
{"f_26765ChickenBridge.scm",(void*)f_26765},
{"f_26772ChickenBridge.scm",(void*)f_26772},
{"f_27006ChickenBridge.scm",(void*)f_27006},
{"f_27016ChickenBridge.scm",(void*)f_27016},
{"f_27027ChickenBridge.scm",(void*)f_27027},
{"f_27039ChickenBridge.scm",(void*)f_27039},
{"f_27042ChickenBridge.scm",(void*)f_27042},
{"f_27030ChickenBridge.scm",(void*)f_27030},
{"f_26778ChickenBridge.scm",(void*)f_26778},
{"f_27004ChickenBridge.scm",(void*)f_27004},
{"f_27000ChickenBridge.scm",(void*)f_27000},
{"f_26946ChickenBridge.scm",(void*)f_26946},
{"f_26911ChickenBridge.scm",(void*)f_26911},
{"f_26927ChickenBridge.scm",(void*)f_26927},
{"f_26882ChickenBridge.scm",(void*)f_26882},
{"f_26806ChickenBridge.scm",(void*)f_26806},
{"f_26809ChickenBridge.scm",(void*)f_26809},
{"f_26873ChickenBridge.scm",(void*)f_26873},
{"f_26869ChickenBridge.scm",(void*)f_26869},
{"f_26789ChickenBridge.scm",(void*)f_26789},
{"f_26800ChickenBridge.scm",(void*)f_26800},
{"f_26796ChickenBridge.scm",(void*)f_26796},
{"f_26718ChickenBridge.scm",(void*)f_26718},
{"f_26751ChickenBridge.scm",(void*)f_26751},
{"f_26733ChickenBridge.scm",(void*)f_26733},
{"f_26745ChickenBridge.scm",(void*)f_26745},
{"f_26336ChickenBridge.scm",(void*)f_26336},
{"f_26545ChickenBridge.scm",(void*)f_26545},
{"f_26555ChickenBridge.scm",(void*)f_26555},
{"f_26566ChickenBridge.scm",(void*)f_26566},
{"f_26686ChickenBridge.scm",(void*)f_26686},
{"f_26665ChickenBridge.scm",(void*)f_26665},
{"f_26644ChickenBridge.scm",(void*)f_26644},
{"f_26623ChickenBridge.scm",(void*)f_26623},
{"f_26602ChickenBridge.scm",(void*)f_26602},
{"f_26581ChickenBridge.scm",(void*)f_26581},
{"f_26569ChickenBridge.scm",(void*)f_26569},
{"f_26346ChickenBridge.scm",(void*)f_26346},
{"f_26349ChickenBridge.scm",(void*)f_26349},
{"f_26512ChickenBridge.scm",(void*)f_26512},
{"f_26352ChickenBridge.scm",(void*)f_26352},
{"f_26503ChickenBridge.scm",(void*)f_26503},
{"f_26483ChickenBridge.scm",(void*)f_26483},
{"f_26355ChickenBridge.scm",(void*)f_26355},
{"f_26448ChickenBridge.scm",(void*)f_26448},
{"f_26465ChickenBridge.scm",(void*)f_26465},
{"f_26358ChickenBridge.scm",(void*)f_26358},
{"f_26397ChickenBridge.scm",(void*)f_26397},
{"f_26431ChickenBridge.scm",(void*)f_26431},
{"f_26415ChickenBridge.scm",(void*)f_26415},
{"f_26400ChickenBridge.scm",(void*)f_26400},
{"f_26365ChickenBridge.scm",(void*)f_26365},
{"f_26376ChickenBridge.scm",(void*)f_26376},
{"f_26380ChickenBridge.scm",(void*)f_26380},
{"f_26372ChickenBridge.scm",(void*)f_26372},
{"f_26254ChickenBridge.scm",(void*)f_26254},
{"f_26258ChickenBridge.scm",(void*)f_26258},
{"f_26276ChickenBridge.scm",(void*)f_26276},
{"f_26094ChickenBridge.scm",(void*)f_26094},
{"f_26102ChickenBridge.scm",(void*)f_26102},
{"f_26112ChickenBridge.scm",(void*)f_26112},
{"f_26150ChickenBridge.scm",(void*)f_26150},
{"f_26153ChickenBridge.scm",(void*)f_26153},
{"f_26156ChickenBridge.scm",(void*)f_26156},
{"f_26231ChickenBridge.scm",(void*)f_26231},
{"f_26241ChickenBridge.scm",(void*)f_26241},
{"f_26159ChickenBridge.scm",(void*)f_26159},
{"f_26162ChickenBridge.scm",(void*)f_26162},
{"f_26165ChickenBridge.scm",(void*)f_26165},
{"f_26185ChickenBridge.scm",(void*)f_26185},
{"f_26195ChickenBridge.scm",(void*)f_26195},
{"f_26198ChickenBridge.scm",(void*)f_26198},
{"f_26201ChickenBridge.scm",(void*)f_26201},
{"f_26168ChickenBridge.scm",(void*)f_26168},
{"f_26171ChickenBridge.scm",(void*)f_26171},
{"f_26088ChickenBridge.scm",(void*)f_26088},
{"f_26082ChickenBridge.scm",(void*)f_26082},
{"f_26076ChickenBridge.scm",(void*)f_26076},
{"f_26005ChickenBridge.scm",(void*)f_26005},
{"f_26046ChickenBridge.scm",(void*)f_26046},
{"f_26050ChickenBridge.scm",(void*)f_26050},
{"f_26054ChickenBridge.scm",(void*)f_26054},
{"f_26058ChickenBridge.scm",(void*)f_26058},
{"f_26062ChickenBridge.scm",(void*)f_26062},
{"f_26066ChickenBridge.scm",(void*)f_26066},
{"f_26070ChickenBridge.scm",(void*)f_26070},
{"f_26074ChickenBridge.scm",(void*)f_26074},
{"f_26007ChickenBridge.scm",(void*)f_26007},
{"f_26013ChickenBridge.scm",(void*)f_26013},
{"f_26035ChickenBridge.scm",(void*)f_26035},
{"f_26024ChickenBridge.scm",(void*)f_26024},
{"f_25854ChickenBridge.scm",(void*)f_25854},
{"f_25869ChickenBridge.scm",(void*)f_25869},
{"f_25882ChickenBridge.scm",(void*)f_25882},
{"f_25842ChickenBridge.scm",(void*)f_25842},
{"f_25830ChickenBridge.scm",(void*)f_25830},
{"f_25818ChickenBridge.scm",(void*)f_25818},
{"f_25812ChickenBridge.scm",(void*)f_25812},
{"f_25806ChickenBridge.scm",(void*)f_25806},
{"f_25794ChickenBridge.scm",(void*)f_25794},
{"f_25782ChickenBridge.scm",(void*)f_25782},
{"f_25770ChickenBridge.scm",(void*)f_25770},
{"f_25758ChickenBridge.scm",(void*)f_25758},
{"f_25752ChickenBridge.scm",(void*)f_25752},
{"f_25716ChickenBridge.scm",(void*)f_25716},
{"f_25710ChickenBridge.scm",(void*)f_25710},
{"f_25663ChickenBridge.scm",(void*)f_25663},
{"f_25667ChickenBridge.scm",(void*)f_25667},
{"f_25683ChickenBridge.scm",(void*)f_25683},
{"f_25692ChickenBridge.scm",(void*)f_25692},
{"f_25670ChickenBridge.scm",(void*)f_25670},
{"f_25654ChickenBridge.scm",(void*)f_25654},
{"f_25658ChickenBridge.scm",(void*)f_25658},
{"f_25501ChickenBridge.scm",(void*)f_25501},
{"f_25628ChickenBridge.scm",(void*)f_25628},
{"f_25641ChickenBridge.scm",(void*)f_25641},
{"f_25623ChickenBridge.scm",(void*)f_25623},
{"f_25504ChickenBridge.scm",(void*)f_25504},
{"f_25620ChickenBridge.scm",(void*)f_25620},
{"f_25604ChickenBridge.scm",(void*)f_25604},
{"f_25532ChickenBridge.scm",(void*)f_25532},
{"f_25540ChickenBridge.scm",(void*)f_25540},
{"f_25550ChickenBridge.scm",(void*)f_25550},
{"f_25553ChickenBridge.scm",(void*)f_25553},
{"f_25535ChickenBridge.scm",(void*)f_25535},
{"f_25324ChickenBridge.scm",(void*)f_25324},
{"f_25328ChickenBridge.scm",(void*)f_25328},
{"f_25333ChickenBridge.scm",(void*)f_25333},
{"f_25336ChickenBridge.scm",(void*)f_25336},
{"f_23071ChickenBridge.scm",(void*)f_23071},
{"f_23084ChickenBridge.scm",(void*)f_23084},
{"f_23091ChickenBridge.scm",(void*)f_23091},
{"f_23098ChickenBridge.scm",(void*)f_23098},
{"f_23077ChickenBridge.scm",(void*)f_23077},
{"f_25340ChickenBridge.scm",(void*)f_25340},
{"f_25377ChickenBridge.scm",(void*)f_25377},
{"f_25470ChickenBridge.scm",(void*)f_25470},
{"f_25480ChickenBridge.scm",(void*)f_25480},
{"f_25383ChickenBridge.scm",(void*)f_25383},
{"f_25440ChickenBridge.scm",(void*)f_25440},
{"f_25450ChickenBridge.scm",(void*)f_25450},
{"f_25391ChickenBridge.scm",(void*)f_25391},
{"f_25405ChickenBridge.scm",(void*)f_25405},
{"f_25409ChickenBridge.scm",(void*)f_25409},
{"f_25413ChickenBridge.scm",(void*)f_25413},
{"f_25417ChickenBridge.scm",(void*)f_25417},
{"f_25424ChickenBridge.scm",(void*)f_25424},
{"f_25401ChickenBridge.scm",(void*)f_25401},
{"f_25394ChickenBridge.scm",(void*)f_25394},
{"f_25343ChickenBridge.scm",(void*)f_25343},
{"f_24198ChickenBridge.scm",(void*)f_24198},
{"f_24211ChickenBridge.scm",(void*)f_24211},
{"f_24261ChickenBridge.scm",(void*)f_24261},
{"f_24358ChickenBridge.scm",(void*)f_24358},
{"f_24426ChickenBridge.scm",(void*)f_24426},
{"f_24683ChickenBridge.scm",(void*)f_24683},
{"f_24433ChickenBridge.scm",(void*)f_24433},
{"f_24671ChickenBridge.scm",(void*)f_24671},
{"f_24622ChickenBridge.scm",(void*)f_24622},
{"f_24628ChickenBridge.scm",(void*)f_24628},
{"f_24652ChickenBridge.scm",(void*)f_24652},
{"f_24648ChickenBridge.scm",(void*)f_24648},
{"f_24636ChickenBridge.scm",(void*)f_24636},
{"f_24436ChickenBridge.scm",(void*)f_24436},
{"f_24598ChickenBridge.scm",(void*)f_24598},
{"f_24602ChickenBridge.scm",(void*)f_24602},
{"f_24439ChickenBridge.scm",(void*)f_24439},
{"f_24575ChickenBridge.scm",(void*)f_24575},
{"f_24579ChickenBridge.scm",(void*)f_24579},
{"f_24442ChickenBridge.scm",(void*)f_24442},
{"f_24552ChickenBridge.scm",(void*)f_24552},
{"f_24556ChickenBridge.scm",(void*)f_24556},
{"f_24445ChickenBridge.scm",(void*)f_24445},
{"f_24477ChickenBridge.scm",(void*)f_24477},
{"f_24495ChickenBridge.scm",(void*)f_24495},
{"f_24513ChickenBridge.scm",(void*)f_24513},
{"f_24531ChickenBridge.scm",(void*)f_24531},
{"f_24448ChickenBridge.scm",(void*)f_24448},
{"f_24452ChickenBridge.scm",(void*)f_24452},
{"f_24362ChickenBridge.scm",(void*)f_24362},
{"f_24366ChickenBridge.scm",(void*)f_24366},
{"f_24370ChickenBridge.scm",(void*)f_24370},
{"f_24265ChickenBridge.scm",(void*)f_24265},
{"f_24269ChickenBridge.scm",(void*)f_24269},
{"f_24273ChickenBridge.scm",(void*)f_24273},
{"f_24292ChickenBridge.scm",(void*)f_24292},
{"f_24296ChickenBridge.scm",(void*)f_24296},
{"f_24276ChickenBridge.scm",(void*)f_24276},
{"f_24280ChickenBridge.scm",(void*)f_24280},
{"f_24215ChickenBridge.scm",(void*)f_24215},
{"f_24219ChickenBridge.scm",(void*)f_24219},
{"f_24223ChickenBridge.scm",(void*)f_24223},
{"f_24205ChickenBridge.scm",(void*)f_24205},
{"f_24020ChickenBridge.scm",(void*)f_24020},
{"f_24032ChickenBridge.scm",(void*)f_24032},
{"f_24051ChickenBridge.scm",(void*)f_24051},
{"f_24069ChickenBridge.scm",(void*)f_24069},
{"f_24101ChickenBridge.scm",(void*)f_24101},
{"f_24104ChickenBridge.scm",(void*)f_24104},
{"f_24097ChickenBridge.scm",(void*)f_24097},
{"f_24083ChickenBridge.scm",(void*)f_24083},
{"f_24054ChickenBridge.scm",(void*)f_24054},
{"f_23999ChickenBridge.scm",(void*)f_23999},
{"f_24006ChickenBridge.scm",(void*)f_24006},
{"f_24009ChickenBridge.scm",(void*)f_24009},
{"f_24015ChickenBridge.scm",(void*)f_24015},
{"f_23934ChickenBridge.scm",(void*)f_23934},
{"f_23943ChickenBridge.scm",(void*)f_23943},
{"f_23966ChickenBridge.scm",(void*)f_23966},
{"f_23956ChickenBridge.scm",(void*)f_23956},
{"f_23890ChickenBridge.scm",(void*)f_23890},
{"f_23878ChickenBridge.scm",(void*)f_23878},
{"f_23776ChickenBridge.scm",(void*)f_23776},
{"f_23728ChickenBridge.scm",(void*)f_23728},
{"f_23109ChickenBridge.scm",(void*)f_23109},
{"f_23113ChickenBridge.scm",(void*)f_23113},
{"f_23116ChickenBridge.scm",(void*)f_23116},
{"f_23542ChickenBridge.scm",(void*)f_23542},
{"f_23538ChickenBridge.scm",(void*)f_23538},
{"f_23534ChickenBridge.scm",(void*)f_23534},
{"f_23119ChickenBridge.scm",(void*)f_23119},
{"f_23242ChickenBridge.scm",(void*)f_23242},
{"f_22475ChickenBridge.scm",(void*)f_22475},
{"f_23248ChickenBridge.scm",(void*)f_23248},
{"f_22491ChickenBridge.scm",(void*)f_22491},
{"f_23336ChickenBridge.scm",(void*)f_23336},
{"f_23406ChickenBridge.scm",(void*)f_23406},
{"f_22507ChickenBridge.scm",(void*)f_22507},
{"f_23409ChickenBridge.scm",(void*)f_23409},
{"f_22539ChickenBridge.scm",(void*)f_22539},
{"f_23487ChickenBridge.scm",(void*)f_23487},
{"f_23513ChickenBridge.scm",(void*)f_23513},
{"f_23507ChickenBridge.scm",(void*)f_23507},
{"f_23496ChickenBridge.scm",(void*)f_23496},
{"f_23438ChickenBridge.scm",(void*)f_23438},
{"f_23448ChickenBridge.scm",(void*)f_23448},
{"f_23474ChickenBridge.scm",(void*)f_23474},
{"f_23468ChickenBridge.scm",(void*)f_23468},
{"f_23451ChickenBridge.scm",(void*)f_23451},
{"f_23461ChickenBridge.scm",(void*)f_23461},
{"f_23454ChickenBridge.scm",(void*)f_23454},
{"f_23415ChickenBridge.scm",(void*)f_23415},
{"f_23424ChickenBridge.scm",(void*)f_23424},
{"f_23418ChickenBridge.scm",(void*)f_23418},
{"f_23342ChickenBridge.scm",(void*)f_23342},
{"f_23360ChickenBridge.scm",(void*)f_23360},
{"f_23393ChickenBridge.scm",(void*)f_23393},
{"f_23379ChickenBridge.scm",(void*)f_23379},
{"f_23387ChickenBridge.scm",(void*)f_23387},
{"f_23370ChickenBridge.scm",(void*)f_23370},
{"f_23345ChickenBridge.scm",(void*)f_23345},
{"f_23257ChickenBridge.scm",(void*)f_23257},
{"f_23279ChickenBridge.scm",(void*)f_23279},
{"f_23326ChickenBridge.scm",(void*)f_23326},
{"f_23312ChickenBridge.scm",(void*)f_23312},
{"f_23320ChickenBridge.scm",(void*)f_23320},
{"f_23292ChickenBridge.scm",(void*)f_23292},
{"f_23295ChickenBridge.scm",(void*)f_23295},
{"f_23260ChickenBridge.scm",(void*)f_23260},
{"f_23277ChickenBridge.scm",(void*)f_23277},
{"f_23263ChickenBridge.scm",(void*)f_23263},
{"f_23128ChickenBridge.scm",(void*)f_23128},
{"f_23134ChickenBridge.scm",(void*)f_23134},
{"f_23192ChickenBridge.scm",(void*)f_23192},
{"f_23195ChickenBridge.scm",(void*)f_23195},
{"f_23216ChickenBridge.scm",(void*)f_23216},
{"f_23227ChickenBridge.scm",(void*)f_23227},
{"f_23206ChickenBridge.scm",(void*)f_23206},
{"f_23140ChickenBridge.scm",(void*)f_23140},
{"f_23150ChickenBridge.scm",(void*)f_23150},
{"f_23186ChickenBridge.scm",(void*)f_23186},
{"f_23156ChickenBridge.scm",(void*)f_23156},
{"f_23171ChickenBridge.scm",(void*)f_23171},
{"f_23175ChickenBridge.scm",(void*)f_23175},
{"f_23179ChickenBridge.scm",(void*)f_23179},
{"f_23163ChickenBridge.scm",(void*)f_23163},
{"f_23005ChickenBridge.scm",(void*)f_23005},
{"f_23007ChickenBridge.scm",(void*)f_23007},
{"f_23055ChickenBridge.scm",(void*)f_23055},
{"f_23011ChickenBridge.scm",(void*)f_23011},
{"f_23014ChickenBridge.scm",(void*)f_23014},
{"f_23019ChickenBridge.scm",(void*)f_23019},
{"f_23040ChickenBridge.scm",(void*)f_23040},
{"f_22997ChickenBridge.scm",(void*)f_22997},
{"f_22999ChickenBridge.scm",(void*)f_22999},
{"f_22820ChickenBridge.scm",(void*)f_22820},
{"f_22828ChickenBridge.scm",(void*)f_22828},
{"f_22789ChickenBridge.scm",(void*)f_22789},
{"f_22806ChickenBridge.scm",(void*)f_22806},
{"f_22810ChickenBridge.scm",(void*)f_22810},
{"f_22756ChickenBridge.scm",(void*)f_22756},
{"f_22763ChickenBridge.scm",(void*)f_22763},
{"f_22707ChickenBridge.scm",(void*)f_22707},
{"f_22714ChickenBridge.scm",(void*)f_22714},
{"f_22772ChickenBridge.scm",(void*)f_22772},
{"f_22995ChickenBridge.scm",(void*)f_22995},
{"f_22972ChickenBridge.scm",(void*)f_22972},
{"f_22988ChickenBridge.scm",(void*)f_22988},
{"f_22834ChickenBridge.scm",(void*)f_22834},
{"f_22837ChickenBridge.scm",(void*)f_22837},
{"f_22861ChickenBridge.scm",(void*)f_22861},
{"f_22918ChickenBridge.scm",(void*)f_22918},
{"f_22924ChickenBridge.scm",(void*)f_22924},
{"f_22933ChickenBridge.scm",(void*)f_22933},
{"f_22942ChickenBridge.scm",(void*)f_22942},
{"f_22951ChickenBridge.scm",(void*)f_22951},
{"f_22960ChickenBridge.scm",(void*)f_22960},
{"f_22912ChickenBridge.scm",(void*)f_22912},
{"f_22867ChickenBridge.scm",(void*)f_22867},
{"f_22873ChickenBridge.scm",(void*)f_22873},
{"f_22879ChickenBridge.scm",(void*)f_22879},
{"f_22885ChickenBridge.scm",(void*)f_22885},
{"f_22891ChickenBridge.scm",(void*)f_22891},
{"f_22897ChickenBridge.scm",(void*)f_22897},
{"f_22738ChickenBridge.scm",(void*)f_22738},
{"f_22745ChickenBridge.scm",(void*)f_22745},
{"f_22728ChickenBridge.scm",(void*)f_22728},
{"f_22716ChickenBridge.scm",(void*)f_22716},
{"f_22684ChickenBridge.scm",(void*)f_22684},
{"f_22691ChickenBridge.scm",(void*)f_22691},
{"f_22698ChickenBridge.scm",(void*)f_22698},
{"f_22668ChickenBridge.scm",(void*)f_22668},
{"f_22675ChickenBridge.scm",(void*)f_22675},
{"f_22682ChickenBridge.scm",(void*)f_22682},
{"f_22656ChickenBridge.scm",(void*)f_22656},
{"f_22638ChickenBridge.scm",(void*)f_22638},
{"f_22620ChickenBridge.scm",(void*)f_22620},
{"f_22605ChickenBridge.scm",(void*)f_22605},
{"f_22599ChickenBridge.scm",(void*)f_22599},
{"f_22587ChickenBridge.scm",(void*)f_22587},
{"f_22569ChickenBridge.scm",(void*)f_22569},
{"f_22548ChickenBridge.scm",(void*)f_22548},
{"f_22516ChickenBridge.scm",(void*)f_22516},
{"f_22523ChickenBridge.scm",(void*)f_22523},
{"f_22458ChickenBridge.scm",(void*)f_22458},
{"f_22466ChickenBridge.scm",(void*)f_22466},
{"f_22448ChickenBridge.scm",(void*)f_22448},
{"f_22456ChickenBridge.scm",(void*)f_22456},
{"f_22442ChickenBridge.scm",(void*)f_22442},
{"f_22430ChickenBridge.scm",(void*)f_22430},
{"f_22427ChickenBridge.scm",(void*)f_22427},
{"f_22406ChickenBridge.scm",(void*)f_22406},
{"f_22319ChickenBridge.scm",(void*)f_22319},
{"f_22298ChickenBridge.scm",(void*)f_22298},
{"f_22288ChickenBridge.scm",(void*)f_22288},
{"f_22276ChickenBridge.scm",(void*)f_22276},
{"f_22247ChickenBridge.scm",(void*)f_22247},
{"f_22235ChickenBridge.scm",(void*)f_22235},
{"f_22217ChickenBridge.scm",(void*)f_22217},
{"f_22199ChickenBridge.scm",(void*)f_22199},
{"f_22178ChickenBridge.scm",(void*)f_22178},
{"f_21156ChickenBridge.scm",(void*)f_21156},
{"f_22155ChickenBridge.scm",(void*)f_22155},
{"f_22170ChickenBridge.scm",(void*)f_22170},
{"f_22162ChickenBridge.scm",(void*)f_22162},
{"f_22126ChickenBridge.scm",(void*)f_22126},
{"f_22130ChickenBridge.scm",(void*)f_22130},
{"f_22091ChickenBridge.scm",(void*)f_22091},
{"f_22095ChickenBridge.scm",(void*)f_22095},
{"f_21166ChickenBridge.scm",(void*)f_21166},
{"f_22055ChickenBridge.scm",(void*)f_22055},
{"f_22070ChickenBridge.scm",(void*)f_22070},
{"f_22062ChickenBridge.scm",(void*)f_22062},
{"f_22026ChickenBridge.scm",(void*)f_22026},
{"f_22030ChickenBridge.scm",(void*)f_22030},
{"f_21991ChickenBridge.scm",(void*)f_21991},
{"f_21995ChickenBridge.scm",(void*)f_21995},
{"f_21169ChickenBridge.scm",(void*)f_21169},
{"f_21172ChickenBridge.scm",(void*)f_21172},
{"f_21177ChickenBridge.scm",(void*)f_21177},
{"f_21884ChickenBridge.scm",(void*)f_21884},
{"f_21907ChickenBridge.scm",(void*)f_21907},
{"f_21960ChickenBridge.scm",(void*)f_21960},
{"f_21942ChickenBridge.scm",(void*)f_21942},
{"f_21935ChickenBridge.scm",(void*)f_21935},
{"f_21917ChickenBridge.scm",(void*)f_21917},
{"f_21894ChickenBridge.scm",(void*)f_21894},
{"f_21371ChickenBridge.scm",(void*)f_21371},
{"f_21846ChickenBridge.scm",(void*)f_21846},
{"f_21868ChickenBridge.scm",(void*)f_21868},
{"f_21852ChickenBridge.scm",(void*)f_21852},
{"f_21860ChickenBridge.scm",(void*)f_21860},
{"f_21864ChickenBridge.scm",(void*)f_21864},
{"f_21850ChickenBridge.scm",(void*)f_21850},
{"f_21840ChickenBridge.scm",(void*)f_21840},
{"f_21374ChickenBridge.scm",(void*)f_21374},
{"f_21717ChickenBridge.scm",(void*)f_21717},
{"f_21741ChickenBridge.scm",(void*)f_21741},
{"f_21803ChickenBridge.scm",(void*)f_21803},
{"f_21744ChickenBridge.scm",(void*)f_21744},
{"f_21760ChickenBridge.scm",(void*)f_21760},
{"f_21785ChickenBridge.scm",(void*)f_21785},
{"f_21751ChickenBridge.scm",(void*)f_21751},
{"f_21728ChickenBridge.scm",(void*)f_21728},
{"f_21377ChickenBridge.scm",(void*)f_21377},
{"f_21703ChickenBridge.scm",(void*)f_21703},
{"f_21381ChickenBridge.scm",(void*)f_21381},
{"f_21425ChickenBridge.scm",(void*)f_21425},
{"f_21428ChickenBridge.scm",(void*)f_21428},
{"f_21684ChickenBridge.scm",(void*)f_21684},
{"f_21694ChickenBridge.scm",(void*)f_21694},
{"f_21431ChickenBridge.scm",(void*)f_21431},
{"f_21622ChickenBridge.scm",(void*)f_21622},
{"f_21632ChickenBridge.scm",(void*)f_21632},
{"f_21635ChickenBridge.scm",(void*)f_21635},
{"f_21655ChickenBridge.scm",(void*)f_21655},
{"f_21657ChickenBridge.scm",(void*)f_21657},
{"f_21667ChickenBridge.scm",(void*)f_21667},
{"f_21641ChickenBridge.scm",(void*)f_21641},
{"f_21644ChickenBridge.scm",(void*)f_21644},
{"f_21434ChickenBridge.scm",(void*)f_21434},
{"f_21442ChickenBridge.scm",(void*)f_21442},
{"f_21455ChickenBridge.scm",(void*)f_21455},
{"f_21329ChickenBridge.scm",(void*)f_21329},
{"f_21338ChickenBridge.scm",(void*)f_21338},
{"f_21360ChickenBridge.scm",(void*)f_21360},
{"f_21349ChickenBridge.scm",(void*)f_21349},
{"f_21458ChickenBridge.scm",(void*)f_21458},
{"f_21593ChickenBridge.scm",(void*)f_21593},
{"f_21595ChickenBridge.scm",(void*)f_21595},
{"f_21605ChickenBridge.scm",(void*)f_21605},
{"f_21464ChickenBridge.scm",(void*)f_21464},
{"f_21566ChickenBridge.scm",(void*)f_21566},
{"f_21568ChickenBridge.scm",(void*)f_21568},
{"f_21578ChickenBridge.scm",(void*)f_21578},
{"f_21467ChickenBridge.scm",(void*)f_21467},
{"f_21479ChickenBridge.scm",(void*)f_21479},
{"f_21505ChickenBridge.scm",(void*)f_21505},
{"f_21511ChickenBridge.scm",(void*)f_21511},
{"f_21517ChickenBridge.scm",(void*)f_21517},
{"f_21527ChickenBridge.scm",(void*)f_21527},
{"f_21529ChickenBridge.scm",(void*)f_21529},
{"f_21539ChickenBridge.scm",(void*)f_21539},
{"f_21520ChickenBridge.scm",(void*)f_21520},
{"f_21492ChickenBridge.scm",(void*)f_21492},
{"f_21470ChickenBridge.scm",(void*)f_21470},
{"f_21437ChickenBridge.scm",(void*)f_21437},
{"f_21384ChickenBridge.scm",(void*)f_21384},
{"f_21407ChickenBridge.scm",(void*)f_21407},
{"f_21396ChickenBridge.scm",(void*)f_21396},
{"f_21261ChickenBridge.scm",(void*)f_21261},
{"f_21309ChickenBridge.scm",(void*)f_21309},
{"f_21271ChickenBridge.scm",(void*)f_21271},
{"f_21299ChickenBridge.scm",(void*)f_21299},
{"f_21274ChickenBridge.scm",(void*)f_21274},
{"f_21179ChickenBridge.scm",(void*)f_21179},
{"f_21251ChickenBridge.scm",(void*)f_21251},
{"f_21183ChickenBridge.scm",(void*)f_21183},
{"f_21201ChickenBridge.scm",(void*)f_21201},
{"f_21233ChickenBridge.scm",(void*)f_21233},
{"f_21062ChickenBridge.scm",(void*)f_21062},
{"f_21066ChickenBridge.scm",(void*)f_21066},
{"f_21095ChickenBridge.scm",(void*)f_21095},
{"f_21100ChickenBridge.scm",(void*)f_21100},
{"f_21125ChickenBridge.scm",(void*)f_21125},
{"f_21110ChickenBridge.scm",(void*)f_21110},
{"f_20544ChickenBridge.scm",(void*)f_20544},
{"f_20815ChickenBridge.scm",(void*)f_20815},
{"f_20819ChickenBridge.scm",(void*)f_20819},
{"f_20824ChickenBridge.scm",(void*)f_20824},
{"f_21030ChickenBridge.scm",(void*)f_21030},
{"f_21045ChickenBridge.scm",(void*)f_21045},
{"f_21037ChickenBridge.scm",(void*)f_21037},
{"f_21001ChickenBridge.scm",(void*)f_21001},
{"f_21005ChickenBridge.scm",(void*)f_21005},
{"f_20966ChickenBridge.scm",(void*)f_20966},
{"f_20970ChickenBridge.scm",(void*)f_20970},
{"f_20828ChickenBridge.scm",(void*)f_20828},
{"f_20930ChickenBridge.scm",(void*)f_20930},
{"f_20945ChickenBridge.scm",(void*)f_20945},
{"f_20937ChickenBridge.scm",(void*)f_20937},
{"f_20901ChickenBridge.scm",(void*)f_20901},
{"f_20905ChickenBridge.scm",(void*)f_20905},
{"f_20866ChickenBridge.scm",(void*)f_20866},
{"f_20870ChickenBridge.scm",(void*)f_20870},
{"f_20831ChickenBridge.scm",(void*)f_20831},
{"f_20834ChickenBridge.scm",(void*)f_20834},
{"f_20837ChickenBridge.scm",(void*)f_20837},
{"f_20806ChickenBridge.scm",(void*)f_20806},
{"f_20548ChickenBridge.scm",(void*)f_20548},
{"f_20775ChickenBridge.scm",(void*)f_20775},
{"f_20790ChickenBridge.scm",(void*)f_20790},
{"f_20782ChickenBridge.scm",(void*)f_20782},
{"f_20746ChickenBridge.scm",(void*)f_20746},
{"f_20750ChickenBridge.scm",(void*)f_20750},
{"f_20711ChickenBridge.scm",(void*)f_20711},
{"f_20715ChickenBridge.scm",(void*)f_20715},
{"f_20551ChickenBridge.scm",(void*)f_20551},
{"f_20675ChickenBridge.scm",(void*)f_20675},
{"f_20690ChickenBridge.scm",(void*)f_20690},
{"f_20682ChickenBridge.scm",(void*)f_20682},
{"f_20646ChickenBridge.scm",(void*)f_20646},
{"f_20650ChickenBridge.scm",(void*)f_20650},
{"f_20611ChickenBridge.scm",(void*)f_20611},
{"f_20615ChickenBridge.scm",(void*)f_20615},
{"f_20554ChickenBridge.scm",(void*)f_20554},
{"f_20557ChickenBridge.scm",(void*)f_20557},
{"f_20560ChickenBridge.scm",(void*)f_20560},
{"f_20572ChickenBridge.scm",(void*)f_20572},
{"f_20590ChickenBridge.scm",(void*)f_20590},
{"f_20578ChickenBridge.scm",(void*)f_20578},
{"f_20566ChickenBridge.scm",(void*)f_20566},
{"f_20481ChickenBridge.scm",(void*)f_20481},
{"f_20141ChickenBridge.scm",(void*)f_20141},
{"f_20323ChickenBridge.scm",(void*)f_20323},
{"f_20327ChickenBridge.scm",(void*)f_20327},
{"f_20329ChickenBridge.scm",(void*)f_20329},
{"f_20254ChickenBridge.scm",(void*)f_20254},
{"f_20264ChickenBridge.scm",(void*)f_20264},
{"f_20271ChickenBridge.scm",(void*)f_20271},
{"f_20339ChickenBridge.scm",(void*)f_20339},
{"f_20342ChickenBridge.scm",(void*)f_20342},
{"f_20346ChickenBridge.scm",(void*)f_20346},
{"f_20366ChickenBridge.scm",(void*)f_20366},
{"f_20382ChickenBridge.scm",(void*)f_20382},
{"f_20349ChickenBridge.scm",(void*)f_20349},
{"f_20144ChickenBridge.scm",(void*)f_20144},
{"f_20156ChickenBridge.scm",(void*)f_20156},
{"f_20192ChickenBridge.scm",(void*)f_20192},
{"f_20212ChickenBridge.scm",(void*)f_20212},
{"f_20217ChickenBridge.scm",(void*)f_20217},
{"f_19654ChickenBridge.scm",(void*)f_19654},
{"f_19581ChickenBridge.scm",(void*)f_19581},
{"f_19426ChickenBridge.scm",(void*)f_19426},
{"f_19432ChickenBridge.scm",(void*)f_19432},
{"f_19517ChickenBridge.scm",(void*)f_19517},
{"f_19444ChickenBridge.scm",(void*)f_19444},
{"f_19460ChickenBridge.scm",(void*)f_19460},
{"f_19464ChickenBridge.scm",(void*)f_19464},
{"f_19467ChickenBridge.scm",(void*)f_19467},
{"f_19447ChickenBridge.scm",(void*)f_19447},
{"f_19458ChickenBridge.scm",(void*)f_19458},
{"f_19598ChickenBridge.scm",(void*)f_19598},
{"f_20135ChickenBridge.scm",(void*)f_20135},
{"f_19658ChickenBridge.scm",(void*)f_19658},
{"f_20104ChickenBridge.scm",(void*)f_20104},
{"f_20119ChickenBridge.scm",(void*)f_20119},
{"f_20111ChickenBridge.scm",(void*)f_20111},
{"f_20075ChickenBridge.scm",(void*)f_20075},
{"f_20079ChickenBridge.scm",(void*)f_20079},
{"f_20040ChickenBridge.scm",(void*)f_20040},
{"f_20044ChickenBridge.scm",(void*)f_20044},
{"f_20005ChickenBridge.scm",(void*)f_20005},
{"f_20009ChickenBridge.scm",(void*)f_20009},
{"f_19661ChickenBridge.scm",(void*)f_19661},
{"f_19969ChickenBridge.scm",(void*)f_19969},
{"f_19984ChickenBridge.scm",(void*)f_19984},
{"f_19976ChickenBridge.scm",(void*)f_19976},
{"f_19940ChickenBridge.scm",(void*)f_19940},
{"f_19944ChickenBridge.scm",(void*)f_19944},
{"f_19905ChickenBridge.scm",(void*)f_19905},
{"f_19909ChickenBridge.scm",(void*)f_19909},
{"f_19870ChickenBridge.scm",(void*)f_19870},
{"f_19874ChickenBridge.scm",(void*)f_19874},
{"f_19664ChickenBridge.scm",(void*)f_19664},
{"f_19834ChickenBridge.scm",(void*)f_19834},
{"f_19849ChickenBridge.scm",(void*)f_19849},
{"f_19841ChickenBridge.scm",(void*)f_19841},
{"f_19805ChickenBridge.scm",(void*)f_19805},
{"f_19809ChickenBridge.scm",(void*)f_19809},
{"f_19770ChickenBridge.scm",(void*)f_19770},
{"f_19774ChickenBridge.scm",(void*)f_19774},
{"f_19735ChickenBridge.scm",(void*)f_19735},
{"f_19739ChickenBridge.scm",(void*)f_19739},
{"f_19667ChickenBridge.scm",(void*)f_19667},
{"f_19670ChickenBridge.scm",(void*)f_19670},
{"f_19673ChickenBridge.scm",(void*)f_19673},
{"f_19706ChickenBridge.scm",(void*)f_19706},
{"f_19714ChickenBridge.scm",(void*)f_19714},
{"f_19679ChickenBridge.scm",(void*)f_19679},
{"f_19692ChickenBridge.scm",(void*)f_19692},
{"f_19682ChickenBridge.scm",(void*)f_19682},
{"f_19685ChickenBridge.scm",(void*)f_19685},
{"f_19221ChickenBridge.scm",(void*)f_19221},
{"f_19225ChickenBridge.scm",(void*)f_19225},
{"f_19228ChickenBridge.scm",(void*)f_19228},
{"f_19231ChickenBridge.scm",(void*)f_19231},
{"f_19400ChickenBridge.scm",(void*)f_19400},
{"f_19413ChickenBridge.scm",(void*)f_19413},
{"f_19417ChickenBridge.scm",(void*)f_19417},
{"f_19237ChickenBridge.scm",(void*)f_19237},
{"f_19393ChickenBridge.scm",(void*)f_19393},
{"f_19374ChickenBridge.scm",(void*)f_19374},
{"f_19381ChickenBridge.scm",(void*)f_19381},
{"f_19385ChickenBridge.scm",(void*)f_19385},
{"f_19243ChickenBridge.scm",(void*)f_19243},
{"f_19249ChickenBridge.scm",(void*)f_19249},
{"f_19333ChickenBridge.scm",(void*)f_19333},
{"f_19335ChickenBridge.scm",(void*)f_19335},
{"f_19357ChickenBridge.scm",(void*)f_19357},
{"f_19364ChickenBridge.scm",(void*)f_19364},
{"f_19368ChickenBridge.scm",(void*)f_19368},
{"f_19354ChickenBridge.scm",(void*)f_19354},
{"f_19350ChickenBridge.scm",(void*)f_19350},
{"f_19291ChickenBridge.scm",(void*)f_19291},
{"f_19308ChickenBridge.scm",(void*)f_19308},
{"f_19318ChickenBridge.scm",(void*)f_19318},
{"f_19294ChickenBridge.scm",(void*)f_19294},
{"f_19253ChickenBridge.scm",(void*)f_19253},
{"f_19261ChickenBridge.scm",(void*)f_19261},
{"f_19263ChickenBridge.scm",(void*)f_19263},
{"f_19284ChickenBridge.scm",(void*)f_19284},
{"f_19109ChickenBridge.scm",(void*)f_19109},
{"f_19219ChickenBridge.scm",(void*)f_19219},
{"f_19178ChickenBridge.scm",(void*)f_19178},
{"f_19211ChickenBridge.scm",(void*)f_19211},
{"f_19207ChickenBridge.scm",(void*)f_19207},
{"f_19192ChickenBridge.scm",(void*)f_19192},
{"f_19116ChickenBridge.scm",(void*)f_19116},
{"f_19124ChickenBridge.scm",(void*)f_19124},
{"f_19169ChickenBridge.scm",(void*)f_19169},
{"f_19157ChickenBridge.scm",(void*)f_19157},
{"f_19141ChickenBridge.scm",(void*)f_19141},
{"f_18342ChickenBridge.scm",(void*)f_18342},
{"f_18659ChickenBridge.scm",(void*)f_18659},
{"f_18666ChickenBridge.scm",(void*)f_18666},
{"f_19071ChickenBridge.scm",(void*)f_19071},
{"f_19086ChickenBridge.scm",(void*)f_19086},
{"f_19078ChickenBridge.scm",(void*)f_19078},
{"f_19042ChickenBridge.scm",(void*)f_19042},
{"f_19046ChickenBridge.scm",(void*)f_19046},
{"f_19007ChickenBridge.scm",(void*)f_19007},
{"f_19011ChickenBridge.scm",(void*)f_19011},
{"f_18972ChickenBridge.scm",(void*)f_18972},
{"f_18976ChickenBridge.scm",(void*)f_18976},
{"f_18669ChickenBridge.scm",(void*)f_18669},
{"f_18936ChickenBridge.scm",(void*)f_18936},
{"f_18951ChickenBridge.scm",(void*)f_18951},
{"f_18943ChickenBridge.scm",(void*)f_18943},
{"f_18907ChickenBridge.scm",(void*)f_18907},
{"f_18911ChickenBridge.scm",(void*)f_18911},
{"f_18872ChickenBridge.scm",(void*)f_18872},
{"f_18876ChickenBridge.scm",(void*)f_18876},
{"f_18837ChickenBridge.scm",(void*)f_18837},
{"f_18841ChickenBridge.scm",(void*)f_18841},
{"f_18672ChickenBridge.scm",(void*)f_18672},
{"f_18801ChickenBridge.scm",(void*)f_18801},
{"f_18816ChickenBridge.scm",(void*)f_18816},
{"f_18808ChickenBridge.scm",(void*)f_18808},
{"f_18772ChickenBridge.scm",(void*)f_18772},
{"f_18776ChickenBridge.scm",(void*)f_18776},
{"f_18737ChickenBridge.scm",(void*)f_18737},
{"f_18741ChickenBridge.scm",(void*)f_18741},
{"f_18702ChickenBridge.scm",(void*)f_18702},
{"f_18706ChickenBridge.scm",(void*)f_18706},
{"f_18675ChickenBridge.scm",(void*)f_18675},
{"f_18678ChickenBridge.scm",(void*)f_18678},
{"f_18346ChickenBridge.scm",(void*)f_18346},
{"f_18349ChickenBridge.scm",(void*)f_18349},
{"f_18623ChickenBridge.scm",(void*)f_18623},
{"f_18627ChickenBridge.scm",(void*)f_18627},
{"f_18630ChickenBridge.scm",(void*)f_18630},
{"f_18633ChickenBridge.scm",(void*)f_18633},
{"f_18636ChickenBridge.scm",(void*)f_18636},
{"f_18649ChickenBridge.scm",(void*)f_18649},
{"f_18639ChickenBridge.scm",(void*)f_18639},
{"f_18355ChickenBridge.scm",(void*)f_18355},
{"f_18362ChickenBridge.scm",(void*)f_18362},
{"f_18593ChickenBridge.scm",(void*)f_18593},
{"f_18608ChickenBridge.scm",(void*)f_18608},
{"f_18600ChickenBridge.scm",(void*)f_18600},
{"f_18564ChickenBridge.scm",(void*)f_18564},
{"f_18568ChickenBridge.scm",(void*)f_18568},
{"f_18529ChickenBridge.scm",(void*)f_18529},
{"f_18533ChickenBridge.scm",(void*)f_18533},
{"f_18365ChickenBridge.scm",(void*)f_18365},
{"f_18493ChickenBridge.scm",(void*)f_18493},
{"f_18508ChickenBridge.scm",(void*)f_18508},
{"f_18500ChickenBridge.scm",(void*)f_18500},
{"f_18464ChickenBridge.scm",(void*)f_18464},
{"f_18468ChickenBridge.scm",(void*)f_18468},
{"f_18429ChickenBridge.scm",(void*)f_18429},
{"f_18433ChickenBridge.scm",(void*)f_18433},
{"f_18368ChickenBridge.scm",(void*)f_18368},
{"f_18371ChickenBridge.scm",(void*)f_18371},
{"f_18386ChickenBridge.scm",(void*)f_18386},
{"f_18408ChickenBridge.scm",(void*)f_18408},
{"f_18392ChickenBridge.scm",(void*)f_18392},
{"f_18400ChickenBridge.scm",(void*)f_18400},
{"f_18374ChickenBridge.scm",(void*)f_18374},
{"f_18377ChickenBridge.scm",(void*)f_18377},
{"f_18259ChickenBridge.scm",(void*)f_18259},
{"f_18250ChickenBridge.scm",(void*)f_18250},
{"f_18241ChickenBridge.scm",(void*)f_18241},
{"f_18223ChickenBridge.scm",(void*)f_18223},
{"f_18205ChickenBridge.scm",(void*)f_18205},
{"f_18187ChickenBridge.scm",(void*)f_18187},
{"f_18178ChickenBridge.scm",(void*)f_18178},
{"f_18169ChickenBridge.scm",(void*)f_18169},
{"f_17947ChickenBridge.scm",(void*)f_17947},
{"f_17997ChickenBridge.scm",(void*)f_17997},
{"f_18142ChickenBridge.scm",(void*)f_18142},
{"f_18023ChickenBridge.scm",(void*)f_18023},
{"f_18138ChickenBridge.scm",(void*)f_18138},
{"f_18123ChickenBridge.scm",(void*)f_18123},
{"f_18104ChickenBridge.scm",(void*)f_18104},
{"f_18077ChickenBridge.scm",(void*)f_18077},
{"f_18030ChickenBridge.scm",(void*)f_18030},
{"f_18000ChickenBridge.scm",(void*)f_18000},
{"f_17950ChickenBridge.scm",(void*)f_17950},
{"f_17956ChickenBridge.scm",(void*)f_17956},
{"f_17972ChickenBridge.scm",(void*)f_17972},
{"f_17975ChickenBridge.scm",(void*)f_17975},
{"f_17473ChickenBridge.scm",(void*)f_17473},
{"f_17937ChickenBridge.scm",(void*)f_17937},
{"f_17477ChickenBridge.scm",(void*)f_17477},
{"f_17909ChickenBridge.scm",(void*)f_17909},
{"f_17924ChickenBridge.scm",(void*)f_17924},
{"f_17916ChickenBridge.scm",(void*)f_17916},
{"f_17880ChickenBridge.scm",(void*)f_17880},
{"f_17884ChickenBridge.scm",(void*)f_17884},
{"f_17845ChickenBridge.scm",(void*)f_17845},
{"f_17849ChickenBridge.scm",(void*)f_17849},
{"f_17810ChickenBridge.scm",(void*)f_17810},
{"f_17814ChickenBridge.scm",(void*)f_17814},
{"f_17480ChickenBridge.scm",(void*)f_17480},
{"f_17774ChickenBridge.scm",(void*)f_17774},
{"f_17789ChickenBridge.scm",(void*)f_17789},
{"f_17781ChickenBridge.scm",(void*)f_17781},
{"f_17745ChickenBridge.scm",(void*)f_17745},
{"f_17749ChickenBridge.scm",(void*)f_17749},
{"f_17710ChickenBridge.scm",(void*)f_17710},
{"f_17714ChickenBridge.scm",(void*)f_17714},
{"f_17675ChickenBridge.scm",(void*)f_17675},
{"f_17679ChickenBridge.scm",(void*)f_17679},
{"f_17483ChickenBridge.scm",(void*)f_17483},
{"f_17639ChickenBridge.scm",(void*)f_17639},
{"f_17654ChickenBridge.scm",(void*)f_17654},
{"f_17646ChickenBridge.scm",(void*)f_17646},
{"f_17610ChickenBridge.scm",(void*)f_17610},
{"f_17614ChickenBridge.scm",(void*)f_17614},
{"f_17575ChickenBridge.scm",(void*)f_17575},
{"f_17579ChickenBridge.scm",(void*)f_17579},
{"f_17540ChickenBridge.scm",(void*)f_17540},
{"f_17544ChickenBridge.scm",(void*)f_17544},
{"f_17486ChickenBridge.scm",(void*)f_17486},
{"f_17489ChickenBridge.scm",(void*)f_17489},
{"f_17492ChickenBridge.scm",(void*)f_17492},
{"f_17507ChickenBridge.scm",(void*)f_17507},
{"f_17519ChickenBridge.scm",(void*)f_17519},
{"f_17498ChickenBridge.scm",(void*)f_17498},
{"f_17501ChickenBridge.scm",(void*)f_17501},
{"f_17397ChickenBridge.scm",(void*)f_17397},
{"f_17401ChickenBridge.scm",(void*)f_17401},
{"f_17420ChickenBridge.scm",(void*)f_17420},
{"f_17430ChickenBridge.scm",(void*)f_17430},
{"f_17432ChickenBridge.scm",(void*)f_17432},
{"f_17449ChickenBridge.scm",(void*)f_17449},
{"f_17452ChickenBridge.scm",(void*)f_17452},
{"f_17463ChickenBridge.scm",(void*)f_17463},
{"f_17404ChickenBridge.scm",(void*)f_17404},
{"f_17134ChickenBridge.scm",(void*)f_17134},
{"f_17387ChickenBridge.scm",(void*)f_17387},
{"f_17138ChickenBridge.scm",(void*)f_17138},
{"f_17359ChickenBridge.scm",(void*)f_17359},
{"f_17374ChickenBridge.scm",(void*)f_17374},
{"f_17366ChickenBridge.scm",(void*)f_17366},
{"f_17330ChickenBridge.scm",(void*)f_17330},
{"f_17334ChickenBridge.scm",(void*)f_17334},
{"f_17295ChickenBridge.scm",(void*)f_17295},
{"f_17299ChickenBridge.scm",(void*)f_17299},
{"f_17141ChickenBridge.scm",(void*)f_17141},
{"f_17259ChickenBridge.scm",(void*)f_17259},
{"f_17274ChickenBridge.scm",(void*)f_17274},
{"f_17266ChickenBridge.scm",(void*)f_17266},
{"f_17230ChickenBridge.scm",(void*)f_17230},
{"f_17234ChickenBridge.scm",(void*)f_17234},
{"f_17195ChickenBridge.scm",(void*)f_17195},
{"f_17199ChickenBridge.scm",(void*)f_17199},
{"f_17144ChickenBridge.scm",(void*)f_17144},
{"f_17147ChickenBridge.scm",(void*)f_17147},
{"f_17150ChickenBridge.scm",(void*)f_17150},
{"f_17162ChickenBridge.scm",(void*)f_17162},
{"f_17174ChickenBridge.scm",(void*)f_17174},
{"f_17156ChickenBridge.scm",(void*)f_17156},
{"f_17098ChickenBridge.scm",(void*)f_17098},
{"f_17102ChickenBridge.scm",(void*)f_17102},
{"f_17124ChickenBridge.scm",(void*)f_17124},
{"f_17118ChickenBridge.scm",(void*)f_17118},
{"f_17111ChickenBridge.scm",(void*)f_17111},
{"f_16851ChickenBridge.scm",(void*)f_16851},
{"f_16855ChickenBridge.scm",(void*)f_16855},
{"f_17068ChickenBridge.scm",(void*)f_17068},
{"f_17083ChickenBridge.scm",(void*)f_17083},
{"f_17075ChickenBridge.scm",(void*)f_17075},
{"f_17039ChickenBridge.scm",(void*)f_17039},
{"f_17043ChickenBridge.scm",(void*)f_17043},
{"f_17004ChickenBridge.scm",(void*)f_17004},
{"f_17008ChickenBridge.scm",(void*)f_17008},
{"f_16858ChickenBridge.scm",(void*)f_16858},
{"f_16968ChickenBridge.scm",(void*)f_16968},
{"f_16983ChickenBridge.scm",(void*)f_16983},
{"f_16975ChickenBridge.scm",(void*)f_16975},
{"f_16939ChickenBridge.scm",(void*)f_16939},
{"f_16943ChickenBridge.scm",(void*)f_16943},
{"f_16904ChickenBridge.scm",(void*)f_16904},
{"f_16908ChickenBridge.scm",(void*)f_16908},
{"f_16861ChickenBridge.scm",(void*)f_16861},
{"f_16864ChickenBridge.scm",(void*)f_16864},
{"f_16867ChickenBridge.scm",(void*)f_16867},
{"f_16875ChickenBridge.scm",(void*)f_16875},
{"f_16883ChickenBridge.scm",(void*)f_16883},
{"f_16873ChickenBridge.scm",(void*)f_16873},
{"f_16636ChickenBridge.scm",(void*)f_16636},
{"f_16640ChickenBridge.scm",(void*)f_16640},
{"f_16849ChickenBridge.scm",(void*)f_16849},
{"f_16802ChickenBridge.scm",(void*)f_16802},
{"f_16814ChickenBridge.scm",(void*)f_16814},
{"f_16670ChickenBridge.scm",(void*)f_16670},
{"f_16673ChickenBridge.scm",(void*)f_16673},
{"f_16679ChickenBridge.scm",(void*)f_16679},
{"f_16682ChickenBridge.scm",(void*)f_16682},
{"f_16770ChickenBridge.scm",(void*)f_16770},
{"f_16685ChickenBridge.scm",(void*)f_16685},
{"f_16764ChickenBridge.scm",(void*)f_16764},
{"f_16691ChickenBridge.scm",(void*)f_16691},
{"f_16694ChickenBridge.scm",(void*)f_16694},
{"f_16646ChickenBridge.scm",(void*)f_16646},
{"f_16649ChickenBridge.scm",(void*)f_16649},
{"f_16656ChickenBridge.scm",(void*)f_16656},
{"f_16166ChickenBridge.scm",(void*)f_16166},
{"f_16170ChickenBridge.scm",(void*)f_16170},
{"f_16606ChickenBridge.scm",(void*)f_16606},
{"f_16621ChickenBridge.scm",(void*)f_16621},
{"f_16613ChickenBridge.scm",(void*)f_16613},
{"f_16577ChickenBridge.scm",(void*)f_16577},
{"f_16581ChickenBridge.scm",(void*)f_16581},
{"f_16542ChickenBridge.scm",(void*)f_16542},
{"f_16546ChickenBridge.scm",(void*)f_16546},
{"f_16507ChickenBridge.scm",(void*)f_16507},
{"f_16511ChickenBridge.scm",(void*)f_16511},
{"f_16173ChickenBridge.scm",(void*)f_16173},
{"f_16471ChickenBridge.scm",(void*)f_16471},
{"f_16486ChickenBridge.scm",(void*)f_16486},
{"f_16478ChickenBridge.scm",(void*)f_16478},
{"f_16442ChickenBridge.scm",(void*)f_16442},
{"f_16446ChickenBridge.scm",(void*)f_16446},
{"f_16407ChickenBridge.scm",(void*)f_16407},
{"f_16411ChickenBridge.scm",(void*)f_16411},
{"f_16372ChickenBridge.scm",(void*)f_16372},
{"f_16376ChickenBridge.scm",(void*)f_16376},
{"f_16176ChickenBridge.scm",(void*)f_16176},
{"f_16336ChickenBridge.scm",(void*)f_16336},
{"f_16351ChickenBridge.scm",(void*)f_16351},
{"f_16343ChickenBridge.scm",(void*)f_16343},
{"f_16307ChickenBridge.scm",(void*)f_16307},
{"f_16311ChickenBridge.scm",(void*)f_16311},
{"f_16272ChickenBridge.scm",(void*)f_16272},
{"f_16276ChickenBridge.scm",(void*)f_16276},
{"f_16237ChickenBridge.scm",(void*)f_16237},
{"f_16241ChickenBridge.scm",(void*)f_16241},
{"f_16179ChickenBridge.scm",(void*)f_16179},
{"f_16182ChickenBridge.scm",(void*)f_16182},
{"f_16185ChickenBridge.scm",(void*)f_16185},
{"f_16208ChickenBridge.scm",(void*)f_16208},
{"f_16216ChickenBridge.scm",(void*)f_16216},
{"f_16191ChickenBridge.scm",(void*)f_16191},
{"f_16194ChickenBridge.scm",(void*)f_16194},
{"f_16086ChickenBridge.scm",(void*)f_16086},
{"f_16077ChickenBridge.scm",(void*)f_16077},
{"f_16005ChickenBridge.scm",(void*)f_16005},
{"f_16009ChickenBridge.scm",(void*)f_16009},
{"f_16012ChickenBridge.scm",(void*)f_16012},
{"f_15750ChickenBridge.scm",(void*)f_15750},
{"f_15754ChickenBridge.scm",(void*)f_15754},
{"f_15975ChickenBridge.scm",(void*)f_15975},
{"f_15990ChickenBridge.scm",(void*)f_15990},
{"f_15982ChickenBridge.scm",(void*)f_15982},
{"f_15946ChickenBridge.scm",(void*)f_15946},
{"f_15950ChickenBridge.scm",(void*)f_15950},
{"f_15911ChickenBridge.scm",(void*)f_15911},
{"f_15915ChickenBridge.scm",(void*)f_15915},
{"f_15757ChickenBridge.scm",(void*)f_15757},
{"f_15875ChickenBridge.scm",(void*)f_15875},
{"f_15890ChickenBridge.scm",(void*)f_15890},
{"f_15882ChickenBridge.scm",(void*)f_15882},
{"f_15846ChickenBridge.scm",(void*)f_15846},
{"f_15850ChickenBridge.scm",(void*)f_15850},
{"f_15811ChickenBridge.scm",(void*)f_15811},
{"f_15815ChickenBridge.scm",(void*)f_15815},
{"f_15760ChickenBridge.scm",(void*)f_15760},
{"f_15763ChickenBridge.scm",(void*)f_15763},
{"f_15766ChickenBridge.scm",(void*)f_15766},
{"f_15778ChickenBridge.scm",(void*)f_15778},
{"f_15790ChickenBridge.scm",(void*)f_15790},
{"f_15772ChickenBridge.scm",(void*)f_15772},
{"f_15635ChickenBridge.scm",(void*)f_15635},
{"f_15748ChickenBridge.scm",(void*)f_15748},
{"f_15645ChickenBridge.scm",(void*)f_15645},
{"f_15733ChickenBridge.scm",(void*)f_15733},
{"f_15744ChickenBridge.scm",(void*)f_15744},
{"f_15740ChickenBridge.scm",(void*)f_15740},
{"f_15648ChickenBridge.scm",(void*)f_15648},
{"f_15730ChickenBridge.scm",(void*)f_15730},
{"f_15656ChickenBridge.scm",(void*)f_15656},
{"f_15720ChickenBridge.scm",(void*)f_15720},
{"f_15665ChickenBridge.scm",(void*)f_15665},
{"f_15684ChickenBridge.scm",(void*)f_15684},
{"f_15713ChickenBridge.scm",(void*)f_15713},
{"f_15694ChickenBridge.scm",(void*)f_15694},
{"f_15709ChickenBridge.scm",(void*)f_15709},
{"f_15697ChickenBridge.scm",(void*)f_15697},
{"f_15668ChickenBridge.scm",(void*)f_15668},
{"f_15678ChickenBridge.scm",(void*)f_15678},
{"f_15659ChickenBridge.scm",(void*)f_15659},
{"f_15662ChickenBridge.scm",(void*)f_15662},
{"f_15589ChickenBridge.scm",(void*)f_15589},
{"f_15580ChickenBridge.scm",(void*)f_15580},
{"f_15279ChickenBridge.scm",(void*)f_15279},
{"f_15286ChickenBridge.scm",(void*)f_15286},
{"f_15575ChickenBridge.scm",(void*)f_15575},
{"f_15289ChickenBridge.scm",(void*)f_15289},
{"f_15560ChickenBridge.scm",(void*)f_15560},
{"f_15552ChickenBridge.scm",(void*)f_15552},
{"f_15544ChickenBridge.scm",(void*)f_15544},
{"f_15547ChickenBridge.scm",(void*)f_15547},
{"f_15515ChickenBridge.scm",(void*)f_15515},
{"f_15538ChickenBridge.scm",(void*)f_15538},
{"f_15521ChickenBridge.scm",(void*)f_15521},
{"f_15525ChickenBridge.scm",(void*)f_15525},
{"f_15292ChickenBridge.scm",(void*)f_15292},
{"f_15298ChickenBridge.scm",(void*)f_15298},
{"f_15390ChickenBridge.scm",(void*)f_15390},
{"f_15502ChickenBridge.scm",(void*)f_15502},
{"f_15509ChickenBridge.scm",(void*)f_15509},
{"f_15413ChickenBridge.scm",(void*)f_15413},
{"f_15415ChickenBridge.scm",(void*)f_15415},
{"f_15464ChickenBridge.scm",(void*)f_15464},
{"f_15499ChickenBridge.scm",(void*)f_15499},
{"f_15488ChickenBridge.scm",(void*)f_15488},
{"f_15633ChickenBridge.scm",(void*)f_15633},
{"f_15608ChickenBridge.scm",(void*)f_15608},
{"f_15629ChickenBridge.scm",(void*)f_15629},
{"f_15625ChickenBridge.scm",(void*)f_15625},
{"f_15617ChickenBridge.scm",(void*)f_15617},
{"f_15481ChickenBridge.scm",(void*)f_15481},
{"f_15474ChickenBridge.scm",(void*)f_15474},
{"f_15422ChickenBridge.scm",(void*)f_15422},
{"f_15462ChickenBridge.scm",(void*)f_15462},
{"f_15426ChickenBridge.scm",(void*)f_15426},
{"f_15458ChickenBridge.scm",(void*)f_15458},
{"f_15445ChickenBridge.scm",(void*)f_15445},
{"f_15453ChickenBridge.scm",(void*)f_15453},
{"f_15449ChickenBridge.scm",(void*)f_15449},
{"f_15429ChickenBridge.scm",(void*)f_15429},
{"f_15432ChickenBridge.scm",(void*)f_15432},
{"f_15406ChickenBridge.scm",(void*)f_15406},
{"f_15393ChickenBridge.scm",(void*)f_15393},
{"f_15402ChickenBridge.scm",(void*)f_15402},
{"f_15397ChickenBridge.scm",(void*)f_15397},
{"f_15304ChickenBridge.scm",(void*)f_15304},
{"f_15384ChickenBridge.scm",(void*)f_15384},
{"f_15364ChickenBridge.scm",(void*)f_15364},
{"f_15370ChickenBridge.scm",(void*)f_15370},
{"f_15381ChickenBridge.scm",(void*)f_15381},
{"f_15361ChickenBridge.scm",(void*)f_15361},
{"f_15349ChickenBridge.scm",(void*)f_15349},
{"f_15352ChickenBridge.scm",(void*)f_15352},
{"f_15307ChickenBridge.scm",(void*)f_15307},
{"f_15343ChickenBridge.scm",(void*)f_15343},
{"f_15338ChickenBridge.scm",(void*)f_15338},
{"f_15310ChickenBridge.scm",(void*)f_15310},
{"f_15323ChickenBridge.scm",(void*)f_15323},
{"f_15313ChickenBridge.scm",(void*)f_15313},
{"f_15316ChickenBridge.scm",(void*)f_15316},
{"f_15319ChickenBridge.scm",(void*)f_15319},
{"f_15156ChickenBridge.scm",(void*)f_15156},
{"f_15215ChickenBridge.scm",(void*)f_15215},
{"f_15225ChickenBridge.scm",(void*)f_15225},
{"f_15227ChickenBridge.scm",(void*)f_15227},
{"f_15256ChickenBridge.scm",(void*)f_15256},
{"f_15261ChickenBridge.scm",(void*)f_15261},
{"f_15246ChickenBridge.scm",(void*)f_15246},
{"f_15177ChickenBridge.scm",(void*)f_15177},
{"f_15209ChickenBridge.scm",(void*)f_15209},
{"f_15137ChickenBridge.scm",(void*)f_15137},
{"f_15144ChickenBridge.scm",(void*)f_15144},
{"f_15151ChickenBridge.scm",(void*)f_15151},
{"f_15118ChickenBridge.scm",(void*)f_15118},
{"f_15125ChickenBridge.scm",(void*)f_15125},
{"f_15132ChickenBridge.scm",(void*)f_15132},
{"f_14938ChickenBridge.scm",(void*)f_14938},
{"f_14942ChickenBridge.scm",(void*)f_14942},
{"f_14945ChickenBridge.scm",(void*)f_14945},
{"f_14948ChickenBridge.scm",(void*)f_14948},
{"f_14951ChickenBridge.scm",(void*)f_14951},
{"f_15108ChickenBridge.scm",(void*)f_15108},
{"f_15115ChickenBridge.scm",(void*)f_15115},
{"f_14954ChickenBridge.scm",(void*)f_14954},
{"f_14957ChickenBridge.scm",(void*)f_14957},
{"f_14963ChickenBridge.scm",(void*)f_14963},
{"f_14969ChickenBridge.scm",(void*)f_14969},
{"f_15032ChickenBridge.scm",(void*)f_15032},
{"f_15046ChickenBridge.scm",(void*)f_15046},
{"f_14972ChickenBridge.scm",(void*)f_14972},
{"f_14975ChickenBridge.scm",(void*)f_14975},
{"f_14981ChickenBridge.scm",(void*)f_14981},
{"f_14994ChickenBridge.scm",(void*)f_14994},
{"f_14984ChickenBridge.scm",(void*)f_14984},
{"f_14987ChickenBridge.scm",(void*)f_14987},
{"f_14928ChickenBridge.scm",(void*)f_14928},
{"f_14873ChickenBridge.scm",(void*)f_14873},
{"f_14864ChickenBridge.scm",(void*)f_14864},
{"f_14747ChickenBridge.scm",(void*)f_14747},
{"f_14738ChickenBridge.scm",(void*)f_14738},
{"f_14729ChickenBridge.scm",(void*)f_14729},
{"f_14720ChickenBridge.scm",(void*)f_14720},
{"f_14711ChickenBridge.scm",(void*)f_14711},
{"f_14693ChickenBridge.scm",(void*)f_14693},
{"f_14684ChickenBridge.scm",(void*)f_14684},
{"f_14675ChickenBridge.scm",(void*)f_14675},
{"f_14657ChickenBridge.scm",(void*)f_14657},
{"f_14648ChickenBridge.scm",(void*)f_14648},
{"f_14639ChickenBridge.scm",(void*)f_14639},
{"f_14624ChickenBridge.scm",(void*)f_14624},
{"f_14579ChickenBridge.scm",(void*)f_14579},
{"f_14561ChickenBridge.scm",(void*)f_14561},
{"f_14552ChickenBridge.scm",(void*)f_14552},
{"f_14525ChickenBridge.scm",(void*)f_14525},
{"f_14507ChickenBridge.scm",(void*)f_14507},
{"f_14489ChickenBridge.scm",(void*)f_14489},
{"f_14480ChickenBridge.scm",(void*)f_14480},
{"f_14468ChickenBridge.scm",(void*)f_14468},
{"f_14342ChickenBridge.scm",(void*)f_14342},
{"f_14348ChickenBridge.scm",(void*)f_14348},
{"f_14352ChickenBridge.scm",(void*)f_14352},
{"f_14370ChickenBridge.scm",(void*)f_14370},
{"f_14373ChickenBridge.scm",(void*)f_14373},
{"f_14377ChickenBridge.scm",(void*)f_14377},
{"f_14380ChickenBridge.scm",(void*)f_14380},
{"f_14432ChickenBridge.scm",(void*)f_14432},
{"f_14443ChickenBridge.scm",(void*)f_14443},
{"f_14383ChickenBridge.scm",(void*)f_14383},
{"f_14393ChickenBridge.scm",(void*)f_14393},
{"f_14395ChickenBridge.scm",(void*)f_14395},
{"f_14239ChickenBridge.scm",(void*)f_14239},
{"f_14263ChickenBridge.scm",(void*)f_14263},
{"f_14267ChickenBridge.scm",(void*)f_14267},
{"f_14293ChickenBridge.scm",(void*)f_14293},
{"f_14303ChickenBridge.scm",(void*)f_14303},
{"f_14340ChickenBridge.scm",(void*)f_14340},
{"f_14332ChickenBridge.scm",(void*)f_14332},
{"f_14270ChickenBridge.scm",(void*)f_14270},
{"f_14240ChickenBridge.scm",(void*)f_14240},
{"f_14244ChickenBridge.scm",(void*)f_14244},
{"f_14247ChickenBridge.scm",(void*)f_14247},
{"f_14409ChickenBridge.scm",(void*)f_14409},
{"f_14412ChickenBridge.scm",(void*)f_14412},
{"f_14419ChickenBridge.scm",(void*)f_14419},
{"f_14353ChickenBridge.scm",(void*)f_14353},
{"f_14357ChickenBridge.scm",(void*)f_14357},
{"f_14360ChickenBridge.scm",(void*)f_14360},
{"f_13829ChickenBridge.scm",(void*)f_13829},
{"f_14208ChickenBridge.scm",(void*)f_14208},
{"f_14202ChickenBridge.scm",(void*)f_14202},
{"f_13833ChickenBridge.scm",(void*)f_13833},
{"f_14186ChickenBridge.scm",(void*)f_14186},
{"f_13836ChickenBridge.scm",(void*)f_13836},
{"f_14172ChickenBridge.scm",(void*)f_14172},
{"f_14168ChickenBridge.scm",(void*)f_14168},
{"f_13839ChickenBridge.scm",(void*)f_13839},
{"f_14161ChickenBridge.scm",(void*)f_14161},
{"f_14157ChickenBridge.scm",(void*)f_14157},
{"f_13842ChickenBridge.scm",(void*)f_13842},
{"f_13845ChickenBridge.scm",(void*)f_13845},
{"f_14145ChickenBridge.scm",(void*)f_14145},
{"f_14137ChickenBridge.scm",(void*)f_14137},
{"f_14141ChickenBridge.scm",(void*)f_14141},
{"f_14129ChickenBridge.scm",(void*)f_14129},
{"f_14133ChickenBridge.scm",(void*)f_14133},
{"f_14003ChickenBridge.scm",(void*)f_14003},
{"f_14118ChickenBridge.scm",(void*)f_14118},
{"f_14122ChickenBridge.scm",(void*)f_14122},
{"f_14110ChickenBridge.scm",(void*)f_14110},
{"f_14114ChickenBridge.scm",(void*)f_14114},
{"f_14006ChickenBridge.scm",(void*)f_14006},
{"f_14010ChickenBridge.scm",(void*)f_14010},
{"f_14015ChickenBridge.scm",(void*)f_14015},
{"f_14025ChickenBridge.scm",(void*)f_14025},
{"f_14028ChickenBridge.scm",(void*)f_14028},
{"f_13909ChickenBridge.scm",(void*)f_13909},
{"f_13972ChickenBridge.scm",(void*)f_13972},
{"f_13993ChickenBridge.scm",(void*)f_13993},
{"f_13934ChickenBridge.scm",(void*)f_13934},
{"f_13963ChickenBridge.scm",(void*)f_13963},
{"f_13912ChickenBridge.scm",(void*)f_13912},
{"f_13929ChickenBridge.scm",(void*)f_13929},
{"f_13925ChickenBridge.scm",(void*)f_13925},
{"f_13375ChickenBridge.scm",(void*)f_13375},
{"f_13379ChickenBridge.scm",(void*)f_13379},
{"f_13367ChickenBridge.scm",(void*)f_13367},
{"f_13292ChickenBridge.scm",(void*)f_13292},
{"f_13353ChickenBridge.scm",(void*)f_13353},
{"f_13296ChickenBridge.scm",(void*)f_13296},
{"f_13304ChickenBridge.scm",(void*)f_13304},
{"f_13337ChickenBridge.scm",(void*)f_13337},
{"f_13314ChickenBridge.scm",(void*)f_13314},
{"f_13317ChickenBridge.scm",(void*)f_13317},
{"f_13889ChickenBridge.scm",(void*)f_13889},
{"f_13859ChickenBridge.scm",(void*)f_13859},
{"f_13848ChickenBridge.scm",(void*)f_13848},
{"f_13772ChickenBridge.scm",(void*)f_13772},
{"f_13780ChickenBridge.scm",(void*)f_13780},
{"f_13784ChickenBridge.scm",(void*)f_13784},
{"f_13788ChickenBridge.scm",(void*)f_13788},
{"f_13794ChickenBridge.scm",(void*)f_13794},
{"f_13804ChickenBridge.scm",(void*)f_13804},
{"f_13560ChickenBridge.scm",(void*)f_13560},
{"f_13628ChickenBridge.scm",(void*)f_13628},
{"f_13631ChickenBridge.scm",(void*)f_13631},
{"f_13634ChickenBridge.scm",(void*)f_13634},
{"f_13637ChickenBridge.scm",(void*)f_13637},
{"f_13640ChickenBridge.scm",(void*)f_13640},
{"f_13738ChickenBridge.scm",(void*)f_13738},
{"f_13748ChickenBridge.scm",(void*)f_13748},
{"f_13706ChickenBridge.scm",(void*)f_13706},
{"f_13716ChickenBridge.scm",(void*)f_13716},
{"f_13657ChickenBridge.scm",(void*)f_13657},
{"f_13676ChickenBridge.scm",(void*)f_13676},
{"f_13686ChickenBridge.scm",(void*)f_13686},
{"f_13667ChickenBridge.scm",(void*)f_13667},
{"f_13643ChickenBridge.scm",(void*)f_13643},
{"f_13596ChickenBridge.scm",(void*)f_13596},
{"f_13606ChickenBridge.scm",(void*)f_13606},
{"f_13579ChickenBridge.scm",(void*)f_13579},
{"f_13586ChickenBridge.scm",(void*)f_13586},
{"f_13562ChickenBridge.scm",(void*)f_13562},
{"f_13569ChickenBridge.scm",(void*)f_13569},
{"f_13381ChickenBridge.scm",(void*)f_13381},
{"f_13389ChickenBridge.scm",(void*)f_13389},
{"f_13393ChickenBridge.scm",(void*)f_13393},
{"f_13395ChickenBridge.scm",(void*)f_13395},
{"f_13405ChickenBridge.scm",(void*)f_13405},
{"f_13536ChickenBridge.scm",(void*)f_13536},
{"f_13485ChickenBridge.scm",(void*)f_13485},
{"f_13488ChickenBridge.scm",(void*)f_13488},
{"f_13499ChickenBridge.scm",(void*)f_13499},
{"f_13451ChickenBridge.scm",(void*)f_13451},
{"f_13420ChickenBridge.scm",(void*)f_13420},
{"f_13423ChickenBridge.scm",(void*)f_13423},
{"f_13408ChickenBridge.scm",(void*)f_13408},
{"f_12969ChickenBridge.scm",(void*)f_12969},
{"f_13286ChickenBridge.scm",(void*)f_13286},
{"f_13215ChickenBridge.scm",(void*)f_13215},
{"f_13217ChickenBridge.scm",(void*)f_13217},
{"f_7956ChickenBridge.scm",(void*)f_7956},
{"f_13236ChickenBridge.scm",(void*)f_13236},
{"f_13239ChickenBridge.scm",(void*)f_13239},
{"f_12982ChickenBridge.scm",(void*)f_12982},
{"f_13058ChickenBridge.scm",(void*)f_13058},
{"f_13211ChickenBridge.scm",(void*)f_13211},
{"f_13195ChickenBridge.scm",(void*)f_13195},
{"f_13147ChickenBridge.scm",(void*)f_13147},
{"f_13161ChickenBridge.scm",(void*)f_13161},
{"f_13114ChickenBridge.scm",(void*)f_13114},
{"f_13089ChickenBridge.scm",(void*)f_13089},
{"f_12985ChickenBridge.scm",(void*)f_12985},
{"f_12993ChickenBridge.scm",(void*)f_12993},
{"f_13026ChickenBridge.scm",(void*)f_13026},
{"f_11496ChickenBridge.scm",(void*)f_11496},
{"f_12946ChickenBridge.scm",(void*)f_12946},
{"f_12961ChickenBridge.scm",(void*)f_12961},
{"f_12953ChickenBridge.scm",(void*)f_12953},
{"f_12917ChickenBridge.scm",(void*)f_12917},
{"f_12921ChickenBridge.scm",(void*)f_12921},
{"f_12882ChickenBridge.scm",(void*)f_12882},
{"f_12886ChickenBridge.scm",(void*)f_12886},
{"f_12847ChickenBridge.scm",(void*)f_12847},
{"f_12851ChickenBridge.scm",(void*)f_12851},
{"f_12812ChickenBridge.scm",(void*)f_12812},
{"f_12816ChickenBridge.scm",(void*)f_12816},
{"f_12777ChickenBridge.scm",(void*)f_12777},
{"f_12781ChickenBridge.scm",(void*)f_12781},
{"f_12742ChickenBridge.scm",(void*)f_12742},
{"f_12746ChickenBridge.scm",(void*)f_12746},
{"f_11500ChickenBridge.scm",(void*)f_11500},
{"f_12706ChickenBridge.scm",(void*)f_12706},
{"f_12721ChickenBridge.scm",(void*)f_12721},
{"f_12713ChickenBridge.scm",(void*)f_12713},
{"f_12677ChickenBridge.scm",(void*)f_12677},
{"f_12681ChickenBridge.scm",(void*)f_12681},
{"f_12642ChickenBridge.scm",(void*)f_12642},
{"f_12646ChickenBridge.scm",(void*)f_12646},
{"f_12607ChickenBridge.scm",(void*)f_12607},
{"f_12611ChickenBridge.scm",(void*)f_12611},
{"f_12572ChickenBridge.scm",(void*)f_12572},
{"f_12576ChickenBridge.scm",(void*)f_12576},
{"f_12537ChickenBridge.scm",(void*)f_12537},
{"f_12541ChickenBridge.scm",(void*)f_12541},
{"f_12502ChickenBridge.scm",(void*)f_12502},
{"f_12506ChickenBridge.scm",(void*)f_12506},
{"f_11503ChickenBridge.scm",(void*)f_11503},
{"f_12466ChickenBridge.scm",(void*)f_12466},
{"f_12481ChickenBridge.scm",(void*)f_12481},
{"f_12473ChickenBridge.scm",(void*)f_12473},
{"f_12437ChickenBridge.scm",(void*)f_12437},
{"f_12441ChickenBridge.scm",(void*)f_12441},
{"f_12402ChickenBridge.scm",(void*)f_12402},
{"f_12406ChickenBridge.scm",(void*)f_12406},
{"f_12367ChickenBridge.scm",(void*)f_12367},
{"f_12371ChickenBridge.scm",(void*)f_12371},
{"f_12332ChickenBridge.scm",(void*)f_12332},
{"f_12336ChickenBridge.scm",(void*)f_12336},
{"f_12297ChickenBridge.scm",(void*)f_12297},
{"f_12301ChickenBridge.scm",(void*)f_12301},
{"f_12262ChickenBridge.scm",(void*)f_12262},
{"f_12266ChickenBridge.scm",(void*)f_12266},
{"f_11506ChickenBridge.scm",(void*)f_11506},
{"f_12226ChickenBridge.scm",(void*)f_12226},
{"f_12241ChickenBridge.scm",(void*)f_12241},
{"f_12233ChickenBridge.scm",(void*)f_12233},
{"f_12197ChickenBridge.scm",(void*)f_12197},
{"f_12201ChickenBridge.scm",(void*)f_12201},
{"f_12162ChickenBridge.scm",(void*)f_12162},
{"f_12166ChickenBridge.scm",(void*)f_12166},
{"f_12127ChickenBridge.scm",(void*)f_12127},
{"f_12131ChickenBridge.scm",(void*)f_12131},
{"f_12092ChickenBridge.scm",(void*)f_12092},
{"f_12096ChickenBridge.scm",(void*)f_12096},
{"f_12057ChickenBridge.scm",(void*)f_12057},
{"f_12061ChickenBridge.scm",(void*)f_12061},
{"f_12022ChickenBridge.scm",(void*)f_12022},
{"f_12026ChickenBridge.scm",(void*)f_12026},
{"f_11509ChickenBridge.scm",(void*)f_11509},
{"f_11986ChickenBridge.scm",(void*)f_11986},
{"f_12001ChickenBridge.scm",(void*)f_12001},
{"f_11993ChickenBridge.scm",(void*)f_11993},
{"f_11957ChickenBridge.scm",(void*)f_11957},
{"f_11961ChickenBridge.scm",(void*)f_11961},
{"f_11922ChickenBridge.scm",(void*)f_11922},
{"f_11926ChickenBridge.scm",(void*)f_11926},
{"f_11887ChickenBridge.scm",(void*)f_11887},
{"f_11891ChickenBridge.scm",(void*)f_11891},
{"f_11852ChickenBridge.scm",(void*)f_11852},
{"f_11856ChickenBridge.scm",(void*)f_11856},
{"f_11817ChickenBridge.scm",(void*)f_11817},
{"f_11821ChickenBridge.scm",(void*)f_11821},
{"f_11782ChickenBridge.scm",(void*)f_11782},
{"f_11786ChickenBridge.scm",(void*)f_11786},
{"f_11512ChickenBridge.scm",(void*)f_11512},
{"f_11746ChickenBridge.scm",(void*)f_11746},
{"f_11761ChickenBridge.scm",(void*)f_11761},
{"f_11753ChickenBridge.scm",(void*)f_11753},
{"f_11717ChickenBridge.scm",(void*)f_11717},
{"f_11721ChickenBridge.scm",(void*)f_11721},
{"f_11682ChickenBridge.scm",(void*)f_11682},
{"f_11686ChickenBridge.scm",(void*)f_11686},
{"f_11647ChickenBridge.scm",(void*)f_11647},
{"f_11651ChickenBridge.scm",(void*)f_11651},
{"f_11612ChickenBridge.scm",(void*)f_11612},
{"f_11616ChickenBridge.scm",(void*)f_11616},
{"f_11577ChickenBridge.scm",(void*)f_11577},
{"f_11581ChickenBridge.scm",(void*)f_11581},
{"f_11542ChickenBridge.scm",(void*)f_11542},
{"f_11546ChickenBridge.scm",(void*)f_11546},
{"f_11515ChickenBridge.scm",(void*)f_11515},
{"f_11518ChickenBridge.scm",(void*)f_11518},
{"f_11277ChickenBridge.scm",(void*)f_11277},
{"f_11286ChickenBridge.scm",(void*)f_11286},
{"f_11290ChickenBridge.scm",(void*)f_11290},
{"f_11477ChickenBridge.scm",(void*)f_11477},
{"f_11462ChickenBridge.scm",(void*)f_11462},
{"f_11427ChickenBridge.scm",(void*)f_11427},
{"f_11407ChickenBridge.scm",(void*)f_11407},
{"f_11411ChickenBridge.scm",(void*)f_11411},
{"f_11397ChickenBridge.scm",(void*)f_11397},
{"f_11405ChickenBridge.scm",(void*)f_11405},
{"f_11364ChickenBridge.scm",(void*)f_11364},
{"f_11292ChickenBridge.scm",(void*)f_11292},
{"f_11359ChickenBridge.scm",(void*)f_11359},
{"f_11296ChickenBridge.scm",(void*)f_11296},
{"f_11332ChickenBridge.scm",(void*)f_11332},
{"f_11307ChickenBridge.scm",(void*)f_11307},
{"f_11248ChickenBridge.scm",(void*)f_11248},
{"f_11252ChickenBridge.scm",(void*)f_11252},
{"f_11263ChickenBridge.scm",(void*)f_11263},
{"f_11261ChickenBridge.scm",(void*)f_11261},
{"f_11217ChickenBridge.scm",(void*)f_11217},
{"f_11221ChickenBridge.scm",(void*)f_11221},
{"f_11232ChickenBridge.scm",(void*)f_11232},
{"f_11230ChickenBridge.scm",(void*)f_11230},
{"f_11199ChickenBridge.scm",(void*)f_11199},
{"f_11207ChickenBridge.scm",(void*)f_11207},
{"f_11215ChickenBridge.scm",(void*)f_11215},
{"f_11189ChickenBridge.scm",(void*)f_11189},
{"f_11197ChickenBridge.scm",(void*)f_11197},
{"f_11130ChickenBridge.scm",(void*)f_11130},
{"f_11137ChickenBridge.scm",(void*)f_11137},
{"f_11140ChickenBridge.scm",(void*)f_11140},
{"f_11143ChickenBridge.scm",(void*)f_11143},
{"f_11148ChickenBridge.scm",(void*)f_11148},
{"f_11092ChickenBridge.scm",(void*)f_11092},
{"f_11100ChickenBridge.scm",(void*)f_11100},
{"f_11104ChickenBridge.scm",(void*)f_11104},
{"f_11124ChickenBridge.scm",(void*)f_11124},
{"f_11108ChickenBridge.scm",(void*)f_11108},
{"f_11116ChickenBridge.scm",(void*)f_11116},
{"f_11112ChickenBridge.scm",(void*)f_11112},
{"f_11080ChickenBridge.scm",(void*)f_11080},
{"f_11071ChickenBridge.scm",(void*)f_11071},
{"f_11062ChickenBridge.scm",(void*)f_11062},
{"f_11053ChickenBridge.scm",(void*)f_11053},
{"f_11044ChickenBridge.scm",(void*)f_11044},
{"f_11035ChickenBridge.scm",(void*)f_11035},
{"f_11026ChickenBridge.scm",(void*)f_11026},
{"f_11011ChickenBridge.scm",(void*)f_11011},
{"f_11005ChickenBridge.scm",(void*)f_11005},
{"f_10863ChickenBridge.scm",(void*)f_10863},
{"f_10867ChickenBridge.scm",(void*)f_10867},
{"f_10936ChickenBridge.scm",(void*)f_10936},
{"f_10979ChickenBridge.scm",(void*)f_10979},
{"f_10983ChickenBridge.scm",(void*)f_10983},
{"f_10972ChickenBridge.scm",(void*)f_10972},
{"f_10959ChickenBridge.scm",(void*)f_10959},
{"f_10878ChickenBridge.scm",(void*)f_10878},
{"f_10921ChickenBridge.scm",(void*)f_10921},
{"f_10925ChickenBridge.scm",(void*)f_10925},
{"f_10914ChickenBridge.scm",(void*)f_10914},
{"f_10901ChickenBridge.scm",(void*)f_10901},
{"f_10697ChickenBridge.scm",(void*)f_10697},
{"f_10798ChickenBridge.scm",(void*)f_10798},
{"f_10847ChickenBridge.scm",(void*)f_10847},
{"f_10843ChickenBridge.scm",(void*)f_10843},
{"f_10815ChickenBridge.scm",(void*)f_10815},
{"f_10750ChickenBridge.scm",(void*)f_10750},
{"f_10759ChickenBridge.scm",(void*)f_10759},
{"f_10743ChickenBridge.scm",(void*)f_10743},
{"f_10562ChickenBridge.scm",(void*)f_10562},
{"f_10688ChickenBridge.scm",(void*)f_10688},
{"f_10684ChickenBridge.scm",(void*)f_10684},
{"f_10662ChickenBridge.scm",(void*)f_10662},
{"f_10592ChickenBridge.scm",(void*)f_10592},
{"f_10608ChickenBridge.scm",(void*)f_10608},
{"f_10517ChickenBridge.scm",(void*)f_10517},
{"f_10560ChickenBridge.scm",(void*)f_10560},
{"f_10549ChickenBridge.scm",(void*)f_10549},
{"f_10401ChickenBridge.scm",(void*)f_10401},
{"f_10515ChickenBridge.scm",(void*)f_10515},
{"f_10416ChickenBridge.scm",(void*)f_10416},
{"f_10446ChickenBridge.scm",(void*)f_10446},
{"f_10465ChickenBridge.scm",(void*)f_10465},
{"f_10450ChickenBridge.scm",(void*)f_10450},
{"f_10429ChickenBridge.scm",(void*)f_10429},
{"f_10279ChickenBridge.scm",(void*)f_10279},
{"f_10399ChickenBridge.scm",(void*)f_10399},
{"f_10294ChickenBridge.scm",(void*)f_10294},
{"f_10324ChickenBridge.scm",(void*)f_10324},
{"f_10343ChickenBridge.scm",(void*)f_10343},
{"f_10328ChickenBridge.scm",(void*)f_10328},
{"f_10307ChickenBridge.scm",(void*)f_10307},
{"f_10182ChickenBridge.scm",(void*)f_10182},
{"f_10277ChickenBridge.scm",(void*)f_10277},
{"f_10197ChickenBridge.scm",(void*)f_10197},
{"f_10243ChickenBridge.scm",(void*)f_10243},
{"f_10228ChickenBridge.scm",(void*)f_10228},
{"f_10210ChickenBridge.scm",(void*)f_10210},
{"f_10129ChickenBridge.scm",(void*)f_10129},
{"f_10167ChickenBridge.scm",(void*)f_10167},
{"f_10174ChickenBridge.scm",(void*)f_10174},
{"f_10152ChickenBridge.scm",(void*)f_10152},
{"f_10127ChickenBridge.scm",(void*)f_10127},
{"f_10099ChickenBridge.scm",(void*)f_10099},
{"f_10101ChickenBridge.scm",(void*)f_10101},
{"f_10079ChickenBridge.scm",(void*)f_10079},
{"f_10027ChickenBridge.scm",(void*)f_10027},
{"f_10064ChickenBridge.scm",(void*)f_10064},
{"f_10031ChickenBridge.scm",(void*)f_10031},
{"f_10047ChickenBridge.scm",(void*)f_10047},
{"f_10049ChickenBridge.scm",(void*)f_10049},
{"f_9813ChickenBridge.scm",(void*)f_9813},
{"f_9826ChickenBridge.scm",(void*)f_9826},
{"f_9908ChickenBridge.scm",(void*)f_9908},
{"f_9911ChickenBridge.scm",(void*)f_9911},
{"f_9919ChickenBridge.scm",(void*)f_9919},
{"f_9931ChickenBridge.scm",(void*)f_9931},
{"f_9952ChickenBridge.scm",(void*)f_9952},
{"f_9960ChickenBridge.scm",(void*)f_9960},
{"f_9847ChickenBridge.scm",(void*)f_9847},
{"f_9852ChickenBridge.scm",(void*)f_9852},
{"f_9884ChickenBridge.scm",(void*)f_9884},
{"f_9792ChickenBridge.scm",(void*)f_9792},
{"f_9773ChickenBridge.scm",(void*)f_9773},
{"f_9732ChickenBridge.scm",(void*)f_9732},
{"f_9713ChickenBridge.scm",(void*)f_9713},
{"f_9485ChickenBridge.scm",(void*)f_9485},
{"f_9690ChickenBridge.scm",(void*)f_9690},
{"f_9705ChickenBridge.scm",(void*)f_9705},
{"f_9697ChickenBridge.scm",(void*)f_9697},
{"f_9661ChickenBridge.scm",(void*)f_9661},
{"f_9665ChickenBridge.scm",(void*)f_9665},
{"f_9626ChickenBridge.scm",(void*)f_9626},
{"f_9630ChickenBridge.scm",(void*)f_9630},
{"f_9489ChickenBridge.scm",(void*)f_9489},
{"f_9590ChickenBridge.scm",(void*)f_9590},
{"f_9605ChickenBridge.scm",(void*)f_9605},
{"f_9597ChickenBridge.scm",(void*)f_9597},
{"f_9561ChickenBridge.scm",(void*)f_9561},
{"f_9565ChickenBridge.scm",(void*)f_9565},
{"f_9526ChickenBridge.scm",(void*)f_9526},
{"f_9530ChickenBridge.scm",(void*)f_9530},
{"f_9492ChickenBridge.scm",(void*)f_9492},
{"f_9495ChickenBridge.scm",(void*)f_9495},
{"f_9498ChickenBridge.scm",(void*)f_9498},
{"f_9443ChickenBridge.scm",(void*)f_9443},
{"f_9472ChickenBridge.scm",(void*)f_9472},
{"f_9457ChickenBridge.scm",(void*)f_9457},
{"f_9388ChickenBridge.scm",(void*)f_9388},
{"f_9399ChickenBridge.scm",(void*)f_9399},
{"f_9401ChickenBridge.scm",(void*)f_9401},
{"f_9429ChickenBridge.scm",(void*)f_9429},
{"f_9289ChickenBridge.scm",(void*)f_9289},
{"f_9293ChickenBridge.scm",(void*)f_9293},
{"f_9296ChickenBridge.scm",(void*)f_9296},
{"f_9361ChickenBridge.scm",(void*)f_9361},
{"f_9298ChickenBridge.scm",(void*)f_9298},
{"f_9314ChickenBridge.scm",(void*)f_9314},
{"f_9061ChickenBridge.scm",(void*)f_9061},
{"f_9266ChickenBridge.scm",(void*)f_9266},
{"f_9281ChickenBridge.scm",(void*)f_9281},
{"f_9273ChickenBridge.scm",(void*)f_9273},
{"f_9237ChickenBridge.scm",(void*)f_9237},
{"f_9241ChickenBridge.scm",(void*)f_9241},
{"f_9202ChickenBridge.scm",(void*)f_9202},
{"f_9206ChickenBridge.scm",(void*)f_9206},
{"f_9065ChickenBridge.scm",(void*)f_9065},
{"f_9166ChickenBridge.scm",(void*)f_9166},
{"f_9181ChickenBridge.scm",(void*)f_9181},
{"f_9173ChickenBridge.scm",(void*)f_9173},
{"f_9137ChickenBridge.scm",(void*)f_9137},
{"f_9141ChickenBridge.scm",(void*)f_9141},
{"f_9102ChickenBridge.scm",(void*)f_9102},
{"f_9106ChickenBridge.scm",(void*)f_9106},
{"f_9068ChickenBridge.scm",(void*)f_9068},
{"f_9071ChickenBridge.scm",(void*)f_9071},
{"f_9081ChickenBridge.scm",(void*)f_9081},
{"f_9018ChickenBridge.scm",(void*)f_9018},
{"f_9051ChickenBridge.scm",(void*)f_9051},
{"f_9036ChickenBridge.scm",(void*)f_9036},
{"f_8997ChickenBridge.scm",(void*)f_8997},
{"f_8962ChickenBridge.scm",(void*)f_8962},
{"f_8966ChickenBridge.scm",(void*)f_8966},
{"f_8854ChickenBridge.scm",(void*)f_8854},
{"f_8941ChickenBridge.scm",(void*)f_8941},
{"f_8861ChickenBridge.scm",(void*)f_8861},
{"f_8870ChickenBridge.scm",(void*)f_8870},
{"f_8917ChickenBridge.scm",(void*)f_8917},
{"f_8883ChickenBridge.scm",(void*)f_8883},
{"f_8909ChickenBridge.scm",(void*)f_8909},
{"f_8721ChickenBridge.scm",(void*)f_8721},
{"f_8725ChickenBridge.scm",(void*)f_8725},
{"f_8728ChickenBridge.scm",(void*)f_8728},
{"f_8832ChickenBridge.scm",(void*)f_8832},
{"f_8730ChickenBridge.scm",(void*)f_8730},
{"f_8737ChickenBridge.scm",(void*)f_8737},
{"f_8779ChickenBridge.scm",(void*)f_8779},
{"f_8786ChickenBridge.scm",(void*)f_8786},
{"f_8760ChickenBridge.scm",(void*)f_8760},
{"f_8654ChickenBridge.scm",(void*)f_8654},
{"f_8658ChickenBridge.scm",(void*)f_8658},
{"f_8704ChickenBridge.scm",(void*)f_8704},
{"f_8661ChickenBridge.scm",(void*)f_8661},
{"f_8697ChickenBridge.scm",(void*)f_8697},
{"f_8664ChickenBridge.scm",(void*)f_8664},
{"f_8677ChickenBridge.scm",(void*)f_8677},
{"f_8608ChickenBridge.scm",(void*)f_8608},
{"f_8612ChickenBridge.scm",(void*)f_8612},
{"f_8522ChickenBridge.scm",(void*)f_8522},
{"f_8526ChickenBridge.scm",(void*)f_8526},
{"f_8529ChickenBridge.scm",(void*)f_8529},
{"f_8538ChickenBridge.scm",(void*)f_8538},
{"f_8560ChickenBridge.scm",(void*)f_8560},
{"f_8507ChickenBridge.scm",(void*)f_8507},
{"f_8492ChickenBridge.scm",(void*)f_8492},
{"f_8256ChickenBridge.scm",(void*)f_8256},
{"f_8469ChickenBridge.scm",(void*)f_8469},
{"f_8484ChickenBridge.scm",(void*)f_8484},
{"f_8476ChickenBridge.scm",(void*)f_8476},
{"f_8440ChickenBridge.scm",(void*)f_8440},
{"f_8444ChickenBridge.scm",(void*)f_8444},
{"f_8405ChickenBridge.scm",(void*)f_8405},
{"f_8409ChickenBridge.scm",(void*)f_8409},
{"f_8260ChickenBridge.scm",(void*)f_8260},
{"f_8369ChickenBridge.scm",(void*)f_8369},
{"f_8384ChickenBridge.scm",(void*)f_8384},
{"f_8376ChickenBridge.scm",(void*)f_8376},
{"f_8340ChickenBridge.scm",(void*)f_8340},
{"f_8344ChickenBridge.scm",(void*)f_8344},
{"f_8305ChickenBridge.scm",(void*)f_8305},
{"f_8309ChickenBridge.scm",(void*)f_8309},
{"f_8263ChickenBridge.scm",(void*)f_8263},
{"f_8266ChickenBridge.scm",(void*)f_8266},
{"f_8277ChickenBridge.scm",(void*)f_8277},
{"f_8216ChickenBridge.scm",(void*)f_8216},
{"f_8220ChickenBridge.scm",(void*)f_8220},
{"f_8250ChickenBridge.scm",(void*)f_8250},
{"f_8231ChickenBridge.scm",(void*)f_8231},
{"f_8239ChickenBridge.scm",(void*)f_8239},
{"f_8195ChickenBridge.scm",(void*)f_8195},
{"f_8207ChickenBridge.scm",(void*)f_8207},
{"f_8169ChickenBridge.scm",(void*)f_8169},
{"f_8127ChickenBridge.scm",(void*)f_8127},
{"f_8112ChickenBridge.scm",(void*)f_8112},
{"f_8001ChickenBridge.scm",(void*)f_8001},
{"f_8076ChickenBridge.scm",(void*)f_8076},
{"f_8005ChickenBridge.scm",(void*)f_8005},
{"f_8045ChickenBridge.scm",(void*)f_8045},
{"f_8034ChickenBridge.scm",(void*)f_8034},
{"f_8019ChickenBridge.scm",(void*)f_8019},
{"f_8027ChickenBridge.scm",(void*)f_8027},
{"f_7967ChickenBridge.scm",(void*)f_7967},
{"f_7979ChickenBridge.scm",(void*)f_7979},
{"f_7948ChickenBridge.scm",(void*)f_7948},
{"f_7945ChickenBridge.scm",(void*)f_7945},
{"f_7938ChickenBridge.scm",(void*)f_7938},
{"f_7935ChickenBridge.scm",(void*)f_7935},
{"f_7928ChickenBridge.scm",(void*)f_7928},
{"f_7910ChickenBridge.scm",(void*)f_7910},
{"f_7899ChickenBridge.scm",(void*)f_7899},
{"f_7896ChickenBridge.scm",(void*)f_7896},
{"f_7893ChickenBridge.scm",(void*)f_7893},
{"f_7890ChickenBridge.scm",(void*)f_7890},
{"f_7861ChickenBridge.scm",(void*)f_7861},
{"f_7854ChickenBridge.scm",(void*)f_7854},
{"f_7851ChickenBridge.scm",(void*)f_7851},
{"f_7830ChickenBridge.scm",(void*)f_7830},
{"f_7811ChickenBridge.scm",(void*)f_7811},
{"f_7792ChickenBridge.scm",(void*)f_7792},
{"f_7785ChickenBridge.scm",(void*)f_7785},
{"f_7778ChickenBridge.scm",(void*)f_7778},
{"f_7763ChickenBridge.scm",(void*)f_7763},
{"f_7752ChickenBridge.scm",(void*)f_7752},
{"f_7745ChickenBridge.scm",(void*)f_7745},
{"f_7718ChickenBridge.scm",(void*)f_7718},
{"f_7691ChickenBridge.scm",(void*)f_7691},
{"f_7650ChickenBridge.scm",(void*)f_7650},
{"f_7656ChickenBridge.scm",(void*)f_7656},
{"f_7666ChickenBridge.scm",(void*)f_7666},
{"f_7564ChickenBridge.scm",(void*)f_7564},
{"f_7525ChickenBridge.scm",(void*)f_7525},
{"f_7531ChickenBridge.scm",(void*)f_7531},
{"f_7554ChickenBridge.scm",(void*)f_7554},
{"f_7544ChickenBridge.scm",(void*)f_7544},
{"f_7486ChickenBridge.scm",(void*)f_7486},
{"f_7492ChickenBridge.scm",(void*)f_7492},
{"f_7512ChickenBridge.scm",(void*)f_7512},
{"f_7502ChickenBridge.scm",(void*)f_7502},
{"f_7446ChickenBridge.scm",(void*)f_7446},
{"f_7452ChickenBridge.scm",(void*)f_7452},
{"f_7476ChickenBridge.scm",(void*)f_7476},
{"f_7462ChickenBridge.scm",(void*)f_7462},
{"f_7347ChickenBridge.scm",(void*)f_7347},
{"f_7351ChickenBridge.scm",(void*)f_7351},
{"f_7376ChickenBridge.scm",(void*)f_7376},
{"f_7393ChickenBridge.scm",(void*)f_7393},
{"f_7397ChickenBridge.scm",(void*)f_7397},
{"f_7353ChickenBridge.scm",(void*)f_7353},
{"f_7370ChickenBridge.scm",(void*)f_7370},
{"f_7286ChickenBridge.scm",(void*)f_7286},
{"f_7299ChickenBridge.scm",(void*)f_7299},
{"f_7276ChickenBridge.scm",(void*)f_7276},
{"f_7236ChickenBridge.scm",(void*)f_7236},
{"f_7266ChickenBridge.scm",(void*)f_7266},
{"f_7146ChickenBridge.scm",(void*)f_7146},
{"f_7098ChickenBridge.scm",(void*)f_7098},
{"f_7132ChickenBridge.scm",(void*)f_7132},
{"f_7075ChickenBridge.scm",(void*)f_7075},
{"f_7069ChickenBridge.scm",(void*)f_7069},
{"f_7054ChickenBridge.scm",(void*)f_7054},
{"f_7040ChickenBridge.scm",(void*)f_7040},
{"f_7030ChickenBridge.scm",(void*)f_7030},
{"f_7020ChickenBridge.scm",(void*)f_7020},
{"f_7010ChickenBridge.scm",(void*)f_7010},
{"f_7000ChickenBridge.scm",(void*)f_7000},
{"f_6967ChickenBridge.scm",(void*)f_6967},
{"f_6976ChickenBridge.scm",(void*)f_6976},
{"f_6981ChickenBridge.scm",(void*)f_6981},
{"f_6956ChickenBridge.scm",(void*)f_6956},
{"f_6961ChickenBridge.scm",(void*)f_6961},
{"f_6663ChickenBridge.scm",(void*)f_6663},
{"f_6673ChickenBridge.scm",(void*)f_6673},
{"f_6924ChickenBridge.scm",(void*)f_6924},
{"f_6676ChickenBridge.scm",(void*)f_6676},
{"f_6679ChickenBridge.scm",(void*)f_6679},
{"f_6694ChickenBridge.scm",(void*)f_6694},
{"f_6704ChickenBridge.scm",(void*)f_6704},
{"f_6706ChickenBridge.scm",(void*)f_6706},
{"f_6765ChickenBridge.scm",(void*)f_6765},
{"f_6775ChickenBridge.scm",(void*)f_6775},
{"f_6892ChickenBridge.scm",(void*)f_6892},
{"f_6880ChickenBridge.scm",(void*)f_6880},
{"f_6878ChickenBridge.scm",(void*)f_6878},
{"f_6865ChickenBridge.scm",(void*)f_6865},
{"f_6819ChickenBridge.scm",(void*)f_6819},
{"f_6846ChickenBridge.scm",(void*)f_6846},
{"f_6825ChickenBridge.scm",(void*)f_6825},
{"f_6759ChickenBridge.scm",(void*)f_6759},
{"f_6718ChickenBridge.scm",(void*)f_6718},
{"f_6731ChickenBridge.scm",(void*)f_6731},
{"f_6941ChickenBridge.scm",(void*)f_6941},
{"f_6932ChickenBridge.scm",(void*)f_6932},
{"f_6940ChickenBridge.scm",(void*)f_6940},
{"f_6943ChickenBridge.scm",(void*)f_6943},
{"f_6951ChickenBridge.scm",(void*)f_6951},
{"f_6365ChickenBridge.scm",(void*)f_6365},
{"f_6618ChickenBridge.scm",(void*)f_6618},
{"f_6651ChickenBridge.scm",(void*)f_6651},
{"f_6647ChickenBridge.scm",(void*)f_6647},
{"f_6636ChickenBridge.scm",(void*)f_6636},
{"f_6632ChickenBridge.scm",(void*)f_6632},
{"f_6526ChickenBridge.scm",(void*)f_6526},
{"f_6529ChickenBridge.scm",(void*)f_6529},
{"f_6532ChickenBridge.scm",(void*)f_6532},
{"f_6612ChickenBridge.scm",(void*)f_6612},
{"f_6437ChickenBridge.scm",(void*)f_6437},
{"f_6378ChickenBridge.scm",(void*)f_6378},
{"f_6535ChickenBridge.scm",(void*)f_6535},
{"f_6542ChickenBridge.scm",(void*)f_6542},
{"f_6602ChickenBridge.scm",(void*)f_6602},
{"f_6588ChickenBridge.scm",(void*)f_6588},
{"f_6554ChickenBridge.scm",(void*)f_6554},
{"f_6580ChickenBridge.scm",(void*)f_6580},
{"f_6515ChickenBridge.scm",(void*)f_6515},
{"f_6562ChickenBridge.scm",(void*)f_6562},
{"f_6558ChickenBridge.scm",(void*)f_6558},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
